{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56f4d723-9d7c-46c5-9069-092be19790fb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9b169d2b-fa48-4406-8efe-c2710474849b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a16d3c7-7d28-4658-94a6-424856cba727",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfc49a11-d758-4cd7-9520-18d7381b0461"
                }
              }
            ]
          },
          {
            "id": "eb6002b0-49ba-4af3-9189-4895b15d8461",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d3f3760-e3da-4450-bac7-b2792f909433",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "283a22dd-af9e-4826-aa4f-4d63bec8100f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8afd5521-b931-4cbc-89a7-ebc170fb6af5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a28fd950-1d28-4314-9041-1ec5c9c43a22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "934b948b-ec40-49c9-a9f0-e6bf61ba9c29",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b78d449b-c9f2-4be7-ad82-d4b28bc780f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1eefb5fa-ae4e-4d88-8555-9d9d4415541f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fefb1df-7815-4cff-92d4-ee14967e4dee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55c4ce31-392a-460f-8113-7295a8f5dcad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be3af2d0-eb5c-4dcc-a0a4-79a224cf7713",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dafb930-919e-426d-86e4-2d9b80b29d7d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd7c823-1f77-4144-b33e-9a514bac6a19",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "17886cea-1b0c-4019-85e9-8aa7771773fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0952ba-2af3-4346-8ac9-621009faf215",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f5be9e4-6dea-4924-9556-a7837b81707c"
            }
          }
        ]
      },
      {
        "id": "c44a0ef3-2963-4b55-9ee9-0d3fd9827f33",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e33142de-fe49-4ad5-9a7b-a363cc156761",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25205658-e845-4aac-b1b0-4c6879608daa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "00d9b80d-91bd-4965-b318-5a488247f234",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8df838e-1e21-4a65-9638-b07a8536dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfee7e7f-6e80-416b-9fff-b7a746eee874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8984024c-38ed-4adc-863c-3b63c3057d6d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830f34e-b6c6-4c8f-9961-0c97f3993512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5948cd7e-851f-4112-896a-d9c31fd2b91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466cea7-381f-4c09-b5bf-3096ada18011",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae3c715-c6dc-4565-9fd8-0daeee5675ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "627c00f6-1b9a-42cf-badc-06bfd28e6730"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "733c5784-7cf3-4f9c-bbb6-4e20aba60ef3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7074e25-cf58-4e0a-8cb4-ebe236939245",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4da136b-9ba1-4e19-9f8b-1219040f6f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f1df478-3f01-4a04-81cf-7d1f7de99774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a9b4a2-7f0f-4e4a-ab28-714c514ccf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18289641-a2bb-43b3-8e89-3b90b9315606"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a9351a37-5b39-4920-980d-fbc39cf65d45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "600faa76-7ba9-4e13-9735-c48757ea88c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f9fa62-b9bb-400d-9930-74c756a72269",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "58890b79-5ed5-4be0-927c-082354f40a46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40f4e27e-c8d5-4ada-a438-1811043815a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "05d22eed-c3b0-4f5b-aa7c-23cbcb6a0e57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8141a83e-d248-41e0-9c40-cf4e5d954386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32d742b9-2057-4061-924e-62e93f80c187"
            }
          }
        ]
      },
      {
        "id": "5336d41c-abfb-4f07-8f43-f8aa76d7b6ea",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c32e63d6-dd75-41f9-9988-f4a33601cc81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab6e2b69-cde6-47b7-9f24-ae9daa064a32",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6b57133b-373f-4379-97e5-f739a3477d64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2100d6b4-c8c3-4082-9792-0b6ed3e7b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e60739-53c8-4db0-82d9-822c3ccbdb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b56c754-a537-4171-9b4b-e05d59fe3b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff88c1a-d66f-417b-8a55-e9a058de040c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e67643b-9bb7-468f-8aa4-873abf59e726",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476dc7b-adf7-4b0f-99f3-917e06fad235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5334a81-2b4d-4336-937f-d56e0772c6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824bda5e-847a-463f-8f3b-31dd3a50650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5e0588c-3f8b-4db8-86e2-521a3e04ea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c39e5a-2f69-4c28-9bce-0df6ad142ff2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff902d-949e-4ec4-9cd5-b16044bf5870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7bf97d-578e-42e5-8599-1cdecf5c6989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538c67e7-697d-4d85-a9f3-8706bf2f7b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb113f17-3ea1-419b-bf3d-411315d72466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c48fb14-85ec-4704-b729-1e8898e111e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475b8efa-e501-46e0-b023-f87fbe069d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711de448-333a-4cef-91d5-b868148e8895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6f29fb-c7c9-4c59-a0fb-0b1d94f573ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a127c7c-237a-4d2b-a6c4-59707f9a47bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de1b19-0e32-4278-857e-7fca9d6f7d9b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cbbb2e-092e-4382-a569-cb2b59945b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f8d7f4-9921-4de9-9a28-c1425a8d9b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b92e0e5-1cb6-4ae6-8711-3a571ac50820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29366d60-8c5a-4290-80dc-7051153f08a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3f4704-1a0f-40b3-b358-d6865dc97586",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a987c43-f37d-4c3f-a32a-8ac2d26fbd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97195b8b-5e5f-4b37-be67-2df00e2a29d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9215d2-5248-44a3-a91c-4dcecd3b7f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beb2e009-e7a8-42eb-8096-b295a1a21eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ccbda6-9359-4530-b61d-b46bb26a8cac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e9da4-b9c2-48e9-a250-80e7740a4265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31c0888-081c-4ab0-b8ae-f2e7fe60dcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229a3c0f-c6ee-479a-99dd-ddcd28ec4e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c1ba1e-3efe-49e0-a9cc-680107affd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f96bac-5c7a-4ebe-b656-d7deca579676",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a212017c-ae2a-4b0c-a6de-e64285f41883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae765e36-9e46-49be-b2bc-6366e7648cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512e00ec-efc1-493d-9d03-2f318e0b27c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f09c268c-0a05-44fd-9765-3f0c52a36bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8491270-d579-4efb-bceb-51f248a16579",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90985d33-0403-473b-9470-7c1007b4753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285ca5d4-aab0-418c-9ec1-98cd5c77092b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070dfe09-0153-4f56-b7cf-43ccf829d72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1c05e8-088f-4194-a0c4-023ccb7fabdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b50f46-f1e9-49ef-8841-dbb3795f380f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b1be3-8cb3-4df9-a5d4-7293a2238631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198cde10-a92f-4407-9e35-e5d031284eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cfed84-c682-4111-b746-32eb68e02a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "689caab3-9832-429b-834c-0b3715c4a380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06daa55f-d8e5-4d94-947f-4b87ae4b7d23",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6e7a90-46a5-42c4-9d60-972370496634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85643b1-936b-4946-819c-7ce4b184c2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484fc5c1-2934-4e02-80f7-27e451121581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb9cd34a-7700-4cbe-9d9e-1693ab310f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86bff22-f1b3-432f-b824-4829c72fc32a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa7348c-d1df-4ccf-a2b6-47bacdd25b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87987479-2cb6-4f15-b86a-a0e69e92f9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b6968-0cb4-46e3-8959-50feecdf5154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c08afd-be2d-40a9-9e3a-82a1d4773013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1e2c88-5857-4b4c-ae50-3787b5d344a4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12667629-5169-4260-a915-cbfb9c40a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26545045-c73b-42fd-84a8-b78e5e73247d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3540fcf-7ac9-4ecb-a8fe-840f06993209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b95dee1-8736-492a-9dae-b54292f5807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eeee4a-5497-44e7-be30-dd9bfa553405",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e08f65-da09-4162-8706-80fcda850115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2402ce2a-5eb9-47e0-8316-c3f79b6c9fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db2fc2-1768-4ffc-b431-e262b22b0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1467d1a-842b-412a-83e9-00ea8f8d81ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04a731e-f3e7-4fad-8fb2-b9d1f74e0488",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afab1d1e-c306-40ad-9dce-494a2e88df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90267d2-67da-475c-8c58-fcc2692979e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ba7421-6c4d-4d23-99c7-d3c4f47ad51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edd284f3-7c95-4b99-8d93-ea7831d1378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d94bae-6bbd-47e1-926c-396722895fa2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d2f207-7ff5-473a-8ecf-bf50ebf06ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a76c65-1f21-4ce5-956a-a05ed0287a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f259b4-7bb4-4722-bc1c-34d7376afca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a819b1-32b8-4c2d-8176-effaf2af1bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d34c57-1950-4124-9cbe-92dc805e5c02",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b9378-eca6-470c-8f89-83350f70277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e44175-07f8-45ac-8a24-65c80eb7524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb61698e-5e2f-4334-9d0c-14c154079985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d47246a2-897e-4e92-856d-b9cd412cb453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd4afdd-ac70-4f8c-bb69-58223eb9c256",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c725f9d-f0f5-4cfb-83d4-5510ccf0297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be4b8a7-b0b4-4daf-aacc-a4e435006522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ac6659-3029-47ae-8b1a-41d6b8a34cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3309c8-d53b-40fc-a2f6-1fea4f31b017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400e7dd9-943f-45a1-a477-7302bad31be6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e655cd8d-3aee-4cf0-a71e-0cb88fe5a2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080104b2-b494-4668-9951-85177b169512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7b9799-9b18-44cc-a817-258874224f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa457f76-10fe-43f5-b622-2b624281ae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beea65a6-81ce-414e-a843-589b22cfa254",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea29df7-9e8e-4159-b3ca-bda1d43babea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f617222b-1c99-40be-a3d4-b1bb140dcf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa11799-894c-4c0e-9039-3261b67b396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb47c6b-a09f-4850-a0d4-cc906309158b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ecb076-fa25-4d55-827b-5be40f936514",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42712894-148c-414c-939c-959c3fdf14cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4032af35-782a-4326-b3e8-e3a6f56b0419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0d66f6-5c38-4b0e-bc90-5b7083ae2982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb7ee3d-6cec-4932-a08b-632c66c3088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56d3d07-0f51-4888-b821-23af26a7f840",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e74fa3a-4371-48c9-83a4-4171df66fcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88706766-5bee-40ff-b733-53ad16f0626f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0585a5-52b3-479e-826e-9a3b804e1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdd4c69-413c-4a55-9ed9-0dd662a6e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e930b8-2314-4c16-9663-785765586b08",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a474a8-292c-4a9e-bdbf-f24947bc28e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8703376-1609-4019-af83-74add7e2d06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3f6e3a-2b76-4ede-8c4d-2ce879f20ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74b2097e-ed1c-49a3-a9f6-9a76066925e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340b6f14-caec-4fdf-93a6-4dd6a2c959a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a327da-7fcb-4d43-a028-a0f971276635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1178d4-898a-49bb-a2cf-cb7b445d1294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b077de8-36eb-4eef-900b-ae5e4c0daa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7010dd6-eb1f-4cdd-be9d-4a25140dbafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795408c-6b24-4c39-af7a-b18fdb8b85de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1239a0-c790-412d-8b6f-fd35d59a5430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fd2e6a-59c5-4dbd-8991-822e9660c401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417a5aba-5546-43f1-8f07-15ff1ce9bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f651a75-797d-4d3e-a057-d9601945ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf265aaa-df2a-42e3-bd60-8739a6c36b09",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f00a78-303d-48fc-b37d-fbdcf387b040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e2c012-3438-4829-94b1-4d831f487540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955c97b-d8c0-48be-bb0b-6a5338172c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdabcf3-db1e-4f71-8db0-50829d483235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff701fd2-c5ea-4f13-acef-40586054f361",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5dab12-3d08-4171-b48e-647d54a9e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f88549-4eb1-44fe-9226-888356d4a164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2614622e-3a33-4448-b5bc-b022dd5b82e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "859b87cb-9a14-4580-b8f4-271c00446466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d0d37-38bc-4be1-8de8-4e82260d21d7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df640c53-aa9a-47c1-8a2f-4ea1349c8946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67750023-cbe5-4fc9-92a3-918f61ae26ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a386a5fc-014b-4ad0-b3e7-c608891b71ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdb268b-5b7c-4284-a0fa-35e472b5c703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c51c95-8446-44f2-85be-290ac9d66822",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f189c2ca-3f95-4a3a-8c33-78a3ecca27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d75dac8-2099-4f5c-9f81-d686c7d46e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cea1c53-88cc-4537-b9fa-0962be0de0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "912e0345-3d35-4844-8380-94b3e5484ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8247b12e-60dc-47b5-b950-5a49123e9f17",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa6cf27-d622-4877-ad98-ec81a46a9e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbddccdb-2676-4b46-8604-5ef97fb76621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab000960-4319-48a2-b5a6-3fbbd02e0b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "674d4ea0-6c12-4deb-b55a-3490a8861d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c253a7-32ab-41d7-91c8-018fa713723a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4f1dc-a842-4e75-a46c-d396d9a35b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9413b2d4-bb05-4c7d-87e0-2ed17132e336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6aaf8b-7e90-4bca-a322-dfcbc5a9866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e52dd5-b219-490e-b1e6-a6f740e91595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42c5112-a5f2-4a32-93d3-c6f2d0b29430",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4aa2d-4b1d-433a-8c5e-1368e4667a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff53801-a558-498a-838d-f69663215c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c086d21-9496-42c2-8d6d-c2d35740569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b9e8f6-9cdf-42cb-be3a-8b3973dc109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de313434-f979-4d67-9013-adbbbb335753",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b594fc-9b0f-448a-911e-f17d2564cd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853ff8d6-5be0-45d7-bc50-8c7398dc3b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da745a8a-4362-412a-bf2f-68026633436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d91e68a-749c-442e-8229-019737860152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d82e6-b3e8-4420-8d51-4e7059a90be6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb866883-bba2-42ac-a2f7-b55f6d2a0f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e218c7d1-f124-4fe4-96b4-9379b7ce29ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bc1ad3-31b3-4b50-a01f-b8931ddf911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d1fb2f-e17d-4102-85c1-e1d6b13fac18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18567dc5-234a-4ddf-9091-019671880a8a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2cb4d3-5f40-420b-9068-a6e89e7079ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c67c75d-ca28-4b54-b9ed-4f4ab9367d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70555304-7156-4069-bcaa-0722b321ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3b28fd8e-71b0-4578-8c2f-bad0c8be61b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91cba9c-1e25-4650-859c-b10571533ddf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e163fd2-9875-4355-8f27-1473eee883fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f59c76da-f980-4624-9e32-481489c61d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769eaa74-4793-432c-ba55-164ff50f6d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cfedb8-0212-45a2-992e-3251dfabecd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc4806-bf53-4735-bd73-d6f6a25055b1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05d9116-d87b-4ece-a970-f28acb10c532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafad948-9959-4418-be7d-c1d6e2aec257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9c54f1-7602-48db-97cb-27b6eca469ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7b5b3a-7672-4fbb-84a7-e740bddc7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3957fb85-0dbb-4cd6-a6bc-d8b90080af4c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4108942-32f9-434b-9647-6a84fb9f1db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a293e9f-b478-4cf4-9467-cd71598d5f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0525829e-5a50-4c29-9ca7-193a0bfabe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3604951-64d9-4863-8cf4-a68639a2c8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff4004e-1c89-4602-a295-a17c6634e19f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b50d68e-2aa3-4f3f-9124-c8b06165281f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65dba21-96f5-4a19-ac5c-30fbc3b1f071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e341a4d3-a273-4937-9739-03e4fa5ba46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f71797ff-783a-443c-bc55-7303edf5a80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44182da3-9827-43e2-94a8-04ecef9acb7c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af03c043-fd53-4447-acad-e3debb6d1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb380615-7b22-4540-90a9-e1ed6ac4a290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7919dd-2d14-43b1-a3ed-067fec2979fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6d7c69-cef5-4381-af16-1c4838788f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce933928-b5bc-4545-a05b-0f329652f507",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5932e7f-3aa6-4a93-adb1-b7e30adf6b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d1ca8b-5670-4b73-b9ee-85a9ce37a2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0cc96-1836-466b-bbab-e06ce3642e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a88eafd1-6614-4422-9e67-bcf789b26dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972dede8-8854-4195-abe3-395371d98464",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2918a06e-18f3-492b-aa05-db8214ca8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13d5531-4193-453c-9029-0053393a4c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79105eab-cfd9-4379-bdb5-40391d447242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "91aa45c2-7c5b-49ee-9e77-10dc185ddf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3079b36-9140-4e11-9f0b-3269fb96b9bf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a15a7-7a86-4b3c-ac82-b38a8b4b1860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824ec7c7-bd20-4111-b09f-2e5e47841a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb849123-0433-4088-a098-1c2c5f5f7b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1e6fe3-e1d4-4e41-9975-ac85ed5b9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e8aac-4885-4c85-811d-f88b0a2eb958",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3623bbd-cf7f-443d-8371-b7a165475e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d80e867-25a3-4f7f-992a-56ccdcc8a018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f758a6ca-0580-4e0e-9277-d140655b8505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b5b884-de7a-4375-beb5-cdd3d7c55f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476ae96a-b886-4e32-b08f-7fa77b111885",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2090989f-43c1-4abb-af44-f54abeb8f658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe93271-b16e-4319-af98-107aa0ee1606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bb0372-7904-47d7-8c37-e5ba4c929a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab7c1d-757b-408a-8bee-2e17363e97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa26e22-ecde-44cc-b366-d024345e8e99",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd35fc1-f205-4133-851a-67072b3d8b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf865e9-5c44-4b6c-a5b7-aae405da4cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079adc71-ecc7-44af-b28a-254dccbf8f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "200e3f05-3503-4c2d-a7ba-424fb5502c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c41bf-8c09-49da-a280-fa4e0f85d7be",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3dbfe1-dd3b-4152-a2ef-70f8fba1a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327c88ec-ec5a-4c51-895f-9323c22fdb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757fbe14-7ab6-4ebf-a865-0f408ed2d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f376698-3aae-4a8a-a520-ad44d7ee8044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a68fce-a0d4-47ab-8a54-639698922f9f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88ab45a-7f5c-47ef-a9b9-71e6558dc1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f39d56-8e45-46c4-a776-5fe5d44d6505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa588a8-acca-4b7c-8cc4-cffc02be941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2ef20c-9870-4571-a4f7-e92fc8fb7ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06651031-58af-42b3-bd9f-4e8ada6504ff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe5ddc6-efbb-4377-96d1-d4e71381a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4771359-1b2b-4863-b072-d2e1902acba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a7d058-66cd-4100-843b-8846be55287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42545203-3031-4c0d-9a08-c96b6c03936d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5718338-57eb-448f-9287-7ce1292ee105",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4446113-add8-4696-8507-9f62db83c225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8705de28-30c1-40bc-9e7b-8fb729b6dd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fe8084-c8f2-4a36-b2e7-ad98d8d89f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c26ea002-4306-41e1-8991-8405b12bcb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fbc38a-6c48-4103-bf5c-4649a639a15e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca17170c-6ebb-472a-8b6b-4264f6ac6933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83622ed-6164-438a-8ff1-862a744ad83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c977e62-4b94-4bc2-a29b-2e921207fc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e86bea-5066-4512-9e79-6d05013224a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3c2b74-bf2f-41ec-94b5-5250b7a63899",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c88b722-622e-4784-bb8e-56295f02cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aa3ab7-304a-46d8-977b-cf68ce7f0de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d260f479-2a07-4eda-854c-b0fd26df6c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c62d53-ade6-497b-a999-0eb1301e2cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675bdc80-bcb5-4c23-8c09-0a8c0345f411",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403ef391-b62b-4fcf-bbe8-5f7642294008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f10e1a-b3b6-48d9-ac29-3ce347984464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5885acf5-dbd3-4770-aa70-752787b6016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a5feb7-aef4-4a0d-87dd-f848498ce2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a86dc0-578b-4b6d-a09b-65b21d38f0cf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eddfbc-ba8f-486d-908a-664a094ad8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e7c320-3c17-4e5d-954b-f08045162c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c202ff-27d9-4cb2-8d38-8f1a288aa972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f65967-3975-4602-a2e5-826e3e2e622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74917bca-0b7f-47dd-bd63-1e7efc954c7e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7ba54-9d3e-456e-8535-20e3e3da5628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac4d4ca-7b0f-4f11-9c9f-1f616c5de21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f1872-4e9a-4359-9e5a-0dcbcb0fb529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "effcf41c-a9ff-4767-a930-1f6ca1d33fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385e1cd1-90ca-486c-a837-b30391da8262",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dc65e0-09f9-4445-bac2-f75c3a655b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2363cb4c-f844-45dc-84d0-1308abcbdc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da472bb4-d826-48bd-922b-0bad4b2c4929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed4853c-4535-4e16-b424-f7f8c80a3cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e652306f-35b8-4def-84f6-bd0608d7a7c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f9cd9d-74e5-4be4-a124-d7809bf71f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222b70ef-c3fb-4075-9b0b-9842157b20f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5942ad60-b15e-48e9-b63d-a1536aa1edb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2bd54d-72ea-4f99-bbe1-af38c8ed4571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be866cd-ca79-49e8-a4cc-8287c3c6b663",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346e40e2-16ed-4030-8817-23f30ef0cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e417e8-8e70-4609-bc04-736669f429ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679ac87d-4026-47e9-a12f-5c82e5f0adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f47bb54e-4888-4812-8b9d-76af524524c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd209922-4ace-4f59-ab29-4e1ae0d86e1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ae961f-de5c-44c4-8582-b9582daada14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e808c44-3142-49e2-9c25-ed543d21531f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dc7b91-a585-47be-8a72-10984ceaa428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e51249-9241-4cdb-bd81-ec1f8ff7b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5524c9c0-6027-4845-a89a-f22db9365a2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9a324c-d149-478c-a88b-91e36d691e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0526fdd6-869f-4400-8048-a0f07c21f26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6c75aa-a07d-4cc4-904c-c48c951e0291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bb9ee5-4b02-43ac-938a-f40a6b2309ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a15bd21-9bcc-4d03-b68e-426867d82837",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14e481c-2277-4537-9406-bf59fac2e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bba466-1e5f-401f-ab06-f999c1dc701c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d60f12-790d-4b92-b769-8a0124b4a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9391978-f36b-429a-a535-ef26419aa4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c1cf22-ad4b-4742-8057-d252a43812b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03815967-d1a4-4e57-b83e-2961e67ea40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e634f94-3602-48b9-9202-729f147b9c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d94775-2e94-4c5e-ba59-64b8a2a8b49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9637b93-317e-483c-85dd-5d91925aab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59d110d-bbe3-42e1-a332-2e718f720ae2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e14275d-e0e4-47a6-a681-be5a9bf140be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6408bdd4-6881-4ba9-80a0-df4ffab6ef74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1278d3-e22b-4bd2-a11b-458c7bd78182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e3004b-ba72-4276-837d-0c52f7ce1848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4466530e-46fa-4929-922c-cf221f8d9904",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8807035d-f779-4245-92f8-b1ae2b5e7d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95ba1d0-5882-4eea-a057-cf9e7e2e483c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1132397-c36b-4ba2-a4d6-3d9039767e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c505e2-bea4-43d5-b742-702c7d4f6f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488108c5-32a9-4c25-aa1c-ce1005e6d984",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac10bdb-ad7d-475a-acbf-131f2e1faa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a60194-3b3e-4ecc-806c-fc6de740d755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55897e1d-68d0-40f9-8914-efbafc068f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19bd9b56-3a3f-49a6-b22e-3faf3a824911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdf68f7-dd4c-4da3-8482-090780935c51",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa14707-c11a-47a9-888a-ce9b4777177c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f645c22f-ef28-49aa-8941-fe36e85e55e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8e5b07-ce33-4d38-a162-162377612d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5460981d-66dd-439b-bfa8-f8bb8f8416a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3015caa9-57d2-4013-9429-c0a34a1bbd45",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09f4ca0-5d70-49b9-97a2-496caa2316fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782402e4-d690-40ed-b228-4bcb47cb9ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3010f002-f359-4e30-b0e2-a484318fa9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9cbc1f-6d2d-426c-a1c5-c56898541019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32672849-fe67-4ddd-b2da-aafc927dbc71",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13adfe14-ad50-4cc4-8f37-4a5ccbe8bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b844f0-0f88-4c3f-be16-b8baad39bfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517a11ca-beb3-495a-871b-81669b9720d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0a27f7-a026-48b5-92b1-8e66d87125fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54be299-b915-4cf0-9cf2-6423abb9ec59",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc58e0e-ab03-4a23-ba52-29b8367ab1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3041cfa8-1cf3-4cb5-89bd-7193ce301e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b3d19-9eb0-4b86-b91d-dc04e3255a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "398a34b8-64bd-4ef1-a2df-46ad29dc0060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e926ca-7e5a-487c-b497-2dd1125dbf80",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100a907e-5915-4704-ae99-be4982a4dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ed3452-69b7-4104-9557-441c37737867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f851b61c-1f27-40f0-9227-0e4144969fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae9964d-080f-4512-bf77-0b6e275f5e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43972525-dfa5-48a8-895c-5d4af2c8e861",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea29b15d-8612-4843-8526-d2a3281258c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635456cc-9263-421d-8e7a-8ab61a1b0aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c7e5ed-c081-434d-89e9-50c4ec5fb335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f53174-f397-40b1-8ac2-05fff5212210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52409ac-1e07-455c-b11e-03d79e9ec9e2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf8c248-be6e-41f4-add6-76059897ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454180a6-34a0-4876-b327-8065f254224b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4723da6e-b5b2-4549-8fb8-d0c66da5e389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "addad58b-ddee-418a-b624-4c81a4ec33be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249b7de6-6f1e-404e-b984-bc30e350f88a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692c9904-4a52-4259-8db0-19293923f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d862086-30a5-4f9e-8f4c-b8147150cf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457c95e2-b2f9-44c6-9ba8-68a2e92ce77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3af784-c3e6-4cd6-abf6-80ed1af51602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cc83ae-d018-4224-9657-8a8010ec8602",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c8bba-ee8d-4083-b77c-6f9ecbdeeb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7093dc-ba8f-4d74-a618-8b584fb52138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e71b72c-9650-43eb-a51c-35aaf7d8942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0591e95b-01eb-43e6-b717-8b1c6e6a6c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841cb90c-2cb6-4b2c-a80b-c2343c727761",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f749c030-4822-48cc-9ca6-38504e3f07eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3832f4e8-1641-4dc7-8051-39244a7c49b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576b32c2-09c1-47c1-b069-38d47a6ef0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c259244-4a0e-4aa8-becc-2aafcd242538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b065823-a128-4194-8dc0-8b9b9706e536",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be155f04-9056-432e-ae12-43d22b9a26c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea8f304-84d4-4a4a-a138-82380e19d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9e9052-f999-4755-b062-87f0c0129079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a49e6c-16c8-465d-bfb5-d505d6c97427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee5ea40-6058-4c2a-b62f-5b2378ff7e51",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0ba856-9724-4b1c-950c-108ba901ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7565c105-8066-4bf1-8b1d-bcd81d6f9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed9fff-456e-4305-bd97-6288fed1afcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa53807-22d8-45b9-9cb4-80b2e9f94155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f8b5f-99d7-4e78-989d-9ca647876359",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a3502f-d195-489b-ab2a-8568d699f3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e80db3-ba50-4fd1-941f-0a5aab85b6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739a8490-3810-4c39-8584-9a7e3897ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "def1b5cd-7861-4ea1-930e-83920874cb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88828b28-b8db-444f-8a93-7914e0bd16b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305cac02-bcd6-40ac-9ed4-0441643f38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feea03e4-d6d2-4bcf-9949-63626ea64eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce00757-463f-4bc9-be8e-9d26cc31e795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0918eb88-dc60-4a0f-894f-ae94c6d7d5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd201d8-f1da-45c2-800b-e8bade7d314c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e406b4-abde-41fa-9610-dadfcab6d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5262f2-a513-49f2-a6bb-b75cc2217644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4642cc0d-b220-4421-9165-4f2ff1803d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64ce02f8-40be-4322-b66e-90c2877268c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c0c7a2-7729-462f-84d0-42cdabc2b627",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14af343-fbd8-43e8-ad63-ffbb338bd3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5650627f-8f50-4350-bdb8-743ea1571dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccec3198-ef48-4cad-8442-40e1a3d29939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e349db06-5ae9-46e0-9416-617c2ee1da2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09e3f4e-adfa-4f23-a69a-d7e61d9db45d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51afe60-c12b-4bfb-8446-515ab9a683c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89940aa5-f6ae-4562-9cc9-56b5b0a3e2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b02f72-2529-46cd-8d69-fa530239347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f14bb78-8cf3-4377-96d4-7cea0aee1d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6685d9e-b1ed-4de7-9c9e-90b1c3c163c9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9b4842-b9c4-4f30-b67a-ebfe11f20536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56c4c91-4df0-423d-8feb-69f88f9f866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f01a258-31b5-40d1-9024-4a03c8ed87cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5856f9b1-3699-495d-b9b6-ed8b61dc4129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d90965-7772-4bed-b60d-4f61559592ff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a9f41f-7d77-4cd9-aca9-737742d0c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80e82b2-0ce3-4697-9a46-3f6c9c284db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70c72f-5d59-41cb-aae2-a5fd1d3f7e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27552656-8f80-40be-ad38-6db6eabc391c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567129b4-2171-46ef-827c-0ebcf6fb3746",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16374f-df3e-42e7-8d3e-de76ac40dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baa436f-0cb9-4591-bd17-7d570502cf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3ef08b-f7ae-4500-9687-1679ce8299a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc0076-c5a8-4cb6-89f9-e61cdb8621fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540f50d8-55a7-4d83-826b-97e37adc5fe6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e96140f-1795-4efa-98b5-c554657114cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c7af68-639d-4df8-a5c1-20eb4d9e5791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991541ab-89b6-4979-a2a2-f3d208f4f067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8212eaa-f211-41b0-bcea-16130d4fd54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b89abc-097a-4cca-9772-2f93be6355df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e18b05-1f6a-4131-8509-efd0979b8db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e844dad4-f936-4f2c-b5cd-f9a44376ec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b0fe1-ebc0-4955-807c-54d2a209d961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fab237-20ff-464b-a81f-651cb7a1f51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b24f169-0ac9-4a5e-a786-4426085c656c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768618fd-4b1e-4153-a723-543f35820d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675c1608-90d3-424a-bb51-f6f0fef12f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54058fbe-aa03-4faf-92ba-3877c2cc0576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b1c515-fb51-444f-8bb8-2d51758753ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ee61a-b64e-40d0-bfef-950634413411",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc019ef8-8567-4868-99b0-435731fad783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58bdfc7-14a9-4b8b-8ef0-e59a40d25845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4079b93f-3754-4d51-8d48-7bad7aa5e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "506e840a-bdf3-466a-8faf-0504eb722256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eac6e9-0a8f-4861-8a40-5d3d305b7c3c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e6f0a8-09f9-49fa-a6db-9557bfcd6ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25b79a7-baef-4f47-9c05-03138d7da47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675a47ff-52b4-4915-ae26-5346bb6a2d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bd2d98-b108-451c-a938-565fbfc1d9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba1074d-492f-4c1e-92c8-1ee1d6761d4c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a719684c-77cc-4dbb-af97-0f6df85cf920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a739bdce-f25c-44ed-bda3-8db102bd4308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8026a6-0f9b-460c-9f52-220086667497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "511c84f3-18dd-4bf0-9ca2-7622a0c018ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768e7fac-794e-4fed-93af-5fed70181be3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33cf963-ebcb-4ab7-b1e1-09a15d624c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f0b93ec-cbec-4b1e-a548-26eb7eafa85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df174a7-d5f9-4526-b05d-1d72031fbd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22f2b5ef-3ed1-4f81-8ca3-2ca51f8223ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01cae7bd-3330-4c04-a147-4cb1551d65f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5aafcf4-0ebc-492d-9a28-2beebbc11543",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e3b3b9-4280-4127-b48b-ca86f5b26046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f27047e-e376-4199-b00e-0c9579899bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f596afce-405e-4d3d-8cd8-92b8d0e0b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bebee98-ebca-4e54-83f3-048fbceca703"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8a233e3-fa3b-4436-ae6f-3842a0e5d46e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32643ab5-072c-4b8e-963d-ef28ad44f45c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77f11501-86e4-4dbf-b372-9ce2e992de28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65817ce9-c8ac-40d7-a4c4-bc3e70d0b088"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0287fe28-4ac2-4385-b542-f797146b232f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7194128-3dd8-4bb5-ac81-6583af159b75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d8a8f9ad-2978-442f-9be2-a98505a10e9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5329fd5-8004-41f4-bf34-87b175809d72"
                }
              }
            ]
          },
          {
            "id": "d8cc44df-9360-4c6b-b75b-8f182a45fbb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94758363-1345-431c-8fb1-455c787b9a11",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca561c08-3e9f-4af4-ba6e-b16c814f86b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b5a4b41-b13c-4ad2-8ff7-3d051df38c88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618cb560-9709-43b7-a33e-a6a855fc94ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2d61b48-6a84-4ad9-8dcc-ec386c2cefa9"
                    }
                  }
                ]
              },
              {
                "id": "a93141f5-6a04-4b6f-bf61-e21e37d7ab97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d99850-5b8a-4ea6-ad79-786ee283129f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e7e8055-dcae-462a-b3a9-8870128354af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88427b8b-5360-4c86-af7f-f6b76b80ed1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3298575-fff3-45b9-840a-9552a0602099"
                    }
                  }
                ]
              },
              {
                "id": "267215ba-7820-497d-a32b-22f6803b6c7d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33398729-7b4f-42bd-9dbc-3e472a7006e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c122571-6b6f-4747-a4ea-a7e0d1ccef34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ff6384-6b3f-43a7-9dcf-54b63f342275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86d63a1b-2d86-4493-a2c5-45eed179799a"
                    }
                  }
                ]
              },
              {
                "id": "cefedf1a-07c5-4c61-a23a-e25030f40e60",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "794c389f-f1cc-4935-83a4-63745d77274a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49558d5b-932f-4aed-a3c9-c0b8ccd9685d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffa9aa78-6bb0-4891-a9ef-28f9a32ed887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a4c20314-f352-4c74-b3a1-6b5407de1601"
                    }
                  }
                ]
              },
              {
                "id": "3fd3d96b-a5b8-47e6-bf6f-4f98d53480dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf886cdc-5700-435f-a622-26ace62998ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e292296-1629-428c-ba8d-d37c3f205c72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94eaeef6-4b29-4b2a-873e-7af1743bbfbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "79b67fa7-a58e-428e-97c3-74702ec6b10e"
                    }
                  }
                ]
              },
              {
                "id": "24d49e92-20f2-40da-a1bb-5e8dcbcd49f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d4198e1-7d9f-4097-b074-d1209d844892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bc9296f-0a6a-43ef-8cb5-88c8feb176b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b3a1bb3-5524-4fd8-a18f-e58cf862a8c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1fff97e-a674-4272-9d9c-32027c129924"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fa72853-cbc5-4688-baa8-3b20c1174ae6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fc95d6d-8091-45e1-9a5c-f185cd819d96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "684f6563-22c9-49b3-9d47-d2f3be520333",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f75ba713-9e3a-413a-9c1d-cbeed4d44fa4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a339b1bc-5832-48b9-8d69-d1185a710d89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b7f29bf0-5020-45a9-9021-b0efda155858"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3eaf6d5-4403-405c-9a23-6d8ef2bb99ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48c38313-6821-4a2c-8153-b6fb84dcb6c0"
            }
          }
        ]
      },
      {
        "id": "2c47196c-aef9-44fc-8b06-c9d79b600e59",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf5f8ca0-bffb-4159-9b16-b804b168d981",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be04cd81-8a95-49a7-86bf-cf87ae3c765d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1085b7a-9a01-491f-a8d2-d81c8f36d69e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3b8d7c-4b14-4c29-87d4-4524b2bd0d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b39ac0-6666-41c1-9e8d-ef216c816a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abacf16-5ffa-44ed-9f82-09044b00548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba12034d-e124-4204-bccb-4d1676a1b6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44324a8-190b-4f06-9741-9c2c44b41582",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c081bc76-cdc0-40c9-b7c9-210a3df8a420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1862f19b-63e6-4b9d-a133-64d137d0e1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb11f09-5520-4dc4-87f0-cf2b0ff02d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94df18ee-1eed-4722-ac7c-00f386783a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e166de1-9f87-4b6d-850b-2ee9d5888f7c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5514430-89d8-4ddf-9078-831ae72c5d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2076cc-d3ce-480f-86e2-5636472a6b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216b3af4-2de9-4ef7-bef3-da9b1fa15142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db67243-579c-4a0c-8223-2918c9ef972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cb4403-6841-49e9-bf8f-ac173fef60cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7758d6b-5f97-41f9-8d17-6a3ffdf91a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b91b8a1-cf4b-472c-88df-b28dea25f940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a0e1b5-f04e-4569-8626-efb58fb8b355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccf304f-3f94-4490-914c-725e88a0ef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacca456-a8bc-4aea-b6d4-f72e2b4cdd8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8529690-a1fe-43f5-8502-04985f65f76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac73d48-2c4d-4a42-80b7-526e984aaf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4d1de7-41f9-4837-8712-ac51b1773706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c94a710-a2ef-4513-b587-17cd0c6f520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3857ea8-0205-470d-8d9d-c7d06fb58e4a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb1cd45-2cb0-4096-9d5c-b5b9f58a5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91fddbc-cf58-4719-855d-48327a50daf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51c63c4-2f61-4fa6-85b8-6e3fa995e946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5097b2-e549-4bc7-bb6d-1267548feb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4879d2e0-c2db-4e3f-9ad7-a0201b2c52a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5f4dcd-2fa9-42a3-9dee-5a342ff6438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a5a85-38e0-41c0-81e3-bfc67c333383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1295c4c8-771f-4f5a-9a3c-3f65558ae2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7244827a-5b03-416d-bf1e-a64c104bc93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e78dc3d-69d0-4cdd-a3ba-4a581ec4c3f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc441b69-aa94-458d-b245-7af8459ba46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2ecec6-493f-478a-abf8-59a1c03b30d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81767a61-6142-46b4-a683-0ba23c334943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5782eb9-6ae8-4712-9b80-821d456ccb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b626c8d-6977-4cd6-8377-9c358f9742c2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b7d9e-ac7c-4890-9afb-85dd2efdd947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88229052-eff0-4b50-afc3-a3bdb1eada81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eec63a-1b3c-4dac-a5d3-23d18030ed4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b239a0d-1c69-480a-8661-b7f3cb37fca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d46ff14-1fb0-4902-b836-731da148ec81",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a45f59-89e1-4c52-8ea1-4c2ae83d4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b4426-367e-4c3e-a9e8-96bb67963b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b521a591-2cc4-47e1-ba8f-74dea29dcf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cffa544b-4f73-48ed-bdb7-64f432a5a3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c4014f-794d-4468-a72d-cc070a2eda29",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ecbde-e102-4a9b-9daa-9198df75af68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22de68e1-59b0-49e4-8523-c4ea1cb65c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0553eafc-b5cb-44ce-8d43-4a843b47da8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "33691356-68f8-4daf-aa7a-a8b6b80cbe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e40610-2b94-42aa-9ed0-d35ad91f3f50",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944c922-075d-4e9d-aa69-936ed1b5c7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b025f0b8-de9f-4bfb-a89b-25f49eb36bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5c6615-8c2d-4f37-b881-3f5c2c1a8cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23deb626-a22c-4c59-8f1f-f3c5f847285e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc6f0a1-c607-4568-b22f-abc925fd3787",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456252d-0ed0-451a-98bb-73aaa2aa4f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4674e15-d16e-4bf1-8243-8c6f60584ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8345d2aa-f66d-4003-8b9f-06ab09bce97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cbde13-f9d6-426d-817c-e9f9517b7e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a114d191-4bbf-49f0-8850-e60103de8c98",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3b4804-17b7-42bc-b414-919ad62c5d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26baffc-3bfc-44b2-a8c0-9b80dbf234a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b059d-d38f-4b02-aacf-1b5a25b4e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa79197-6aba-4be0-826f-6f5b0af0abfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fa5472-3fee-4baf-be77-30642d48caac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57461512-c07e-495b-81f8-475de29546a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a406fa55-037a-4acf-9f47-b23d8d102892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673853f-b3b1-48d9-8615-eaddb640a031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf20bcaa-e51d-4f32-b332-9ccce1c7ccbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e0dd6b-3c11-4285-8efa-790beec9c02a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb50ef5b-2593-4a63-9a0b-36eb4fdd99f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b10719f-6dba-48bd-b666-88b5f382f360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca4fc8-a01b-464d-8d9f-607563b0405e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c36c454-d4e3-417d-9e3c-774e785a5f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957618b9-9de8-4ee4-bf2d-8e722c2530fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b9781-5ba3-4d79-8f18-8d23c44a5f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a26414e-fc66-4455-8c6b-47fc0e0b95a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34162dac-363b-4330-985e-f98e19f6b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e0c149-769f-4488-af0e-0b276af509b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2948889-e20b-4ac1-8fa3-1163844a17e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58febded-f424-49c2-ad7e-8027d19d6b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da2c68f-7514-4647-99f2-bb1c486d21ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23287d8b-a797-4ae6-90b5-efc80407115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "414d432e-4b96-4256-b452-c2da75520abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8563a-4d95-4de1-9ac7-0fdbaa547d9c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443c9fa6-0467-42cf-ae12-f779f194b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490d6297-74e0-4099-9dea-57a2fcf6a284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afad569-c1bd-4b21-bf1f-ca8df12db4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd333b48-2ac1-454a-93c5-b69e70ca6223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6975885b-34c2-4fd8-8255-77c73ec1642d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68257c8-0785-467c-9ad5-5e631d1bc6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d7c478-eb3a-4cdd-81ec-10d91d35b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b2c14e-c1c6-4d3a-8ac9-fa4435795992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7567a4-1cde-44f3-a2e1-11268e5c9f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801ea6fa-5842-45ff-a330-f9cfdb5fdb6a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fd3f23-af99-4e9a-915b-07c88bce2001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d020d0d-5f8d-4ea1-98f8-46a840af7bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326d4229-cc35-4394-b3ca-8def0d15425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56beddf-678c-4b28-90f6-77470f6ff40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb88158-3383-4465-9623-ea6881e8df6f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f2c410-56f5-455d-85a8-a76e0eb56570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55718831-bd15-4dc7-913f-29c3eee09253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6e28ca-f983-45de-9c4a-3c1ee519d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aec680a-ee8b-481a-a0c2-cba642facffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b06c039-fe92-4902-8ea0-99be54232c06",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e9662-5756-4e36-97c7-d7a89e2661cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246e4730-eb0d-428e-8f84-c185d4ac0b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a90bd3-6dfb-405c-af78-b8e668825937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7254e-a831-4b2c-8a2e-1737e1007b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b57bd6-ba3c-4bdb-b829-2e252570e5c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95991eb7-adc1-444f-a80d-b21420b284b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e21dbd-83ac-4d0b-8a92-e8e672ee38b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5632461-1127-4716-b757-eb6c32564f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78526597-b725-4816-bd04-c1914af964e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e2bc5-175e-4b11-bcc2-fdc6ceb815c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f129cf9c-1ad2-47b1-86cd-52a627146248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d064d31d-dc14-4f7b-bb68-bb78ae70f1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4810a984-a77f-4835-ac7f-17021c88d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24590b54-c26d-43b3-9ca7-a4147d42cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a95556-21e4-47c5-b20c-3aad75ffa876",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19310807-4e47-46b8-8723-ea2c62e93dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edde19a-96ec-4337-a623-7f47c38f9b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76fbde1-76cf-4876-94e2-d84472c3d8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a14a3-4015-4aac-adc6-1a0a10d532da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac5094-1ecf-44ea-921a-c6380d9aaa9b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52d1995-2714-4bc0-b9d1-d140731fb21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d884aa-8694-42ac-95ff-6e1a770cd50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10227115-b8a6-47ee-810f-2ec0e9a68b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77024222-a2f0-441b-b8d8-74449b836e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c367b90b-1d66-44cd-8dbe-849fdad738be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c7df08-fd4d-4d77-a489-8b3d3710b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2ee657-9f2a-47eb-ad80-c8b33acd54dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ff41ea-da37-4e3b-9d44-b1d611ef85f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d198afc-0f9d-4782-af5b-6895e3584cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32feab62-ee05-4669-a62d-9021a1a13d6c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82bb0b2-1673-4c29-aab1-462d99ad0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40aaf9a-17e6-49cf-add0-bbfce69be4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998ea67-224e-40a4-883c-b91789fd4332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d654a76e-50f1-4310-ac03-1796d8a0da47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc65a2cb-c82a-442d-81ec-5211face2051",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6a1f64-9f87-491d-83af-01fbc9419706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f8a487-7f00-4d11-87ad-ac57800f9240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e7555a-2f9f-4ce5-9883-c136e9b2cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54b8f03-e8f8-40dd-9c6a-925e832afb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e755f9dd-b068-4a80-af59-899a3a27c116",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7457e0b-fcf1-4545-9d7f-17fceff768dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d8c843-e861-4b66-82ee-b2c3360be441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de78961-d82c-4285-a4d4-deafa1c8da8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf03d20-4d86-4ea9-8f37-e8ad902872d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3606eabf-5f27-42c3-85a3-8053ecff9c42",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecbb948-738c-4621-8ca1-5af0ab543661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a5fa67-bce4-44e9-83e9-30569006801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27da321a-c7f4-4c02-a7dc-fe56b27bdd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce0cf41-45e3-42c4-90df-6e90f2d48871"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe958bcb-dcc7-4629-8931-8e0951579251",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b7deaa3-cd1a-4927-a5b7-a75c7888e7ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1822791-9410-419a-aa6e-7d3ba4c65666",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "225165e7-f774-4995-b443-a3399c456204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f61979a-a72d-4b1c-aa3d-923e2c598d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66a3203f-6759-4637-9d76-aa5480a6c1cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a49686c1-60f6-458f-b3b7-c7f9366d7c9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47a3f4f0-4e22-4dec-b3d3-851b1557bf07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45f1bf6c-0ea5-4722-acec-92d1f6fbddef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c50b0e48-a1c6-4f4d-8eb4-036d84d671df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d5fb53b-2022-4657-bea8-407eef552af0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b90b73f-c152-43b5-9af7-76a8c7b9d2a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "470348eb-b8bc-45b4-9c88-a4c7027f89f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90bd58d4-e789-4971-a9aa-71a352b38b80"
            }
          }
        ]
      },
      {
        "id": "7bca206c-d6a3-4396-a335-633488d047ec",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fab95eae-de59-4e24-93f0-889833e4fa72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c84f436-0ed3-46bd-a216-2e8910b6b6c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c762dbb-dfc5-4c2f-b4af-c6cea93906b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46b3d5c-644e-42bd-aabe-916592d0f0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e874e4b7-aab8-4831-ae14-ffe1ca9b8d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7873c3ea-5a0f-44f1-81e0-567ff676e5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23e150e-af80-41f0-8645-3da66e5cc95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af022c2e-bf11-4c17-b31a-f4a5fe3db4bb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbddc4b-f883-4544-ac50-4b2a03770dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03371db8-60d3-4889-92ac-e833d1b33d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644b6e3d-9e8b-4a57-b955-5601b642d8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a540b1-bc64-4d4e-b7af-2b5392222a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04d548d-42b5-42dd-b0f7-b48a23fe09ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af256a50-9869-4f29-a396-c8ea8ef10c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edfd4c0-44f5-449f-bad8-2f576a2e8922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327b6fe6-c89d-4116-88bf-725eaa80ccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dd7628-9575-4bbf-80c3-4f40fa4a13dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a4a07-1edc-4719-aae5-d315b8658043",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75757dc1-7926-466a-96d1-cbcd305ad5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d0b72b-3689-4f71-be82-82a9c55a034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c29d3-f103-44a1-81a5-75b5d173bb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc26e0f7-31d0-41f8-b539-c9c50e74aece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1387593-d2b7-4b27-94c0-3753b88ca3a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3a10ef-c161-472b-89b2-2226898342be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cb36ad-3eae-48dc-8c3a-679a6935c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa2ea4e-e4a2-4ee8-b7cc-56f87c3ce3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "512cf1b9-049c-4ee6-9cd5-73a2db157da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532581d0-c582-493d-8262-8bc50c457f11",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9978c4-ce47-488b-8868-c8124b3496ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed06c0-8d8c-44ab-ab6c-a9fb8f02861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60c9e84-7804-4e56-bb7b-eb5e17ef17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc3858e-9bdb-4d42-b01f-f84d8d9a051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0a8e79-d372-4c39-bfed-a9853845ce63",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f3e9db-8ca9-492c-a096-b781cec64287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bf36e1-04e4-4224-8bc6-52f59da9f5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a18884-654f-40c1-9d83-29b20e731145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d5eff2-05cd-41f5-8344-b96f04f7b900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c196e6d7-cd32-4b9e-8697-a3008e103f76",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030dcdd-f941-4161-82ce-e48401aed0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9633e3-721b-4f9e-b007-8582c60af03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1196d0-5f8c-4f86-9c65-cdcd14cee534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91ffe57-d6d7-46be-a289-af0821eae9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292af03-a9b0-4e77-8454-99e0c124a56b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbbf2c-c41e-4ae6-af20-bea0f32c52a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2d5fc1-ef38-4f59-9804-b71377b39c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bd6901-443b-434a-85d3-62c95d150f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e782f6-a02d-4834-9e82-af50d2900172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1620db68-bf47-4562-8e52-10d74ed54420",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d8fbac-4050-4407-acaa-ebe2f2a74ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc269c8-0ae4-470c-a4ad-392c463420b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66468c3-4b26-4a3c-a2d8-73a15486b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4675180f-1a84-4008-9ced-788c39ad9a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96e6bc-68cc-42a5-8861-1bea1525dde5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03143c-5274-410b-b8cb-32f9cc3abb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a426ea1-40ee-4d98-b8a2-d25c65a1f9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9a72b9-693a-4d41-8924-271bb5a1e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "94a1f40a-559e-4fc6-bbeb-8ffc7e51f0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d4e428-9415-425d-82e0-2a8e3c8ee50d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0070ad17-78db-443c-a580-4f25d73b69d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a3010e-7f08-40fb-a155-2818581c7388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18ec8a-5c86-4fca-8196-19ec2581e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d99df87-7cd8-462a-971c-f4c6fab43356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a568d68-55f1-4737-b53c-b6f4cdb665cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ddc931-ec98-4071-b43f-0921e87af538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b4c198-80e6-455d-9fc8-6a3a5f059e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc1f20f-f960-4430-bba2-8c7707a71643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7907f5dd-53c5-43fc-bd6b-832e4de86eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd212a47-96b2-432d-963e-8d4b66900006",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44feb3d6-1e16-483f-b029-18dbeb137bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb2255e-20ad-4f2c-b8e3-8ab8cfaa61ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a296e016-cc04-40de-b307-bc76cd8cfca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74671347-8dd9-4452-b3f2-a51cf09f9ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e02315-fe67-4cbb-a41c-b2a96000536c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aec016-61ae-4f2b-a2ed-5a6d475c395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06446c36-0977-48a8-8776-d5b0b95238ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46527ec-290b-47dc-82f0-4350dd9be888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0ec1dd-4ed0-438d-a493-a87d4fae524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8f7115-7ad2-4ac1-96b7-e6b429469ce5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34adddc-a7a2-4267-9583-c2d571e32a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d958ee0f-c43c-4854-a354-039f4af97769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8de0a1-5f9e-422f-b33b-4ea927ccfa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "690c4313-b1c7-4cba-880a-76c0f7146db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0cbfcd-a3ad-4b36-b417-8a01fe2b55bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235d520-b06e-4059-a7d4-76a0e26bae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0919bbb9-198e-484a-8332-56af570b4386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5086e342-5efd-4469-8a22-86280d8818ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "79999a4a-aaaf-4813-aeb7-d7d1d6457f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36271199-5c4e-4757-a529-b76b85f1be28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd973ca7-e20e-4db6-9849-e15d1bae9a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95fc7e5-600f-44de-a176-1ac612d211cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6966e01e-b39e-4a2a-817b-1d372e63f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5058ed37-91f7-475b-8f56-f916c3e1b5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a17237-2b94-4e13-91a4-f79c3280a13b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17296303-1ba4-49fe-9224-ff530907d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb63f7b-6273-44fd-a6fe-26a1b0f807da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdb2099-e42d-41bf-9c08-f736e6d573ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ccfda7-9f84-42aa-bff7-97f974d73644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341bd861-614f-4863-8cd6-f20cb217a95f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a916b2cd-1e8b-492c-9ae3-a48aec3f10de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a9f190-0cf5-4593-89d1-9cb2644bd02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa96da3-9920-4ba6-8b9b-3ce80da458fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62cf9246-dce9-42eb-972f-ad08d74cf1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df743a76-4da7-43da-a6b4-c34416b62c31",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef97e8be-9a3a-4394-8678-82ec811b7840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101067c8-908d-448e-8fe5-743b11c34994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1cc483-abe2-4127-968f-96d33334274a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f733f6-56e0-4136-be6d-667fb9632117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866de44d-704e-4e48-aa20-0127ee90c26f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6aa7e7-05db-4ae1-b391-8bbfc9294585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259ef8b6-ac49-43ea-9ce4-bd4e9840d348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b114bf-3a93-46b6-ad02-64ecfbd925f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbf4922-fb8e-43cf-9de9-bfd3be339f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a8b9d-cc99-41c6-92f7-7eced20d5a3f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1600d1-19b6-428f-9fe7-72f60a02552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d813ea4-7e20-4b8a-95ef-cfa0490612f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fd835d-3b95-4c2b-ac91-3c303243fc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d433b497-cee9-4d00-ab38-15996f43b3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4bddd9-101c-4e1f-a8ec-eb9e76172924",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1194ff3-b72d-44e6-8d45-84bc191f98a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6ba2b2-8d79-4f25-9c76-501883d4ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5d95c-aefd-46ac-a36c-0b0d79b0c45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff40f59c-aa76-4e1d-84ca-c7317b4eeba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e1b8f8-9e40-4242-9cda-3d257a2ba57b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f15634-6825-4ae1-9ab8-77463fb0d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41c9db1-f97c-4780-b42b-310689454df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6609d-da77-4198-8875-0e4ce51827d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45cea6f-52c8-4686-89d2-5875c721fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2303ae6-d91e-4d67-a4d6-9acd36395dce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3376e6ee-c0df-4425-8847-822c2127982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4466011d-aa2a-44b6-8822-3c9cc2d51725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6e529a-4679-4d5e-901a-af5169829f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a64bc0-2753-4c37-997b-1a982ba66758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c6f2c6-9012-49aa-a3d9-e16684ea8c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9149551-735a-4b61-8de5-7ee6682c60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a537863b-b46f-400c-9679-c1a6b5a4c125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c2df25-5cfa-4f7f-9127-8d3da1ea128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55b7213-6278-410b-bdc1-4193edf7f1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1440d65b-3806-4412-9350-c62fd7450cf1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c2c2a-c183-4544-b9e5-943009d93982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e58bab-cf67-402b-9e1f-36c0ca2ef669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa28a2b-0e22-4e90-a910-463744696c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ea7295-2bde-47e8-a4fe-1ac73025f23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d963a-6c33-44d6-93dc-92a7266e978d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea66820a-b598-4eaa-83b2-8fdadf40359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa83933d-a3e3-49c3-b22d-9255e6669cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7b60e7-f709-4836-8523-957cb3b0aa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c936b910-4f2b-46cd-b602-74e09fb65bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fdb1cf-f815-4da6-9469-87e4f6d2bace",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b36c1d4-b059-4787-b500-64dd9fc2115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44a9a5b-2670-4e01-8c6f-697c1e5de0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40118cd-2322-4ccf-8061-38d688d712df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a766044c-5ade-4169-aa81-678f775ee138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658678fe-e706-42cb-9abf-feb71c4f477c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9bfe1b-c909-4c97-bdf2-1648449c4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0de9af1-b2e9-4144-9076-2412f1a42f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d91ac84-017a-4941-b2aa-7e7e740d2049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec15e3c5-7b4b-4f3a-b631-a8fc39805566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3056e199-e9ff-4038-9059-81b9977c6a4d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe5108f-588f-4e08-a8ac-76d6d7a621d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4826954c-2f39-4e5b-a400-e69fed80028a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7572db7-4fe5-4d13-87b7-0786e4191cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7ce6e5-1851-4166-9ef6-b35e6d011b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c9e3f-58ac-4174-b5da-432ca9782fe1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4030c3-e820-45c8-aa6f-121422130437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae668a-7831-4bfe-b8ee-5e21317e96d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18238cfa-58a0-4eb5-b1a7-4567a3f58bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc7e9ba-b0ae-46bf-a93d-d3ac3e6b0b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855dea26-4dc8-4170-86b8-bac5e68f5dc1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f8ca6-4eae-4819-bda7-e16ff7ae04b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2014a351-495b-4720-8177-841e6852112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da7f12b-b2d7-4a4a-9339-1751ee7464d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98f7ef4-25d7-4e24-9a4e-ce37b0349c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb19af5-72ad-4d43-ace2-a99d09a17a58",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9829fe9-e814-498b-9842-af01acf0ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e12464-0d40-448c-aed8-df1dd418b7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc6a4b-dab8-4301-bf14-4e38c128557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846b1551-5fbf-4edc-8791-2e4d2e80c483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88b632d-aa06-4c96-89c7-4f018e493234",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa285f91-ba3a-418c-8597-c769e0d88d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3b9e1a-2a48-4f04-a241-ca7dcd98a6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efd2e56-810b-46b6-963a-d6974326c504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab642c54-a0ad-40e4-8516-c872f319da4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c77a4-6bdc-488f-8938-01d086e31fbc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc8f5e-aaa2-4d15-8ac1-27b0b520cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ff9c04-1e18-438d-9834-3dd95cb32582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc0da75-b6d1-4e24-b90c-76a0ed00eb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57591ad3-8382-474e-99a3-7bbf920dd068"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "573ec5e9-d899-466c-a202-954c5105f574",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78d261f0-3a45-4083-8a3b-83ad9508dea8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e31674-4275-4fc9-b17c-4f76fa2a3c2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "55490325-594f-4ef1-8cde-0264117576a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a07debb-51f3-4dea-9034-d4eff027071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ebf7145-189f-40f8-9997-4d399362cf58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99bb083d-2529-48cf-a8a7-e273839ce643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "346ca011-be54-4329-a145-e5cc5d603b56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "980848b7-3510-4f15-b794-e6078ffdaef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35fb6511-e01b-4cef-8dd8-8dcb357db7d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db46a076-c3b1-4eeb-8b6d-00bd8df9928e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a9cd288-e19a-49a5-bd2c-20dae9263e61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ad06a05-1e8f-41ba-aec3-634ea768d947",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33459ccb-60ba-4e28-996a-564d92d93715"
            }
          }
        ]
      },
      {
        "id": "5a4badd1-82d5-421f-948c-dc7d18a4078e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fac0ce8b-599c-423f-9ef7-6bc61a5ec4dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcf49ca7-2c3e-4535-80c4-815451c684ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e290ff3-12f6-44ab-aad9-6ea424ba2d11",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cdf04c-8223-472b-911b-25f3eea9270c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e85792e-5cd8-4720-8091-4b77a3d05881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d196f3-9544-4b40-b885-233e6289ecd1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2013d2ae-7016-4063-9851-4378a9ba12b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b5c408-5460-4a5e-8839-89ff86c4c7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef1221b-a33a-4a22-beee-a06a639c87c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3ca78b-38a3-45bb-96e9-e7ba47919ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd23afd-8478-464e-b6fd-29af7d538b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15309816-afe0-4539-875e-61f0d3869169",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0628335-89bd-449a-bd72-3846af5a23be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f06e1ee-6571-4379-b2b7-f3187460e2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82802f3e-2b4b-4fc4-aaae-36b193420b46",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a10131-6a43-42a1-a91c-647831175e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d52437-9392-4892-9d41-c65ea13b4022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0535bedd-7cde-410b-b87b-b901be67c843",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07263ba9-bde4-42ec-bc6a-41d39d64f0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaac674-84f9-4394-bffc-35007c191022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db2c5fe-ffac-4fcb-8c69-dd7889b36090",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fd66d1-0699-42ee-80da-f10bd2bfa881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e5431-5cd6-4935-bed5-14014b54ff4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bf1db2-9fb9-42df-ba97-cb6fba4a8ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e76c905-a07b-4de1-80ca-258c4294e697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e131796b-cf15-4986-8808-1a555e74a3d2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fcc90-6b77-4fd1-9ffc-5fde243112c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21e90a1-414a-4e53-b997-80709f1f9be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a6f4d1-672e-4196-bf81-309e5ee0a7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c1e423-f951-4107-b9ee-b428589213f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67084307-29f3-45eb-a9fe-55796ad0e875",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca5d929-b565-45e4-802b-165ecf8949f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75aebd6-2b40-44fd-aee7-e9f51755b0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab845db-0bac-4fff-8033-3c0c278c5d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6e63f8-c9bb-43c8-8cfd-5e60f9a93010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8140385-56c1-4262-a8db-5061ae43387a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306c840d-a51c-43aa-88f8-bd5de9995e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d388d48-8d51-4251-b8f7-140ef425631f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef62b2e-9d98-4978-b7a6-c4f5720f7039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01108277-66f2-42d6-912b-d289a495f9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06855ce-5f9e-4899-a49b-63a193ed35a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66497f4-fa98-4179-95b7-6fb1281de44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7088096-2623-43c1-93ba-3606a34c11cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a156d8b8-fb39-451b-81c7-2e320e813cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2bdb27-5a4d-45af-9a76-037ab1cc1562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4e963-b1f5-4274-83c5-6ef03b330fc0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bee8bee-d60b-4e90-aff0-591b8be6dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dd3a21-34df-4053-9fad-840fa046d1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afec9dcc-743a-4a00-aefb-6102dac4c2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c15626-0d29-43aa-96d5-088860fa34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9931ad-0b56-4de0-b9b6-9f1097fa995a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a00580-3c3c-4d85-8fc4-1a728742fa24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a70cbbf-5b49-46cf-b622-b6c17bd19fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdaa16f-c7c5-4551-93c6-34dff1ac7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ff4f90-65cd-4dc6-8873-f8962cc2af2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ec7dd-fa69-4b74-962a-728ba38c03d8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b7db1-05d3-444f-bf64-ced51a3a22c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fb873c-9d67-45a8-9e49-6297de0e6361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2241eb9d-db0b-4823-9378-f124f1fd29f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624d1ce7-7650-44b8-b2dd-a6a4bd280caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9d72a1-4daa-4f0e-b91d-3fd25bdcd525",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65b2fd5-f64d-4a6a-ad66-6fb86121db80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b9466c-1afb-4928-97f4-d239ea68c3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc90c3b-43a1-42ef-8eb5-9147bb273395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aea18b-6335-4a70-a9f1-d27ef1409bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959c5e5a-e70a-4a2d-bbff-26da3017a92b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c917e-bebd-48db-a973-a0ebe2ca5d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c24344ed-a3d7-43a7-beab-a39221dd6f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad4fb28-a8cd-40a1-bcce-3f0249fbc4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b12e14-31b2-41f9-b570-aef971906da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bab0d6-b04f-4f96-9e29-f78d5ee817e0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccf6e7a-a51f-469e-9911-890ef76e35bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51461cf-19f7-4b57-8ee7-e955303a9215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c20b11c-5004-4298-9e2c-d90cec8dc310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb7645a-c1a8-4964-b151-622fdbbbd219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb58ee-718b-487e-bf68-7c19dd2fc8cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e87f57-8517-47d8-bd87-6c6514c01c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3ad248-cd12-4fed-befe-b4e7e46a9c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db41ec-52e0-4d6a-9ab0-6ec6a3a17144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c3f63a-1d0b-4015-b1ed-107fb552dfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40b8565-3cba-48c7-8050-0500b3f7c2ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6ae12-4cc1-436f-81c3-a40bff0da6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922384ce-aa9c-4e2b-93ee-f3aaa3292033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf2026-f23c-4838-ab5d-f9a9d61ca060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10de7ff5-66d4-4c67-8568-fcc3b8b18fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088bb2ff-083c-42e7-9661-fca04b988b43",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85326547-9971-4ef4-9718-efea99646ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a4bdeb-e3d3-4483-9717-226311290b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851e6930-904e-43b8-99f9-e07ccc1afb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31873e78-885a-4d02-a628-fbc1a68aa2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe4489-caca-4138-9d0d-9f291efd166f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09accccb-043e-409c-9340-82c7a2502a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac516cb-22da-4445-97a5-dff825f4379f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd28f41-27ca-40a2-8c15-f350c5e051f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d59251-2ee2-42cc-aa0a-0cbc9bd09de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d7fbe6-316f-406d-8bc0-70b8e27bcca9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e78f9d-aa7c-414d-b32c-9a88c962f517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29091f4d-5d7e-4001-a3ce-2a242f65066e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca563b94-c57d-4e2d-9046-124dbd82dcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e2c37f-59f3-4c2a-93c2-494c8be9106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4913bd0a-29e1-465a-bf0a-0e55ce3ac725",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de33c3f2-e35e-4c60-8602-7b5d2d9a17e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66af425d-5d5e-4cc9-8aae-c88185af8f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b79af0-56b0-46c2-960f-42f0c0afdc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1717b806-2fbf-4f13-8b35-b03ba8ef3e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc1a1ce-265d-4adc-9bcf-813bf69b5527",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28876c52-5a36-468d-93fd-ae81504e5c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f598624-947f-4ef2-9e67-c94c929e5152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a1e736-f490-4405-9c4e-d617452b3c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb303f9-a2be-4fee-b1e4-ee0cef30aca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c87eb4-fa47-4380-bcf8-689296762993",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329da78c-7405-45fd-8878-11319581d610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825a5919-e220-4044-a576-ac80bc59391b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3e1b24-5a14-4d43-a438-4b063a3338bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f309829e-448a-44c4-abfd-3cacfae983e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e262df4-dc29-4f43-a3b5-f5a54efdb23d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74e2965-d81b-4c81-b9f8-02ce9b802c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2199a987-669e-4b3f-8de5-6fbe1b408388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803787fe-55bf-4dc2-8afe-8d274e64dcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05a6462-aed8-4170-8925-c01b4fce5344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab395106-25ca-43a2-b588-6fa2e9b178d0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a693a-ec15-410e-9b42-598934cdc3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98faf297-2e0d-420c-a9de-4edfe492479c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbac9bc1-b2ff-4177-998d-28ee753e8378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77acaa6c-298f-412c-b8c5-43db155d89f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1584971a-3823-4867-8cf8-24a3c189732a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca8d326-c77a-4bda-91bc-7656452701e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4140307c-359c-45cf-af24-8d4ad9be7d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a231dc-f412-462c-bc06-c4e40cfa948b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64752ed1-53ab-4871-88d4-c4c9f2914b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9914df8-d6ca-4a3b-8aa4-f16fdd310454",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3faa56-4f82-4170-a616-0dbcdef99a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225a8e10-cafc-4434-8657-4add5a7f745c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3407ec-cde5-4c49-afeb-11dbdbd962a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920ecee7-7bfb-4287-bafa-80954a26297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed824105-81d8-4ed4-a2ff-e6c9a3f5e546",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d08dbe4-49a3-43a7-9367-021dd8887aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6061c112-a94f-4370-83d0-b1e07fba5088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1293aff-6cfb-4d90-8d00-62d95e211100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca58969-fdb4-48cb-b57e-44ddd5bc40b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a1270-b730-427e-919f-3404b64e01fc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5e991-595e-490e-8024-ede0ea029d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14143c6-408d-4e9b-9539-cb68a22e8863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26733574-f47a-45c3-a143-001825de1da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44594a08-a603-4ed1-9948-bce429233814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a1951d-bd25-483b-b892-e31c2872f863",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6314782d-a92f-4fcf-be4a-730812225968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5fcc0f-f710-4c8c-b673-91e466688cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d8569-78b4-432c-b5b0-777e2fdff981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c26f6c-4e66-4794-a25b-7c73e321d6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ca4090-f423-45e1-bd73-44b8ccf27219",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fe56be-3918-4f3f-8da6-f6068f070449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039e75aa-ad78-436b-92d3-3d26728137a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae0bff5-f7ff-4907-928b-ef226a9ae073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b588816-5964-4c94-8701-7fc27ed5b86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8aa890-a86c-4876-9076-099bd0012b80",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d29a6b-f2cc-4083-be04-70723edcac06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92abd20-f085-4067-93d1-f368db4abbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f31636d-6250-481e-8546-1cc04cc8d1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a854df91-1dc2-4c9d-b890-d3fdaced1ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf2fa2-e629-454e-8d14-28aa8d4e696c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f3f44-c9c8-4b3f-9545-4ea2938e6006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cf4215-7e62-4afb-946e-1c203f10e13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eab508a-e3e0-4820-9315-e0610dc55f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9c7a7d-338f-46b2-b052-287d84d5ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0fd6f8-2ecc-4406-8668-7205ebda97e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eef1af-557f-42ba-a6f7-f64c809c9fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c21fc05-4f7b-4a55-a9c5-c503cb708e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebc183e-4e98-4640-8bb0-559a2b74258a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5172e80-8821-4a39-b15b-30d54566343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcda0c3-5abf-4eef-bd68-66ab88f25fa7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1203ec-0553-4cb8-bc0a-766543bb0eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4f3f1c-1ddb-4f6b-904b-24c655f45b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8c63d-ac97-449c-b2b9-28007b8011b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6800f91a-2179-4975-bf58-3a1811f57f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0039288c-3902-468f-b400-f7674d036cc4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5595c5-a9c9-4a4b-a358-039886112b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7221d57-d79d-4a07-b053-a68463847a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec4ca4-849f-4fd1-9b7b-ceadb47ed556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da88181c-b7fa-441d-9453-3126d34afaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b80c3ed-23e2-4f3e-8f90-14972b118ee4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3b1a61-72e6-41be-866d-4bfe3e128799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac6a434-6133-427a-b2ec-19a542bf1c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca55d33-3599-4eb6-8be8-840c52f3e1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48f7658-752d-4410-9d8a-1fa97b81a978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ca770c-d641-404f-a3d7-0c077acb4b10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1215e8d-624d-4add-b1ef-18f136e5abcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5433da6-7ced-4fe0-b2bc-dac412f6f8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14339c5-8ea4-484b-ae07-dc2e053098f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88a51bb-c07d-447b-ab8d-7acb7d6a28c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea9adee-851f-4796-ad60-892458d8b73a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f88705d-3808-49ea-bb9d-23170d580639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80895aa9-8f72-47d1-b685-982a4197773f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50cc669-0f2e-48bc-8012-4c5c381d2a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d2f04c-e8f5-4c1e-a483-f28a01cc9df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5fe1e3-3425-4de1-b567-e5f4a21367e2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f084ac5-fed4-4598-bf27-e49c723049cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a57eda7-ea3e-4524-9467-dfa695ce88d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7986477-1e46-48ee-8278-d6439bc30714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55c5017-3026-4167-9ba5-f086c3ed83b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd16db-48a8-434b-b1ef-33909b38680f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1b2682-7010-43eb-890b-fb6281db4dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058e3d45-c3ea-4f0e-904b-5b84f49d952f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f48fc2e-20f0-439d-bb75-079dec988fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8585495a-6aa2-46d8-82fc-b747a60659b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e848d6-3c70-4a64-8393-1fa5342891ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c52da15-21b7-4f01-a423-4230ebf4e0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9eeeb54-282f-412d-af4a-b82f22ca5caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48195797-89e5-4a31-a5e5-e9235cf202db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835b6ce6-546d-47b1-91c5-2dda27fac7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46caae45-2f6e-4d13-b133-a91a8f12b106",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7dee3-e953-46a6-934f-d6fecf1dafdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cc2a1e-854d-4acc-a2a9-2f4a2928ffbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80346df5-f648-4c93-9ccd-3ff3df0fbe36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f313bc66-c9d9-4361-8f3b-5a28c18ebb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ee878d-f631-4b6b-890a-f1a569dc8c92",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de53e7f9-205b-469e-97c8-623d7501b22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a96cf22-618b-4a24-a2b6-37cbb55f2884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce24842e-4816-4ce5-8079-fdbdf7ce1e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c10d5cc-3e6b-4e45-9ae3-bd9453833f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3e7c08-369b-4c7d-a498-f9eb7b87bd72",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ec6b4b-0f1a-4cbd-b150-4d9767d87ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dedffca-f821-4c01-8df1-04a70d61fc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9bed39-e28b-4ed2-8b0f-bba398d7b0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb28367b-6497-4ddd-afec-3360290ed963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca11d03-96f5-4fde-b824-62b18ba37c76",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad6d09a-794d-4b12-b966-a153765ef14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f164a27f-f166-40e6-ac9a-57406da4c384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da58cf7e-78b1-4edd-adae-a8c7b0184a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92716ca7-8fc5-43ea-8c6b-2beeccd7a391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1806fd0-f84e-4852-8b9a-5de7f85613f2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a04286-1da4-4611-95e6-5798e5611dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afc8ea9-ec9e-486e-af95-8d447c385fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680262a3-b4c0-4848-8dfe-ae57fc5c2c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e30be3a-d131-43b8-b97d-61d1fdd9b22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892db30f-9435-46ca-a094-87401e68efbe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b3314-8084-4d2a-9953-edc7bc56400f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceaedc97-90d1-42b8-90a0-b4240cbb2e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaed3ab-8b9b-471e-9668-dc47b4391899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078970cb-422e-4d74-9d96-e66caa73dcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae105ae5-06cb-42d1-a76a-3535523c0c04",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f77f01-8e31-453f-8833-255baa1680ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be55e0b-ebce-40c9-ac25-d00cd178e74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f9bc4d-a7c9-49dc-b35e-36933863f436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7657dd3f-2cd4-4e06-a500-34ffd530a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4702bc5-f6e1-4d60-90b8-fa7645885a16",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e160c6-d313-417f-93ae-0978369845e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbb958e-1bac-4735-bd54-777fd2021fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a0ce6b-4d13-4caf-8275-9e7228ea1cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4239cea-5381-4dda-a3f4-81eee9e52934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b5d6b-b6c3-4d84-81ff-d5c308b9bc60",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b4b3c2-36fe-4aa8-b331-3c42c02564dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac17fe-c95b-4602-a44c-fdf1812f8663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d58af-1921-473b-99e8-beb70aa2f354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a58e28-d508-404e-96a2-fc15a52104a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bfb616-d0bd-41b5-bae3-0e0a846e5c61",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79eec3e-440b-4ea5-ba12-131b8fb8f931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835c3d15-2c62-4321-a519-63a71379ea11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9f3106-478d-47af-99d3-4c1790981a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25f054c-5cef-4f0f-92f5-614270decf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ade5490-6813-437a-b043-fc5cd1146690",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36ffcc3-55c6-4bfb-af2a-425d7dd5b8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b705e60e-8800-48fa-8b6e-6e0cac0dbfd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31954b2c-300e-45df-871e-07c0f9bff83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff15024-e754-4df2-8bc1-f35ef5387a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969afc8a-a398-4757-a615-35d4a3929a7d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54509e2d-6b5d-4172-a441-dec923192186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada21bdb-46d9-49e1-8270-7e1fb4fa9f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5accb7-f194-4338-a445-5770a6291ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f8ac08-f1f1-4f19-87a2-b1292879bd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86e6aec-6cf1-4e0a-a878-05a90f1e2e38",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d949b58-487a-45bd-908d-afeb03bd1b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c26373-6201-4c74-a277-8c8b57ecc079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe524159-ddb8-4352-8cb6-2112052ff205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2dc237-7bad-4cc7-a9f4-4054e81d2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2918286-8564-4e14-8ce9-35c41332cf84",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb7d5d-e6a2-468e-8c75-0b0d1d3dbffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef202976-9a94-498d-b735-bb3b6742e56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b35d27-e21c-4ec8-a250-5b10348ed85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb769ce-e601-4929-8a25-b077bea2575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c524ae4a-0cd1-45ab-b487-98f0a1d3808e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791ead78-7519-409b-b54d-205added3487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22d693f-5a07-4e30-b86e-c9e18b8e03bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ec2e2-272e-4780-8280-2cb1e8def0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb3e2ab-a89b-4346-9d21-73ff0ab40850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f070f34-23f2-4a7a-9aa4-7cbac2f9991a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f22b8a7-5c1c-4624-a040-5fe9e0393ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1638428f-3651-4e80-a6b3-9565eda03e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81bd9b3-38dd-4fc4-917e-e2769e8f06f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bae705b-8614-4555-91f0-3f6e0ba83f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860b3810-f619-45da-8b31-0b6094095a91",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce55812c-605e-42a4-afdc-fbfb6e0ed134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59ec5a2-4585-4b3d-b301-653a5fc42933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae6a52-53fb-4a13-86a9-d0e857365401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061b8384-04eb-44b9-93c4-0b258024495e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c5860-2584-4c63-8de2-8714dc62e7c8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31153de9-636d-4f8b-86e0-d0343bf288f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bfa20e-ef64-4672-8721-c0e364f95f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc466673-8338-4e48-87f3-62d6f0091e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2931d1-0432-48f2-a34b-09ce16bd2f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8737d30-951a-40d6-a46e-741151c3c865",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0cb58c-4f2d-4eb1-b996-4a5ac64612a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51bcb02-f62e-4118-a99a-eb0d99c5d20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1fd325-91c1-4e37-b25b-51803cbf4ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd8e571-e3f2-4342-b767-3a5e8c5dcac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f94cf8-b015-46f8-87a1-a53a39faa2da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be68677-fe05-485f-b95a-398a2a9e3127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80972922-9523-4eab-8af7-333029afd25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af95d22e-503a-4b73-9392-dbd9cc1948f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd18857-6143-461e-bcda-14064ee43982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d0af8-f397-4e89-84d2-11147a76984a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337ea9ce-9331-4621-bb6b-88ac285627cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474bfa9d-c470-4b24-8860-b49b525a7e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d8d2cf-afa4-435a-a953-08d9a398574b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c98e210-76f4-44e9-a2c2-80c4563d1cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e984b6-c575-4af5-be85-a16b692162e7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b339d4-c04a-490b-a1b8-7f99ba782042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0010a9b0-b8b3-4c05-863d-3ca30c27580c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aea2bb-d762-487a-ad07-b160480efd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97624a4-ac8f-4510-bd38-24e476a159f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f91b14-879f-4bc7-a35e-430b5515399e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c0abbc-960b-4da7-86b6-c5421e31d518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b109098a-6bde-4772-8594-f8a36857f016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8898f49-0a23-46d6-9c3d-285389da35ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843fb096-bac0-4efc-9309-6b7963f0dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30035576-0418-4988-b8ac-169e6c4e2c86",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b731dd-4ab8-4b28-92e5-89053dd34b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e3190d-b6a0-43a5-9eb6-80ac8c8dbbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85d6c43-25b9-4055-abc2-68beda0c4e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e58357e-019d-4357-8bef-249ae3467fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59246b08-10b4-4415-a9af-ccadb303d0de",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7092a6cf-b7e2-4609-8620-cb71186c4ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12f5dad-c71a-443f-bf5d-9061fd2b36f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bf95c3-325f-4b7a-a59b-f1139d3ebb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b82cff-9bad-4639-9f00-7c6226ab51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac17733e-59c2-4080-9259-5e7ff9fab2a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7510cf3-5ba9-4a0e-bd97-478760c9e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5dc02a7-889e-4085-8ad0-763da34bc001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1b39d2-5ba4-4872-9ca2-a5c357711696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adff808-9da8-468a-b5c2-1325f4a1ecbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba3e010-2ccc-47f9-a02c-593649abb7e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdae07b-796f-439d-8a28-4f4667b8ba32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bda0760-e674-4763-b474-cc6a3643c026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e3e74a-f6b0-4133-87f4-03ab0f7caa68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce06b6d1-838f-4b42-afc8-021552b0d992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ddf8b-398e-4c72-91eb-2ff6fb719b3c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c59d18-66cf-4df2-a8e8-c706b26b45f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367d6176-3433-4381-a63a-b26d9ffe0a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea494ac-1534-49f7-a11e-a8fbbf3abb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ada809-0f35-494d-a1eb-05b2d63b1182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17cda87-bce2-4f0e-96fd-333c2b90a133",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de25ae2e-43c7-4d80-ac7b-3b8d60d29ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8d64ce-4fbe-48b2-9136-357b5ab8b9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2974117-4150-4128-8dc6-d5343d7e5321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abad5f22-273d-475a-a122-352fd80a5799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41d17e-4009-48c5-9687-f601359fe7e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86ed677-f827-42dd-a129-35145e905412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80260f64-7b37-478e-a9f8-249bc88c0ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4bc07d-adce-400a-a91c-ec2af9c8f2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680ddf53-9df8-4a73-a149-b622a3a68c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9430a09-ead8-40c1-b55f-f04d9c601244",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972e4676-24e2-444d-8dc1-2893b87d2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10047ef0-cfae-44fd-a4bb-ea4e03ad93a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07012e95-92d7-43ed-9fd3-3bc1feea7a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf65803-f248-499c-a630-6a2ea81c89c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375af754-21ab-4ad7-996e-9307ee346e83",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04da5ea-d93d-472a-9b48-00511984f463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b487a88-77ec-4f5b-8395-34180dd48328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c18eee-f9fe-46a5-9147-ff76c17cce72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13da511a-9b01-460e-9129-a8f9c8aa794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2691bf1a-53fa-4f62-b5f8-438373b29e6b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd9d396-00b1-4ef7-ba55-20e21ace3167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759d00d5-a8a7-4922-a7c1-8a537539a075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e4f4e-f91e-4957-9721-60262f0b84d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633f0ed3-bb27-4004-8156-311ffe526e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d1856a-a665-4220-a621-e01a816c1918",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca69b15-ff2c-4811-9dc6-9aa5e49b98a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2409d295-a683-4e2d-8712-7d761c44007c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce64526-5396-4634-b2bc-32ec605906c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00834052-d8c0-423a-b93d-272e8c5fd775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abbf6b6-9127-4151-9e60-39012c352511",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba443ac3-3cb1-4923-8434-fb12101f779b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e9cfb8-dd5d-4a81-b230-07fd759a7491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9992b451-19cf-4956-913e-84ba97d5555c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cb4a02-ca22-46dd-b7ef-5d4af6ea2615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4eb1b-85a1-4363-87a9-e5ff899c88d8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23907024-e544-41d3-b4b6-971c48780d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b47500-0abc-4d9b-954e-f132df9a06ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1c33d7-995e-4047-9d63-2b322e446b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7eabb20-fa9e-41b4-8087-41518d4166cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18411a9e-4c24-49d9-974b-c2de4c3c1021",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d14cb-6429-4d1c-b1b1-74b6803a51c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b877633-d4b9-41f4-b274-14e432ac52ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1004fe1-1548-48aa-8a98-1695295ab204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214461cb-d967-4c0f-88c2-321f0bfc8842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae174815-c385-4a95-896b-32a6b12f4b32",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4219ad01-d9f1-4fe4-9287-d862c8b8ef03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3e701c-0db3-43b2-898d-00021b11a29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d18101-6e14-4cb6-95d7-bbf4e37d362f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29623c88-4060-4f29-aa4a-aebda500e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a60ee1-51f8-4b29-8b62-7b4a4e9667af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fa2b31-da51-4037-b22b-765a2e061881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b614eb-5fbc-4779-bc8e-1251e7827dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b10e3c5-fe84-4555-ab60-6b05ed453031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f63fbb-aabe-4cc7-847e-b999fd2e0463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb04ec-f67c-4684-8065-f42753a4a151",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294f12b-e2b7-4821-ba17-e59d1b74331d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ebc470-0917-48d5-bda0-a676556dfa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c054e34-2c08-453d-9a0b-751dcc8ca525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e2fea2-df4d-4839-b96b-d59eaa4b67b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770045df-722a-4aa4-8dbf-8de7fcae40f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffa2431-c632-4dff-bae6-b94510d735df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef8c069-3657-4c2d-9559-5d9c490fae06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f62aa36-f81a-4cf6-abc8-d45d63697be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9928c06d-afc3-4b18-842e-6b35fde41481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acebd001-a425-4cfc-a535-4c35a1821a88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffa2224-6bea-456e-9d44-a1956cf33773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70c417f-7f16-4e08-98b3-06a1f8f87784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654f1e89-a04a-46db-90bf-c6efdf110663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38838a6-7b16-4171-88fd-38646bf6b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17184fa3-5ade-4659-9427-9ae7d94da3ea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28252090-d9db-4bc4-bd17-27bbf05abcc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a172794-08b3-4b40-92ba-2c489feb5007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a73ae7-0fa0-4f2e-9ba6-d093c229ccae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdcdfdf-cec6-4e06-8108-e5da9142ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a0ee76-1546-4277-9d30-e17937f50089",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae820c5c-4e9d-41b4-848c-5c8c04a57902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901864bf-a044-4c5f-b588-49f2aa443310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56c624a-ec3f-4d45-9acc-99c4052aa1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ed859f-77d7-44bd-8594-93ca59a33803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38790a54-3dc3-4fc9-8d1f-e934e52584b5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fdd1e8-f6cc-48e7-a53d-76cb213d4716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6374ee-b44e-42f5-ae3d-fd9bb14a617f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24080e02-c46b-44fa-ac9b-6b7f28e25ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c86ab6-0f32-49d1-9aa6-1df70741d2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa9148-e86e-4a5b-8e43-4558cf259c9c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef9d674-7171-4a4e-8f37-178214492741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e500766-6ba7-4c40-9cac-c34fbabc5d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3887ca37-61e0-49ae-8691-1d8805e67617",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0169d498-1a1d-4f7d-8950-479557849471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6978cd2e-023e-4233-8623-6f0121ea049a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d60a588-6c33-4e11-812d-9f4deca28e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c91dca-84ea-4aa5-ac2b-4262944f6516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6273bcdf-e13c-4394-ac4a-a8aec7e8c460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bb307e-9f6b-43ac-824a-f06bbc978ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e26ce-0a85-4169-bb90-7af86cc700e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f2acc0-d9cb-4428-9172-ef6d2987b625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c936ad9-17a8-4787-8450-6333a5feba04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb7dfb-548d-41c1-b9e2-b9939910e82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35e50bc-26c7-4359-83c8-a5b933ff3cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e262d-a764-4697-870a-7d45f0f5af62",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c88f6a-5407-4a6a-9a02-1d7b35c5a86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7012c3c-b580-46dc-95c6-3d9831a3243e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4b30ac-f003-4ba2-b7bc-046d4e0cefc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbafb1c0-93be-4816-be7f-804990ae1160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77af2fba-d1a1-4a06-87c1-4000da27b258",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0891196-2c14-4f08-b47f-87348e606791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77858c0a-26e7-4e98-9279-88fe69e95737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de525ecb-9e7d-4cd3-9a42-6dd3aebcde2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebbec6c-4e1e-4fd3-b515-9d13db85f659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e6607d-30fa-4ff7-8fd6-69833a7197b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202c157b-ab38-4b15-81d5-1b4c1fb0272a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98750b52-79dc-4125-bf84-92aa083656e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b525352-794c-407f-ae40-46b49e802841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605fbb3d-f13b-47c9-a1a7-bb4697d9ffaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7817c3-a9d4-4ffc-a6f4-d585df556989",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c75d9f-4488-494f-93d7-c77163718678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc8af31-74a5-44f6-a62f-b29e3ee02293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a27237-e3c1-4c2c-82f8-6c2c650d798a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7ccc65-e272-4d1b-83fd-4c3a8bd1271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64ffc44-dd02-4bf4-a0af-b8a26b91d7be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faf1bfd-db00-4663-9e5f-48f4fbe58cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f04277-5a98-4784-9cab-a44001e082e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca17e5bf-3b99-47d2-ab87-e4a6b3416aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7f4c35-ee08-426e-b131-240018f25881"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd3ab2ba-edd7-40e3-9ee1-08ac0fbd5059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67328128-a03b-4d6a-9ee5-aa42672f3158"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8372c058-a797-4569-b078-38430acb7792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "749b073a-10e9-4d88-9d27-73c583bbc114"
                    }
                  }
                ]
              },
              {
                "id": "5049203f-ca6d-497a-9ca9-6d199fb51e6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf24836f-13ea-4ec5-b37f-c3b861eb03dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b156d2f4-2946-4800-a1a3-3160eece508c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "71d9ab87-d99b-47f1-8f52-b53e41571e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1901ca-12c0-4daf-8e61-cfacaf7758d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2968fc24-d5d4-4e15-a198-e31c3b73d3e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03b80b57-aaf0-4572-b2dd-1f7b4b8d858a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74f34297-a777-45d0-88d3-39453490223b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f084dcb-24f8-475d-bc9a-d94ec359de3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1955d3d-255a-49ed-8a2c-e927a0daf8c1"
                    }
                  }
                ]
              },
              {
                "id": "b8948ef4-2ef7-45cc-8dc0-e3c1d95808c2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "45a9e568-4d2e-4b45-bd41-24ae851374b2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b268fb29-9bb9-481e-89a3-75d2cbd9b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "43985a88-4e54-4ce8-ada6-40707d2ad464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e37915-729f-4643-b371-6d8d36b00b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548aa5ef-5947-4a31-a8cd-92af6dd70715"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a8cf70a6-cb68-45b4-80b1-cb87486add03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd1df5ca-b179-48fe-a0f5-14d81af082d2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e809cd38-9135-45e5-8b9d-9b7948aefb47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0afa1d60-96fb-4e7f-bc02-e3c41b91820f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f462edb3-203e-4c25-9fe8-628d405a30c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43bbf814-0443-4122-95bd-1b7e92642531"
                    }
                  }
                ]
              },
              {
                "id": "818229ec-5c7b-4f5d-99a7-57934f567b8e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f280fc28-72ac-4d3d-afff-0c5567c67212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a79a36fb-322f-49df-a5f6-0640a3c994fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6faa1775-618c-43f1-9e82-5ae0d67a0944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9169c607-a42e-4519-ac63-1e91b615719e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6653b70b-af13-47b1-8167-ea322b22108c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "205f333e-9850-46f9-98d8-b3b653347052"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "720cd9bd-ceac-4ffb-9d04-12f6ce4c7855",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99fe34ad-a2c9-4e76-9955-593edd02756e"
            }
          }
        ]
      },
      {
        "id": "467c2ad4-0c55-4334-b015-ec0095b7e0c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5d7dc3ae-e8c8-4a04-97f1-702814137b3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c0c51fb-1757-4b6d-ac3c-9a7b060d0a84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47e72dea-ab89-4479-862f-31acd3771a3d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5f1c6b-e38a-4b16-8b3d-a9937a199b7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8ee89cf-deb8-41fd-b199-e22bebd43923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a2c5a-e215-4814-b029-3a424e572b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67c3dd0d-4346-45f0-97a2-da54bb2b8673"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29b5896b-aca9-413b-ba8e-708eff5f0152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb3ca9ee-e513-4c7c-b547-43b62de4a8af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f0ec39d-1a50-42db-a0aa-f6e8d35f8daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f39f949-979d-4fc1-873c-60ddab40e096"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c34031dc-4aa1-4333-a89a-03f11c203f67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7aeb14fa-cedd-4612-9fca-af0ccbd924db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdc133ac-343f-4470-bf26-0d2f06b76df2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "335b714d-ef4f-4dfc-9eea-111bc7866e0e"
            }
          }
        ]
      },
      {
        "id": "de6675c1-061a-4cb6-9a01-b6794b248c1f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "abde3a83-d110-42c0-908b-f4855125c9dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dab9b67e-b46a-443f-b5b0-d2e2aa68dea0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cde0adfb-6f35-4143-b46b-b4eecd796de4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d428ea-c7b6-4684-b7df-d60067202fd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b70fe6-168f-497e-89bc-172fa70fb952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8848a27-94a7-40cc-9dc8-9f22193f6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "387f484c-91fb-407f-8a3c-461ad31538b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0542692-20d3-46ff-8ea1-bc5ffefadec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d544e5ef-2f76-4ab3-9afe-f7146edc7a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f1ed671-7d40-4da6-9a2c-3e08e4e688dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "604ab554-330a-426c-b9df-2bd842b8e2bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b63e4250-abd5-4a0e-bf9a-c3e167b7db32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "906d7850-df1b-4828-a4c7-7b07429d9fec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5d9768f-7d9d-449c-80fa-7f675d59d540",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d6af9cb-07ca-4981-9664-5051396afa30"
            }
          }
        ]
      },
      {
        "id": "a8b4a517-5d14-4aa6-9f03-719cb2a36b5d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1bd204b-083d-4140-9666-1f327a12e2f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61111e6c-e8b5-4de3-bfc5-2bb8e80660bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d5a951-bdc4-4f4e-a74f-c9cfc74e4baa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a3d478-f0ba-4027-b5b6-b3aef5975d69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e9bff42-700e-4a8c-bb55-1b2dadea66c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f6e3db-5b5f-462a-b73d-6a286cf198be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aff7dae-ef63-4a83-93d7-a3f96576e00f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31caa7b2-39d2-46f3-a514-286a6151cbb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "200e27cb-bad5-4bd9-b684-b7fb7ffabbaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a713249-cac0-4fde-b685-9a27ac1d9383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c38acb62-d38d-4d5a-9813-37dd48ef0bd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55e7c6a2-65cd-455d-b9f3-e8c9fff36a96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ceda5288-1ab2-4ab5-a7ea-150b405493dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b220f7f9-dfb0-4896-aff6-718eb693f46d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c663a91-204b-440d-8cf5-0b66a959e981"
            }
          }
        ]
      },
      {
        "id": "cb538e34-5160-48ab-b9cc-980399ebe487",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4676a00d-af69-450b-86b3-a01dc2c6b417",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34ad6a86-64f9-4c0c-80c9-8be392416364",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d98b678d-2497-4acf-86bf-1e2c0bc745d2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f70901e0-43aa-46a3-bd8a-5728463cbf51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2b91473-231d-4a8e-80ab-a4a13cda8137",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 413.7676056338029,
      "responseMin": 7,
      "responseMax": 11343,
      "responseSd": 1415.4567926674235,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697502845817,
      "completed": 1697502977739
    },
    "executions": [
      {
        "id": "9b169d2b-fa48-4406-8efe-c2710474849b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "74c58d55-c043-4623-b439-8b4d43cc766a",
          "httpRequestId": "f448dccb-45e1-4c4e-93ca-7e7f7137f425"
        },
        "item": {
          "id": "9b169d2b-fa48-4406-8efe-c2710474849b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ac390510-5bbe-4974-813d-f40cad7d9401",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "eb6002b0-49ba-4af3-9189-4895b15d8461",
        "cursor": {
          "ref": "f1b64406-02ab-412f-8cf8-e40b19e66463",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "02164e03-ec07-49a0-9407-d29eee584d5a"
        },
        "item": {
          "id": "eb6002b0-49ba-4af3-9189-4895b15d8461",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f88ede02-66e3-4064-949e-133857c8839a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "934b948b-ec40-49c9-a9f0-e6bf61ba9c29",
        "cursor": {
          "ref": "ba7ea073-455f-4a14-b497-a22344d73160",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b05be43-78c8-4d43-97b5-1bbe1c0d9771"
        },
        "item": {
          "id": "934b948b-ec40-49c9-a9f0-e6bf61ba9c29",
          "name": "did_json"
        },
        "response": {
          "id": "41f65ef4-b3b7-4f38-b35b-9894a33f0a2d",
          "status": "OK",
          "code": 200,
          "responseTime": 1829,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9b80d-91bd-4965-b318-5a488247f234",
        "cursor": {
          "ref": "cddd7810-6779-4914-9133-b60340bbe56e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ace25eb-1756-47ab-9527-a8f66c6ba26e"
        },
        "item": {
          "id": "00d9b80d-91bd-4965-b318-5a488247f234",
          "name": "did:invalid"
        },
        "response": {
          "id": "6158a7fe-9106-4e80-9536-3d26f038dd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9b80d-91bd-4965-b318-5a488247f234",
        "cursor": {
          "ref": "cddd7810-6779-4914-9133-b60340bbe56e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ace25eb-1756-47ab-9527-a8f66c6ba26e"
        },
        "item": {
          "id": "00d9b80d-91bd-4965-b318-5a488247f234",
          "name": "did:invalid"
        },
        "response": {
          "id": "6158a7fe-9106-4e80-9536-3d26f038dd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8984024c-38ed-4adc-863c-3b63c3057d6d",
        "cursor": {
          "ref": "09aa5f5e-fc60-4a09-ba8f-30004d405006",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4511710-27c6-4558-bd4b-f40a57f8afaf"
        },
        "item": {
          "id": "8984024c-38ed-4adc-863c-3b63c3057d6d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fc59752f-d40f-4be0-8d7c-d59302e47dbd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 352,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466cea7-381f-4c09-b5bf-3096ada18011",
        "cursor": {
          "ref": "19d1fcb2-d6fc-421e-842a-12b0ca1ab674",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "421990f9-994b-4754-ae6f-7f5d5a75f18f"
        },
        "item": {
          "id": "a466cea7-381f-4c09-b5bf-3096ada18011",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2d972c1f-ea0b-42c5-aa92-9812426c83dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 306,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7074e25-cf58-4e0a-8cb4-ebe236939245",
        "cursor": {
          "ref": "3d44c295-02ad-4393-a188-1c8ba9eb0984",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c14e5b6f-ffcc-4ec5-b75d-6661d1fb614b"
        },
        "item": {
          "id": "c7074e25-cf58-4e0a-8cb4-ebe236939245",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3302b629-edeb-4934-a959-1b41485276c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600faa76-7ba9-4e13-9735-c48757ea88c4",
        "cursor": {
          "ref": "b2a66390-edec-462a-90dc-1558c67d7020",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "666ffe7f-1401-4c03-a362-fc308314a31f"
        },
        "item": {
          "id": "600faa76-7ba9-4e13-9735-c48757ea88c4",
          "name": "identifiers"
        },
        "response": {
          "id": "8d8c3327-8071-4779-8dcc-9a428d93d1e5",
          "status": "OK",
          "code": 200,
          "responseTime": 1759,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b57133b-373f-4379-97e5-f739a3477d64",
        "cursor": {
          "ref": "5ecef379-7468-4a3b-9de4-163049169899",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0c1772aa-ffc6-4d54-89e8-609ce7114935"
        },
        "item": {
          "id": "6b57133b-373f-4379-97e5-f739a3477d64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d34c085c-2166-4900-b62c-693d3e794561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e67643b-9bb7-468f-8aa4-873abf59e726",
        "cursor": {
          "ref": "3e908612-fa23-4e3c-8179-822475a0ab57",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "10176536-147b-4a74-9ce0-3e398c267c1f"
        },
        "item": {
          "id": "9e67643b-9bb7-468f-8aa4-873abf59e726",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "50e29e23-7ea4-4298-b52e-f6bd401afe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c39e5a-2f69-4c28-9bce-0df6ad142ff2",
        "cursor": {
          "ref": "7ab5a5bd-0502-457d-9cfd-8aaf27cdbb77",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bec4e8ff-3807-44c9-abac-0f31c6fe6122"
        },
        "item": {
          "id": "a4c39e5a-2f69-4c28-9bce-0df6ad142ff2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "76dd3b4b-d226-4214-a907-c27f449bcb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c48fb14-85ec-4704-b729-1e8898e111e2",
        "cursor": {
          "ref": "ce7974ac-c357-4a50-b9f5-9dad6aef5c39",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d8e59074-3c2c-429d-947a-3b5b59e8d38f"
        },
        "item": {
          "id": "4c48fb14-85ec-4704-b729-1e8898e111e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b1236df-2466-4e4c-a00e-d3773e5d0380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de1b19-0e32-4278-857e-7fca9d6f7d9b",
        "cursor": {
          "ref": "eca91ce9-8c5a-430f-849c-8043c14deb13",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48981fba-f039-4ea7-b73b-3bf90934ecd1"
        },
        "item": {
          "id": "e3de1b19-0e32-4278-857e-7fca9d6f7d9b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "620cef48-81a1-4221-8a0a-7527a148dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3f4704-1a0f-40b3-b358-d6865dc97586",
        "cursor": {
          "ref": "78d84827-9f26-41a5-8c6b-e1200c83b80a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5cef8a80-662c-4915-8a7f-38a62e72a656"
        },
        "item": {
          "id": "6b3f4704-1a0f-40b3-b358-d6865dc97586",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "696df869-89ac-4d3a-9640-c87a40df48a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ccbda6-9359-4530-b61d-b46bb26a8cac",
        "cursor": {
          "ref": "2955fd01-86cf-4231-b57f-a1bf8ab41e0e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "36cc0044-d8c3-4d3a-b709-d050668bdde8"
        },
        "item": {
          "id": "d0ccbda6-9359-4530-b61d-b46bb26a8cac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "54b47e6c-075d-4d7c-b8e6-18a9b8c7f6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f96bac-5c7a-4ebe-b656-d7deca579676",
        "cursor": {
          "ref": "2aa6d5ee-0a03-4629-999e-706870788709",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4a428e56-9ecf-4860-871e-6ed6219536c5"
        },
        "item": {
          "id": "f0f96bac-5c7a-4ebe-b656-d7deca579676",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a7bc6e6-32f5-47e1-9638-5f0f6836737c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8491270-d579-4efb-bceb-51f248a16579",
        "cursor": {
          "ref": "f6c61815-9c06-48e5-a5f2-1cb4343dd38e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "640a8afc-ebd3-44dd-840d-5a889ff8baec"
        },
        "item": {
          "id": "c8491270-d579-4efb-bceb-51f248a16579",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ce9902d-b05f-4b22-9c5a-ad25ab6a71d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b50f46-f1e9-49ef-8841-dbb3795f380f",
        "cursor": {
          "ref": "df95cddf-5835-4da5-9722-27d2dbcba223",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ba92dcdc-9d6d-4965-818f-bae82e59a143"
        },
        "item": {
          "id": "a8b50f46-f1e9-49ef-8841-dbb3795f380f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ddf1e7a-894e-4bad-9c19-73404b01328d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06daa55f-d8e5-4d94-947f-4b87ae4b7d23",
        "cursor": {
          "ref": "1c7f6fa0-bdd4-4bcd-83d2-9536690a2845",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a6a9505-1479-44c1-8ce5-d9a0c4ce4d63"
        },
        "item": {
          "id": "06daa55f-d8e5-4d94-947f-4b87ae4b7d23",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e17cecec-a071-4e55-9fbc-5dd83b0537ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86bff22-f1b3-432f-b824-4829c72fc32a",
        "cursor": {
          "ref": "eb0e3f7e-66d6-4cb6-8c67-78b95ed4fc25",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2fb0ee14-971f-4e16-88ba-6f8f98e6d67f"
        },
        "item": {
          "id": "f86bff22-f1b3-432f-b824-4829c72fc32a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5876de5b-598a-422a-b7fb-b6994ff80332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1e2c88-5857-4b4c-ae50-3787b5d344a4",
        "cursor": {
          "ref": "9aaa419f-2575-4852-ac81-74a92501697c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f5e83986-9c43-43d5-aa94-c3a204653b8c"
        },
        "item": {
          "id": "cf1e2c88-5857-4b4c-ae50-3787b5d344a4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2e444b63-28fc-44df-942a-d443aee7b504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eeee4a-5497-44e7-be30-dd9bfa553405",
        "cursor": {
          "ref": "966d99c1-cbad-456b-8763-e5a6aa7cc02c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "152dcbf2-798f-4b42-9e0c-fd69aca4cd62"
        },
        "item": {
          "id": "28eeee4a-5497-44e7-be30-dd9bfa553405",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "742ec56f-49f1-487f-9823-f9bbcf4bbdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04a731e-f3e7-4fad-8fb2-b9d1f74e0488",
        "cursor": {
          "ref": "183b4bc6-48fc-46af-ab2f-c3b9189eaeea",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b4d0ce5d-41e8-40c0-b41e-35dad6d492a1"
        },
        "item": {
          "id": "c04a731e-f3e7-4fad-8fb2-b9d1f74e0488",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c347f28c-06b5-4919-bcec-a81166adc2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d94bae-6bbd-47e1-926c-396722895fa2",
        "cursor": {
          "ref": "0b89b9ec-99a8-4c0f-b032-fe1c9bcb15ac",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "beab570f-b9e3-4633-9018-bd677b867647"
        },
        "item": {
          "id": "d2d94bae-6bbd-47e1-926c-396722895fa2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fe88e03b-a280-475b-bccc-2a9a48952943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d34c57-1950-4124-9cbe-92dc805e5c02",
        "cursor": {
          "ref": "e90c58c5-8536-4884-9edc-845f64f06998",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f80ebaac-bd58-4fbf-a619-cefa1493ba81"
        },
        "item": {
          "id": "87d34c57-1950-4124-9cbe-92dc805e5c02",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e005110-80fb-420c-a0da-c897e211b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd4afdd-ac70-4f8c-bb69-58223eb9c256",
        "cursor": {
          "ref": "5ffddd8d-209c-4d32-9e4a-d03c21593a3b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e45a1be3-541e-4abf-bfb6-dc55b809f268"
        },
        "item": {
          "id": "fcd4afdd-ac70-4f8c-bb69-58223eb9c256",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c3ce248-5624-478f-901e-e94a3546b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400e7dd9-943f-45a1-a477-7302bad31be6",
        "cursor": {
          "ref": "260cc354-ff29-4c7c-bd4b-c63b3069f5f9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d49a54df-709b-4980-abd9-fcafd0cd6139"
        },
        "item": {
          "id": "400e7dd9-943f-45a1-a477-7302bad31be6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c55b982b-26fe-4c6d-ae1c-ceed0b0b3c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beea65a6-81ce-414e-a843-589b22cfa254",
        "cursor": {
          "ref": "5e57055c-5c4f-44d3-a36d-08efd4fe8b17",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ab054c57-573c-4afb-a4ea-d28c55c23be4"
        },
        "item": {
          "id": "beea65a6-81ce-414e-a843-589b22cfa254",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "af855cb5-2059-466e-94cf-d60b3f5bbe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ecb076-fa25-4d55-827b-5be40f936514",
        "cursor": {
          "ref": "560e0ce0-a761-4ccd-9157-82e3096bad82",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d73cec68-84a5-47d7-bb7a-4de2bb95ebfa"
        },
        "item": {
          "id": "20ecb076-fa25-4d55-827b-5be40f936514",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "809bbf8b-553f-44f3-b4bd-7fba200d1cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56d3d07-0f51-4888-b821-23af26a7f840",
        "cursor": {
          "ref": "8254c583-6b2c-4164-a371-f40ccd7a41e2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3fc11c9b-f99c-41ed-a11e-82faba698fa3"
        },
        "item": {
          "id": "c56d3d07-0f51-4888-b821-23af26a7f840",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "821a0d73-57cc-4d2d-bb96-89e8bec4cac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e930b8-2314-4c16-9663-785765586b08",
        "cursor": {
          "ref": "aa8e0477-90c4-4070-9437-23e39266ca71",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "515ec409-c899-4b73-81e0-3266cb89f111"
        },
        "item": {
          "id": "12e930b8-2314-4c16-9663-785765586b08",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5eabf931-3b80-40b2-b86c-cb1e9070573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340b6f14-caec-4fdf-93a6-4dd6a2c959a5",
        "cursor": {
          "ref": "ddf3539a-2f82-4e2c-ac07-5469a79f2969",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "64b99caf-d1e5-4c99-9ab7-c34b5aada7a3"
        },
        "item": {
          "id": "340b6f14-caec-4fdf-93a6-4dd6a2c959a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be8f6d6b-1651-430c-aae0-7fe7104a9c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795408c-6b24-4c39-af7a-b18fdb8b85de",
        "cursor": {
          "ref": "4afa6862-be79-423b-aa7e-385d259bc86b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d302d63f-197c-433f-8e98-3a5d283d429e"
        },
        "item": {
          "id": "0795408c-6b24-4c39-af7a-b18fdb8b85de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "99578347-baac-4a7c-abf6-bc8686b2c105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf265aaa-df2a-42e3-bd60-8739a6c36b09",
        "cursor": {
          "ref": "9e8ab1b6-960d-4015-89bc-5107441252f6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "adbe186b-6d2e-42c9-bd86-ecbac156538e"
        },
        "item": {
          "id": "bf265aaa-df2a-42e3-bd60-8739a6c36b09",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b577311-ef9d-4bc1-8b01-77ad4f62fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff701fd2-c5ea-4f13-acef-40586054f361",
        "cursor": {
          "ref": "c4028778-70c9-4b23-b416-ecf9a869d162",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7edeba0f-609e-4059-88b5-3a5847dfa02a"
        },
        "item": {
          "id": "ff701fd2-c5ea-4f13-acef-40586054f361",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a12531a4-f343-41fc-a863-014103762dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d0d37-38bc-4be1-8de8-4e82260d21d7",
        "cursor": {
          "ref": "be6ac933-fb48-4fd1-ba82-3cbfcba3c9a2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4d2309df-6026-4000-8f60-53005a59e4b3"
        },
        "item": {
          "id": "278d0d37-38bc-4be1-8de8-4e82260d21d7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4f1ee0d-ca84-41a7-a3e8-7dc90a63bfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c51c95-8446-44f2-85be-290ac9d66822",
        "cursor": {
          "ref": "af5b14cc-67cf-41f1-a762-fc9a461aabcb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1929efd4-9558-4ebf-a3f1-56acf71084e3"
        },
        "item": {
          "id": "21c51c95-8446-44f2-85be-290ac9d66822",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "998f49e7-ed33-4e02-a1e1-4541f88e7908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8247b12e-60dc-47b5-b950-5a49123e9f17",
        "cursor": {
          "ref": "d4ebc173-cb6b-43d1-b1de-b2c1cf36c9b7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "843cd592-cdec-4f5e-ba15-fdbfbd62b6cf"
        },
        "item": {
          "id": "8247b12e-60dc-47b5-b950-5a49123e9f17",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "271c9bd7-5a25-491d-86b6-e70ea5f29854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c253a7-32ab-41d7-91c8-018fa713723a",
        "cursor": {
          "ref": "ff4aa966-24b6-40f2-87fb-1e6718cee844",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6783370b-3346-43c9-9711-0afdbd92b09d"
        },
        "item": {
          "id": "79c253a7-32ab-41d7-91c8-018fa713723a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "518e6663-91b2-4e7e-b192-85b60dd17c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42c5112-a5f2-4a32-93d3-c6f2d0b29430",
        "cursor": {
          "ref": "ec9f53fc-86aa-405d-a352-fd0b803f73e9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10657eae-762a-4b62-9473-fc7c9177708a"
        },
        "item": {
          "id": "a42c5112-a5f2-4a32-93d3-c6f2d0b29430",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8928fee2-aada-470d-acac-7a19fa910da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de313434-f979-4d67-9013-adbbbb335753",
        "cursor": {
          "ref": "c800cd89-c9c7-48da-b317-d5ee5a263425",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "16fafea1-0eee-413c-9d9c-56553c4f0bba"
        },
        "item": {
          "id": "de313434-f979-4d67-9013-adbbbb335753",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "55068640-9d97-45a8-aa2c-650f79bf1f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d82e6-b3e8-4420-8d51-4e7059a90be6",
        "cursor": {
          "ref": "e8ac6904-161e-4413-ad7e-54c690e6ea04",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7d8e915e-dd7e-42c1-b1f9-48afb0631453"
        },
        "item": {
          "id": "027d82e6-b3e8-4420-8d51-4e7059a90be6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b468e3b4-b70e-4a2a-88ad-66e5a0ee6920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18567dc5-234a-4ddf-9091-019671880a8a",
        "cursor": {
          "ref": "39ade5d6-56e1-4a29-97d4-50cc7a061c7c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3a886f9-790f-4964-bc34-ebbb90a05bb0"
        },
        "item": {
          "id": "18567dc5-234a-4ddf-9091-019671880a8a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "de758be9-72df-4703-aebb-59ba84bfadfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91cba9c-1e25-4650-859c-b10571533ddf",
        "cursor": {
          "ref": "c1925448-bc41-42bd-b09d-c5ffd68c7214",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "16873580-2487-4125-94ca-202f805d7651"
        },
        "item": {
          "id": "b91cba9c-1e25-4650-859c-b10571533ddf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bcc89121-8e9f-4dc5-b5eb-0459cd0b6183",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2478,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc4806-bf53-4735-bd73-d6f6a25055b1",
        "cursor": {
          "ref": "c51891f9-0519-41eb-a427-dbcf74db36f7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c82b1032-f2de-4b15-828e-f97fc7e2bd1f"
        },
        "item": {
          "id": "9bfc4806-bf53-4735-bd73-d6f6a25055b1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d8521416-80df-4669-86d5-1ef1a444e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3957fb85-0dbb-4cd6-a6bc-d8b90080af4c",
        "cursor": {
          "ref": "0d8ed3f9-92c7-4e1d-8dd0-90f4f21d76db",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "78807d44-b22f-4388-b6c1-bc5016fdf867"
        },
        "item": {
          "id": "3957fb85-0dbb-4cd6-a6bc-d8b90080af4c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ed4064d4-0ad1-4422-b49f-835c21e5d738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff4004e-1c89-4602-a295-a17c6634e19f",
        "cursor": {
          "ref": "0c24516e-304a-4309-b084-a893a5b5df94",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b66049b-259d-4e55-88f8-5cce57fca4ad"
        },
        "item": {
          "id": "6ff4004e-1c89-4602-a295-a17c6634e19f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ecdebb96-5399-4ec1-849e-c5264f046db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44182da3-9827-43e2-94a8-04ecef9acb7c",
        "cursor": {
          "ref": "4f4b2bbf-1d50-4fba-ba12-eff49a8a32f8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "58b940f2-f5dd-4eef-abc9-8925816937cf"
        },
        "item": {
          "id": "44182da3-9827-43e2-94a8-04ecef9acb7c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d961a2f3-1459-4202-87a6-df83ba0bdec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce933928-b5bc-4545-a05b-0f329652f507",
        "cursor": {
          "ref": "5021c755-ab41-4643-83a7-f140fc8095da",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ca3f261a-5255-42e7-b096-b26fe61faa94"
        },
        "item": {
          "id": "ce933928-b5bc-4545-a05b-0f329652f507",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18f22cbd-505b-4e03-a656-8c08a9587891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972dede8-8854-4195-abe3-395371d98464",
        "cursor": {
          "ref": "8d89ebbb-cd14-4b92-87eb-b50cb7bd6d02",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f8bbd0df-02ab-4417-8f37-9b22d95f6c25"
        },
        "item": {
          "id": "972dede8-8854-4195-abe3-395371d98464",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e777fe1-6afe-4050-9e9c-b07c15112e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3079b36-9140-4e11-9f0b-3269fb96b9bf",
        "cursor": {
          "ref": "000a1bf8-2365-42f6-875c-71f6d4fb609a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7124c37e-fe7e-49d6-ab48-3f0f45884279"
        },
        "item": {
          "id": "d3079b36-9140-4e11-9f0b-3269fb96b9bf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "580f6111-ef2c-450b-8ee2-74529f48a13c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2409,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e8aac-4885-4c85-811d-f88b0a2eb958",
        "cursor": {
          "ref": "64e75825-63f4-4239-82c2-9c7dfaddb22a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a955359b-150a-48d5-875c-65890245cc11"
        },
        "item": {
          "id": "f17e8aac-4885-4c85-811d-f88b0a2eb958",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0a2c602d-e5e3-41dd-b1dc-9ce37cc14fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476ae96a-b886-4e32-b08f-7fa77b111885",
        "cursor": {
          "ref": "25d0e786-ce75-434e-810f-9a1e9f099c59",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d6a65bb5-eaf6-4a74-8b37-95a0e01dece1"
        },
        "item": {
          "id": "476ae96a-b886-4e32-b08f-7fa77b111885",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "039e1820-ada2-4a83-a3fe-32964b0cb9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa26e22-ecde-44cc-b366-d024345e8e99",
        "cursor": {
          "ref": "ba36cbee-6dce-4550-909d-d62362499a91",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ac42cb32-074d-413c-8a6e-09e16696cfb9"
        },
        "item": {
          "id": "8aa26e22-ecde-44cc-b366-d024345e8e99",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "41921547-675c-4c79-9f07-57d66b90fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c41bf-8c09-49da-a280-fa4e0f85d7be",
        "cursor": {
          "ref": "f5656da8-d6ec-44a8-9379-49239ac36b7a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8a3b632-7de2-41a3-8c9c-00f00387f1fd"
        },
        "item": {
          "id": "4e2c41bf-8c09-49da-a280-fa4e0f85d7be",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "de8e8276-5126-419b-a7ac-a4173f87d70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a68fce-a0d4-47ab-8a54-639698922f9f",
        "cursor": {
          "ref": "f5444dac-2513-433c-a4f2-f0a39970d7e1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6d6999a5-67c2-48bd-9d95-38134aa42fdd"
        },
        "item": {
          "id": "b6a68fce-a0d4-47ab-8a54-639698922f9f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6906f1a1-b954-4d0d-b6d5-432caa42ea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06651031-58af-42b3-bd9f-4e8ada6504ff",
        "cursor": {
          "ref": "4f703ecb-e529-434a-a7ed-1b824460ce94",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2a428cbc-f5da-4580-929c-5b5887af2988"
        },
        "item": {
          "id": "06651031-58af-42b3-bd9f-4e8ada6504ff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ebb3ab3b-a8d3-4dc3-a876-ad9f7290b351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5718338-57eb-448f-9287-7ce1292ee105",
        "cursor": {
          "ref": "7def822e-2fc2-4162-ae5d-05c44afb42b3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de1a7426-2aad-491f-a33e-7d5ae0cc937c"
        },
        "item": {
          "id": "a5718338-57eb-448f-9287-7ce1292ee105",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "642ba195-2e25-4f93-ab05-0b014f2af36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fbc38a-6c48-4103-bf5c-4649a639a15e",
        "cursor": {
          "ref": "b839f1b7-cd8a-48e8-a6fe-564bc9d332e1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "31dc0e2c-4fd7-42f3-b06f-708f67e28b12"
        },
        "item": {
          "id": "d1fbc38a-6c48-4103-bf5c-4649a639a15e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4ab2f6c-cebc-4859-b451-c204dc7c23eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3c2b74-bf2f-41ec-94b5-5250b7a63899",
        "cursor": {
          "ref": "55149db9-7d7e-40fa-a2d3-713bcc7bf29e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f7ed7d10-75c9-4a36-aaa5-4de7b6b216d4"
        },
        "item": {
          "id": "8f3c2b74-bf2f-41ec-94b5-5250b7a63899",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "750acaf1-ce40-4756-8793-f38f0a70204e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675bdc80-bcb5-4c23-8c09-0a8c0345f411",
        "cursor": {
          "ref": "f693c988-c32a-49f2-b3c5-69fab55e5b32",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4764a254-a1e2-4fa3-8343-5d06bc035264"
        },
        "item": {
          "id": "675bdc80-bcb5-4c23-8c09-0a8c0345f411",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c69d22b9-4b5a-4467-916f-77207f5c385c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a86dc0-578b-4b6d-a09b-65b21d38f0cf",
        "cursor": {
          "ref": "e6d9a458-8b59-4c0d-87d1-1f68461babca",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "55eaeb76-5a97-41d0-b65a-126848b23293"
        },
        "item": {
          "id": "92a86dc0-578b-4b6d-a09b-65b21d38f0cf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fccf6992-3332-4327-8604-9ef091ec5426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74917bca-0b7f-47dd-bd63-1e7efc954c7e",
        "cursor": {
          "ref": "c2de9f3d-4c8f-41dc-a0ec-cbe0d9b7ea18",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "67476b77-71e8-4b8e-9bae-43b195914458"
        },
        "item": {
          "id": "74917bca-0b7f-47dd-bd63-1e7efc954c7e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0a76646a-9d16-4802-a6ef-9fb2eae25b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385e1cd1-90ca-486c-a837-b30391da8262",
        "cursor": {
          "ref": "e5a307ea-9f29-4566-be81-90c5d16cc520",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66a0e485-db6f-4f3e-9f60-7cf96c3d1e10"
        },
        "item": {
          "id": "385e1cd1-90ca-486c-a837-b30391da8262",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5421f82a-7957-4ca4-ba5a-2388f564382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e652306f-35b8-4def-84f6-bd0608d7a7c0",
        "cursor": {
          "ref": "48378c7a-8dcf-4650-a271-723add8b52a2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0750cefb-acce-40aa-9fe5-58ea7e30401c"
        },
        "item": {
          "id": "e652306f-35b8-4def-84f6-bd0608d7a7c0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "899044a4-2a40-4a6a-a256-a571a73761dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be866cd-ca79-49e8-a4cc-8287c3c6b663",
        "cursor": {
          "ref": "74e52b33-3a17-431b-86b4-f95a6bbc67ca",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "979ce01f-3eff-4b7a-9a66-8343aa74c960"
        },
        "item": {
          "id": "0be866cd-ca79-49e8-a4cc-8287c3c6b663",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6cf48dde-7000-42c1-a1f9-8cccba8076b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd209922-4ace-4f59-ab29-4e1ae0d86e1d",
        "cursor": {
          "ref": "6b9689c5-d25d-44f8-a060-86a3df28c24b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c3bcbd1-f921-4e2f-a4fc-f9cf140e6072"
        },
        "item": {
          "id": "fd209922-4ace-4f59-ab29-4e1ae0d86e1d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "98481b3e-15e3-40fd-85d8-69c94591317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5524c9c0-6027-4845-a89a-f22db9365a2f",
        "cursor": {
          "ref": "501678ab-20dc-4947-b198-9b93bf85c3c9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "811ace06-c7ea-426c-816a-a89d9be52239"
        },
        "item": {
          "id": "5524c9c0-6027-4845-a89a-f22db9365a2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eb4c307e-5f49-4a12-b026-7a10c1afc7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15bd21-9bcc-4d03-b68e-426867d82837",
        "cursor": {
          "ref": "af83033b-cea4-4653-a201-90059b1c7207",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a6241793-5075-433a-b2d1-e273886d2535"
        },
        "item": {
          "id": "6a15bd21-9bcc-4d03-b68e-426867d82837",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7d3d3fb4-4bb2-45cc-ad22-707e082b6c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c1cf22-ad4b-4742-8057-d252a43812b1",
        "cursor": {
          "ref": "2ada45a9-c3be-4a9f-a8cc-96b7349e344e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c67c1772-c898-42ab-82b9-ea5ef2f817be"
        },
        "item": {
          "id": "a3c1cf22-ad4b-4742-8057-d252a43812b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8012a167-67c1-4e66-8811-aa936404bce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59d110d-bbe3-42e1-a332-2e718f720ae2",
        "cursor": {
          "ref": "bf2cb521-eae7-4698-92d0-9388c3b5ecd4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b1e93588-a9bc-4f44-a7bf-c4d533f6c970"
        },
        "item": {
          "id": "c59d110d-bbe3-42e1-a332-2e718f720ae2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6b6ddced-6675-45e9-80df-fd669f2194e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4466530e-46fa-4929-922c-cf221f8d9904",
        "cursor": {
          "ref": "2d80a0f6-7e61-4db8-b249-04c0cdfc596b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e16ecfff-7be2-466a-bc4d-c2c497aa95d5"
        },
        "item": {
          "id": "4466530e-46fa-4929-922c-cf221f8d9904",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e857247-0681-4a1d-a1ff-64b779f24174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488108c5-32a9-4c25-aa1c-ce1005e6d984",
        "cursor": {
          "ref": "44f56c11-20c3-4f46-be91-8e4589a2e6b7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b75849ef-67bc-4172-9775-c3561c81a6fe"
        },
        "item": {
          "id": "488108c5-32a9-4c25-aa1c-ce1005e6d984",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "67f74feb-c295-402b-bfda-d9b1e7f7f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdf68f7-dd4c-4da3-8482-090780935c51",
        "cursor": {
          "ref": "d179cb0c-8448-41bf-ae14-48b5035e32de",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6bdf4f5a-16df-4c57-9b8a-2337e6486b88"
        },
        "item": {
          "id": "efdf68f7-dd4c-4da3-8482-090780935c51",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9fedeec6-ee1b-45a4-8b6a-81047b3827bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3015caa9-57d2-4013-9429-c0a34a1bbd45",
        "cursor": {
          "ref": "a244b7e9-284a-4b2e-95f5-75f4f52eb269",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "695afaaa-828a-47ca-a82a-fa7c074ecda2"
        },
        "item": {
          "id": "3015caa9-57d2-4013-9429-c0a34a1bbd45",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b4cf9c9-58da-4408-b337-20600a6720ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32672849-fe67-4ddd-b2da-aafc927dbc71",
        "cursor": {
          "ref": "99aa6345-fcb8-4c5a-8d13-66736392f08e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0a6988b5-70f5-4c11-92c0-f12064cbcf95"
        },
        "item": {
          "id": "32672849-fe67-4ddd-b2da-aafc927dbc71",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "292889cb-de4c-43d8-924f-bdc3c5966daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54be299-b915-4cf0-9cf2-6423abb9ec59",
        "cursor": {
          "ref": "9f083dc7-fa9b-4519-8d80-f0919867cd6f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e27a066f-adea-4d1d-8306-cf57298d9d73"
        },
        "item": {
          "id": "e54be299-b915-4cf0-9cf2-6423abb9ec59",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90f1e4ef-283e-410e-80ff-c20976ccb52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e926ca-7e5a-487c-b497-2dd1125dbf80",
        "cursor": {
          "ref": "eb94defc-1d7d-4db7-86f9-b31bcce92346",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a69d3bc-6fc5-4d5b-9705-5363cb60e51e"
        },
        "item": {
          "id": "92e926ca-7e5a-487c-b497-2dd1125dbf80",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "86149b09-ea60-4ebf-b035-ae4cce691cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43972525-dfa5-48a8-895c-5d4af2c8e861",
        "cursor": {
          "ref": "40b7fcf7-171a-40ff-89af-fbb2b79c4a23",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ed59547c-475c-4770-9aca-27cf881c1820"
        },
        "item": {
          "id": "43972525-dfa5-48a8-895c-5d4af2c8e861",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d9d651f2-352a-4daa-a864-0f1e02b1eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52409ac-1e07-455c-b11e-03d79e9ec9e2",
        "cursor": {
          "ref": "fab2d086-7172-4a1f-a5e2-11a508bafc8f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4de720c3-3fce-4009-ac76-b214f5833806"
        },
        "item": {
          "id": "a52409ac-1e07-455c-b11e-03d79e9ec9e2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1cb51ed8-baef-4c37-9a2c-bd2e6474ebfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249b7de6-6f1e-404e-b984-bc30e350f88a",
        "cursor": {
          "ref": "295fec58-7999-4030-98c1-4961e0004485",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a43730e1-2c7c-4e16-9709-d79ff2357099"
        },
        "item": {
          "id": "249b7de6-6f1e-404e-b984-bc30e350f88a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "98b12792-dc2a-48d3-af20-9966ccb75c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cc83ae-d018-4224-9657-8a8010ec8602",
        "cursor": {
          "ref": "d5ee507b-5dbb-411a-b498-dcb78af7fa46",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2828ab15-84fa-4ae0-b7c7-ee047997b6a4"
        },
        "item": {
          "id": "73cc83ae-d018-4224-9657-8a8010ec8602",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c05de04-3cd3-456b-9d33-1ad1e75a9d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841cb90c-2cb6-4b2c-a80b-c2343c727761",
        "cursor": {
          "ref": "b0333b57-bea8-488b-8ad5-14bd98802c12",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d668798e-061f-49f6-8299-71dbe576ba57"
        },
        "item": {
          "id": "841cb90c-2cb6-4b2c-a80b-c2343c727761",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2a62ae53-5ede-4b1b-b6da-b7255f995bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b065823-a128-4194-8dc0-8b9b9706e536",
        "cursor": {
          "ref": "f19cb0fb-72fb-4306-a60b-2bdcfbb40c3b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "584fc4d0-b1ae-46b5-85d8-3147166329ba"
        },
        "item": {
          "id": "5b065823-a128-4194-8dc0-8b9b9706e536",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f676d0b5-4cb7-47eb-80ae-398548d2f88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee5ea40-6058-4c2a-b62f-5b2378ff7e51",
        "cursor": {
          "ref": "f36cc12b-b34e-4073-baa7-adbe162a0eac",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b2c9cc08-e304-4c05-80c4-00f81ced5df4"
        },
        "item": {
          "id": "3ee5ea40-6058-4c2a-b62f-5b2378ff7e51",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "69f8cad5-4965-4ffd-bc2a-b1c8dff31572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f8b5f-99d7-4e78-989d-9ca647876359",
        "cursor": {
          "ref": "51f1a327-a2aa-4db8-b458-328e85b0f0b1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6a4f7413-aa88-46d3-9e38-162f337f6f95"
        },
        "item": {
          "id": "475f8b5f-99d7-4e78-989d-9ca647876359",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "80c51f29-ee37-4404-b21e-ebac09cec4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88828b28-b8db-444f-8a93-7914e0bd16b1",
        "cursor": {
          "ref": "9c5ca35a-80b9-46c5-b668-1f09224a7e49",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "afdbeade-4818-41fa-90d4-d753ce793e62"
        },
        "item": {
          "id": "88828b28-b8db-444f-8a93-7914e0bd16b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04fc0e93-8b22-406a-b0ac-d9ddc1aa2462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd201d8-f1da-45c2-800b-e8bade7d314c",
        "cursor": {
          "ref": "626588b0-1003-4c3a-a213-3c49bd4d205b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "30bb6e76-7ce1-45f0-9999-47276e6452c3"
        },
        "item": {
          "id": "6cd201d8-f1da-45c2-800b-e8bade7d314c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d2ca020d-5565-45d4-92d7-16953e11071d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c0c7a2-7729-462f-84d0-42cdabc2b627",
        "cursor": {
          "ref": "f10951da-bfec-4af4-98fd-c04cf68aed70",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "48e53a51-63ea-4867-8cb9-613e418042f0"
        },
        "item": {
          "id": "20c0c7a2-7729-462f-84d0-42cdabc2b627",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c786091e-6aa4-42a3-a865-775f99dac3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09e3f4e-adfa-4f23-a69a-d7e61d9db45d",
        "cursor": {
          "ref": "36d6d8b5-5559-4a62-8e44-79c6327186db",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "885d35ae-c43f-4b0a-847d-81fe7f7111b4"
        },
        "item": {
          "id": "e09e3f4e-adfa-4f23-a69a-d7e61d9db45d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b59b0ff-01d1-4ea7-973c-8352a7504085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6685d9e-b1ed-4de7-9c9e-90b1c3c163c9",
        "cursor": {
          "ref": "9e5ad092-a32f-4192-bf49-3846c0e5266b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d861028-d7cd-4cb6-ad33-fa65150bfb8c"
        },
        "item": {
          "id": "f6685d9e-b1ed-4de7-9c9e-90b1c3c163c9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50489e67-5076-4fbd-b5b5-330370437dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d90965-7772-4bed-b60d-4f61559592ff",
        "cursor": {
          "ref": "9dc8b85c-f313-49db-bb07-22fd31e62d89",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bf9fd345-e8f5-42a3-a40d-d87cfb4d9324"
        },
        "item": {
          "id": "72d90965-7772-4bed-b60d-4f61559592ff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e69c1a20-9d7e-4eed-bf29-6eccab4804a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567129b4-2171-46ef-827c-0ebcf6fb3746",
        "cursor": {
          "ref": "5aee7070-f23b-453a-9c67-e305da99acfb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d09d7ca2-b2e8-4b56-8fcf-18063b0463d3"
        },
        "item": {
          "id": "567129b4-2171-46ef-827c-0ebcf6fb3746",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe0c5a96-8f0c-46ec-aaf7-8d746dfd4f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540f50d8-55a7-4d83-826b-97e37adc5fe6",
        "cursor": {
          "ref": "9b90bf92-56f1-4783-bcb2-67ac080a6178",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c6f9bd29-203c-4b64-b666-cbf4adc3ae01"
        },
        "item": {
          "id": "540f50d8-55a7-4d83-826b-97e37adc5fe6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "858fd69e-b424-403d-aa8a-b411773e0f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b89abc-097a-4cca-9772-2f93be6355df",
        "cursor": {
          "ref": "954575bf-af6f-47d2-89d5-d62a382203fd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "68d5eb57-cd53-4ec6-b887-9ada3ccb4d68"
        },
        "item": {
          "id": "13b89abc-097a-4cca-9772-2f93be6355df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c3da0fe0-ca30-491f-95b3-11adf30f7cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b24f169-0ac9-4a5e-a786-4426085c656c",
        "cursor": {
          "ref": "41d25469-ce92-4cad-910c-bb42398cb625",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "568228b0-1370-40b9-a9c2-90e6ed345d70"
        },
        "item": {
          "id": "3b24f169-0ac9-4a5e-a786-4426085c656c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6158c098-1d5e-48b2-a11e-92e51210b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ee61a-b64e-40d0-bfef-950634413411",
        "cursor": {
          "ref": "b67b59a8-2218-403e-a70e-49cb1b5cc430",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fe8b2f2f-6680-494d-a8d4-129da0341306"
        },
        "item": {
          "id": "2c3ee61a-b64e-40d0-bfef-950634413411",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "410d3e30-e31e-49b8-a402-20297b236c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eac6e9-0a8f-4861-8a40-5d3d305b7c3c",
        "cursor": {
          "ref": "216b2cad-c866-4013-ace1-d58ace2e8ee6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d0e2f8b5-54f9-46c4-a2a8-184986d9c89a"
        },
        "item": {
          "id": "77eac6e9-0a8f-4861-8a40-5d3d305b7c3c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b1d5501-8ea9-42a3-b3e0-700aa075dfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba1074d-492f-4c1e-92c8-1ee1d6761d4c",
        "cursor": {
          "ref": "b03efda6-e932-478f-86e0-71c66eb7e0ca",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6fa48d5b-be79-4ee5-8bd3-7a43a3c56cfa"
        },
        "item": {
          "id": "fba1074d-492f-4c1e-92c8-1ee1d6761d4c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "25f5a7be-b52e-4a5a-abdb-6abbdc1f179a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768e7fac-794e-4fed-93af-5fed70181be3",
        "cursor": {
          "ref": "cb67b57e-6e71-4fc4-956d-3b0b478cc773",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9498479-d99d-4832-95c0-6d20f96e071b"
        },
        "item": {
          "id": "768e7fac-794e-4fed-93af-5fed70181be3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9388de47-718e-462b-8f27-0a2d718cffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aafcf4-0ebc-492d-9a28-2beebbc11543",
        "cursor": {
          "ref": "b7b260b9-a1dd-41e0-bf10-18f6b152f689",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7994081d-a253-4123-b70f-7827f5af6665"
        },
        "item": {
          "id": "c5aafcf4-0ebc-492d-9a28-2beebbc11543",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0d950850-cdbc-4955-9122-4ca5d1694365",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94758363-1345-431c-8fb1-455c787b9a11",
        "cursor": {
          "ref": "5babc9a6-ec2d-42c4-af9e-897916d03736",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "25084a8e-8025-4e14-9fa6-7925d038bfd1"
        },
        "item": {
          "id": "94758363-1345-431c-8fb1-455c787b9a11",
          "name": "credentials_issue"
        },
        "response": {
          "id": "30f0dd8f-1421-41bb-b92e-0304236291fd",
          "status": "Created",
          "code": 201,
          "responseTime": 11343,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93141f5-6a04-4b6f-bf61-e21e37d7ab97",
        "cursor": {
          "ref": "e38f37bc-48b6-4397-bdd4-8cb5633b5b5d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "818f4a3d-c042-489e-a2bc-270f1d00daeb"
        },
        "item": {
          "id": "a93141f5-6a04-4b6f-bf61-e21e37d7ab97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0308b7e7-6d07-49a8-8b15-dc3bc62f092f",
          "status": "Created",
          "code": 201,
          "responseTime": 10526,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "267215ba-7820-497d-a32b-22f6803b6c7d",
        "cursor": {
          "ref": "13794fec-1cdd-4a77-9b55-49aef798c921",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6b858743-bbfd-4c79-8525-50b8f98f1755"
        },
        "item": {
          "id": "267215ba-7820-497d-a32b-22f6803b6c7d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "63e0101a-5adc-4bdd-b67e-b3e40e4e4641",
          "status": "Created",
          "code": 201,
          "responseTime": 10573,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefedf1a-07c5-4c61-a23a-e25030f40e60",
        "cursor": {
          "ref": "1093ac10-9a15-45cf-a881-a34415c76472",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c671d6d4-f345-4ac2-9690-e85473b2dd2f"
        },
        "item": {
          "id": "cefedf1a-07c5-4c61-a23a-e25030f40e60",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "15bdf7e5-7f6b-4d58-afed-9b052bc24555",
          "status": "Created",
          "code": 201,
          "responseTime": 10353,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd3d96b-a5b8-47e6-bf6f-4f98d53480dc",
        "cursor": {
          "ref": "fe5626e6-035d-481d-94a6-648601541d05",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "12b940ae-7f53-48b3-8b02-f4280512c0b0"
        },
        "item": {
          "id": "3fd3d96b-a5b8-47e6-bf6f-4f98d53480dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9f8e540c-29b6-4c8f-8bbb-af8a8f69c96b",
          "status": "Created",
          "code": 201,
          "responseTime": 10985,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d49e92-20f2-40da-a1bb-5e8dcbcd49f0",
        "cursor": {
          "ref": "60006492-49e8-44d8-b9ee-b2679a226c2e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6e7dfbb7-8ad7-435a-bf00-828f4391a1fe"
        },
        "item": {
          "id": "24d49e92-20f2-40da-a1bb-5e8dcbcd49f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "da6dcba0-b9e7-4c52-b241-416ef6634823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d1085b7a-9a01-491f-a8d2-d81c8f36d69e",
        "cursor": {
          "ref": "0d782ef7-115c-44ca-8ba4-f7278879b14a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7deaf1a8-07b9-46b1-b97e-d15e36965e9f"
        },
        "item": {
          "id": "d1085b7a-9a01-491f-a8d2-d81c8f36d69e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc595c44-3ddb-4d0f-bcaa-f1193f512c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44324a8-190b-4f06-9741-9c2c44b41582",
        "cursor": {
          "ref": "58f8ecff-2c14-4bb2-81e8-26a39c56ee75",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "99ca17bb-f741-4ec9-a751-19f6f4d43209"
        },
        "item": {
          "id": "b44324a8-190b-4f06-9741-9c2c44b41582",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "442f31b7-beb7-42be-bb1c-7cf02ecfc183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e166de1-9f87-4b6d-850b-2ee9d5888f7c",
        "cursor": {
          "ref": "e610656a-6cf7-45c9-bd33-cc542a5321c0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "79724c94-d34a-41e2-8086-aca2fa427207"
        },
        "item": {
          "id": "8e166de1-9f87-4b6d-850b-2ee9d5888f7c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c3b944d2-722c-42f0-9894-d84564d14ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cb4403-6841-49e9-bf8f-ac173fef60cd",
        "cursor": {
          "ref": "a34efbf5-d5da-4a13-b861-e4cce561a160",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "419e1e66-41ab-44c8-aff5-bafc5d5ac9fd"
        },
        "item": {
          "id": "00cb4403-6841-49e9-bf8f-ac173fef60cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "646e35d7-96ec-49c9-b160-1f24cdbe4ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacca456-a8bc-4aea-b6d4-f72e2b4cdd8a",
        "cursor": {
          "ref": "a4eb0ab3-6749-417c-868f-4e8c1dc7e3d5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6415de50-4108-4b6e-8b5a-9dbcba63aa53"
        },
        "item": {
          "id": "eacca456-a8bc-4aea-b6d4-f72e2b4cdd8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de2a8e50-5eb1-4fde-9406-bda8a461c9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3857ea8-0205-470d-8d9d-c7d06fb58e4a",
        "cursor": {
          "ref": "964ebc90-050e-42d0-8791-02e2f84becc3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "575d1825-cb17-4483-bfbb-f98796d8189a"
        },
        "item": {
          "id": "b3857ea8-0205-470d-8d9d-c7d06fb58e4a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b9ef064-5045-4298-873a-b1ec7877e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4879d2e0-c2db-4e3f-9ad7-a0201b2c52a3",
        "cursor": {
          "ref": "41b52ae9-0226-4498-a572-4c941e6514ec",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3981de5c-74bd-468a-bc39-ce40fffa28ee"
        },
        "item": {
          "id": "4879d2e0-c2db-4e3f-9ad7-a0201b2c52a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2fa268dd-72ff-4810-8d40-28bea9afb3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e78dc3d-69d0-4cdd-a3ba-4a581ec4c3f3",
        "cursor": {
          "ref": "29183d4c-bfee-4489-8890-9c6f5872eb85",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a1f0e77c-fd26-4663-b99a-60763c5d5fd6"
        },
        "item": {
          "id": "5e78dc3d-69d0-4cdd-a3ba-4a581ec4c3f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0da8ab8-1db5-437d-9c96-dea235b3825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b626c8d-6977-4cd6-8377-9c358f9742c2",
        "cursor": {
          "ref": "3e2a079b-baf5-4ab7-9912-f4307aac51d9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7cb95754-0fef-48a8-81b4-b5c28b272ffb"
        },
        "item": {
          "id": "6b626c8d-6977-4cd6-8377-9c358f9742c2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a0f64c76-6644-4709-bad6-9e9ff1c90635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d46ff14-1fb0-4902-b836-731da148ec81",
        "cursor": {
          "ref": "778e34fc-b7fd-4bb4-871f-4379bf9a80e5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "69854728-a33d-45e4-a7d3-46bae0059a67"
        },
        "item": {
          "id": "3d46ff14-1fb0-4902-b836-731da148ec81",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41a44775-d057-442c-9ded-47e4ca2976fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c4014f-794d-4468-a72d-cc070a2eda29",
        "cursor": {
          "ref": "e2ec2ccd-45cf-4081-8e75-955d9f4b5eb6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8f8a5f60-209d-4c1e-8d51-b7c7de83eae7"
        },
        "item": {
          "id": "60c4014f-794d-4468-a72d-cc070a2eda29",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30606137-193e-4679-b2fb-9bba72cea5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e40610-2b94-42aa-9ed0-d35ad91f3f50",
        "cursor": {
          "ref": "464eb4b9-cb65-4648-8df6-aef556afd44c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28d22a54-12b6-4033-be9b-267a49886c41"
        },
        "item": {
          "id": "a9e40610-2b94-42aa-9ed0-d35ad91f3f50",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6fd3e33e-92d9-40d9-b049-145c58567f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc6f0a1-c607-4568-b22f-abc925fd3787",
        "cursor": {
          "ref": "ffcfa64d-a4a4-4f37-8da7-3bf824a05c87",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b3c7a596-afeb-476e-ab85-4c43f118acf3"
        },
        "item": {
          "id": "6bc6f0a1-c607-4568-b22f-abc925fd3787",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "003b8bd7-865a-4d52-85a2-aec0320b259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a114d191-4bbf-49f0-8850-e60103de8c98",
        "cursor": {
          "ref": "49125444-1c17-44c2-990a-e98c3c329686",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1edb5548-b8cd-41e2-80ad-a2db8fd12517"
        },
        "item": {
          "id": "a114d191-4bbf-49f0-8850-e60103de8c98",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b9c52296-523a-4000-aa93-bc8dcbb04cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fa5472-3fee-4baf-be77-30642d48caac",
        "cursor": {
          "ref": "d38b66a9-1ada-4146-820c-35c8c5c22fcd",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "73956d53-4c0c-45b9-8bb2-daad9a55307e"
        },
        "item": {
          "id": "f9fa5472-3fee-4baf-be77-30642d48caac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9b2f1c9c-d4a1-4aa9-8217-cb36864961e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e0dd6b-3c11-4285-8efa-790beec9c02a",
        "cursor": {
          "ref": "2298a171-26f3-463c-9e37-68930d4c0899",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a35ca738-5b79-4b0d-b984-fc7d0eb27694"
        },
        "item": {
          "id": "12e0dd6b-3c11-4285-8efa-790beec9c02a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ebc38139-45db-40eb-b2cc-f3f6b64907fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957618b9-9de8-4ee4-bf2d-8e722c2530fa",
        "cursor": {
          "ref": "a387d542-b8f9-4bc9-ab5e-785bd9dcde84",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd77233c-1d4d-4ce6-b493-f09bcd1b2cce"
        },
        "item": {
          "id": "957618b9-9de8-4ee4-bf2d-8e722c2530fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c00f151-a9c8-4f5c-9f88-c9c646b4f26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2948889-e20b-4ac1-8fa3-1163844a17e6",
        "cursor": {
          "ref": "b58a1e1d-9dd5-47cf-a771-3a544cf7beaf",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "093b0cd6-8d62-43df-9671-8737f78209e4"
        },
        "item": {
          "id": "c2948889-e20b-4ac1-8fa3-1163844a17e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3abc34e7-e4cf-4806-80bb-0015d8a7b8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8563a-4d95-4de1-9ac7-0fdbaa547d9c",
        "cursor": {
          "ref": "fd0829bf-b834-49c4-9d3f-fb0562b4e302",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e48f263-0463-437a-87f5-97ef1dee1a55"
        },
        "item": {
          "id": "dab8563a-4d95-4de1-9ac7-0fdbaa547d9c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9024fc75-ed1b-4bc9-9b52-632476f9e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6975885b-34c2-4fd8-8255-77c73ec1642d",
        "cursor": {
          "ref": "2493e9ef-0066-4279-b870-ae1277274792",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "db67591e-d59c-429c-a682-e78f3b3a27df"
        },
        "item": {
          "id": "6975885b-34c2-4fd8-8255-77c73ec1642d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ef91da60-32a8-499b-ab25-b3c94d8f0d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801ea6fa-5842-45ff-a330-f9cfdb5fdb6a",
        "cursor": {
          "ref": "1da110ed-89a5-4497-b230-2c52949a408b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3db1fe11-d8be-478c-afda-744a8284bbd6"
        },
        "item": {
          "id": "801ea6fa-5842-45ff-a330-f9cfdb5fdb6a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "83f60dcf-0d7b-4b53-92d1-ccb2a266748f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb88158-3383-4465-9623-ea6881e8df6f",
        "cursor": {
          "ref": "7ebf1d6e-477a-4760-aaa7-7e2d61a1ea05",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ad8846d9-0def-42a6-8a08-e082dcc5a018"
        },
        "item": {
          "id": "1eb88158-3383-4465-9623-ea6881e8df6f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "783f8fc4-ec10-4015-82d9-c2127bc25fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b06c039-fe92-4902-8ea0-99be54232c06",
        "cursor": {
          "ref": "0aea2eb2-ab5c-4a1e-9585-51aa53ff7258",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "015e5ab4-2870-4489-9acc-3d88b2771445"
        },
        "item": {
          "id": "9b06c039-fe92-4902-8ea0-99be54232c06",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f8f4be6e-c1d9-45af-96ec-18eadfc1cc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b57bd6-ba3c-4bdb-b829-2e252570e5c8",
        "cursor": {
          "ref": "97df41df-06ab-4b30-bc2c-21ddbd92f897",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cbc7bebb-8b90-4bbb-bd4d-0ba44eab5d0c"
        },
        "item": {
          "id": "a6b57bd6-ba3c-4bdb-b829-2e252570e5c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dd5fe5db-9559-4be5-8a8d-99ecaa5721cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e2bc5-175e-4b11-bcc2-fdc6ceb815c3",
        "cursor": {
          "ref": "1041252d-5cfb-494d-b5c2-6cb3e1ce03ec",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "26723cee-38d1-4bd7-9900-fc51669e4c47"
        },
        "item": {
          "id": "8e5e2bc5-175e-4b11-bcc2-fdc6ceb815c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a7bb0c5b-39ef-4ef4-a939-64cfc438ba6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a95556-21e4-47c5-b20c-3aad75ffa876",
        "cursor": {
          "ref": "786af03e-23c3-4e8c-b20f-b27af3eef3c5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "39e145c5-d552-4b64-be62-b4066568c2d7"
        },
        "item": {
          "id": "c8a95556-21e4-47c5-b20c-3aad75ffa876",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce9b2de3-71d9-43a8-b211-e490ff07a1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac5094-1ecf-44ea-921a-c6380d9aaa9b",
        "cursor": {
          "ref": "b8396fe3-ccb2-45b5-97d0-8fc79b3a97e8",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de345052-3828-46d1-a49c-76ace36354d5"
        },
        "item": {
          "id": "b2ac5094-1ecf-44ea-921a-c6380d9aaa9b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8b6b7e1c-f0a8-4d57-8f53-4a9bd84a7814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c367b90b-1d66-44cd-8dbe-849fdad738be",
        "cursor": {
          "ref": "e6d75c9e-a536-4355-8ffe-1e32363e7a22",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cd810d03-b247-470f-9a9d-74f6cedb2020"
        },
        "item": {
          "id": "c367b90b-1d66-44cd-8dbe-849fdad738be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "baa0832c-55c7-4f80-b722-c6d0cfa77f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32feab62-ee05-4669-a62d-9021a1a13d6c",
        "cursor": {
          "ref": "e3bd1a7a-2ad7-4341-af05-00975036b9d1",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4ab8298a-8e23-407b-aaf7-7a27a09480fb"
        },
        "item": {
          "id": "32feab62-ee05-4669-a62d-9021a1a13d6c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e79faf80-6ceb-477e-97ae-94e16d0ec8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc65a2cb-c82a-442d-81ec-5211face2051",
        "cursor": {
          "ref": "fc95d2a5-f19f-48fc-864b-0939a1fd39cf",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f037e0db-ec47-4ca5-a90a-fa5c6b5d67a4"
        },
        "item": {
          "id": "cc65a2cb-c82a-442d-81ec-5211face2051",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9779e9c1-8b14-44fc-be46-aa659210030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e755f9dd-b068-4a80-af59-899a3a27c116",
        "cursor": {
          "ref": "979b4106-bc8e-4307-a033-96301d0e8047",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5dea6939-72a1-4a36-8e16-d9d945159205"
        },
        "item": {
          "id": "e755f9dd-b068-4a80-af59-899a3a27c116",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c05e36e-b34f-4f08-9796-0b6451e08209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3606eabf-5f27-42c3-85a3-8053ecff9c42",
        "cursor": {
          "ref": "c33f636e-e09d-4b31-b606-16698b7f4e6c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f3c9951d-4656-4b41-8a31-72fed738e665"
        },
        "item": {
          "id": "3606eabf-5f27-42c3-85a3-8053ecff9c42",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "98127ee3-662c-4a8d-9f0a-deaf506b031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7deaa3-cd1a-4927-a5b7-a75c7888e7ef",
        "cursor": {
          "ref": "db02eecf-94a2-4585-bd0f-add92fe66049",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de082312-8eca-4703-8eda-cdde2053335f"
        },
        "item": {
          "id": "0b7deaa3-cd1a-4927-a5b7-a75c7888e7ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "424b41e8-0a0b-49ec-9a91-bfac4d716fc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c762dbb-dfc5-4c2f-b4af-c6cea93906b1",
        "cursor": {
          "ref": "fb17de71-f098-425f-9f3b-3649097a392b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3cf88758-7d16-4dfd-aa99-6e4887fecf8d"
        },
        "item": {
          "id": "9c762dbb-dfc5-4c2f-b4af-c6cea93906b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "126fa982-fa4d-4f90-b9cb-163a29791973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af022c2e-bf11-4c17-b31a-f4a5fe3db4bb",
        "cursor": {
          "ref": "6f9297f6-7dd2-462b-9c35-732fcd0c28e3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6e584e2c-1b6f-4b58-8ac7-38761299643b"
        },
        "item": {
          "id": "af022c2e-bf11-4c17-b31a-f4a5fe3db4bb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b444709d-94c1-4a67-bed1-ee5c0c6a4667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04d548d-42b5-42dd-b0f7-b48a23fe09ee",
        "cursor": {
          "ref": "08a9de3c-e8f7-45f2-b6cc-51bcba827659",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5c9227e3-db10-4ea6-bea9-21af076e7cd3"
        },
        "item": {
          "id": "d04d548d-42b5-42dd-b0f7-b48a23fe09ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "890c2025-2f14-4b8e-832c-4f4012d84712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a4a07-1edc-4719-aae5-d315b8658043",
        "cursor": {
          "ref": "34f58af7-18d0-4352-8a06-fee6ee13edff",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e869e4d2-96ce-48e3-9061-03072dd164cc"
        },
        "item": {
          "id": "724a4a07-1edc-4719-aae5-d315b8658043",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce9228e9-246f-427f-90ab-090d4a479609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1387593-d2b7-4b27-94c0-3753b88ca3a5",
        "cursor": {
          "ref": "5de20135-b42a-48b6-b88e-4b1c3eb834f1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "070bcc00-ff9a-40b5-b309-6d40e04e057d"
        },
        "item": {
          "id": "f1387593-d2b7-4b27-94c0-3753b88ca3a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b465f8dd-9d3e-4635-bd6e-842811b5e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532581d0-c582-493d-8262-8bc50c457f11",
        "cursor": {
          "ref": "fc3c0923-7e0a-48f3-a89a-15fe14d5b09e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "48546a7b-c3e9-41ee-851c-2da4c4adc5a8"
        },
        "item": {
          "id": "532581d0-c582-493d-8262-8bc50c457f11",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "95b9a0a9-1a16-44bb-ab69-8d5d23428813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0a8e79-d372-4c39-bfed-a9853845ce63",
        "cursor": {
          "ref": "bad5c80f-fe9d-46c8-8ab8-d619e70ca1a3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fa931cde-96bb-4ac3-8f7a-83ba69d5791a"
        },
        "item": {
          "id": "7a0a8e79-d372-4c39-bfed-a9853845ce63",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aea05f54-fb19-42b1-b76f-6825b28c5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c196e6d7-cd32-4b9e-8697-a3008e103f76",
        "cursor": {
          "ref": "554373a7-be12-4396-a5e8-301da2614453",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "33fdfe9e-9481-4fa2-abaf-cd345bddfe1b"
        },
        "item": {
          "id": "c196e6d7-cd32-4b9e-8697-a3008e103f76",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8e6a9065-c164-41bb-9454-5ec60fab4bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292af03-a9b0-4e77-8454-99e0c124a56b",
        "cursor": {
          "ref": "1dbf4107-77a6-4859-8f7a-d53aa3edd2fd",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7bc9093f-ae92-401a-a6dd-141753253176"
        },
        "item": {
          "id": "7292af03-a9b0-4e77-8454-99e0c124a56b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a18e3ec0-7254-4510-9ca5-06b45d3186fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1620db68-bf47-4562-8e52-10d74ed54420",
        "cursor": {
          "ref": "fef23db0-dd95-47fd-bdd5-35f7d7419e20",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d4af4dca-735a-4a03-b313-40cd12ba077b"
        },
        "item": {
          "id": "1620db68-bf47-4562-8e52-10d74ed54420",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8d3208a4-6549-4765-afa6-2c944575dcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96e6bc-68cc-42a5-8861-1bea1525dde5",
        "cursor": {
          "ref": "6cfa20b5-98e4-4a56-ac3b-e2ad0aae5f2c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36c68806-7a63-4f1e-b535-29901183a29c"
        },
        "item": {
          "id": "1c96e6bc-68cc-42a5-8861-1bea1525dde5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef71c192-c454-4211-86b9-23c5f2585a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d4e428-9415-425d-82e0-2a8e3c8ee50d",
        "cursor": {
          "ref": "90b6ef45-3c8c-4aec-8944-39636608dbe5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e74d878e-4390-4c89-b3bc-686e1250cb2f"
        },
        "item": {
          "id": "68d4e428-9415-425d-82e0-2a8e3c8ee50d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "78f1ed97-1e63-4a6b-a6e7-5d222c4d5184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a568d68-55f1-4737-b53c-b6f4cdb665cc",
        "cursor": {
          "ref": "d54d9265-5304-4e83-964a-4cf91dbde24c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "178245f3-28df-41f7-a81d-ddb0632ef72b"
        },
        "item": {
          "id": "1a568d68-55f1-4737-b53c-b6f4cdb665cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71e295f6-4e6e-4e2a-88c1-48f5a30e9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd212a47-96b2-432d-963e-8d4b66900006",
        "cursor": {
          "ref": "ae4e1738-da62-4445-a562-3b22979fe8da",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c2af98fb-e5c7-4400-abaa-956914e08c72"
        },
        "item": {
          "id": "cd212a47-96b2-432d-963e-8d4b66900006",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a4e316e-474c-4442-9203-45143fc2e11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e02315-fe67-4cbb-a41c-b2a96000536c",
        "cursor": {
          "ref": "eb5570f7-31e0-4854-9f59-48ef4a01b56b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ae363c1e-5a95-4c57-a99e-ab169a8c1179"
        },
        "item": {
          "id": "d0e02315-fe67-4cbb-a41c-b2a96000536c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2b5ae9cf-c5bb-4234-92f2-a16ea20b0849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8f7115-7ad2-4ac1-96b7-e6b429469ce5",
        "cursor": {
          "ref": "1c63fcab-7dd3-4e22-a893-301a773544b7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a826c167-0d2c-4a46-a299-5bfb6d85c382"
        },
        "item": {
          "id": "7b8f7115-7ad2-4ac1-96b7-e6b429469ce5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "221bca51-78c5-4a45-a168-2efcfcc6a573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0cbfcd-a3ad-4b36-b417-8a01fe2b55bf",
        "cursor": {
          "ref": "25a168c6-f716-4d31-b49c-e125f2adeec0",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6e0477a0-f9fe-435d-a4dd-afc205783034"
        },
        "item": {
          "id": "2b0cbfcd-a3ad-4b36-b417-8a01fe2b55bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40971956-bba9-4efd-8c39-6ccf8713a446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36271199-5c4e-4757-a529-b76b85f1be28",
        "cursor": {
          "ref": "f5e10c6c-bc86-42e1-aafd-08df4cb3e20b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6aa1bc7d-eaae-4fe2-858f-d295787c8e78"
        },
        "item": {
          "id": "36271199-5c4e-4757-a529-b76b85f1be28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1594bb5f-5ed4-4088-9f3e-ff761d6d35b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a17237-2b94-4e13-91a4-f79c3280a13b",
        "cursor": {
          "ref": "bca8cb9a-5a99-4ab9-8d8b-351f37d7e63d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e2836e7-a5bb-4343-b000-abcfd08c2068"
        },
        "item": {
          "id": "99a17237-2b94-4e13-91a4-f79c3280a13b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb5b7494-7b90-4ae3-ab5f-9477bff96a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341bd861-614f-4863-8cd6-f20cb217a95f",
        "cursor": {
          "ref": "7c9817ca-3ee7-4d75-8baa-2241637a48ca",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ed4546d8-7cec-4ba2-a364-51da2752fe23"
        },
        "item": {
          "id": "341bd861-614f-4863-8cd6-f20cb217a95f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9753280f-814d-4130-b662-6cf11db91483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df743a76-4da7-43da-a6b4-c34416b62c31",
        "cursor": {
          "ref": "df02a62f-a036-46c0-90c9-74cbfe433f2f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c4e95ad4-1e93-4c4a-8094-998cb5b5310c"
        },
        "item": {
          "id": "df743a76-4da7-43da-a6b4-c34416b62c31",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04e99e66-8351-45fd-86fc-e93b3127e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866de44d-704e-4e48-aa20-0127ee90c26f",
        "cursor": {
          "ref": "81ab5697-246f-4d6a-9c1d-59daea6dffb5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8139774-42e5-4d9a-b151-5ba06d1492bb"
        },
        "item": {
          "id": "866de44d-704e-4e48-aa20-0127ee90c26f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "491cb7a9-fc27-42d4-b273-3ccce85cdf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a8b9d-cc99-41c6-92f7-7eced20d5a3f",
        "cursor": {
          "ref": "f3e6f8cb-3e74-4b81-a724-d789de066802",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "79dab290-22f9-4e3a-8a8f-16d55214fa99"
        },
        "item": {
          "id": "0b4a8b9d-cc99-41c6-92f7-7eced20d5a3f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eef35727-5b0e-4158-b974-91e66a50ba9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4bddd9-101c-4e1f-a8ec-eb9e76172924",
        "cursor": {
          "ref": "58ef3cd5-429f-415a-bb34-24fce88c8aa8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59b0382a-1893-4237-9691-bec425e13c15"
        },
        "item": {
          "id": "0d4bddd9-101c-4e1f-a8ec-eb9e76172924",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60f5d77a-83ec-4312-9847-d5a1ef4ae37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e1b8f8-9e40-4242-9cda-3d257a2ba57b",
        "cursor": {
          "ref": "9deb5abc-5988-4188-8ef3-88613639a73b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a1527853-354b-487a-b627-965959f50dab"
        },
        "item": {
          "id": "92e1b8f8-9e40-4242-9cda-3d257a2ba57b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "da45351a-de13-4d78-b939-c9410a5b1de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2303ae6-d91e-4d67-a4d6-9acd36395dce",
        "cursor": {
          "ref": "6d76814c-a11e-4f86-abab-75a21251915c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bcc34f1d-199e-42ea-bba7-21c57cf2a6e1"
        },
        "item": {
          "id": "f2303ae6-d91e-4d67-a4d6-9acd36395dce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a3496fd-cc96-4e3f-a5a2-499a9e777eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c6f2c6-9012-49aa-a3d9-e16684ea8c8a",
        "cursor": {
          "ref": "5e3af58e-a687-4ea9-bdd3-8cfdc6d8382e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "019ef906-1e56-4a85-a760-1baffc9ad831"
        },
        "item": {
          "id": "74c6f2c6-9012-49aa-a3d9-e16684ea8c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3aa14669-e37e-4bed-9727-170dd66e9c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1440d65b-3806-4412-9350-c62fd7450cf1",
        "cursor": {
          "ref": "1fa4967b-8b31-46af-98a5-5901af9456d5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5e757f06-91d5-49d3-8a27-48e224247d68"
        },
        "item": {
          "id": "1440d65b-3806-4412-9350-c62fd7450cf1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a3ad255-c2b1-42d0-8543-3a04b642bd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d963a-6c33-44d6-93dc-92a7266e978d",
        "cursor": {
          "ref": "f3f4b717-91c0-4715-bd5d-ab7982ee77fb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8bae6915-fefb-4577-9646-2c094d94564f"
        },
        "item": {
          "id": "117d963a-6c33-44d6-93dc-92a7266e978d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fefea0bf-9e51-4213-a1a9-fb482390d5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fdb1cf-f815-4da6-9469-87e4f6d2bace",
        "cursor": {
          "ref": "609e2c6e-0fb1-4240-b210-00e65cec32a1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3204ac6a-7c85-4184-ab7f-48408268d746"
        },
        "item": {
          "id": "45fdb1cf-f815-4da6-9469-87e4f6d2bace",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bfa6971c-bb38-4df2-8c20-3d732c3ab529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658678fe-e706-42cb-9abf-feb71c4f477c",
        "cursor": {
          "ref": "1ab92de4-8a4b-433a-9a57-683952106dee",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "be29f1cc-9c9f-4db1-8b5a-32d5e0da4105"
        },
        "item": {
          "id": "658678fe-e706-42cb-9abf-feb71c4f477c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8058c04d-a0e5-44de-a717-778f86a3a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3056e199-e9ff-4038-9059-81b9977c6a4d",
        "cursor": {
          "ref": "e5f18af5-08e0-42ce-993e-8bdc72d094c0",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "55856ed1-c59a-4f62-a11d-48e0271ddf95"
        },
        "item": {
          "id": "3056e199-e9ff-4038-9059-81b9977c6a4d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5fd9620d-fa44-4e4e-b3e3-38c2cdeb0fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c9e3f-58ac-4174-b5da-432ca9782fe1",
        "cursor": {
          "ref": "7c858264-0150-4cec-8da3-961a3791c005",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5fe1353e-f455-4098-9e91-7a8b7e043f48"
        },
        "item": {
          "id": "2f7c9e3f-58ac-4174-b5da-432ca9782fe1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "75b91dae-87df-40b3-bffb-7b9bc5f7bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855dea26-4dc8-4170-86b8-bac5e68f5dc1",
        "cursor": {
          "ref": "aac2e5bd-c8f4-4606-ab03-3ce81eb46143",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e34c5af7-9be2-4eef-8c35-4a58671837ea"
        },
        "item": {
          "id": "855dea26-4dc8-4170-86b8-bac5e68f5dc1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a96a84ae-ae16-4a1d-918d-5bf106e7b9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb19af5-72ad-4d43-ace2-a99d09a17a58",
        "cursor": {
          "ref": "b96bd832-a294-499f-82d9-b1c73e3dfbe4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa581ced-a619-46a6-b231-47836a5a7da6"
        },
        "item": {
          "id": "afb19af5-72ad-4d43-ace2-a99d09a17a58",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2d8128ac-dbbd-4764-afb0-9eed0ff54a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88b632d-aa06-4c96-89c7-4f018e493234",
        "cursor": {
          "ref": "8084e442-027a-436e-b0a8-14f378dd4503",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "590f25bd-b89e-4907-9930-e21d8b733b90"
        },
        "item": {
          "id": "a88b632d-aa06-4c96-89c7-4f018e493234",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "63d75ff5-0682-4b47-8807-e1af72ff782c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c77a4-6bdc-488f-8938-01d086e31fbc",
        "cursor": {
          "ref": "9e5784e3-bc17-4392-9f03-f548a982da62",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ed0f5a31-b248-4a7e-8fca-a0e4f6ba9478"
        },
        "item": {
          "id": "845c77a4-6bdc-488f-8938-01d086e31fbc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "794cc25f-bde0-4602-a726-c86605e5c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d261f0-3a45-4083-8a3b-83ad9508dea8",
        "cursor": {
          "ref": "9b042d09-df1f-4f25-94c8-6daa671ab611",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "21f35314-b5bf-4e04-98ff-5d1717354e20"
        },
        "item": {
          "id": "78d261f0-3a45-4083-8a3b-83ad9508dea8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29b5506e-5a34-488b-a9cf-a620e902b3b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e290ff3-12f6-44ab-aad9-6ea424ba2d11",
        "cursor": {
          "ref": "440f112f-dabd-4b6a-bd70-7c5669267cb2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b49257bd-7543-4079-89d4-2d0a86e35ac6"
        },
        "item": {
          "id": "8e290ff3-12f6-44ab-aad9-6ea424ba2d11",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "423cb6f4-3fab-4922-a6e3-fc6305e3f23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d196f3-9544-4b40-b885-233e6289ecd1",
        "cursor": {
          "ref": "bcdebbe4-e1d1-41f1-8c34-a154fcf1d02c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "84279397-9593-4aee-a021-6fb09ef4dbe8"
        },
        "item": {
          "id": "c1d196f3-9544-4b40-b885-233e6289ecd1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1a19a7aa-6bb1-4af1-ad39-c24f8544de69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef1221b-a33a-4a22-beee-a06a639c87c8",
        "cursor": {
          "ref": "76d4cf75-d9c0-42fa-9d79-352c6120a360",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9f29b9d2-1f3d-4597-be0c-b7575bc39be0"
        },
        "item": {
          "id": "7ef1221b-a33a-4a22-beee-a06a639c87c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99ba07cb-c0c6-4b8b-844c-d58295895d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15309816-afe0-4539-875e-61f0d3869169",
        "cursor": {
          "ref": "61c092d6-ae45-4191-af0c-76f8ebe0a981",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "036e7ae6-75e0-4610-bfbf-27328361ebf8"
        },
        "item": {
          "id": "15309816-afe0-4539-875e-61f0d3869169",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b7598ff0-3413-4b0b-b319-18f2c0ab63ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82802f3e-2b4b-4fc4-aaae-36b193420b46",
        "cursor": {
          "ref": "520eb0b6-6a0c-423d-9f40-5319f2e3b250",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "928bda29-5fc3-49ea-affe-f8f3f0aa130d"
        },
        "item": {
          "id": "82802f3e-2b4b-4fc4-aaae-36b193420b46",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19d23892-b0d0-4d5f-9de0-2b9180fe906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0535bedd-7cde-410b-b87b-b901be67c843",
        "cursor": {
          "ref": "90caf52b-8981-4aa9-a20f-a44bbb8e6f37",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb1d5953-8113-4a7c-9f51-4b6092ee421a"
        },
        "item": {
          "id": "0535bedd-7cde-410b-b87b-b901be67c843",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66eae62b-cd7e-4677-89f7-56fde3dd4315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db2c5fe-ffac-4fcb-8c69-dd7889b36090",
        "cursor": {
          "ref": "177c0856-1618-4d78-99dd-ccf407acff94",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "53d04eb9-0e00-4089-9d7f-65fac4599f7c"
        },
        "item": {
          "id": "3db2c5fe-ffac-4fcb-8c69-dd7889b36090",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0ab7677c-a8d4-4b61-82e9-6f83490354e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e131796b-cf15-4986-8808-1a555e74a3d2",
        "cursor": {
          "ref": "93450d1a-f9ee-437a-8d1f-170048c5a64d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc3aebd9-de0c-46b0-955d-e8c7be906c4b"
        },
        "item": {
          "id": "e131796b-cf15-4986-8808-1a555e74a3d2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "510784ab-7fb9-4755-a614-dd0c59cc368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67084307-29f3-45eb-a9fe-55796ad0e875",
        "cursor": {
          "ref": "295c391e-1948-4812-a06c-29322b75efa4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8fad2f5-392e-415d-9b1c-8cdc1733127d"
        },
        "item": {
          "id": "67084307-29f3-45eb-a9fe-55796ad0e875",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b46f2a74-2d3d-4ff2-9e19-94c8a4e6194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8140385-56c1-4262-a8db-5061ae43387a",
        "cursor": {
          "ref": "d54643a3-ebca-424f-b37a-23d5ecf2031a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "31d78415-5824-4ef8-96b8-610b949c12a5"
        },
        "item": {
          "id": "f8140385-56c1-4262-a8db-5061ae43387a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "04c60bc6-3b1e-4cc9-b9a0-cbb4bbf4564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06855ce-5f9e-4899-a49b-63a193ed35a5",
        "cursor": {
          "ref": "53e1586f-2672-42c8-912c-212819365bff",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cfa443e3-11f0-4910-a337-45e145564137"
        },
        "item": {
          "id": "c06855ce-5f9e-4899-a49b-63a193ed35a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "79bc4592-f2a2-4d91-addb-89f2dfc73bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4e963-b1f5-4274-83c5-6ef03b330fc0",
        "cursor": {
          "ref": "9dd13ebe-9929-46b0-8c28-9499182663af",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5a6be9d1-c4f9-4b08-b528-1c49cf307368"
        },
        "item": {
          "id": "86b4e963-b1f5-4274-83c5-6ef03b330fc0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b5033f9-d371-4144-a280-462554fa31c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9931ad-0b56-4de0-b9b6-9f1097fa995a",
        "cursor": {
          "ref": "4c23d468-c279-4e56-ae4b-fa75df346178",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "527f73a3-4038-46e6-b448-b11936eebd63"
        },
        "item": {
          "id": "dd9931ad-0b56-4de0-b9b6-9f1097fa995a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ce1a9012-456a-46b7-a1b4-094f0f671674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ec7dd-fa69-4b74-962a-728ba38c03d8",
        "cursor": {
          "ref": "cda948c9-649f-41d8-964c-68d70e4275c2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "64193887-f746-4bc3-815a-05c87526cf3c"
        },
        "item": {
          "id": "5a3ec7dd-fa69-4b74-962a-728ba38c03d8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "851b7a80-a7ae-4fbe-8549-0fc03ff1d21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9d72a1-4daa-4f0e-b91d-3fd25bdcd525",
        "cursor": {
          "ref": "7f189dfc-c73d-4d5c-ac6c-ace9e28afa5d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "677b4989-c6e0-4e58-9ec4-df7a9231556e"
        },
        "item": {
          "id": "7f9d72a1-4daa-4f0e-b91d-3fd25bdcd525",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "436e12d1-3ae4-40ac-8c90-3d2a5f64ca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959c5e5a-e70a-4a2d-bbff-26da3017a92b",
        "cursor": {
          "ref": "b31cb033-6471-47c8-9ce4-698a99349b47",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffc3132a-dd15-4b4b-b5bb-5461be05b633"
        },
        "item": {
          "id": "959c5e5a-e70a-4a2d-bbff-26da3017a92b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8ba4c026-b6cb-46d6-b0a9-70204daf04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bab0d6-b04f-4f96-9e29-f78d5ee817e0",
        "cursor": {
          "ref": "c2f9b490-d2d5-4aaf-b8af-7902e9060d16",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d2a4afd6-17de-4dcb-a988-608385f41370"
        },
        "item": {
          "id": "37bab0d6-b04f-4f96-9e29-f78d5ee817e0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "049ae5c2-3b24-4d21-a9b8-1ea7d5e56e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb58ee-718b-487e-bf68-7c19dd2fc8cb",
        "cursor": {
          "ref": "d5acc1ac-723d-477b-89e8-fbfda6c322c6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5c05deba-817d-47c5-98f0-dee7cdf23ef2"
        },
        "item": {
          "id": "63bb58ee-718b-487e-bf68-7c19dd2fc8cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5c3be039-ab74-4b0f-a1ab-8f4b923e044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40b8565-3cba-48c7-8050-0500b3f7c2ed",
        "cursor": {
          "ref": "dfa18824-9a64-45f8-9771-83df5c6005a8",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d0ccda25-3e4a-435e-abfc-49c4b7a40ca4"
        },
        "item": {
          "id": "a40b8565-3cba-48c7-8050-0500b3f7c2ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c748736e-dfae-4639-972b-d191415dbf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088bb2ff-083c-42e7-9661-fca04b988b43",
        "cursor": {
          "ref": "8ff7cda9-c704-4ed3-b28d-8684d8a767c2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "65649d83-8510-4dfe-a622-c05f805e44c2"
        },
        "item": {
          "id": "088bb2ff-083c-42e7-9661-fca04b988b43",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d34e3ed7-f097-4548-8445-e39737534570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe4489-caca-4138-9d0d-9f291efd166f",
        "cursor": {
          "ref": "3749a076-5e0b-4121-af4f-5c7ac736e30f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3dcf72ac-97a7-4dec-9f1a-cef7f2aefd0d"
        },
        "item": {
          "id": "2cbe4489-caca-4138-9d0d-9f291efd166f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3ea6e03c-8834-4548-a22b-888475224429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d7fbe6-316f-406d-8bc0-70b8e27bcca9",
        "cursor": {
          "ref": "b0f05787-19b5-421d-9b9e-d2ba073b5d8f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d1c219e8-5c3a-49ee-bb38-13bc70b6d4db"
        },
        "item": {
          "id": "75d7fbe6-316f-406d-8bc0-70b8e27bcca9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25ae617a-b476-4646-a564-ec1807f2460d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4913bd0a-29e1-465a-bf0a-0e55ce3ac725",
        "cursor": {
          "ref": "ea0969c7-0ae2-443d-8f6c-f77e32b659f0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8b78bfb8-2453-4c47-9c90-0698a6c756f3"
        },
        "item": {
          "id": "4913bd0a-29e1-465a-bf0a-0e55ce3ac725",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eea8230b-2e8d-4e80-a8a0-4059119d5cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc1a1ce-265d-4adc-9bcf-813bf69b5527",
        "cursor": {
          "ref": "a2e0970e-28a7-4410-bdf9-bf7ccad055b1",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1054caa2-a06f-4d4d-8297-c1d49c05f41d"
        },
        "item": {
          "id": "2cc1a1ce-265d-4adc-9bcf-813bf69b5527",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1e7d0619-58a0-4303-b07b-1bf272ef413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c87eb4-fa47-4380-bcf8-689296762993",
        "cursor": {
          "ref": "42dd17df-51b1-41a7-a0f2-9b04a2ab9a79",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f83aca08-736a-4cda-a992-a99c69be65d2"
        },
        "item": {
          "id": "58c87eb4-fa47-4380-bcf8-689296762993",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "479361b3-a8d3-44d1-abe6-f2c61a363b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e262df4-dc29-4f43-a3b5-f5a54efdb23d",
        "cursor": {
          "ref": "75e0fc39-5d2d-4ce4-8f60-ed8c314bb4b7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "952de409-23fb-4e1c-a575-72df9e5a170f"
        },
        "item": {
          "id": "9e262df4-dc29-4f43-a3b5-f5a54efdb23d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0c5037d-dbc4-4645-9962-21ca28b0b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab395106-25ca-43a2-b588-6fa2e9b178d0",
        "cursor": {
          "ref": "9408fe1b-a778-4c79-8ccf-05e559771faf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "afac32bd-4dd4-4dae-91bf-04b4b50f9d3e"
        },
        "item": {
          "id": "ab395106-25ca-43a2-b588-6fa2e9b178d0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5d2621f8-0379-49c0-a0e9-16cdd1ebd027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1584971a-3823-4867-8cf8-24a3c189732a",
        "cursor": {
          "ref": "34c95b3a-2806-4dd3-8a91-266b6c59edce",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b39ec44-022e-4dff-8671-9c27a4b109e0"
        },
        "item": {
          "id": "1584971a-3823-4867-8cf8-24a3c189732a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f9c527a4-ba88-46e5-9415-0e5f0d59b33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9914df8-d6ca-4a3b-8aa4-f16fdd310454",
        "cursor": {
          "ref": "61a5fd3c-3b9f-4f67-afc3-4d2861414c9d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cb5b2b76-d55c-4911-ab24-6bc85e19621a"
        },
        "item": {
          "id": "b9914df8-d6ca-4a3b-8aa4-f16fdd310454",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ee6e4b4-1c73-4951-8234-6fc4d5348ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed824105-81d8-4ed4-a2ff-e6c9a3f5e546",
        "cursor": {
          "ref": "da1225a5-9b7a-4a2f-8906-92fd94a76544",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "656dd222-5220-455f-b707-86b8afdeb602"
        },
        "item": {
          "id": "ed824105-81d8-4ed4-a2ff-e6c9a3f5e546",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cee76cdb-6e73-4dbd-ac9d-9388c2f49b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a1270-b730-427e-919f-3404b64e01fc",
        "cursor": {
          "ref": "84de121e-d6d1-49be-964e-62aae0324b43",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "831f76ac-0615-41ff-8f9e-abb48995570e"
        },
        "item": {
          "id": "772a1270-b730-427e-919f-3404b64e01fc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d7ea0ab3-fb0d-447a-894d-d5ff015a724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a1951d-bd25-483b-b892-e31c2872f863",
        "cursor": {
          "ref": "d979e38f-7408-4b1f-99bf-782b4ff08dc5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45c11408-fd7b-4c65-ae8d-2a173af1b9a4"
        },
        "item": {
          "id": "14a1951d-bd25-483b-b892-e31c2872f863",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e0479f7b-88ad-4ef1-824e-ef28fb9ef51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca4090-f423-45e1-bd73-44b8ccf27219",
        "cursor": {
          "ref": "149a83c9-4e24-4980-99ba-3a2cc42b9a12",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "485948bc-68f4-4afe-a1bc-8aac4a307b26"
        },
        "item": {
          "id": "41ca4090-f423-45e1-bd73-44b8ccf27219",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "79cda7c9-8f9b-413a-8853-65f5abe23a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8aa890-a86c-4876-9076-099bd0012b80",
        "cursor": {
          "ref": "7905a32a-55bf-4968-ba9b-84dd34069b64",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9371eec1-9526-487c-9844-748208a2527b"
        },
        "item": {
          "id": "5a8aa890-a86c-4876-9076-099bd0012b80",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9f1e0fac-84c9-47b4-9719-67885618e1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf2fa2-e629-454e-8d14-28aa8d4e696c",
        "cursor": {
          "ref": "09994796-f38b-4200-8f5a-6bbd247c04e5",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c6e027e5-a1a4-4240-b988-d2fd9f00c455"
        },
        "item": {
          "id": "18bf2fa2-e629-454e-8d14-28aa8d4e696c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ce0dbf8e-8052-4058-85b2-c0d60e5d9c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0fd6f8-2ecc-4406-8668-7205ebda97e0",
        "cursor": {
          "ref": "da5a1d47-7f7e-48ec-8f06-37c173cc4523",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "12a93b0e-6dbc-4940-8f49-b7dc6c9f3518"
        },
        "item": {
          "id": "bd0fd6f8-2ecc-4406-8668-7205ebda97e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6dd7fc56-6a29-4a96-ae0e-977222a03bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcda0c3-5abf-4eef-bd68-66ab88f25fa7",
        "cursor": {
          "ref": "3fb6aa43-234a-40ea-a1d9-8c093153a1ec",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f4f8b2bd-38f8-42c2-853a-c113316c8121"
        },
        "item": {
          "id": "4dcda0c3-5abf-4eef-bd68-66ab88f25fa7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d478cb75-9c8a-4374-9eed-bfc16c090b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0039288c-3902-468f-b400-f7674d036cc4",
        "cursor": {
          "ref": "936f7d12-00ed-4624-a51b-56156f03619b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b5b13f09-a501-4a41-97fd-0d7acbef5004"
        },
        "item": {
          "id": "0039288c-3902-468f-b400-f7674d036cc4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4252ee42-9b23-4132-8c61-49e4ee100da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b80c3ed-23e2-4f3e-8f90-14972b118ee4",
        "cursor": {
          "ref": "1965218c-bf79-4fd6-84fd-1631f682a552",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "56badf19-d1cb-4812-ac3f-dbcd0ab683db"
        },
        "item": {
          "id": "4b80c3ed-23e2-4f3e-8f90-14972b118ee4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90c130df-4938-4036-be50-1d65d5c4abf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ca770c-d641-404f-a3d7-0c077acb4b10",
        "cursor": {
          "ref": "b3af995b-30ef-4b7c-8552-a4d0657b7df5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "378a1604-0e7f-413f-940c-d067f476e2d2"
        },
        "item": {
          "id": "38ca770c-d641-404f-a3d7-0c077acb4b10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4d02f126-119e-4b79-b1d3-774427babe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea9adee-851f-4796-ad60-892458d8b73a",
        "cursor": {
          "ref": "2e97c3b2-10d5-426d-a00c-ae3ef92bbaef",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "660bf6d6-8a09-4675-843a-95386253ebe3"
        },
        "item": {
          "id": "2ea9adee-851f-4796-ad60-892458d8b73a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b8c0e79-38f2-4fb7-add5-306c5d6e6a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5fe1e3-3425-4de1-b567-e5f4a21367e2",
        "cursor": {
          "ref": "60d5633d-da04-4229-ab48-ac44e8e7c372",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "11bade27-ece8-4d27-8758-285be249ad38"
        },
        "item": {
          "id": "3a5fe1e3-3425-4de1-b567-e5f4a21367e2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a85627c5-5cea-4f73-aef4-0e41b0e0b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd16db-48a8-434b-b1ef-33909b38680f",
        "cursor": {
          "ref": "a3bbf597-5467-45dc-bddd-5e2dccfac926",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e410427-57ef-4909-aeff-10fae12eaa53"
        },
        "item": {
          "id": "63dd16db-48a8-434b-b1ef-33909b38680f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "174eddfe-85fc-4f6a-bca0-0c311c714106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e848d6-3c70-4a64-8393-1fa5342891ce",
        "cursor": {
          "ref": "14fcbe1f-480a-4e7a-b1e3-a05559c694fc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0dd2f5a0-8a46-4891-b365-14a629ebf09f"
        },
        "item": {
          "id": "92e848d6-3c70-4a64-8393-1fa5342891ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3835174-c120-4535-9b48-0d5f55ffa82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46caae45-2f6e-4d13-b133-a91a8f12b106",
        "cursor": {
          "ref": "a6a3f6b8-d419-49f4-bc22-e4a871eda8c2",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "200ab57e-3908-411a-80df-3ff2d748f1a5"
        },
        "item": {
          "id": "46caae45-2f6e-4d13-b133-a91a8f12b106",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0708fc4-28a0-422d-bd64-f33ef7411060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ee878d-f631-4b6b-890a-f1a569dc8c92",
        "cursor": {
          "ref": "1e44cf45-6f8b-4581-a459-30518b6bd4d4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "28dba9f4-804b-45ca-8992-706957f65c56"
        },
        "item": {
          "id": "02ee878d-f631-4b6b-890a-f1a569dc8c92",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "28925175-bfd7-481a-9ecc-39341953429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3e7c08-369b-4c7d-a498-f9eb7b87bd72",
        "cursor": {
          "ref": "6fb9709a-b675-43ca-86d8-f9d3ffd1c6e6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8b824faa-befd-49b5-96a0-1641517d8487"
        },
        "item": {
          "id": "fd3e7c08-369b-4c7d-a498-f9eb7b87bd72",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e4c8bec-4531-4160-9642-5b9969315c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca11d03-96f5-4fde-b824-62b18ba37c76",
        "cursor": {
          "ref": "8992b3ed-1f08-4e81-99cc-c4430ba403ad",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cdc8c81b-faac-4775-8906-03e2e7c0b8d0"
        },
        "item": {
          "id": "1ca11d03-96f5-4fde-b824-62b18ba37c76",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0b120de-21bd-450b-862b-03fccd19f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1806fd0-f84e-4852-8b9a-5de7f85613f2",
        "cursor": {
          "ref": "010d7d96-c636-40fa-a016-fc938fc78b2b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bafc3542-f71f-4690-9e4a-243fad42cae3"
        },
        "item": {
          "id": "a1806fd0-f84e-4852-8b9a-5de7f85613f2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c3463f19-8fab-4680-8947-ab31519dd6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892db30f-9435-46ca-a094-87401e68efbe",
        "cursor": {
          "ref": "32d1b19e-c5fa-44b8-aaec-43594ce1b8b5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0eabaaf-ecf6-4c71-99e0-3f2e9e45aab7"
        },
        "item": {
          "id": "892db30f-9435-46ca-a094-87401e68efbe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5ca9606e-e30d-4d6c-8064-4f9e613e5b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae105ae5-06cb-42d1-a76a-3535523c0c04",
        "cursor": {
          "ref": "c1aaf273-cfad-449c-92c0-b90a197579d0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "29453fa1-fefb-4ac2-a412-e53756bdee30"
        },
        "item": {
          "id": "ae105ae5-06cb-42d1-a76a-3535523c0c04",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b5d91a6d-0012-4de5-85f1-3378c97c20b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4702bc5-f6e1-4d60-90b8-fa7645885a16",
        "cursor": {
          "ref": "104986fb-3009-47b3-bc6f-0f7c67e71ea6",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "38d52415-38cf-4fc2-adae-c0a06ec4d0ee"
        },
        "item": {
          "id": "c4702bc5-f6e1-4d60-90b8-fa7645885a16",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36e861fd-3095-4ea9-96af-44661b2519ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b5d6b-b6c3-4d84-81ff-d5c308b9bc60",
        "cursor": {
          "ref": "b158699d-bf8a-49d2-9f93-7ba8dcea8a9e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eff337b8-f1f0-4556-8ceb-a13eee7b0bcf"
        },
        "item": {
          "id": "844b5d6b-b6c3-4d84-81ff-d5c308b9bc60",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d400283a-a4a0-4fc0-a4de-b21eafeebfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bfb616-d0bd-41b5-bae3-0e0a846e5c61",
        "cursor": {
          "ref": "76f66f24-3619-4666-8cba-ef20c8365b4e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e8db1ab1-baf5-4a8b-98db-c681180a2863"
        },
        "item": {
          "id": "45bfb616-d0bd-41b5-bae3-0e0a846e5c61",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "194669a4-cf3a-43b1-941a-a314c10f07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ade5490-6813-437a-b043-fc5cd1146690",
        "cursor": {
          "ref": "51eddc0c-36f0-4860-88b8-d9e2a44ce60d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0dc7a72c-5c4a-4c2a-9426-932e31d9210d"
        },
        "item": {
          "id": "0ade5490-6813-437a-b043-fc5cd1146690",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9868fda3-185b-469b-a54a-a7f39b69ca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969afc8a-a398-4757-a615-35d4a3929a7d",
        "cursor": {
          "ref": "1efa41ea-1b15-469b-8ed7-5544a634fbea",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6005e481-fdbd-4dc0-8209-98b7b0f99c3a"
        },
        "item": {
          "id": "969afc8a-a398-4757-a615-35d4a3929a7d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b03fae6e-2d79-43bd-968e-8bf964407773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86e6aec-6cf1-4e0a-a878-05a90f1e2e38",
        "cursor": {
          "ref": "caf6d910-9bf2-4159-8a21-d7ec05aec6b7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e8261e7c-e0ed-4ce3-8cd8-b6fefae0fb75"
        },
        "item": {
          "id": "e86e6aec-6cf1-4e0a-a878-05a90f1e2e38",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ea9a4872-4008-432a-be27-8a8ec625f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2918286-8564-4e14-8ce9-35c41332cf84",
        "cursor": {
          "ref": "85c0c1ee-39a7-4575-95ed-d92f3d4d7933",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1319af70-df3b-4900-862a-17e433e517aa"
        },
        "item": {
          "id": "f2918286-8564-4e14-8ce9-35c41332cf84",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fc88338b-3ccd-4bfe-a721-afbcaa80f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c524ae4a-0cd1-45ab-b487-98f0a1d3808e",
        "cursor": {
          "ref": "0c79c472-659f-4a68-94da-21f1afa9b730",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a449e652-9e5a-4625-8c38-6c8020dae2f1"
        },
        "item": {
          "id": "c524ae4a-0cd1-45ab-b487-98f0a1d3808e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "87956f90-3faf-469c-9930-7ba5dc0c208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f070f34-23f2-4a7a-9aa4-7cbac2f9991a",
        "cursor": {
          "ref": "8b88f748-cac6-465a-8e0a-ac27b5563a3c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8476d84c-e0d2-42c1-b007-1d65888195f5"
        },
        "item": {
          "id": "4f070f34-23f2-4a7a-9aa4-7cbac2f9991a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5b29d3b0-f89c-481a-bf6a-5f1190691b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860b3810-f619-45da-8b31-0b6094095a91",
        "cursor": {
          "ref": "b0aa9a24-3201-474f-8772-697a2d611c6e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c6d74d5b-ed41-4b5a-8372-c78171b77d69"
        },
        "item": {
          "id": "860b3810-f619-45da-8b31-0b6094095a91",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "899605c8-70dc-42a4-bf20-ca49ad7ac6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c5860-2584-4c63-8de2-8714dc62e7c8",
        "cursor": {
          "ref": "d856ebb3-0321-4882-8732-6fe531a311b8",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd277b35-eb64-4e10-a3b3-7cead476b885"
        },
        "item": {
          "id": "359c5860-2584-4c63-8de2-8714dc62e7c8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1af640a-9f70-4323-ab67-a62feebba5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8737d30-951a-40d6-a46e-741151c3c865",
        "cursor": {
          "ref": "d39d8250-5780-4c01-8f10-bafc5f70f579",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5f41fa00-1ffe-427d-a0d9-9e77e38a41c7"
        },
        "item": {
          "id": "d8737d30-951a-40d6-a46e-741151c3c865",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4873b22a-0055-4cf4-85cc-f2e96d17531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f94cf8-b015-46f8-87a1-a53a39faa2da",
        "cursor": {
          "ref": "e468eb7d-635e-4fa0-9d2d-0a2962e2e3e4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9f315b12-939d-4fa4-99cc-9ff681723dd2"
        },
        "item": {
          "id": "17f94cf8-b015-46f8-87a1-a53a39faa2da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "39cb321d-cf99-4f6c-8f0d-2f680011ee31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d0af8-f397-4e89-84d2-11147a76984a",
        "cursor": {
          "ref": "01127896-986b-4946-a465-7707cde2928e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6682a2c-4867-45db-a661-4a5b4fb6a04b"
        },
        "item": {
          "id": "504d0af8-f397-4e89-84d2-11147a76984a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1fb10043-2dd6-4cde-90bf-4303bf9013aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e984b6-c575-4af5-be85-a16b692162e7",
        "cursor": {
          "ref": "e7df51f0-6767-486f-ae85-651b12d2f20d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a7b134f0-951e-4ef0-ae00-b3a7ddcef0fa"
        },
        "item": {
          "id": "b7e984b6-c575-4af5-be85-a16b692162e7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "98d70d3c-d91d-4418-937a-de2f289b4b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f91b14-879f-4bc7-a35e-430b5515399e",
        "cursor": {
          "ref": "d276b798-82e8-4d20-a367-579244de4a48",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5c0dd91d-e47b-4237-a9a7-88d14f45838a"
        },
        "item": {
          "id": "37f91b14-879f-4bc7-a35e-430b5515399e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "15b4ddc0-dd53-4e60-9b2b-87ed9ecc34a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30035576-0418-4988-b8ac-169e6c4e2c86",
        "cursor": {
          "ref": "5e7b1e57-a569-4ddb-a8e7-f03c90b6a02c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8fad157c-2171-4288-9733-1e2f9b5d2cec"
        },
        "item": {
          "id": "30035576-0418-4988-b8ac-169e6c4e2c86",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "832525c4-2eba-4f21-8fdf-14642853102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59246b08-10b4-4415-a9af-ccadb303d0de",
        "cursor": {
          "ref": "5aa5bdbf-a68c-4207-8150-f98d5412d2d8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54c69f5e-a565-4a5c-a91d-3f096a084446"
        },
        "item": {
          "id": "59246b08-10b4-4415-a9af-ccadb303d0de",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a84e19f9-2735-4928-8f6f-48fcf430ae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac17733e-59c2-4080-9259-5e7ff9fab2a4",
        "cursor": {
          "ref": "2dfb7406-a3aa-47de-a0bc-7769befcfc99",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6531981-71d7-4447-b85c-db472c4738e2"
        },
        "item": {
          "id": "ac17733e-59c2-4080-9259-5e7ff9fab2a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49d16a8d-762c-41ee-92b9-5f6c8379fa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba3e010-2ccc-47f9-a02c-593649abb7e6",
        "cursor": {
          "ref": "163e5b9a-ea6c-44fc-9975-f4fd7d96d253",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a1f16eb3-50d0-4647-8a3b-3ce65619fb22"
        },
        "item": {
          "id": "fba3e010-2ccc-47f9-a02c-593649abb7e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "14bf3b1a-35e4-496f-8621-173d915ee2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ddf8b-398e-4c72-91eb-2ff6fb719b3c",
        "cursor": {
          "ref": "1293c784-ef26-49dc-a4df-6916f53fff6d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0c103d6d-e7e7-4960-a7a8-dd35165c6dd9"
        },
        "item": {
          "id": "ce7ddf8b-398e-4c72-91eb-2ff6fb719b3c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d8209ce6-fcf8-4ef8-8b06-de236f63c66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17cda87-bce2-4f0e-96fd-333c2b90a133",
        "cursor": {
          "ref": "ba6f0426-a9a2-4d45-bc2a-07733b92fd8e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "86928bfb-5667-41fa-b1e0-9bddfbae73d6"
        },
        "item": {
          "id": "c17cda87-bce2-4f0e-96fd-333c2b90a133",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b367ff60-04c6-417b-8adb-08d07c670bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41d17e-4009-48c5-9687-f601359fe7e4",
        "cursor": {
          "ref": "f40f8057-72e7-42ad-b9c2-e1f59e538932",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e125da34-a867-441a-bced-94cbeb3b2100"
        },
        "item": {
          "id": "5f41d17e-4009-48c5-9687-f601359fe7e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "261f731a-9cce-4cb2-9bb9-ee84a8c5f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9430a09-ead8-40c1-b55f-f04d9c601244",
        "cursor": {
          "ref": "b0b1f326-93c0-41d1-b429-addcf52b990d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4ddad451-daab-4493-a038-6e6607c42fa5"
        },
        "item": {
          "id": "c9430a09-ead8-40c1-b55f-f04d9c601244",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8198b221-e6bc-45b7-bba9-2d356cc86e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375af754-21ab-4ad7-996e-9307ee346e83",
        "cursor": {
          "ref": "15f2ee6b-3534-4b0d-88ec-1b5429c779dc",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5df5929c-9be2-4e61-acc1-09a713d097bc"
        },
        "item": {
          "id": "375af754-21ab-4ad7-996e-9307ee346e83",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eac147d6-9df7-43bf-837a-5c1909950cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2691bf1a-53fa-4f62-b5f8-438373b29e6b",
        "cursor": {
          "ref": "9d1379a8-9066-47e9-b459-9d386694697c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2bc9c6c0-0aa4-47bd-903f-664a6dba7aaf"
        },
        "item": {
          "id": "2691bf1a-53fa-4f62-b5f8-438373b29e6b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d7093895-92a3-4823-bfbb-a6b77c995b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d1856a-a665-4220-a621-e01a816c1918",
        "cursor": {
          "ref": "727193b1-8bf2-442f-9c73-008c9eaa4181",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e160eb42-c978-4abd-b1fe-116c3e6276c2"
        },
        "item": {
          "id": "70d1856a-a665-4220-a621-e01a816c1918",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7cea9332-e56f-4b6d-80e8-e534ba8a60a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abbf6b6-9127-4151-9e60-39012c352511",
        "cursor": {
          "ref": "47877b57-d041-47f8-9463-22bfcee1a028",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a87bbdfc-4058-4718-8152-6bb8397cbf12"
        },
        "item": {
          "id": "8abbf6b6-9127-4151-9e60-39012c352511",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a6bee183-785a-433b-8386-d920ebd0ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4eb1b-85a1-4363-87a9-e5ff899c88d8",
        "cursor": {
          "ref": "b383726b-8405-4069-86eb-8e37dfeced48",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "49ed3fb6-a240-4db6-83a6-3550cb05ec60"
        },
        "item": {
          "id": "bdb4eb1b-85a1-4363-87a9-e5ff899c88d8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "99c4c896-a922-41a0-970c-0291d97d290b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18411a9e-4c24-49d9-974b-c2de4c3c1021",
        "cursor": {
          "ref": "0657792b-659d-451b-98e5-3eafba995008",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bbc12065-fc49-4a96-8096-773408e31ce6"
        },
        "item": {
          "id": "18411a9e-4c24-49d9-974b-c2de4c3c1021",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c326c305-baf1-4e2d-88d2-baf2267a88ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae174815-c385-4a95-896b-32a6b12f4b32",
        "cursor": {
          "ref": "89509238-94bb-40f1-be2e-9d2d7f719167",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a17fcf73-9e04-4540-8bd3-f96af74cac83"
        },
        "item": {
          "id": "ae174815-c385-4a95-896b-32a6b12f4b32",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "671b48bc-bd10-4e2f-b450-f8722c8f63c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a60ee1-51f8-4b29-8b62-7b4a4e9667af",
        "cursor": {
          "ref": "3b4f8406-e2eb-4ac4-ac4f-b071c3d358dc",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9e34e6b4-6a29-478e-9765-d6ebcdec645a"
        },
        "item": {
          "id": "17a60ee1-51f8-4b29-8b62-7b4a4e9667af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "de34429d-3472-4c3e-973b-d58c4ac94e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb04ec-f67c-4684-8065-f42753a4a151",
        "cursor": {
          "ref": "a674db7f-24ea-4ee3-9834-b8dad1c13703",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c1ef2206-d110-4c50-b004-dfa9cd26201d"
        },
        "item": {
          "id": "96cb04ec-f67c-4684-8065-f42753a4a151",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "abf9aff7-73e8-4ee4-9d47-1adf7b126891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770045df-722a-4aa4-8dbf-8de7fcae40f2",
        "cursor": {
          "ref": "993f3197-c559-4fde-92cc-cb8959ba6659",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "da62a61b-b8fb-45c0-97d4-d7cc5e9ea564"
        },
        "item": {
          "id": "770045df-722a-4aa4-8dbf-8de7fcae40f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ad082c2b-adee-4d6d-87b4-2eac57a555c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acebd001-a425-4cfc-a535-4c35a1821a88",
        "cursor": {
          "ref": "afc855a5-af1c-451d-b9f4-46b8c354afd0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "80a43b97-a938-492a-ab4c-9a527ff1cb49"
        },
        "item": {
          "id": "acebd001-a425-4cfc-a535-4c35a1821a88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d6b27959-5eba-41d9-b81d-4a21d57f2eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17184fa3-5ade-4659-9427-9ae7d94da3ea",
        "cursor": {
          "ref": "c9574865-7a5f-4018-8249-d6c532e9789e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fbfbdde7-0d11-4247-a85b-d5c6cf6e023c"
        },
        "item": {
          "id": "17184fa3-5ade-4659-9427-9ae7d94da3ea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "479f5e89-b897-4c03-a8d6-958da9b67435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a0ee76-1546-4277-9d30-e17937f50089",
        "cursor": {
          "ref": "475a3469-4ae1-4b84-82ff-f8c9a8d5283a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "91fceb04-d440-446f-a688-86f7dc796de1"
        },
        "item": {
          "id": "a4a0ee76-1546-4277-9d30-e17937f50089",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "652009e2-d4e6-4415-bcb1-5107db305411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38790a54-3dc3-4fc9-8d1f-e934e52584b5",
        "cursor": {
          "ref": "af123e4c-60ea-40b2-a1e6-711875619fdc",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3cecc8b2-cdd2-44fd-ac33-f755c5276096"
        },
        "item": {
          "id": "38790a54-3dc3-4fc9-8d1f-e934e52584b5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb25db52-f29f-467b-8541-915b7e9892b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa9148-e86e-4a5b-8e43-4558cf259c9c",
        "cursor": {
          "ref": "8c9e17bb-71e0-4135-98ad-3afc514234fd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d4e4d0fe-fbb9-44c1-8403-aca11b0ec997"
        },
        "item": {
          "id": "39aa9148-e86e-4a5b-8e43-4558cf259c9c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7eacbdf4-7175-481b-99ab-d089293fb7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6978cd2e-023e-4233-8623-6f0121ea049a",
        "cursor": {
          "ref": "a593a7c7-1e54-4988-9d3f-cc183cd9afc5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "056b8591-763c-4447-be10-38ad6615bafb"
        },
        "item": {
          "id": "6978cd2e-023e-4233-8623-6f0121ea049a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2a1bc274-4609-4ef6-8a89-453903e6b5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e26ce-0a85-4169-bb90-7af86cc700e4",
        "cursor": {
          "ref": "44be48c3-1f19-4698-9bf6-9cf28d9e5e4b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e3a7cfa9-699b-4036-8415-1b9a236169c0"
        },
        "item": {
          "id": "5d1e26ce-0a85-4169-bb90-7af86cc700e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c39e4380-5fb5-44fe-b55c-9dfc51b91222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e262d-a764-4697-870a-7d45f0f5af62",
        "cursor": {
          "ref": "488314af-a621-4e2e-8507-9add7bfa9802",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ff13c163-12b6-49b5-94d4-002d0a9827bf"
        },
        "item": {
          "id": "587e262d-a764-4697-870a-7d45f0f5af62",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2d590078-ccf4-4232-ae2b-8f97db5b7eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77af2fba-d1a1-4a06-87c1-4000da27b258",
        "cursor": {
          "ref": "3dc9bf03-8f14-48bc-965d-d96431b16f6a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "261fc4d5-8713-42a3-8f84-5b0fbfb4cadc"
        },
        "item": {
          "id": "77af2fba-d1a1-4a06-87c1-4000da27b258",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "34b87f9f-c492-4ec4-b778-ba6365b0969b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e6607d-30fa-4ff7-8fd6-69833a7197b1",
        "cursor": {
          "ref": "8af1391c-ccd7-466f-a504-76d7d26a6c14",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "67728e71-2263-4627-b74c-4851d08deb83"
        },
        "item": {
          "id": "10e6607d-30fa-4ff7-8fd6-69833a7197b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cada5d00-b107-4ccf-a8b0-6bad3eb59a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7817c3-a9d4-4ffc-a6f4-d585df556989",
        "cursor": {
          "ref": "99b99716-0054-4454-b377-64574f200246",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c670992b-49d4-4a87-a11b-098da8707a47"
        },
        "item": {
          "id": "1b7817c3-a9d4-4ffc-a6f4-d585df556989",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3043b2b7-ae61-4de7-a19e-a7877668f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ffc44-dd02-4bf4-a0af-b8a26b91d7be",
        "cursor": {
          "ref": "6d4b5300-b23b-4f55-93c0-191cbb914b61",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a17041c6-410d-4714-8c0e-e857efb414d6"
        },
        "item": {
          "id": "c64ffc44-dd02-4bf4-a0af-b8a26b91d7be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a8ffd874-37eb-49a6-9898-344430d65e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf24836f-13ea-4ec5-b37f-c3b861eb03dd",
        "cursor": {
          "ref": "234b3524-11b1-4665-abc4-4acd1aafafd4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e5ad76cf-f812-4af8-a1d4-d6496b328e27"
        },
        "item": {
          "id": "bf24836f-13ea-4ec5-b37f-c3b861eb03dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d30d7154-b23e-4de7-aa22-1770845480c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a9e568-4d2e-4b45-bd41-24ae851374b2",
        "cursor": {
          "ref": "db29f572-6b87-49cf-a2a9-613b38e1372c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "10b5590b-6cd5-4dc8-8463-772d81936398"
        },
        "item": {
          "id": "45a9e568-4d2e-4b45-bd41-24ae851374b2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3ed1e5e3-0193-4022-a6ff-4eab0095adb7",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1df5ca-b179-48fe-a0f5-14d81af082d2",
        "cursor": {
          "ref": "efe2d2f9-7219-4415-b8b0-0a7d2ec30369",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0adce610-62f9-426f-9a61-94333e42947c"
        },
        "item": {
          "id": "cd1df5ca-b179-48fe-a0f5-14d81af082d2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "88711790-0204-4793-88e1-4b4739ee7564",
          "status": "OK",
          "code": 200,
          "responseTime": 1656,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "818229ec-5c7b-4f5d-99a7-57934f567b8e",
        "cursor": {
          "ref": "61b7aa10-0188-4b08-9e97-e7831adda0c3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "90232572-09b5-44aa-9cca-20ab8ed0faf1"
        },
        "item": {
          "id": "818229ec-5c7b-4f5d-99a7-57934f567b8e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e24a5005-5d9a-41a9-9f29-13027bc53f23",
          "status": "OK",
          "code": 200,
          "responseTime": 1651,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e72dea-ab89-4479-862f-31acd3771a3d",
        "cursor": {
          "ref": "3e9ca416-a8fb-4d7b-a52d-8501d098db01",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0bcec935-fbf1-425f-a8ba-7c7a10d64351"
        },
        "item": {
          "id": "47e72dea-ab89-4479-862f-31acd3771a3d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a07a2370-70f5-4c48-b6f6-8b2948d25722",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e72dea-ab89-4479-862f-31acd3771a3d",
        "cursor": {
          "ref": "3e9ca416-a8fb-4d7b-a52d-8501d098db01",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0bcec935-fbf1-425f-a8ba-7c7a10d64351"
        },
        "item": {
          "id": "47e72dea-ab89-4479-862f-31acd3771a3d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a07a2370-70f5-4c48-b6f6-8b2948d25722",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde0adfb-6f35-4143-b46b-b4eecd796de4",
        "cursor": {
          "ref": "756c9feb-5ccd-4016-8b09-c87eb8f72c01",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "25ed4c5f-fda7-4849-a822-08eb3c06459b"
        },
        "item": {
          "id": "cde0adfb-6f35-4143-b46b-b4eecd796de4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "02550be0-55cc-46b9-8405-88300b77ed53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5a951-bdc4-4f4e-a74f-c9cfc74e4baa",
        "cursor": {
          "ref": "b3587fe2-3401-4173-8106-f047ffbf48a9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ca1b9d8a-d407-43c7-ad64-a5ccc11c0d4c"
        },
        "item": {
          "id": "87d5a951-bdc4-4f4e-a74f-c9cfc74e4baa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b3c444f7-f42d-4c78-b94b-955fd76457ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}