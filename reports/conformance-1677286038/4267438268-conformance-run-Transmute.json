{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1811ffc5-fa8e-4451-977f-3b371f9109ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4dcb9e5e-cd96-45e2-984a-821bbdfaaf72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef0de22f-e7fb-473d-a310-0083205ff32c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59261e4b-ee1d-4e8f-b7d2-295697f8f7b9"
                }
              }
            ]
          },
          {
            "id": "a749569f-ab77-4bab-9c07-91856d2f70b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a6965e3-d1d1-487d-b604-80ec96d26069",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c2cf0ff0-c18e-4ca1-919f-b8acc63e1ce0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b9e7eebc-82fa-4b7f-a2d6-b8e9d5f5b2a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "beaeb1d2-59de-444f-86d8-9a7d9e73cfb5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5735c26b-5729-4ede-b3de-620147b142f9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dade387-c53a-44d0-ba34-09139716eba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c3f0d8b-40c4-4e4f-ac24-ebb410bdd2f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aef9b479-1685-4722-b488-2a2993df2a68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "632dfe8e-479a-4c5b-babd-8411611197d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52eacd16-5a0d-4016-ba44-1be786d524bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42266635-3b0a-4029-8aa5-3ef37e77b1e3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c08166a-47b7-4803-8d4b-48d8a55fe012",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "05b8b0e6-35a1-4d40-8687-862a5179b5cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eeff4d7-17ad-477e-b739-b4b903ddbf38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cce2f5ad-2f8f-4220-b882-d0ffdf1d0582"
            }
          }
        ]
      },
      {
        "id": "fb33a2c1-e446-47c4-9f99-7bf5b5ef3a0b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d288106b-1596-470f-837c-fd82e9c20c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd086054-33af-486f-b3a9-8c860e7216b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08517c0b-0111-432d-9f02-cbdb3dc659f0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379608ba-0671-40b9-a42f-0e9e00e83cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b33e5576-df11-4272-a0cd-9e1a7a725a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15eae15-7c57-40a6-a91f-1cbb9245ff1e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb8177-ad09-49aa-bee3-1abe6fad7b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3210450-d4f3-4fe8-94f9-510816c9b434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15479b5-5ec8-4ad4-86fd-5d4af3775e64",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb81965-d5c2-4972-92f5-eed503bc49e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b5696f3-7994-42a2-8e19-2cc90cf23cca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9f259ec-ddf2-46cf-9be5-17fe39941699",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88ad30fc-9c4c-44a8-ad11-459de4b67e7f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242902a-23e1-4206-bf34-9108f5600f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44e229b0-216a-4b06-8375-8d9bf9af5a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68104276-b584-428e-8a55-b6300082aed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f89d990-135a-47dd-8904-38ec4010740a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b819c667-2ddb-4a5d-bdd8-cd6cbec83c9c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a1269f-9cff-486f-ae91-5711f2a62598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3dc14a3-08b4-4ba2-bfde-19dc1fe2eacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486c2da7-9358-42e1-9d64-fdd6e21aa1b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "19d6b0bc-759d-446e-9401-6f2981d1fd8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd9cb1fd-ec15-4fbb-9216-e3e8a2e35cd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd979325-2dc7-4fc8-a8e9-ca42f3327fc0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba0c171-b23b-4d94-93c2-f8ab16f00a32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f6b291d-15cc-4215-8eb6-cc01c6df76d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "642cc104-3920-4107-9149-f548337591b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d9f0dbdd-553c-45ca-99ce-9cc9abfc3be2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cb217c1-e4e1-46a7-9150-7be5d918077a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27b15115-7145-4fa3-bfec-e464c13b9d13"
            }
          }
        ]
      },
      {
        "id": "baa67fae-7e55-4844-b8fa-b6715a02b205",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "517df741-d398-40e1-85c8-b35a048e7568",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ef98f44-1fc2-4213-a8ee-f6f2a27b7e2f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "42f2ffe3-61a6-4515-b8bd-8290c2261f52",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e9c536-e082-4b86-b236-e842eb9dc93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045e4b3b-3549-4049-9c15-638d51fd6940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced1830-c5e4-4c16-a0be-2a7ca9c43c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba22f537-c9a4-4773-b03f-98eb7d27f761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681a13e7-e31b-4bae-9768-b3ff1a0c78ce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd96abba-0c33-433b-b5b2-d90e4b380f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68464d8-a91d-4ac2-bc6d-00659609fb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6fd5fa-755d-40a4-be3b-e90fa6250dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45bf052-d7a5-4beb-9427-c5681ade529d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a5c85c-291a-4ada-a3b6-0247b9263b9a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5024033c-ccc0-4774-83fb-344c207cbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3254ce-2cae-423f-a2b1-d386056ca4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20722dd-d782-4b03-b3b7-9ad8b3e1173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fbeba10-635d-4057-8d5d-085a754a27a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf1e030-64bb-43ff-b662-f5290165ead4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9b492f-4db8-4782-a39d-53b5fe1d3e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359a5680-1182-47fc-b964-6602f7bfb01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2964fc7-320c-4344-985a-2ccdd213890a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff94957c-2cfb-4485-ac24-86b250c4c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec15a34d-96f1-42cb-9443-fde7668bead1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e119f-7aaa-40b8-b3c3-25c66bc6f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe4b002-9fd7-4e08-834d-1f7fd28e6f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e468a-dbc0-4947-8603-ccb9bc92d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "763f6539-4ddf-412f-8ba4-868cc81a6a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22ea64c-ec02-4dbe-a523-3dd091fa634d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3425fd8-437f-4a82-a218-5722293ad3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca5e7a4-fc79-497f-af5f-53175ebb0833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b659a8f3-cec9-4bf8-ae81-f6bf68398155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df77d01c-250f-4fae-a36d-00f8a38876bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13aa66-27fc-45a2-8247-8bcc13229549",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31366ed8-ddc0-43a9-a73d-08b45d5b2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a10d485-89ff-4d00-8c33-62384e1d5eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c02b41-be60-4335-ad71-6032be52a893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59b20708-1d51-4c28-bb7a-b338623dd469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89634bf-206b-4936-aea6-3bdd08b07917",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfbeaef-29f0-4fc8-9183-7e48ebd0d763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4c90a5-1261-4d02-b6e6-1c397fdd4569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b22abed-7133-4ab0-950e-512430badacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dab84457-8462-44de-867b-93147e749df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d013e159-71c1-4e13-bf8b-b6e39f5c0e16",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a3e333-e38b-4d22-8531-9a32280cd80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3bc5ff-b70d-4002-b6a4-d42f82a1d6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3566bb51-fd36-440b-b9af-99e0b9126276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f96e2c8-9434-4866-9262-e7284f7490ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eff6490-68fb-4c7f-bb1f-9d0e0a6d8c03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af461d66-eadb-40d6-a607-513ca1378d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30cf81b-554a-4de3-bfd4-1764d0bd2e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec80b129-9e5d-4b91-8189-c54ac59d9614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d9cc1e3-559c-4150-b502-0edf8604ec1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b396a-efff-447c-8a63-ffe59bd7160b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f837f-96c4-4e63-9a93-792a5b8c915d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cdeea4-5794-4d36-b8d6-583451ed6f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804542c2-940f-4b49-ab51-1eca932d36f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac83389-1dad-4b90-b094-c3a2e487a691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375cdaf8-1301-4801-929c-ae5559454768",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d3adf2-1e38-4d8e-b445-72ed85592f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ddbb48-e1e4-4a4b-a85e-821bae5a55c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386946f6-8c27-4aa6-88fd-bdcc7af7e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ce73993-0772-41f1-9253-0b88b4448b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e800617-a667-4648-9618-c23600787a9e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47396ec-4014-4972-8f89-3ae5e8dfa03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f08d7ba-a2d9-48b3-9508-b6518604dd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b82b301-525f-49cf-bd56-c18b4a0a411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0ab34c7-d8f1-412a-9857-4008d81cc06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114d01b-dd61-46cd-a3c4-70690dd856a7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306e566-5355-4a72-8fab-3cb9ba24f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ced462-96c5-4f0b-874f-f9c16490769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69363132-1356-4924-a964-24198973d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c58f9610-e3f0-4503-b7f2-a4f8a710f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcee9ec-50c3-4ba2-914a-ba010be83326",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a912a3-738f-411b-8496-465df4f2e9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4e8e8d-aa95-430c-aae6-10b0ef640fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7812e-8bba-4a6b-a4ac-60a144a4b1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc1c97f-c847-46ba-9789-cf2de17e204d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b16319-c74b-4a6b-8761-99ed35d86c40",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586afb95-2adf-4817-a15b-b3adc22bad0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5ea9e0-fbe5-401d-89f8-f78cc4a77145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4def660-92ec-448c-8ff4-b71f1614403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8036d40-4e1a-40b4-952f-96f7ee32cb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a729ef5b-9f9b-4c04-b2ea-fa513b15d3b0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860806ce-b55e-4c1b-b5cb-7fb21ff57089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ab3eeb-4b89-4a3d-93cb-9e271cab4e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3171bc-e52c-4dd1-b955-8ab020dcfd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "111042e8-96c5-4ec7-8898-429cb10439c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4884dd18-7b48-4f73-a6e6-aa1b5a1ff362",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3343278-9900-484b-ac5e-60ed935e8f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbea711-069c-4557-b21b-726a09d9894c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83eae4b-dfe9-4e26-bc84-22a650f813b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cc1f8f-71d8-4958-9d42-32154030dd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f381bb8-f1ef-473f-a53c-05e63b9df4b9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf41855-f7fc-48a9-9b0f-ded395ca52ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf5fcf7-4f81-42fe-ab77-1098f946b9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fde89-1cf5-4a4b-9c7f-251eee1d9000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4410533d-5824-4dba-9dfa-84dba2414789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93d3e08-935f-4592-9a9c-aa32f8bf0938",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347683d2-a7f4-4203-a0a6-428a26bb4092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05163a6f-6112-4d8c-9e91-247f7cf42a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99d4431-5a56-419a-a9e8-a47b5f881db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67b9bc2-d36a-46e8-96f3-937be3e5500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47799b0-8a51-4cc9-87d7-859fda79f54f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b192914-d86a-417b-abab-6859ce145fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e3663d-f885-4740-b5a6-2637aca3a8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f767dc-aad2-4985-8913-5f4f8f0aed64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee142831-0edf-47c9-8df2-1160500e1ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c64a3a-16a7-4558-9c6e-b89c5a2b60e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56e484-b99e-4366-9fd5-873aed1c9e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d865a95-892b-4ae9-beda-3bb4f747f2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d53654d-7105-4b1d-99a1-752e0a19790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb8b966-9b30-4636-b487-76e47d812884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d255224f-f473-448a-be1b-e8b0114a486e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d839eccf-0ef2-4547-8ab4-f464aad3e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9112c0-aa7a-46ca-992f-50360d6c14f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8262ddc7-202b-4919-b376-a71b9207950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68035c6a-4179-4759-9669-184efb348dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd30aa78-cbc8-416f-9afe-fd9ac4012536",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ca354-ac8c-479e-9f4f-568e95fd01aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad218422-912e-4ffe-8e85-0c65bfb1e2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b72ce7-dad9-4899-a25d-768ef9ab4a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d84b8d-d00d-45bc-9b57-b25da718ab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac6631c-cbe1-4ac6-b47f-c4ef6f81f45b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9b2513-8d3e-4c0c-b103-60555416f6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bc0b85-5d16-420e-8b0c-b8b5138d45d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d240a-f127-41cd-8a41-79af44c8a0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f24964-fefe-4546-a5dd-99bf126b4b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514279c5-1aff-48e6-88f1-001bf751a0c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ebc918-8b96-42f0-8c9b-d2d08db08cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d8e305-ba7e-49a2-bdae-b899ced9a28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84710edb-8bc8-42d3-9829-8e6775b5adc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7414af59-aa7c-4f09-9d79-f00fdfaff844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89505b16-2c4e-4072-a9a6-6849f7f0274b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a3363f-dad5-4bf8-ab31-d8cf99071f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66a4366-97c0-4c10-92a5-fb5f008b6cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929eae88-16c0-4fde-9d94-f1392a202587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2584839-16a4-4c8f-982b-c2c4c1f28919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438880ae-9d25-40ee-9d20-b80421812a8f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90eb87d-f987-44eb-b4fb-fe00a292ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51a06ae-deb5-4dbe-b519-245e07f7007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2a9c8-17b9-4dd9-b754-217cd8bb8fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f619b25-1c7a-4d92-bc53-9a57d1531a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d28d91-c5bc-4b6e-af63-b65adef99d9a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d370e557-a14a-4687-8255-782c1a513959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5559e7-a457-4c56-adf4-5504dcae5aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd9fa6b-fd60-44fe-9b8f-e02949ba955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe3b095-9818-45e3-8135-6eeb2b1f32ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a4b8d-13c1-4a01-a36e-6702fb0f7e1e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e27134-d3af-4f4e-8841-096e7cacda12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6871df3a-f6ef-452c-960a-f72a5108b4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472a5cf-7159-4c6e-840d-2eae26a34692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34f0de9-c7e6-492a-86be-df403735befc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e42ab9d-f04e-4778-9e95-8fb8ecaccd1b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72411ce1-31de-4ad4-99a6-eb1bab7d9607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad540dd6-f994-4bb8-b333-c0e554e4f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684ec47e-b051-4c2c-a8f4-822e999b10e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7495ee81-52e9-4d2e-bc5a-3a042d072550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdef4081-9103-4e87-8dd4-580c438e88fd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007b5f88-d8fe-4adc-a99c-337bdfbe3898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75f59ed-6b69-4042-8a51-ddd025bf727d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985d78f-2f29-4bc9-aadc-b6dbe1fa6262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8bca95-14d5-4387-85a3-ceb1922d98c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e3ac54-5a20-4cc4-9761-87b22284de57",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feae4fcc-d9dd-47a9-beb1-1bb963ffb49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b386755b-d9fa-41cd-934f-becb4914408b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cf5619-f727-4a76-89d5-df9dc7dfb7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c41430-5c72-4e11-ba26-e275b4cfc125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966d47f7-7ab4-4f79-a1d9-6e21389953c9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764f970c-4cf3-4ed3-ab65-41b0e5e52804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5151fe30-f151-4218-906c-8d908b07276f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28dded1-95fb-4a35-a3e0-cba6df503192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60c3e6d-232d-401c-8ce1-e1f29fc601bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38277a55-8009-4fed-a6aa-89aca4a3c814",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c985228d-9362-453e-9d71-a3dc1e5fa425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f42a9c-e794-492a-a4cc-7e448615bcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc84b9-3163-4601-acf8-8380a6b4c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "671a1ec8-4d9d-4517-a665-33134283cbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee5e27a-bad7-45cb-94de-e4117df1481d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49264ce-571b-4989-90b8-53f3a679853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea1aa2d-1131-4810-a3b6-f7c93d95016c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a1ba4-2558-4479-92db-80a387249824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28e79beb-2941-44d4-bd94-db0eac53156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed5dfc5-3186-4c4d-9978-da08862e532f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4963c0-dbd8-464a-8692-83bf5a19a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408bff6c-16d1-41c1-92fa-ea9cde69c122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac791256-ec93-4fcf-9a0a-2ecc9f12c159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7027132f-e783-4f63-8d92-ef3d84c6adad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf699a8-c7b0-45df-8714-38657abba80a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88423ed2-4d76-4a39-8b45-43510e435c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de80e43-1c73-4d34-9022-2cfad9fee607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d158d03b-01bd-4040-aec8-bc0c0bcd3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c11c84-7811-4b1a-8719-2d3a1758fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08defd56-27b2-4f87-b388-03f9decd3b91",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad915823-504e-4986-805d-d320cc48bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03968db7-c59f-4119-8582-d5494d1064ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f487d-80e0-4889-88c0-8ad0fdfe9fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc38ca8-112d-45e6-ae1e-a717eb5a03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138b5c97-da89-4e06-8542-0828c2f16dc0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04059e9a-5e59-4fda-9dde-b1f50a19053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44aaefb4-7003-48b2-87a7-4dd0a47fda44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3c83db-c828-4e85-817d-24a74641bc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0984c3c-b967-4dfe-a2cd-0514a752a4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fddef60-55e1-40d2-95dd-d56018694769",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa735799-1092-4e8c-9fd8-16f32dfd84fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241e711a-5637-44ff-831a-9713aa69c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86479825-dc13-4e44-8142-c31733129061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30ce095-0310-4fed-b915-a72c4c864eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4197e8-3f80-4d58-a386-daa150b32f70",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaec5a8-ac30-41aa-b022-25139c3ec8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2522d8-becb-4ee3-a58b-631888d2efbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5f19f-155c-46ee-b98a-8010e92ad539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "98a05bfb-4f82-4998-8f7f-eb4de3513e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69717a6c-a281-403e-af8d-cab1a58d4acc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0988c-dc3f-46bc-bb90-1e76c2c1175e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee208b5-7863-4a35-af48-91f1a0eab716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c459f8a-9315-48a0-9d2b-b521aeaf6c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "769c224a-89fe-4452-a020-1d20f4d1335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178806d9-3e56-4d1e-84fe-498417d2d310",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca88e6d-140a-44e3-a84e-a637a93b88d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595df44-1ce8-42e4-8152-42f853706e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d57497-45da-4913-84bb-e30c1351cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cefcce83-ee17-4859-8873-ebf12ce4b2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13107bf1-b721-47bc-8ca3-2fd8019d3165",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352bf039-9039-49d7-8953-ec69cf3458b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b328aede-892d-4586-8943-753b02cd3671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcf40aa-b9c4-45da-a64d-5fa7c89fa913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "febff32e-815a-436e-a0cf-9f6254887e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff69150c-0bec-4479-a43c-e412d0644c13",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebbe445-0561-4eda-923b-0835694f21fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdaf988-7571-4f04-9e2c-3e4ccd29d4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba737a8-dcbf-4550-a9dc-b38a1bcd8c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ca1e59-c5b1-48ef-897f-165020880b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728df02e-3ae7-4665-8163-98c7b76661c4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7858c43-9450-4378-a79e-a61b4ae19549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaeb11e-44e0-4188-938c-35fe3f614d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5780ce-fd73-4a9f-93dc-e3594924140c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbf8d62-af4a-46bc-a055-8c9ab81f7c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f14f0f-5715-4b8a-8f98-36c6484f3e6e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bd43da-70e3-49f1-8fda-26050278684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dc1880-c4a2-4e7b-acb1-9359d1b3c6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25bb5e0-22d9-4fc8-acea-7f45959e140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d048893-3e2a-4bba-862e-daa3f932a9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4cf50f-6b3b-4325-a1dc-b6d5c6917fcc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9d3ef1-aefc-4d89-924e-64cc40f413fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc262e-e6d3-43f2-99ff-f3ba112a42f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69a7629-3878-4fa6-a58f-f6b20813d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9caf6b-aa3b-4666-bdd4-a8bec8f761ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8417889-29ef-4ef7-baec-5db91efd5f46",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeee86a8-cf9f-49e5-a07b-7840ee207926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0463969-8328-42b5-85b4-586f3a2f468e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836c2b72-c2fc-4114-94fb-712e5bd2eb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb76f9a-571d-438e-9d00-b1f757199519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1c507d-d1e1-4b7d-a31f-9f706ce224eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2ecd66-3afd-4258-b2d4-85d39ce644c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270004dd-3e67-4523-b8f9-7d58c116b89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8908be-c799-48f7-9df7-65bdef703dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53f962b-da6a-4019-adff-bc8854a220ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a39cee8-5f8b-468a-8b5d-fb05f07c7b8c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a381eff-1e9e-4bcd-aac1-f5e935f1c04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b0432-a7c5-4d39-ba12-af008eb0c7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be14075-e7ba-407b-933e-59aab91e8421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b8a3ef-6f8b-4897-8670-4a8dd7ea30d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0882ba61-a873-4195-a35b-143ff21cb377",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f19bca-c964-47f7-b51f-9b4226af7225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c677b6a-bede-4c8e-ab67-c6a53cdd555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6a68f1-d339-4fc4-80f6-b32e1a1295f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f28a77-cc61-482d-a5b1-87fbb6a446df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d000e274-ba22-4337-be1a-7d6618092ffa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3f0d02-7a94-497f-b6a5-62b724716b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d80ffa-b903-49e6-9601-566217849ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beadf62-d7e0-4591-91f0-e4799d5717dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca3545a-3ec0-46a7-a91f-76b17a3e8f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd96303-77bc-4726-9857-48bec43d0876",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124430df-cfd1-4d0c-82ee-ecf58e0a1640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0581e99-883d-455a-8be9-2e6a94989eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649ed573-bcd3-427a-809b-d7b8215bf304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecd03d4-6014-4e5b-8904-21c0bc0ef30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbfda16-ef4c-4d48-bb3f-bea79dea0a3a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5270528d-ad7b-4a16-a70e-7a7f34ef0202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab86d1b8-6f23-4537-b4ba-01a90a776771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86468cf2-3420-499d-aae6-97141a53c53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "481075f9-dc78-4ddb-a622-37ac37a68684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3046d67-81d0-40a4-8072-cb126558651f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfadd7a-851b-45b3-91fb-c737b815c13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826bb2ca-5472-4e73-b479-2370dad9897f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb21565c-5ebc-4972-bb16-278b5c6dfe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36316f35-4863-4c56-93bf-f9967ff92b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3279df-dda5-4e7b-a2bb-402930cb6262",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccdb548-aa97-4ad7-9359-1e0c54541454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4093af9-2ade-4328-98c3-0990884bb512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4a6a6f-02e9-4e49-872a-edd6067de116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33a22823-ff4c-4ef5-a54f-e2b685855a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b7eb4-2f44-4c91-ada8-522d081e97f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dd41ee-8173-496f-9f81-cb7beb8de106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eca24e-750a-4ec1-87f1-06679afa68b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf1f5b8-8edc-4eb2-8510-aa9ba4c73ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a39a149f-c5a8-4861-9616-a3c7c10a988e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0cbd02-c487-4eef-8431-b56d5ed8c35a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d99f13-ee7d-4187-9fef-b765da0b1b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9691cc87-5798-4ff7-a4a8-f9f191676316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58330879-1971-4704-aa90-4b8403e44230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad49c59-38b7-4d53-aa3b-634d869b10d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44dc2c4-6a19-47ed-9e75-b9468ef93199",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa3b136-6e6e-4e03-a0cd-d561ab3bba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2bdf99-018c-4f15-8714-798ca2804880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bc077c-25aa-427a-8aec-47b6bac8e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e438966d-dcb2-409d-8626-ad3a6670d25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ae6d4f-5e78-4a95-b6d3-f722a3ea6184",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049d64f-002b-43ca-b967-3720deeae21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fa0244-04a5-474d-a518-3e94191b97e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c231d039-d661-4864-9d24-26c77e3b083d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb41b290-839b-4251-9266-d6a1b6dffffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f7de7d-7d03-453e-b18d-94c8ef288ccf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50abce6-01b8-426c-a688-a8155f2e7398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a8ec92-d3cf-4b99-9111-aa4ab397f4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e287db-84a0-4d32-97eb-dc06db32a2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2320caa4-b1cd-4042-bad2-d3479b1cdd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8377bbb3-ebdc-4676-b31d-3e0364939bb7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c02c5f2-4ba2-471b-9d13-29a8b1f9ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e4aa5e-d6c9-4945-90b6-9edb95413add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b60053-0e22-4f0b-b728-a5f8678c56f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "173b3dea-fbc3-4bf2-ad52-2e3818ff9a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abebe894-7396-4c7b-88c3-19aaf96b3124",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a669c8-14de-4098-8931-95b492afd9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d812f8b7-a924-40b9-b5ff-21e09f53a0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35206480-2b4d-4cbb-a821-4f216856fdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e8630f-d585-49cc-971a-28fd4854f407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb05412-c63f-4517-b7b7-dd47eb7549a2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d237cef-bbf9-4241-b93a-4b520df3b4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfae6ab-c1c5-4962-b704-6f98bc5df4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dbdbd2-dd07-43e0-9ead-7058f99458fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00652841-067e-4c9c-8c7c-9eb3e62defcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb615831-2fef-464e-af3f-636d8330eb8f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de7d048-f790-4d6e-b47f-5ba4ab9672a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca5b58-c2e9-4fa0-b042-a4dc62d4496a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800c43d7-53c5-4db5-a00e-e01ec272d4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b2a5dd-c466-407d-90eb-a6339cf13fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9a4f2c-2fbb-4d1d-a9ad-f2114ca6695d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f83a72-92fa-4e53-b48f-245c5a5d2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec20d5c-517b-4c16-8d3c-02ef2c1aaedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d092d140-092b-4056-ba78-00a3abb26213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f03a53-966e-4402-a012-ca787cf5229a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e441af9-5f0b-4937-b373-e768ab7d9c99",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1946f38-2a4c-4219-bac3-3f6123a0188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6fbb21-c888-4db4-8970-77b4a1efdc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5fdc9b-4446-4f05-9ec2-b5a3888aa025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "288b22d2-e992-4b76-8a49-9ce2f488cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81de975-45f4-4e54-bf23-541910c67f04",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895388bf-5b0a-47c2-aeb2-cd21b9f3a5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0da813d-d06f-4bbc-b35a-94af27a93e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f585038-1bd2-407e-9031-54786f48cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2177f5b6-af19-4718-bbb1-7a716a03dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9ef6a1-8739-4064-b40b-a334c4eb0645",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e670a7e9-6cc3-475e-b97d-45a862e73609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bde686-1253-48f2-8ece-807698435d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509913eb-2369-4733-9c19-d32822e52a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa886d9-9105-41aa-9f12-22c522facc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83787611-6439-4d00-9f0f-9afce2a6743f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814cfe5-6d52-472c-99f2-5b4cb0987c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fddd52a-a77c-4815-b56b-bb8f7c219916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b77f388-8902-4f6f-9c1b-5b32713fd837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b559ac5c-8fed-4ffd-a6b9-ea6a00b79569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d1ff76-d5b2-47a8-832f-e869dcc3ae52",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613233d-af0a-4b7e-99e1-d90c1e6f4d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9559370-48df-4346-8342-6677e3c5b4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c308b-433d-44be-baa1-c1742468d56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcea4911-0e74-4721-9a7d-ac20bce5623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66303ee-74dd-417c-b7b1-79f6516b67c7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e4ca79-d87d-441e-8049-a8c132cd3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825aff57-5eeb-4db5-b17b-14fa842e2310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8939da5e-bf90-48ce-a6dd-fe26477a6b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "383c87b5-5300-4552-85f0-6ca7ff533bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f42ab7-1c3d-497c-a009-9f16863fa3e0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff2177-0d12-4867-b2cd-f7bc1f2ec993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d41b8f-5a06-4811-b06d-5facca1012ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435958c5-5f4d-4c79-b6b3-426d52717b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "675a2f32-56a0-4ef7-9beb-f910695eff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b9a94-9cd2-4d45-9b2e-83473b090867",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cddccc9-8126-49b5-81ae-de3d6edd2e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a1449e-238d-4f33-bacc-249c3430f7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6909b557-0b6b-4421-9ad1-1a0da8c458cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9669cb-b7ce-444d-a28d-8443b8904bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536be6fc-0ea8-4c03-9d68-b9750eda095a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35566729-cb8a-41f3-ba4b-8ca45b36e678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8d05fb-1e5e-45d1-9974-69ab2aca66b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8bec76-8a3e-4279-845f-9356edbd8b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b9ab53-09f1-49d9-a126-1408df6f676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4ce3f1-1043-436e-9c63-19f959fd6309",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6786f49f-d58b-468a-8783-04c388d835db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8df5a20-2b63-413e-8ec8-95e2aaadec85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5b2320-57c7-4456-a9bd-c13f707b221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9aa700-5432-4219-9415-f98260303fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e681b9-90b9-4814-b7a2-3b13fe473871",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374bfba9-174d-4ef7-8310-16199783ee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3693ac32-eb68-45e5-a766-db8b07352536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac1cf3b-0ae2-422f-9066-e3e6b6f7d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "616114d2-4175-49fc-9d44-0badb778de05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f037996-f99a-4a11-aa7f-bcb6aa019628",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c5e2ff-5c13-4c9f-a68b-87014ef4a632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bbeb1e-81d2-49a4-a0a1-1062fcc04db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c9b01-a00f-44b0-ad68-f30a13048557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e25b20e7-8ad3-40f0-8519-eaf8b212348c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563cd2d3-faff-49aa-8db4-224ee6329891",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5805a069-8acc-49c9-9c25-4dbcf7efe062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7d1b1a-1cdc-43e9-98ba-d5b2caa3e6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71710208-4a27-4a86-9533-edc85e703770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f1d19-b07a-4514-905e-eade49ef44dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9467945e-f38c-40b2-8b76-2d0405d09df8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db33e4a-f046-49e0-b5f1-d14fcf16860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ff1e84-67fe-43ce-b94d-d9d0de04b4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b44ca84-1ae9-43b8-a540-2a159eed150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "229df6e8-b16c-4156-8c5c-4768a9725008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73a8f0-877b-409e-ba30-093cf3aaada2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d7196-8ef4-4f9a-a65a-f3b4e4fdaff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b247ab7-92a9-458f-8eb3-34914a7abd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0311179e-dcbe-43de-b89a-e3da08fb3b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8cedd1-ea5c-40e4-8020-9ca35e6d74fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f03e5-4c34-4790-893f-4f8709a5c5ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0b68c4-915b-4eb2-b497-386aef24d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cace026-17f2-4ef9-a794-105709e94fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a4a8c9-eb19-4615-8dd0-69782c9e8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa3cb27-ce71-40a7-8dc0-c1228678ac50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ad8395-9bf2-4500-8e66-e68843182bd5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c650120-da08-4ba2-baaa-e178ec670943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9545dd7-eff6-4a3d-b244-e3d6d590a7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50547c95-43cc-4757-b755-bfee8fca9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41ddc35f-c703-4359-badc-7d5abe4e016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddf1959-b723-4182-8603-db1fbbce3052",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833ab18-6c9d-4928-9251-83f4969f548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ccb77d-c7fa-47cd-a4cf-97447825040b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b497d31d-8510-4d3d-a996-ba338f3d0bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7418f3e6-21d8-4a6e-8aa0-60cb17211acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1e0949-cb01-451a-b3a1-11a6d1443feb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fda69e-efce-481c-beea-b035d8e7c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98f4878-64b8-4a39-934f-44ab0b159a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db9234e-2525-41c6-b500-9362eaf7c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbb8194-de0a-43ed-8b6c-49316dfe9971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510feb4e-25af-4fb1-b4d3-a63708e5d36a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c526e9-5d5b-46c6-b9c6-37c08bfbc7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada62c52-9008-4e71-b3da-525e887989fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5ec858-4131-4abb-ac3c-090a67d18020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc4241f-562a-4bf9-8872-1d8d9c5a8dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fe0164-80a3-4598-acdf-0573201da1aa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f452275-a59b-4641-9a69-ca2fda8a2f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc6ae4a-c25f-4eac-9b1e-eddec486a9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2730eab-27bd-4f28-ae5d-758acd431a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b405441-4947-4fcb-8511-9a1812579a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7938f3-c08b-4b55-b1d5-57c000162554",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae82cc-6f8d-4168-a799-6949a7f3b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42384a1e-128f-4076-aed8-a9fa19ba56fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1938abe-786b-4d00-9856-311a7fc7972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4f7a30-72b1-480f-8de8-af5d038dd863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfea0a46-e65b-4d40-ab11-c438422e5408",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9c5c5-2ee6-4603-b089-f3b7f5f86ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6604d4-7b7c-4ae8-8fbb-5f5b9fd182d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c9118e-2afa-4b63-8302-55deec8d3821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "462c303e-9e76-4076-a4cf-dc9d47300634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a25ada-4216-4a58-b571-453eb009175e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d851ade-787a-46a5-bc67-ec5d3675ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ed791d4-bc62-4cbc-9718-9c95e844a1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba930c71-181a-4b24-b588-a93dca384239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc82cdec-4f3a-4d19-84b3-35ea02c89bfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0190a66-944f-4960-947e-89cd7a9ef1bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "033185d7-f358-47a9-8932-7dfed44278dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdda26a-0910-4318-bc98-83dbf81fe061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3950921b-b782-4fc7-9448-29c3605b1ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9af23-001c-4b93-b795-8229ea2a691d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d8658c65-02b7-41c6-85b2-28bb60d89665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923c52f1-e801-4c32-87c9-fbec6f81f0fb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e3d24d-fce3-4748-b7b7-8d7993e6ace8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d94e2f5-0346-462a-9b5b-1d39e96e0e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2a5994-0e30-4849-ac7b-0c9e4dc63818",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a53a655d-e17d-459f-aa53-3e16e338389f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68159d2a-c25a-43c1-8189-a59749b019c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b0a160b-9d87-4437-a6e6-1b60fd0c630a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ecd35e9-ccee-46b1-ac4f-114361fa6c93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16044d77-6bfb-4b24-9060-b99dcbba7079"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3fdbaa09-a24d-4d00-8125-dca018031149",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6bbfa4e-99a7-447f-8892-be66ca7f93fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78660332-d9e6-4a4c-b3ce-54ca6efee5e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aae436b-2256-4893-b489-c0d6e8034022"
                }
              }
            ]
          },
          {
            "id": "493084d2-56af-4075-91ad-71c28b33a9bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acc216a6-3fe0-41a0-a3c8-c40e5104ab35",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a7a3422-e491-4a6b-809b-601ea02cb81c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ce646b6-0662-46de-a175-cd2242b1f73d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9823456-e60d-4ed6-9def-290a7869cb20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "624f90b4-c218-42f5-a9ff-b725a2f573ba"
                    }
                  }
                ]
              },
              {
                "id": "86b4585e-b4c3-4426-b527-bdd7040218ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13988b79-d6af-4bc2-9c05-64bf09845306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "837cf553-ea1b-4748-b648-2452cd385f3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ed8cf8-8798-4a64-b675-11b427635610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ede56e0c-80fb-47b4-befc-40e9f1286bfd"
                    }
                  }
                ]
              },
              {
                "id": "01e3a982-6abb-4fef-ae00-20ba886017f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec9ded65-56cf-42ba-8781-c638ec90d815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e7b7ce-935a-468c-8c42-4feb312de69b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a18d3dc9-3e87-4bff-bb7b-1613df9bf4e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2f44dbf1-615d-41e9-a8c9-9f10989ae547"
                    }
                  }
                ]
              },
              {
                "id": "d048d0d1-be4e-44cc-be3b-190a9d97f82c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d99c4b-2c3b-43b0-b251-bedbb04f60ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86c3ab8b-b072-485b-bed9-6fe254ee7407"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e52437a3-1044-43db-ac5b-d870face1787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "de95ddbb-f155-435e-b93f-39d34064746e"
                    }
                  }
                ]
              },
              {
                "id": "34ca9202-8a9f-44d8-b9d3-c58e9b7d0065",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7873a9a8-756d-4bef-b603-36360798ad85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c541726-9700-400a-a653-3bb5cfbf5c7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe44e9be-3250-423a-ba6d-777d5cc14a93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00f24343-aca5-479e-bcc3-82be39161bf0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74147aa3-5cde-4fb5-902e-76ac9807ffd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07f34c60-a591-49a9-842f-5de311ac05ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "116d2e31-e1c3-495a-8970-1eccda238203",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c08aa69-3f6d-44de-991e-1290da7126f2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46ea28b4-e433-4387-b216-768b94cf2c2a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d94e7d38-d5b6-4af0-b177-0ffe793b708a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "474fae98-1b1f-4218-80a8-e3ed68d8c6e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11e87075-b198-4600-b3f1-c52288101d99"
            }
          }
        ]
      },
      {
        "id": "e95ed630-ac6d-45c0-a888-f887effc9b88",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e57728f-acdb-4915-a23a-1248abd3b99a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6809e4e6-c963-4eec-8cc4-3b233d0c6d0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60c7babf-74d0-492f-bc59-4e9a2b46ba78",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a07b665-4d4a-4d39-a334-6adb007682ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1d2d97-591c-4cf5-963e-b627b3384f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cebf922-0c3e-4e89-9057-6a38a8f7e067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "584e2553-bb17-4cf6-9edd-94583bc9c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cd1401-3fb8-4259-a74d-bedf0997d1f8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba8610c-eb00-4f50-a8ac-8d3eeb1c01a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d880ea1-645b-495b-86bd-f0cfb8a1c652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79dc10c-1119-4902-9d31-87e3f99f8805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a0e675-2696-4a8e-919e-7ff076336171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6756e873-59ce-4b06-b59f-3bceb9278603",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791c21b9-a6af-4de8-9418-4556b58cc7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d28a83-baa4-40f9-bd8f-659b1cf9d756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c286620-c34c-415e-a1e9-8a906399f5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abaa90f-5734-4bd6-a17e-72d6dc4c23be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb98e9-db61-4362-952c-f18b69a05b01",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbaccb4-a1aa-47dd-afc1-b8881a4bc889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633b5b81-499e-4e0b-b8f8-0919af184325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11e4a23-98c4-4f3b-abc7-617011b46909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cd314d-4a02-497b-a618-7f79af7df84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c75bbd7-e78f-448e-a561-b248c848be30",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34b89d0-bec9-4901-a582-571f61532001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f3c7b5-04d1-4e50-a22f-105e0ded58e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c011f856-dac7-4721-a37d-9ad27f198f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b3166-2797-42d5-a000-89bb3a359e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8038c87d-d6fc-42ba-844f-871f4ac5b2d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f662df55-111c-4b64-80d0-fd920119e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048d234f-9a4f-4ba2-8607-35c8dbe3a088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e554e17-0c8c-4e16-9d70-da1f03fcefce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c546d15-3ab8-4dc2-b348-b9a28cde0495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31294f81-3d6c-4d38-8003-9018b72ff45b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca90e4-fe66-49d6-8d8d-372a5a3060cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b6632f-a285-4cf4-8216-07da799468f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb2671-236d-4c18-9de6-c1f4c9ed2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f418800d-c77a-431b-9f2a-cdb15900aef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6ffbf6-3152-4bb6-a6ef-a6ec32257e57",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cf4ca8-577c-4797-ba18-cea2f7820edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582e8594-da98-43de-b976-6eb32b57cda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aeb320-4d44-4a36-bfeb-eb74c096ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4392aa47-58c7-473c-ba66-8772a80dcff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c134d5a9-7466-4729-8cc7-e6425540f3e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb019cd-a880-4f70-8d16-5722e7414b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aa13ce-86a6-4dbf-9e01-dae605635090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b735a2-5b4c-4521-9c81-f35dc4ad26bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae60ece2-8910-443c-82e1-7384cfe57d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d59374-f0cc-4b9d-93a9-42d1aa849273",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e343fc7e-728a-4e29-aa73-8c74c15ca043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c96ac6c-0143-45bf-b2cc-2056ea138c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7d1e84-a40b-42a5-a50b-bcf343af6b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5639a66-c097-438b-b09a-c08196fbd312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdb97a4-2b06-4848-873e-a2fbb87caa78",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f743f-358b-498b-99f2-de5ae016fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554c15f8-2edb-444f-b6c8-c8fa3ab1b4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35de5381-603a-4655-8355-7283f58fa0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c32f7b19-6b6b-494d-be67-7dff094f6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be57977-ac2b-4988-9c35-7e533871e606",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dc7c98-d477-466f-8554-f223f7b0afea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c976854-6f68-4a2a-9e7b-513bf5bd0b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858683c9-c9d8-4b54-b27c-e6b7b0dea7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3606cab-f1ea-4dab-a29c-a8baa7b31323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8d4e4d-ffc1-4b3f-b0d6-be7193421a7f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d08ca6-4931-4f9e-af89-67710992d843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cbe6e8-b2ef-40ee-ba8a-c0ed6b4b35c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6abfe24-50bd-4f6e-b633-0ed69c50c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1793ff7-01d2-47bf-aa14-7306eaee4fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78e4c9d-5db5-4c44-93b9-f6514d30811c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ebc274-cdae-4b19-a188-256f2da32eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb81c669-6026-4140-afce-d59e44e293bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145f9f66-6457-4107-a0c2-cb2248727c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed1b16c-cdaf-4703-beee-727f70945aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02749025-9772-4618-8996-1f6b6535eeda",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5dc1cb-7354-419c-b662-9de85ad03fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9204affd-4421-4599-808e-57b793594203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508fb159-4dac-4e0b-b3f7-3510e448eeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20390c30-ffed-4e9b-9ae6-43b19baf417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b932f6b9-3863-4d66-9870-7bb370a79599",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392a7a59-848c-43f7-93e3-466375f29618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84b553b-a9a7-4fe3-ad1c-0de8cfaa834a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f07380-4037-4af0-bad0-0c1b084625eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6ce4c8-cb16-4433-9e09-c124570cd489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fe7872-2b92-4ba5-8724-3fc4678bc7a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a19bbb-f9d7-4448-ac55-cfdc2d9a6779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa0d769-001e-4eac-951e-5d6c560b29dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce7a316-94df-46b7-a5e4-598f591624ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ff67c1-d888-4b60-8819-dc7886c6264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac8ecf-b160-4157-a76e-b5960074eadd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8925188-bfef-4f9a-9ae1-9d0ba9bbf3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd6b178-831f-41d2-a4a3-080751748b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b38a9c-e25b-4c0c-9fc7-b1e69907cb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f901f1a-68b8-4212-82aa-d18a441191d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7f978f-2adf-40f6-acc1-4aae145ba55f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe723aa-5554-4346-a4fc-41d4a70e216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdeb31d-4876-42e4-b084-b891acde4a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313f328e-0f88-4afa-a3a4-867a3d127c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47a12ba-38f6-4d71-aab2-b8ca538c2ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adad52cd-947a-41f0-a86a-d39ce5f741bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308c526c-0e87-49e6-8cbb-3bdfb0c08f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3105de-d4b0-407c-acfd-1ba7f7c08703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a300f3-8225-40c0-9ea4-4fab3f2bb176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eede5ae4-6b22-45db-9b19-058ac202caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e0c44e-e130-4a2f-90b6-53355cb527f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f884d593-9958-4106-bcda-d6b43d61f472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fbc1f7-8052-43b4-a985-31e0c16aca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a31a05-6110-4003-8877-8627c0b5e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c37040-6207-49a3-925e-88fdcb6a1f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a41cdd-54b2-4e76-bb2f-23b313f5b8d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6cdead-6c52-4401-97ac-2997f550deff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043ad9a5-1027-49cd-9279-183af0e27bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a3964-9b60-41e4-b24b-49780dcf7b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de27fec1-bee3-487b-a305-201cee366da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1a3486-7848-44fa-8c4a-6d5250291ea7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eba79e-761a-411b-a562-fde1b4c3d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ea6bcd-8dca-4ffe-a53c-8e0841dac393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a5d3fa-0b05-44c4-b716-348bf7322eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91997a1d-b715-41eb-a894-2cddfd3999d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5985d2f-4623-4594-95c7-366563b7d525",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f6a156-1218-49ac-886e-46ce55ed537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9f0f8d-7bd0-48bf-b826-f57bee91dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce51bbc4-b1af-4396-add1-162ff6bd9ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e08d89-9f6e-494c-875f-67d4760be970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1fea9c-f59c-43f7-8434-00c92ef11fc8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba462aa-bd81-47d1-a2ed-2b260fb23697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9c8b01-5769-4164-94a6-7ab59224c724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4160f0de-378b-4331-ab0f-a7c414763386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f385c7a-a8d3-4773-8fa3-dc59897bc195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa1aaa3-68c0-4cea-a74d-ded79c5d4fee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e58c0eb-0a24-4522-b615-577e6c272f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b7f01a-d8a5-48fb-ae60-abff4eacdb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed83f654-ac05-4880-8024-33efebfd1dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5a64ad-149a-4fc3-8752-a515b0e82f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75284f10-d5d8-4f1f-85e8-6474003f5d52",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a77ea-6355-4c15-b6c1-cf6ea2034a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e08db08-0598-4103-af94-2f24a268efe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff358505-57d1-4fab-8752-1172900c4f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf239068-511c-4052-afde-1068328c7a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191d75cb-e2b0-4be6-8895-b44a7de51d1f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c4700f-ec94-4e6f-9942-3e0f8d3635ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec8a0c6-db43-4632-987c-898613d9ab15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c996c03-c4c9-457b-9ded-2fc499282215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54967a30-8e8b-4d4a-acf7-ec225d01ac51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5611efb3-c31a-4eca-ac4a-4c440d2139ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229dd45f-4127-4e97-b784-3d402283001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0793bff-d8f7-4e8f-84d7-168a852b3240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a609924-4fd8-4bd1-84d1-2f9c434d2c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8abe869-d435-4eb6-9417-8b4473aac815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c97e5a9-5071-4aac-8496-e7bf93653075",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c39988c-537d-4311-9a38-6ebf83dcb821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9fe9ef-cf07-4f07-b592-d74c9caf88e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245c6db-8829-4e6f-920d-ba8090bd1533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06cc27a-6375-4bb7-8cdb-9bdc2b0e2f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618948e8-01ed-4dd0-b5d2-e849e5794355",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f1a903-022d-4693-a0e7-a07e82ba36a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6aabf4-5060-43d3-92f9-1658e25d6a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baadba5-0f6d-4d70-b218-c42dc9926568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86761056-e20a-4a03-943b-166803d8f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2122d11a-cd87-4a49-9359-e9b7505c3cdf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25c06eb-e26f-4ad2-99ae-226d4cbbc9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb82130-ee6d-4153-b313-56019f1495c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dff9689-2c00-472c-81ea-25947049d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47963bc6-4428-4b17-b55e-5a51b5a56edb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91bb0d77-9f0f-4501-a9bd-b64d23a3d133",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0556bc75-c797-4794-88cb-ee0f9ef67c1d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9f2229-5a83-4b1a-8021-37ac9f431eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0606c418-557b-40f2-945a-6669baeee058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb57c97-3283-4b95-9b3c-ecc3b4f9d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25a1db3d-6362-47ee-98eb-428e460feead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c566a5-3f1d-45a9-964e-832d8f6996c4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace6750b-c219-4172-bd10-ceffa428b78e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "188dcafe-d961-41b0-ba4c-ba924a07e26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c61c6e-0847-437f-af94-60ca6d355294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b79444-82cf-41db-8873-fb4b779a2497"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f19683-42a7-4930-b31d-2b9d31441514",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1b09d9-358b-4835-9038-48d4204cf4c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb22fb6-a3af-411f-96b1-49a1d21488ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9927666f-2614-4101-86f6-44d25e72135c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8849dd8b-e3b6-4cc3-a183-97336b071fc3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b994d42-8e03-4b34-9576-21620723b48c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9b0b86f-c8fd-49a0-8744-735c3eb3c420",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b15e8318-c203-42af-97c6-69fae32f986a"
            }
          }
        ]
      },
      {
        "id": "11674fce-c2d6-49b1-ab45-5b95ceb0bd06",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "acc405fc-0d9c-4c74-81f4-4bb64064edce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0c30fec-e044-4c42-a4b2-d07f3f55b539",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54f950f9-fca4-4d64-86ea-a7ad0d5edf98",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2426ab27-f8b1-42b7-986b-ed3e5f28fc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceeeccf-cc1b-40f4-b7b7-9ea234430841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd818538-93b2-4991-809e-ab2a48290a4b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df232b3-13b4-4b9d-999e-c83b899000e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1c69de-3be1-4330-b46f-86dabc814268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee4e42a-1bf7-4b90-9229-144109e752bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a82a120-725d-4390-ad0e-bab5657dddbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8bb6c-80aa-40fb-b8a1-0fcd9560944e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1c7cb1-b3bc-4b60-9546-732ac1ff7c98",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1073c4-8c61-4663-ba6f-f0c316b74d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39b979c-524b-4413-afd6-9ab97c4ccdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0ae95-dcaf-4ab2-b871-37e693fd17bf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d315202-9b7f-4a0b-91e1-ca035063d6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744d29b5-f134-4a52-abb6-ef3a4e758248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8906b1e7-9519-4ce8-a947-7ab64064ef35",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2800f3d8-208c-4954-9e68-b0b65204b032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7315ae-2e0a-4409-b60a-b7ec95dc7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89998f0-6104-4424-b9ed-5b81003a6237",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983dc016-da1f-4256-9c62-d7f2616be8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdf5aea-0faa-4446-ad22-7c84014509d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58f9ea3-8b2d-4161-bf87-676fde97a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9fe699-41f8-499a-9e3b-bac4cc2fa61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c292626-87ea-444c-b458-3efe1352849c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e632eac2-269a-4530-b468-0edd11f615ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b6971d-f6c3-4c02-a6d6-26181b1ae8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569379c8-162c-4938-a59a-21a8a16e647d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebd4c5a-db1a-48f9-8d48-a044f5dcf1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e46448-147f-4677-9337-e94f8b075e03",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71dff4b-6c80-4f40-a040-90e6cf54ce02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3947fd6-e32a-477e-9cf3-144499769ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe637b1-614a-4d5f-92df-74f961b80086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8420ae36-0e6c-4697-a260-f83082a62018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fb0ca0-96d3-4e00-939b-714d28ae348c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b0eafb-56a0-43b6-80a4-3b8f1661fd5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a660a6a-793d-4f0c-ae52-4b565e7eda43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf07f8e8-85ec-43f3-9d6d-e62f4ffa4c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0d04a9-2a4f-4157-b436-9ade0e824e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d65926-e3b3-4863-8266-78c313f37748",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1557a7-c5a1-4a5f-b333-a761333e72af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503ecd90-3646-43dd-a579-505bf67160b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f4f6b0-8e59-47ff-8e79-5f84970f6317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a6e375-e72f-4088-9bf0-832521c20320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bb4532-b5c5-4cf6-b4e7-cb8cfc850b06",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf3d013-60b6-4e0f-b0bb-3dd16e627341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a69a9e0-3803-4937-98b3-cc858932cefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf03732-1921-40e7-882d-c938ec0eb3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34430345-2d25-4634-a6c3-00f213b2bfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91badd55-431b-4796-92bc-42ab24ae3541",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7520ac5f-a958-4bf7-9c81-54f8b92756d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8435345-c41c-4816-afcd-4f61bd6c0349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e546db-47ab-4b90-8142-67440099fdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf398ef-9c52-4155-93c9-074fcd6b3861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce4757e-d833-4ae6-95b4-d3a16e1ddac1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92020bb-5644-4092-a9de-6d2fa86bfdeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2231e9c-953a-401a-8ec8-b6be032f582d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8861ff9a-14c0-46dd-813f-6eea82870c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82f4c55-72c2-4e99-a1b6-a1677121c332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f933666-3084-4167-ad37-6a2ee82acf70",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e5536-f58c-4fb0-a656-3b5a0b0748e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d809922-a641-4e6c-9379-1d1b962da55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c91b8a-386d-43d0-91c0-195329105d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e559d295-6726-46dd-a14b-0badca1b9174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9a1fe7-ccf5-44a6-bca3-db97d147814c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fac395-386f-424e-bf95-843dc66b89cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ee79d8-dd0c-404d-9951-5502c5e54ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb5a49-7716-41be-94a0-9b23e9af69a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3eb58f-7407-4e7e-ae6c-3bfb9f091f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184bceca-eb7a-4db8-b8bc-9d374381a601",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523e1f56-3591-4e71-af21-2415ae8d9b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87e64ba-67d4-4c62-8053-22eb3d921030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c684b9e9-a908-4d79-a7da-158ca0c17a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc62ca1-ba1d-47d0-b769-7b7e38519951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f13a90-3633-4d43-b1f4-758b25c9a9c4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713822de-712b-4f09-b246-2eba313df0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ad2baa-23d8-492b-a60e-28ab1e18a82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd247324-9e2f-4d17-b088-3ea1a7081b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12585c82-53dc-4108-a7ee-c95a7364ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f03e058-198a-4cbe-9fdb-3cd00aded4f1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f17db-e2fb-46ea-ac06-9ecbf75c704f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b612c-93e6-4917-b41f-ccf46848f57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b8cb3-f58b-463f-bc27-39b68de5cbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8b6184-1814-4107-95f4-487562a117dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b69a5e-6a42-4db1-b3e7-5d905aee6b35",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53c5a82-ab7d-4d4c-95fb-a631ece2b62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4735bf1d-af64-41db-b85e-6ca165a5fe61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285fb5b8-0cad-4983-b7d6-62c756bcae7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d51907-e155-4fe4-a996-0075136b6946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6402a2fa-4e25-4481-adea-d5a0319ff101",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7918851-2428-4dee-bc4c-43ce26819b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b6cfb7-ee10-4383-9489-f9b7c36461ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2e1d53-85e1-4924-a2d6-f0ded6e322b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c1ab11-9e53-41e7-8236-fe4d8726b52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d616e28f-f12d-4d8f-bec5-bbf610e0fc52",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2538324-0745-4f51-b45a-012356c2c641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22d7e30-85a5-42b5-9a7e-0b46b7391f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0337b27-de8b-4b16-8673-4dbe532ece2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1313f48f-f201-4e17-9f2f-9c2749b40a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c75cf2e-4cb3-4178-8c15-ae047de27502",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56838cc-f76c-4f80-b872-9b4eb9f69ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d219ce-7604-4220-84ef-492195b056b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6b0879-face-487e-8e00-b59c068a9e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a904c0f1-e8f3-459b-828d-c7a6c6bd26a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d99cbc-a859-48c7-9a13-88267deef064",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2568ffa0-c27c-4c74-a19f-8f9715f9db58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfe68e5-b921-4379-aef3-75151234b8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78f979a-8844-4a39-b6a5-6beb01fb780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79650a7e-0fd2-4d21-960d-a28dabd29dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c75114-037b-4974-b25c-b883ba90dcda",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841550fc-eb37-44d9-ba4e-539556e69c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74dbdd3-f810-4e21-bf7e-548ae4f9aec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f264c4-642e-4a5a-b2d1-45550114edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93c9e32-8979-4cce-8774-1b84f60cf7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdca871-8efa-4f44-99d2-5c65e39886d2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57164daf-0814-4352-b919-18d8d0b4138a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf60df2-926f-498a-ad78-81b3b59ff414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a49cc94-d1ac-49c6-85dc-084da04c51c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dfbbe9-685c-4b8b-bf21-0823a607f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f86fce-b6eb-4db6-9450-7b67ad1c7eac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a83b1d-a2fd-466c-8f0c-ad135ddd9331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af178ef7-e7df-4dd1-8b5f-a862612fcd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37937973-f0db-485f-a681-5b5d5d27ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30382a5-abb4-4495-ba23-71e9ced29ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cbb891-5cb9-4257-8080-e3c70c900d2a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68583399-1230-4d38-8ad8-11014baddc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeca464-fd2b-4975-b32e-b274f8ec4eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5101a67-a5b0-43a7-873d-48b3eb44e88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08368c23-f891-41b2-b422-7bfadce63696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a01f299-c0f5-4355-8a3b-4fb05613079d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5affd4c-e48e-4854-a398-a55c4f5a8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a05335e-0bdc-4dfd-ac4a-9152252ef39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28911483-3f11-4075-b9ed-d3dca4ccdc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b63c5b-4f62-4f3a-8f24-5649fe0581c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d64881-4dfc-498b-8fb1-ff18b73aeaff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f27d7f-570c-412f-a08b-f3a9cfac624d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5808f84-0b81-4822-8887-f819b4db83ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a992ea-045c-414d-94bc-8a10decbc216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f64b8-c35f-4a25-817a-5c9a8a8a522e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe164ed-238f-4103-bc9a-7385b9b4e410",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6161f246-3b19-49ea-bdd8-e7bc1dae580f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84a0a05-233e-4e7c-b0d8-35bafc772424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682607bd-290b-4e49-89b0-7dade1953d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c067cb-57a9-4fef-b0ad-ee57790251dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f098f70-fcb1-47f0-944c-1a0025fd480a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56755736-0fa7-439e-b5e2-d3845e302ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75991f3-2956-4d71-8c85-226007964b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34798473-dc6f-4dc2-b072-a1d15df2f9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d73bf9-baaf-492e-8f17-8349bf6d7729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b90891-a196-406a-a011-37fc0646ef2f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3d447-f30f-45bb-8ef5-f32fb6691efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8495c047-4e12-4df4-8254-9be704fbcead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b6724-c483-45c9-a5ee-0178da891e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b173d353-401d-461d-8759-0bbec2b16855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51995b2f-3fe6-4775-a998-11a8df33fd92",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7849ecb7-31e4-44aa-a451-ce602020883f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99cd08b2-8ab3-45d8-a342-29bb7e517662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af01fe1a-a252-4988-abe8-dc0fbd509e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5917d8-ad69-48d1-8d1b-bd95de3748ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8980665a-1390-4e15-bbef-467300c11147",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db0066d-4786-4df9-be7b-2e5e22c0b84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1628b592-612f-4f2b-8bbd-0cf216e97fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2151ba4-7dad-4f27-86a3-0dfe1f7c1573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd95378-4969-413f-8c26-36999d15a62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88f925b-f9d8-41be-9d58-63a848ad467e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6396c949-b4e7-4b8f-9cdd-f0bf15805c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2e2ae4-0397-4099-9e20-543707f09580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81ca84c-6f1d-4bc4-b6b3-456ca33e4004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27891b98-3721-47a0-9bde-b9259c6b0273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aad076-48c4-48e8-9ff8-5ea31db38366",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2094a96a-affe-4d3d-9838-2c888511504a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df729e75-bf95-45f0-b1a0-8c36522f577f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a64533a-c558-4f77-b260-5596a97af43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a89910-eed0-41a7-b9e3-5f0621cc79b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2b533b-bee4-4f62-86da-05e2a6442a4a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e38127-b3bf-4974-b3e8-8b69a1561ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e7c5ca-b020-4960-8be3-8f626028b6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe711585-3651-42f2-8d16-2bf08e66dc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d45cc30-84d7-47b5-9b5e-9068f511641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e3c166-b8d7-4519-af49-12c0cb8f7d3e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58035a05-4649-47d2-9e48-b11c9bce9e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5048f1a-2843-44d7-8651-199337cdcfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2c16ae-abc3-46d0-a789-0e21ebddc194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59ab307-7a37-4a04-a6f3-5fca3a877e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cfa82-507e-4a80-afcb-6d4d0ef59953",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265380ce-1555-4763-b116-d0c9079cccdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8b8a6f-b42c-4950-be31-0a45492712de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5badf3-7943-4d42-b83c-5ad52df693e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05c4bde-73a3-47fb-9e41-6f6211a21224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d016a2a7-6f70-4f23-b32c-13b2dfbfe8d1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a4e43-a053-4803-ad93-f4de4cf91d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef12ded-9396-4038-8126-e841673574c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a813ce83-3215-450f-8b91-59d89069f839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd77f90-9afd-446a-8f1f-8efab2624180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56c12e-0373-4b3d-a83c-37aa384a63fd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110e9d26-d725-41bd-9fc5-5089ed3819c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3193944-3386-463c-a3ca-7d87ba65c4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c37e401-7e26-4ebb-9020-2a31e2a831a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54860dd8-9def-4557-91fa-55874600ba6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4d1ba1-f1b0-4252-9d68-d9bf2a2334be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43835312-0199-48bd-b182-f6aaa09e3cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b2daa0-2a0f-4658-9c4b-8f97b0e91865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1807115-c052-4297-b388-b0701abbebea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc01af84-2071-4a3a-805b-008c456155fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadbd9e4-a046-4720-97c2-eec0981d5823",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f399ad4a-e892-4977-b367-65688cd9cc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b067051-348c-46b7-83e8-50365afed87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8a73db-74f4-4121-b550-b26b26033c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a5055c-605c-4d60-9021-1c96b372e835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0498400-25d2-4ff5-8e39-14efd22a3867",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124455e9-6260-431f-a8f1-b581b932c50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06f7464-6787-47f8-9ab5-2928bea8ff94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030637cd-fad2-412d-9570-f56c832b3673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b336d5-7125-4577-b1b8-942e6f86c95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b107b18-f2e7-4552-8f53-821b829349b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a21ede3-5875-4ed1-82da-ce522e68ecab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dc3a6e-5bed-41f0-8693-9ebd053db3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504b505-1ef4-4e44-a11d-b219467e1b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a1c089-ef5a-4a82-993b-143f478c4044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5255b9-c1d4-4fff-8680-dc5680bec8f6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff39fe-4ba9-4f9e-9f8c-7a4c6312f6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b46f8c-b3e2-4dfe-a97d-009630fa4f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44534e-7570-433d-9068-c581ec094a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29e2980-04f5-49de-b10f-305490c745d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e68760-76d9-4254-8d2b-4c8b39bbd551",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16f6047-5049-4e66-b9da-64db80b7bf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f24011-c21b-46ef-ae84-6a7ecba35b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3936dde-198b-4b70-bc18-080b6ab10b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38cdf38-362c-47a1-8483-60bdc3d22720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9936b3-a91e-47a0-bf04-afb7f3124000",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ca0fcf-8434-476f-82d6-2bd4d4fcb2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43624176-ba3c-41a4-97e9-ae16693996bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874e1dec-264b-4e3c-a223-33a585238126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311eb8e2-82f1-4c0d-b7d7-e2859d401da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46629939-0d84-47a6-982a-54afd7a0e399",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba6650-cdcb-4f41-ac00-b1ac924cdc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30810b4-a9ae-4513-a8a3-611ffc19aeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dfba6b-5040-4885-b1f1-58cb32c2acd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c90e26-1ac9-475f-8d7b-b7107b974e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137b1d31-4473-4deb-9a92-a222b16b5d95",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4d08b1-dede-4c29-8266-c49a931b293f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdfee7e-3c55-463d-93ee-457c58433b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3624b0f-62d9-47dc-b78c-9dc3aa2e78d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e70235-08c2-47df-baa2-924878ef5dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f30200-6bb8-4d19-bd93-73c51fcae4f1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8dfcb5-d25c-499f-83ed-d48b01d2db7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b311ed85-fb76-4f68-841a-289f9663c595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa2d27d-5890-47d7-99b7-3dc1a6f56bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866ba41f-8185-42fb-b464-611eb49532aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c432b06d-7c02-4a12-bdaa-d91c2605b907",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c91b2b-a1ef-4724-b245-d1c30a90f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dd2c17-d45c-42c7-921f-1cab6f29756b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced23d1f-6945-4bb9-883a-0516f7eb211c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f2d581-a36e-4776-88d9-d8a961054492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fab227-4351-486f-b1d3-82366884084c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2dbf08-e6a2-41f3-97c7-de5cd378c012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f85cb41-e86d-481d-9c59-f6dd0a0b5bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fe61db-939c-43c9-bad9-5560571a217e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b319a508-79b2-458f-8a70-64a4d506f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad1d52e-8b11-4eaf-97a9-697d38ab13c1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc68ddc8-5987-4c46-a878-9d319e79bc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81ea589-ee71-40a3-ae36-e1c3f0824fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a8f660-e9e8-4051-8ddc-a1943ee32f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61214bff-a89a-4119-90ec-3fda7a9b6688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f93351-f362-4012-b10e-0f9068310aa3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d89af21-f9ec-419e-8b95-0636414d1253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60331fd-9ac7-4264-b9a7-34d6397ad045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c36c14-7753-4533-a08a-b1e15cec97d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a4fd2b-7cc9-4006-8ee4-605428f4aa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa514fbb-a4c7-41bd-a5cc-d50166a06fd2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d418a4-2bac-45a9-a7c0-19f7959b8e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda27639-c371-4472-8842-d195ec90f311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfea59b-6110-428d-8918-27cc808b09f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ef0e64-b47a-4682-9f62-7e13b9f60da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c9e928-c675-432a-9b55-f4d6da19db74",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4937be60-aecd-44cb-8d3d-692011e60f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd26b14-0b13-4dd0-a302-d34c0a9d82c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1567848f-2c34-4a0e-95d1-e74d3e9f8873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33741d2-4197-4e75-ac15-bdc32110dfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17f163-e651-4318-a273-bacc5157eb97",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27635685-09ca-4ae5-aea7-a12b468bf807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9971c33f-45d3-4cc4-8285-647e40660a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2513e10-eec3-4f33-a3cc-eacd06f44034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574d4dd4-7c87-4e86-816b-7d007b91ff2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30b6319-cc2d-4ec9-8894-cf179a0b204e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce06dc-f22c-4df5-9763-5d2cff2c1b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9872c7-15a7-4e58-bfd9-e5745964d75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b76d23-24bf-4786-8dca-a2452d353433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ed501b-9f33-4807-a40a-a7c9d111c767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37acd7c5-fe9e-42b4-a8ea-ceddf75afa44",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5d312a-7c18-4f8c-98ad-960102d7c26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f0218a-a9c8-4d82-b298-bd522b844ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e092ad8-f26d-46d3-a6b3-a12f8de5a93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9825c0-914d-4931-8786-bbdc1342056e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9247f2-5a88-4a42-a9e1-20d7932150f9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d00beef-4af3-4450-bd60-b341ff5d8240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea67e53-5ba6-4385-86af-b00e57d5a61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33a4e31-2bb4-4ee6-80f4-43bf1615ef65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b345e4a-e999-4350-b589-c9a6188c8a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37471236-3691-4410-9b16-94e541ab43c5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96defdc4-958c-49eb-bad1-e49d8ea41e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891651a-7c1e-42c6-a809-3229152317f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9d9d6d-cbdd-424a-b213-035f1c606486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bc47dd-cec1-4f7a-b8b1-13dae1550012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04089f0d-cd97-4b61-99d0-b79c8c0304e0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299f90b-3b48-47a1-aa28-07b2c5d1185d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da716d0e-3822-452f-90e0-693097caa7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29c5391-6489-4038-8060-0a7c7b841a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cd6f90-2941-46c9-acfe-ecb59f69600b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc38fc8-d71b-4d0f-8965-cd184ccc55c8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e9cf2-6308-4da4-9183-305d463fe817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31787b0e-5f01-4e0d-96f7-bfe3f348e199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5e6971-9df7-4bdf-a693-962f9aa79eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff5f164-294c-41c6-99b4-c8b853960da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0203f0-cceb-4fae-ba0f-51f1e9112d14",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bc6c30-8879-42a4-879c-c02bb97538d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8ab8a6-d60a-4fe8-b142-920e417bfcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b6acd-746c-407a-85ce-81c2d13f3d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e09f47-5bbd-431e-a46e-1d5a304a270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a4b419-fd17-48a6-b9a6-e3fddc5d2978",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a64ee63-1a57-4c28-99a9-1ca38b0bab0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef95d3c-4793-41b2-b38c-7b31b072bda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6c0b5a-9a7b-4995-a97e-ccb78e52cb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59613c1-b67e-4c06-99b3-7819a42c9c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a48894-8864-44d1-b13d-f30b46001eb6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c04c0e1-79e0-4881-ab1d-c72bf163a924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ace498-75dc-4602-8d34-4bded75b273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805fd41c-eb85-40f2-a977-40c520c6fc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd68157-5e5a-4805-bf9a-08b187eb4fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fb906b-7f6b-4d7b-ac6c-b1f27637f6ef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c441546a-580c-4339-91f7-517a39047407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6fe49e4-5bea-4c5f-995f-3cfcac8fb0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb8e06e-646a-4f30-a079-876b215f7e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e6102d-9e11-47df-8dbd-71bfd65f015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf9015b-3934-4cf8-8d41-652d1e8e2eb6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a80ca64-2946-4bd5-9bca-bed691d990b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb1110a-eb6b-4178-af9f-57728780afa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addf53fc-8b5d-48f1-8e1b-3df0625fe840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ce40f4-64f6-42e8-ad00-c6f6264cbf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490fa881-637a-4a10-a34b-bc371e4c93fd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c4eb6c-9bb6-4e6c-815c-6ac608d9ac1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d634a98f-c528-4824-9ee1-60ed0ee37fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aec7ee-7c40-4bc5-8b6b-b3a457d3937d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17017c8-ea10-4e83-9164-a6445a97355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0c0a4a-bf4a-4ac4-b2e1-3df790d19600",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459439c2-7a5a-4650-bb6a-e7d054f42a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e678f12-5777-4626-8b11-abcb39ae4ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1590039b-a950-439d-b02c-7e5c354ae9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef4fa0f-d874-4256-ab31-d25e89b543d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c06fcd-56a1-423e-ac24-f203f53f621c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b23269-eb4d-4e5a-a63d-e69e0977b5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f18e81-d084-4515-a121-e16d671b05fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd7fa7-bf0c-44f3-b63f-5db9f0f0da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda37f88-451f-4d72-9ac9-3716952ce56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70189dc7-0327-45e1-9e3f-3cf8354d9852",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603f6ad7-b9ba-4d79-ac03-ee0dd0997649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5029872b-6206-4cde-9c05-327d427b5c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a1f2d8-5d75-4938-97fa-66aa1c42b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d00a845-583d-45b1-8358-4f26484df96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97500313-5ac5-479c-a900-afbf7ec70948",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c69c597-0146-44eb-867b-a2b63a87d38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3fbe72-6358-4a77-839e-9ba26665631a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e576bedf-ca2e-4da2-ba59-4d46dcf84c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e893127c-8079-48e1-8f4e-f3dc9a31aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a513d7fa-ebf5-453b-a8b8-8bf95b4f710f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d78f53a-7b3d-4121-a6fa-324ae5ee3cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64efb691-9eef-46dd-9a08-8ee90b4e79a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457e9ec5-e79e-47b5-b9cb-98567ca8f30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057de644-ca0c-4d04-8556-8a45fa8c9f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49a702d-dde2-4702-a45d-7c910d01eb5d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7490b9b-c279-43e7-849e-afb81e90e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f128858-f0ba-4711-bcf6-ca7059c8b870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eba5fd2-1b6c-4ee2-995f-e9766f8ae5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caaf730-ee32-4d45-96b5-1404027a878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfcb3d8-7a83-4459-bfa9-6d064f5a2fff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3014b8e3-62af-4089-b9dd-ee57e2213745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924d8671-8fcf-431f-b26b-6a186925115e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3817477-afef-456b-93ab-6bb3b7fa4489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529cb42c-f7c1-4007-95e0-b26202200b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b8bfd7-d091-4791-8a79-a2cc783476eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797dc837-5198-4349-86c8-41acd6d1410a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877206f4-d6ad-4172-a5c0-c0803ba67d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad85992-4956-4196-ba84-d1592e7b3273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc33da-b7c0-4fe9-80c4-1a49f126fba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0401bb12-c794-427f-99b1-52bba29b38f8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6717fc5-133f-4210-94a0-80c9cdaa2c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151b4c74-9d53-4d1c-95e5-35b55403a19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed414312-aacc-4453-b9d5-d0431b714f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c5ffa0-5046-4009-8d4a-c19469f3a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c4d430-d6f1-4f26-8a3c-037ff39750bf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0099a7d-9ea7-4c19-8619-36e83e523750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61557266-ecd9-4fbc-9a42-e93903be541e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5a3a36-bd65-4517-aecd-cba049490b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44336d0a-9c33-4481-afab-a173549a0205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fc5db7-c0f2-41c5-84c3-b9bab35514b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd4f93e-07c0-48f1-aa2a-e69e75e5582e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160b63e6-57e6-4c5a-a856-c73975a795f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7782e60-87b8-4900-a38a-79d96b0cb2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa84f598-dff2-42e6-abc8-ec09c4bfd2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816bec34-b896-4904-9664-48266b06a04f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3375af-86f9-475a-bb38-1357e9dadd8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e893039-4016-4136-84ff-f06d58f416ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0386f21-239e-401e-bde3-df90d2af75c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd98fc-a770-4102-9cd7-2f3b95ab6dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1603baa0-5fa1-4ad6-ad8e-1fd719170a70",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cc9b8b-7c15-43db-8b25-5a566718924e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9537ba4-f781-4fc0-bba4-dcd0009435cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b900a-ee72-4920-82e1-58544b26170c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1816c5b9-15ac-4ab5-9566-c7f706e063f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa221918-f562-40f2-b2b9-025ec0e72d38",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c443bd-7524-4e1e-9d33-ecab834fb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b4dbfd-1789-4c43-a767-64d5abb7f620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe0aa89-d560-45cd-b00f-11a044f7cf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9aabfed-f04b-4039-b9c8-dbda6c44c98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e714064-f7ec-4848-b478-1fce67c19fdc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c6b404-fc30-4a6f-8f87-6ffe46e4ae7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaba16ff-c7f9-4478-9faa-a5b608cc8497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1021589f-4bc4-4e24-879e-95e38cab78df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f000c67-4305-4645-83f6-ca24d425a845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7c3e53-1f51-4f33-b3ef-879b12d9da71",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeaf17c-531d-42a4-a7bd-a97cbb7ad4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac35c0c-2911-4fa8-8f31-18a1e381f6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c04fb3-ba68-4327-8dcd-219f445c9dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0113b80-c80d-4f1f-8848-ebc452c79379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0bd7b3-d9bf-40e8-bf9b-761b928f19b1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883ffb2d-bc25-440d-a3af-2df9d7f28ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5325f62-3738-45f6-8618-fb713b9fe6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8733d51-899c-4923-b09b-a527eb3da28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80722de-d8c4-4ad6-99e6-b212b38bfc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce111c69-7be0-4091-baaa-dad773c2be94",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6ee05d-dfa6-4e16-a1f8-862936726ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205a5bf3-4368-435c-ab22-8dbf85a33fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb4184d-5c56-46f1-84b2-deb1ee2bd6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83159ea6-39d9-47e9-9de3-1271cfffb8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59798c2-2acc-4fe8-9b2d-cf2d82d98fe0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7675cfe0-82e2-4aa5-8578-9e46dc19ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b33c3e-4b1b-4200-9979-2555ea38918e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d49ab96-b112-406b-92f1-24f5bcde74d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b943d9b-3d32-495e-960a-54ef14961449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5b002c-5134-43de-91d1-aa6499310c02",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7388b18-63f4-4080-bc96-5c34a0dcb82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fbae38-6e15-47b8-bbf8-06516888ea28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585d6cf-5e33-47e8-88e5-d6934b773fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ae1f67-c17e-4b8e-8f50-5f5081034935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c04b38-e67d-4c5d-bb4f-e19de4268c3e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007e1463-0c3c-44ed-af5d-f43f42dd0676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3870bcb-95ce-464a-b176-1d884950dd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24f089e-f85a-4c35-9753-cfbc2bfbafa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319f8394-4d38-4e5f-bafb-afd5e70d0bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ff099c-42e2-4e92-a86d-3dd1e57579d4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f6190-2e9d-427b-a41c-262d06e286d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cdc5ad-decd-4fec-82aa-3b033d633aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006bcdde-2926-4de5-8692-211a9aafb247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f1d9a-0932-4b7e-bfc3-5ef88b99b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ff1426-cc8b-442f-8ed4-693348d84621",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48755f8c-1ba3-47fd-bb49-f2030559a5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a66e0a-7f22-4ddd-b145-f32e6edbb534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aeac22-dfcc-41d9-a974-b40739f33952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34e5e69-1db4-42cc-a03e-efa3b1316fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293fe7d2-6242-46b2-9ed0-40ea8420c42d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83bbdde-56f9-4c8b-b1e3-8f4757d31c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3213219-848a-4f7d-8f9a-2070d81ffe69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e8ba5-50be-4d33-9fc3-aed3a0d0ace5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf1eb6a-b206-457a-8c4c-740cd3bacaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616c5a8a-b37d-43ab-8471-32bdc9e1c54e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c9118f-86bb-4fbd-af56-aaf2797a8155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d62213-7fa1-491a-a013-d7a67cf76ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387fc1b9-c691-42a2-a39e-f18fc45285df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0b9bd8-55db-4b6e-93a5-ea8571abba80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5d4e7b-5dfe-4274-8051-a0dce65baa19",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c366fb-5751-40ee-9c59-544dde238b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a98158-fea6-4e9f-b7d0-d04a6dd24243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf123ba-55ca-42c2-bb78-a1032dbb24d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c26fc02-8a4b-42bb-a14e-c16632d257f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7acc7426-88a1-4583-a10e-31af71ec0974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f843c846-e762-429b-b763-d2cad851b5ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eafcebb4-4bc4-47ac-8482-6bb52147cf72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd34d83e-6c1a-49f4-b1bc-4a4fbc3f6ae5"
                    }
                  }
                ]
              },
              {
                "id": "5e632545-3d87-4635-9cea-4bdf7d9d2b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6935f982-64ae-48c2-b2d5-0237fb29ad12",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745f3928-17ef-475d-84fa-7f1d48dd723d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cde7fd57-2334-4a2a-857c-cde4f8f4ddeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb91739-b6c1-4627-98af-1a1924ab0da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2896109c-f659-46a5-a393-e7a198894b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff4b2f9-c541-435f-b6e6-ad42414d4a71",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7712efa5-50ef-4b24-a3f5-4f5cb7fde33f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f7b8ce7e-3e33-4ab1-99e2-eae1cd097485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f925c1dd-73df-43f6-a742-d5b9902c3c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b8418fd-67b8-475f-9ee2-a94ee2928b14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "152a00ba-0dc6-4b5d-ae14-02937760014d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79c3879-90fb-40dc-884e-3845ba3b5232"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca1379a9-bea8-40af-960c-2109c77b73fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824fe0d4-fd08-46f1-aa6c-9e3ceb6806f3"
                    }
                  }
                ]
              },
              {
                "id": "7b6fb6a8-ec63-45fd-bc94-bf0f0b6f470f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2592d9d5-6055-4227-871b-bcd8df2f624d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcec2e8-4f01-47da-a15b-4d8de14814ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1821250-0713-4dc0-bc4e-06b882152274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a7a0b7-eb91-4748-b202-a0ba7fcea4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a65a0d1-1a37-4853-ba40-f3e340b5d26a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "185fe187-e300-4115-9eea-4f0bad95afae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd4af513-d758-420f-8579-1ee557b8b326",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de0e4c2-6bae-4d8b-bf3a-7231f0e820c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36276455-da4f-42c0-9991-146e32337c8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f267561d-10fe-4b06-94ef-30196cdaa227",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35cbff4e-4159-4385-816d-804c77b15344"
                    }
                  }
                ]
              },
              {
                "id": "dafad66b-f71c-48eb-a128-5fe631f11aec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad5bae91-bb51-43af-9785-e2d5c62af74c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d10e163a-e0f4-4aa6-9528-d6c8274d9785"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09a612ab-7e3a-4ee0-85ab-3728d20aa156",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf614688-21f4-439a-af4a-4bb5e62f0f24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5a648a7-7143-46f0-b61c-832aea064d18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d7bec42a-3066-4bcb-ac8e-2d362354fcba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06da1804-4695-4d6a-b494-b0101694a533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd3d0043-bb56-47c7-ad64-22ff45760914"
            }
          }
        ]
      },
      {
        "id": "cad37413-ad47-4841-844e-51c506e457e8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9080a924-fa0c-4a98-bd82-b19bcff04494",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c38f2b4-bee5-4ee3-99ba-343c94e36786",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8980fb-b29b-4446-a40f-4d401aaf8c03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "068b084b-122f-43a6-b132-db435d6576ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8747e780-0262-4fe9-a727-b6ced45d260f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16cf2003-02e7-4a08-9407-bdda69328725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6531743c-1855-48fa-8167-9b06ed2b83d4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d7eb45-7669-45ea-b8ea-bffe9f33cdde",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "419ea7d9-4c1e-4eb7-aea4-fd9a556f2e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38830126-f8ee-40c1-9895-2bbc081f21ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bd835cd-96ce-4620-b104-c378b1562230"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b7dd6e1-bc9d-4174-9923-2ee2315fc360",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af5b5d6a-b953-46cf-ab24-74e194725930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97253a09-d1b6-40c3-a1c6-d4ce0406c8b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef2c55d-a550-4602-8caa-bbd54aa2ba65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5d9bf89-d245-4bd9-848e-6f631f1c3cf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "075ca05d-8aa8-4081-b92b-e7b84b278ec5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba3b940b-5022-421c-b407-1eb6f3c60497",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b685aef3-d310-46e7-a072-b6c4409d6fa4"
            }
          }
        ]
      },
      {
        "id": "46b3a331-5d59-4adc-99a1-0e1a2548d711",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c386ebfe-791e-43c7-ae31-244c0410e2b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff1be79-bb31-4fd7-b84e-c8f469aa841d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b6c2893-e179-49b9-a8cb-0382d7b9dc89",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f4f38-87bc-4cf3-9082-9fcf97741878",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9553e7d1-61fa-411b-8ba5-00651632e06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c8b97f-b347-4890-93ce-8225906829a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "484d1010-bb68-48b8-a0a9-9ce054641b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004508da-cb82-419a-b0a6-4f598af75b45",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83362716-2337-427f-9055-ce913b8aea94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e5d2d533-5b4e-49e2-8f48-997ae18edf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0bd311-0f88-43cc-85f8-172408b8bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fcb88f3-8745-4470-ad87-41949c578105"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6df0fd4a-4e35-418b-9351-c91bd9100fbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61a0a142-36a3-48a9-a039-fddf75cd9138"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa5c6355-5d72-49bd-8657-1d9f20d8d172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a5953bf-9822-4c26-b531-5f7da904868c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80cefba7-285f-4f54-9469-547b0dd7bd62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cf511322-186c-40a9-9a5d-6d341ad64024"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67a4edf3-5e09-4c1c-8970-0b7560495990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50a45ced-f509-4680-83c7-7ec0e8b4b900"
            }
          }
        ]
      },
      {
        "id": "f9deefeb-7487-4929-9f82-ac5d65e9f71c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca079277-c46e-4b8b-8aa1-92c5374ef6a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1ac3ebb-568f-40d6-997e-3f31fd895720",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd48e8e5-8639-4ee1-ade2-d6e9f6cf6f6a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f13a11d-0b8a-4c8d-a05d-0e68d87ef27b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a8211f2-9d3d-497f-944a-9096464395ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e8bfa-0bf9-4fc8-a139-88ed565a0861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56aaaed8-5aa9-45de-a744-050b583b55aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973dffe7-8dcf-4a11-b6ac-d55ab6bf5d8e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e355db7-7fc0-422f-ae4b-b35c8a6798c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ac64d16-6a7f-4ad2-8a84-03512e6a26cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad5b474-8493-451d-8a14-f2c02ba1b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5205315e-21e8-4146-8744-83cbf561d19b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "838c5f62-0122-4613-9ae9-9fe37a682872",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d13621ce-4210-403c-9190-9d4b70cf72ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4c6a123-cf42-4a7e-ba23-ccb32a4638bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afc62301-deb0-4f95-8147-55db8edc88c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43ee4395-6f19-4338-abea-4911f5796811",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "353be5ee-b814-46b2-a850-d0aada7e3bc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e323bfc6-3f64-4818-a742-da68b3b21ff4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ecc0833-3e08-4b5e-a677-8e69cc027d75"
            }
          }
        ]
      },
      {
        "id": "bd0179f3-a050-42f7-a647-ce7d19557a7e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23ea4689-5e06-4e4b-b4fd-b9a08239cb05",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35262313-1074-4a84-90f0-9c3e7a530526",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6af353b-8562-4c78-864a-5f840145a1f4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3bd92f2-6fe0-4da0-859e-1842ffe3a535",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47fd5f9c-a02b-4421-98b3-a89f90fd682f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 667.3822393822396,
      "responseMin": 6,
      "responseMax": 5970,
      "responseSd": 675.245801544218,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677285668559,
      "completed": 1677285853786
    },
    "executions": [
      {
        "id": "4dcb9e5e-cd96-45e2-984a-821bbdfaaf72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "597793f1-4f69-4af9-8412-809f2bfd56fb",
          "httpRequestId": "4ac5d7f5-385c-449a-be37-4589d416d0ac"
        },
        "item": {
          "id": "4dcb9e5e-cd96-45e2-984a-821bbdfaaf72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2350599f-1f1f-427e-afd8-c0afe85c8d57",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "a749569f-ab77-4bab-9c07-91856d2f70b4",
        "cursor": {
          "ref": "8e6bbadb-3356-4471-a36a-e9b78a07cc4f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a1ea360b-a4a2-4dd1-ab18-cf7730103ac6"
        },
        "item": {
          "id": "a749569f-ab77-4bab-9c07-91856d2f70b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc1887eb-01be-4af8-a14c-a4b92afb8ad9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5735c26b-5729-4ede-b3de-620147b142f9",
        "cursor": {
          "ref": "b9315520-eb8e-49c6-ab6f-8a9b3b19284f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9df65413-87ad-4381-b5fb-e91521f01375"
        },
        "item": {
          "id": "5735c26b-5729-4ede-b3de-620147b142f9",
          "name": "did_json"
        },
        "response": {
          "id": "74abbd9c-434b-44ee-80f6-1958f10719e5",
          "status": "OK",
          "code": 200,
          "responseTime": 847,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08517c0b-0111-432d-9f02-cbdb3dc659f0",
        "cursor": {
          "ref": "6e394355-142c-4e19-958e-8343a868cd27",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5dc91f16-69f3-4061-9110-08b39d368939"
        },
        "item": {
          "id": "08517c0b-0111-432d-9f02-cbdb3dc659f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "78326b83-bb12-446a-a3e7-c9f9935fd0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08517c0b-0111-432d-9f02-cbdb3dc659f0",
        "cursor": {
          "ref": "6e394355-142c-4e19-958e-8343a868cd27",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5dc91f16-69f3-4061-9110-08b39d368939"
        },
        "item": {
          "id": "08517c0b-0111-432d-9f02-cbdb3dc659f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "78326b83-bb12-446a-a3e7-c9f9935fd0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15eae15-7c57-40a6-a91f-1cbb9245ff1e",
        "cursor": {
          "ref": "165707f2-062a-4087-995d-b102316386b6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a08e9527-624d-44bd-8301-3b6146e0f407"
        },
        "item": {
          "id": "d15eae15-7c57-40a6-a91f-1cbb9245ff1e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe6f6636-d037-49fa-aed1-fd6eb14b13ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 809,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15479b5-5ec8-4ad4-86fd-5d4af3775e64",
        "cursor": {
          "ref": "1112e545-a39b-47ed-9f1a-5e51dc89eee4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9dd9d297-0974-488c-b114-882395d027ab"
        },
        "item": {
          "id": "e15479b5-5ec8-4ad4-86fd-5d4af3775e64",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e93888b2-9193-49a7-b9a7-b2b05148037a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 782,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ad30fc-9c4c-44a8-ad11-459de4b67e7f",
        "cursor": {
          "ref": "9b27d92d-b317-4347-bec1-109c8ef65e97",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5084c2b9-a41b-4bbc-b129-7a787dab65cc"
        },
        "item": {
          "id": "88ad30fc-9c4c-44a8-ad11-459de4b67e7f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "86fe71a9-56e9-45ca-b366-db860854f049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819c667-2ddb-4a5d-bdd8-cd6cbec83c9c",
        "cursor": {
          "ref": "49ac2ea0-dc16-417b-b102-cfe90767c1a4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c59cb67f-7dd7-4074-a19e-1b64cde1c207"
        },
        "item": {
          "id": "b819c667-2ddb-4a5d-bdd8-cd6cbec83c9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "37e89301-cf1a-4406-adf2-5743fa5da001",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819c667-2ddb-4a5d-bdd8-cd6cbec83c9c",
        "cursor": {
          "ref": "49ac2ea0-dc16-417b-b102-cfe90767c1a4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c59cb67f-7dd7-4074-a19e-1b64cde1c207"
        },
        "item": {
          "id": "b819c667-2ddb-4a5d-bdd8-cd6cbec83c9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "37e89301-cf1a-4406-adf2-5743fa5da001",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd979325-2dc7-4fc8-a8e9-ca42f3327fc0",
        "cursor": {
          "ref": "26101663-c198-4eb7-9355-286dbe23dfda",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d1fd680-0dc5-4808-a777-ee38a681efae"
        },
        "item": {
          "id": "bd979325-2dc7-4fc8-a8e9-ca42f3327fc0",
          "name": "identifiers"
        },
        "response": {
          "id": "ed95b670-8972-4a24-ad3b-dcc2a2098ce4",
          "status": "OK",
          "code": 200,
          "responseTime": 1197,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2ffe3-61a6-4515-b8bd-8290c2261f52",
        "cursor": {
          "ref": "d9cb9c3b-bb83-4eb6-88d3-dc6dc8846bd9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f033b6a-aac0-4a4a-8a7d-a9e9d04bfba1"
        },
        "item": {
          "id": "42f2ffe3-61a6-4515-b8bd-8290c2261f52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8bf2a6a7-b322-4a72-ace3-26540e31502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2ffe3-61a6-4515-b8bd-8290c2261f52",
        "cursor": {
          "ref": "d9cb9c3b-bb83-4eb6-88d3-dc6dc8846bd9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f033b6a-aac0-4a4a-8a7d-a9e9d04bfba1"
        },
        "item": {
          "id": "42f2ffe3-61a6-4515-b8bd-8290c2261f52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8bf2a6a7-b322-4a72-ace3-26540e31502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681a13e7-e31b-4bae-9768-b3ff1a0c78ce",
        "cursor": {
          "ref": "b774e81e-6247-4e44-b8bc-fa176aed1a7c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "98651583-f02c-460a-91c9-f3a7392e192f"
        },
        "item": {
          "id": "681a13e7-e31b-4bae-9768-b3ff1a0c78ce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "55da9816-d8f5-4b60-bff7-0aa419805c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a5c85c-291a-4ada-a3b6-0247b9263b9a",
        "cursor": {
          "ref": "7fbbbcb1-95c4-47b0-a1bf-4b050fa199a0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f26e5bdc-4a65-4718-b227-7ccf080eeac0"
        },
        "item": {
          "id": "85a5c85c-291a-4ada-a3b6-0247b9263b9a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ab91ae7d-7451-4617-9bda-2136b604747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf1e030-64bb-43ff-b662-f5290165ead4",
        "cursor": {
          "ref": "d9ead676-2ad5-4e36-9bc4-f3a28cc90fbe",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5eb40f1d-5169-46f6-80b4-57b95be600ad"
        },
        "item": {
          "id": "9bf1e030-64bb-43ff-b662-f5290165ead4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "34fb5c98-2bb6-4d8e-a473-ec27bd773a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec15a34d-96f1-42cb-9443-fde7668bead1",
        "cursor": {
          "ref": "ddab6e57-8b60-4fd8-9656-08f03408a826",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "df41c596-8fe3-4fbb-ab58-58517be0fb35"
        },
        "item": {
          "id": "ec15a34d-96f1-42cb-9443-fde7668bead1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e9bcc1c6-5992-40fb-8eef-ee720980c419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22ea64c-ec02-4dbe-a523-3dd091fa634d",
        "cursor": {
          "ref": "8d545f15-7059-4bcc-a212-5d5f94dbcff2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "db71e5db-fc64-4064-8b05-5a268cad44ee"
        },
        "item": {
          "id": "b22ea64c-ec02-4dbe-a523-3dd091fa634d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "724f7ea9-026d-496f-8938-e3384929827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13aa66-27fc-45a2-8247-8bcc13229549",
        "cursor": {
          "ref": "5fe9e6d9-106f-4e70-bfb8-7442373bdcd0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e02952d1-92fb-41d7-a361-1052b2110b9d"
        },
        "item": {
          "id": "df13aa66-27fc-45a2-8247-8bcc13229549",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0fd457cb-9b3f-4cfe-9538-f0f2a3862993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89634bf-206b-4936-aea6-3bdd08b07917",
        "cursor": {
          "ref": "0f2e4422-77d8-404c-81ed-3148f8906e44",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e95d7bbe-f72c-407c-b13f-3d2159779f19"
        },
        "item": {
          "id": "e89634bf-206b-4936-aea6-3bdd08b07917",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f83e0afc-3001-4123-91d6-4985946c1515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d013e159-71c1-4e13-bf8b-b6e39f5c0e16",
        "cursor": {
          "ref": "13ab1bb1-6cf1-47c1-becf-14710f08973e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "078fd86b-87d7-4d40-a63e-0735331d9c36"
        },
        "item": {
          "id": "d013e159-71c1-4e13-bf8b-b6e39f5c0e16",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "18abcedd-e72e-4256-a765-69daba5c7050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eff6490-68fb-4c7f-bb1f-9d0e0a6d8c03",
        "cursor": {
          "ref": "0766509e-88a5-48c7-9f53-637a177611f0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ac01fb76-aaaa-4f90-9089-27bd1f2ef16c"
        },
        "item": {
          "id": "4eff6490-68fb-4c7f-bb1f-9d0e0a6d8c03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fb17af96-2a13-4358-addb-7872c709000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b396a-efff-447c-8a63-ffe59bd7160b",
        "cursor": {
          "ref": "87e2799c-86fa-4216-9bf4-16b8d803acf0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4c06d509-1264-42ea-bcde-398b65f20bb7"
        },
        "item": {
          "id": "fd5b396a-efff-447c-8a63-ffe59bd7160b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a5e9e1dd-e6c0-47e7-9d97-66ecf3127a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375cdaf8-1301-4801-929c-ae5559454768",
        "cursor": {
          "ref": "926a3b13-aa5b-412d-a76a-12e854b0d53e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9abdee7-3c35-4347-8b38-3ffd91eea74a"
        },
        "item": {
          "id": "375cdaf8-1301-4801-929c-ae5559454768",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "72e3c607-55fc-4a38-a4f0-11ec75524db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e800617-a667-4648-9618-c23600787a9e",
        "cursor": {
          "ref": "ab7d70fc-90d1-4e54-b8ea-d8bc3185ded4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1beb917-a22d-4429-9a14-91279307749c"
        },
        "item": {
          "id": "4e800617-a667-4648-9618-c23600787a9e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "17264e37-4b46-48a4-a4c7-8720961c7d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114d01b-dd61-46cd-a3c4-70690dd856a7",
        "cursor": {
          "ref": "73a2edcb-8439-4fe8-a19a-e8e4d56b68e0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2c3473db-7a99-49a0-a37b-c865767bd022"
        },
        "item": {
          "id": "4114d01b-dd61-46cd-a3c4-70690dd856a7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1bb6df20-14c5-4677-bf04-48bba2a71596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1459,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcee9ec-50c3-4ba2-914a-ba010be83326",
        "cursor": {
          "ref": "b38495ae-a516-4497-84a8-085a255265ea",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb528450-a123-41a9-b639-8bac0c7dec82"
        },
        "item": {
          "id": "1bcee9ec-50c3-4ba2-914a-ba010be83326",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c88bd86e-3d60-43e6-800c-b451ada9de32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1097,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b16319-c74b-4a6b-8761-99ed35d86c40",
        "cursor": {
          "ref": "01425bc5-c5cc-4591-b969-d0810d5a28b0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ee2e99cb-88b1-4177-a8b4-3f76ebce51dc"
        },
        "item": {
          "id": "81b16319-c74b-4a6b-8761-99ed35d86c40",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "446d03cd-d2df-4942-a581-1f1b9ac6a758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1832,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a729ef5b-9f9b-4c04-b2ea-fa513b15d3b0",
        "cursor": {
          "ref": "352dcff6-6acc-449a-bd12-7ccab638d4f9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cc55fe81-4bbc-4aeb-b1d5-d47a88c4ca80"
        },
        "item": {
          "id": "a729ef5b-9f9b-4c04-b2ea-fa513b15d3b0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67c4a901-d932-4a15-a03d-2ed35d20fac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1487,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4884dd18-7b48-4f73-a6e6-aa1b5a1ff362",
        "cursor": {
          "ref": "cb2331f0-6dab-4563-b43d-df0faa5d00b7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72f2a87d-b28e-46c1-b802-271d1e1591a2"
        },
        "item": {
          "id": "4884dd18-7b48-4f73-a6e6-aa1b5a1ff362",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6883e140-e177-4bb6-beda-8a04263cfd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f381bb8-f1ef-473f-a53c-05e63b9df4b9",
        "cursor": {
          "ref": "f2f2037e-8426-4c90-b228-f24f657d7259",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7034f53f-02d0-4faa-9458-4ad1c308bdd1"
        },
        "item": {
          "id": "7f381bb8-f1ef-473f-a53c-05e63b9df4b9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4150ffec-3036-49f3-a63e-9a6b7274d407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1610,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93d3e08-935f-4592-9a9c-aa32f8bf0938",
        "cursor": {
          "ref": "f782a88c-19f3-460b-97ff-56c6c920ff3c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16742403-afd6-4a96-998c-7a997a66ec8c"
        },
        "item": {
          "id": "c93d3e08-935f-4592-9a9c-aa32f8bf0938",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f1ab3240-67de-4708-8f19-fde2032c0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47799b0-8a51-4cc9-87d7-859fda79f54f",
        "cursor": {
          "ref": "15ecbbe1-31be-42a4-8efa-4fffbd593386",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a287947-e738-438b-a50f-7c19748303b7"
        },
        "item": {
          "id": "d47799b0-8a51-4cc9-87d7-859fda79f54f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0bdc3bfd-f571-438b-a581-58e50de29dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c64a3a-16a7-4558-9c6e-b89c5a2b60e9",
        "cursor": {
          "ref": "dfeadccb-b1a3-4a43-b85b-1e3209701583",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0ea55e77-d670-4b68-af45-f03cea209ed5"
        },
        "item": {
          "id": "f6c64a3a-16a7-4558-9c6e-b89c5a2b60e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b5a979d-1801-41e4-a23a-429924d9494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d255224f-f473-448a-be1b-e8b0114a486e",
        "cursor": {
          "ref": "be62683a-743b-46d9-9e8a-7b72a6010e12",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "db6c8ceb-4a2c-47da-b486-0cd4a95af085"
        },
        "item": {
          "id": "d255224f-f473-448a-be1b-e8b0114a486e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "747214fc-5b9e-4976-a00e-e7e7d19e3f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd30aa78-cbc8-416f-9afe-fd9ac4012536",
        "cursor": {
          "ref": "7513c072-1f8b-4636-8c35-c82f10822bb0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5fab87c-d585-4e3a-b578-231c50673233"
        },
        "item": {
          "id": "bd30aa78-cbc8-416f-9afe-fd9ac4012536",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "acfcd99e-4482-4a2e-8827-c000f13df224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac6631c-cbe1-4ac6-b47f-c4ef6f81f45b",
        "cursor": {
          "ref": "47b3c1a7-1bc1-499f-996d-56a3382bcb6a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "565723fc-7daf-472a-b932-7d56e599c90a"
        },
        "item": {
          "id": "5ac6631c-cbe1-4ac6-b47f-c4ef6f81f45b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6e9ad522-d069-4ddb-96bd-1125cd6a0872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514279c5-1aff-48e6-88f1-001bf751a0c2",
        "cursor": {
          "ref": "f2205981-5bf9-4f69-85d6-9ad99bb7deab",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3fb07df-69d9-4697-aa1f-aaeb48693ac7"
        },
        "item": {
          "id": "514279c5-1aff-48e6-88f1-001bf751a0c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d3cadab3-db39-41fb-9407-5ca432c8a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89505b16-2c4e-4072-a9a6-6849f7f0274b",
        "cursor": {
          "ref": "006ceade-551f-4960-a081-1dcbafe95006",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0c93b6e1-6453-4ffd-a167-23cf713f2708"
        },
        "item": {
          "id": "89505b16-2c4e-4072-a9a6-6849f7f0274b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e05125a-df34-4c9d-8cdc-9911d2dc7fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438880ae-9d25-40ee-9d20-b80421812a8f",
        "cursor": {
          "ref": "49ddf600-df3d-404e-aad8-79a03e309fb8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "df27b75b-2072-499c-882e-13b8bd51bd79"
        },
        "item": {
          "id": "438880ae-9d25-40ee-9d20-b80421812a8f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9a09ceae-f892-4b3c-a48f-42c98c33789a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d28d91-c5bc-4b6e-af63-b65adef99d9a",
        "cursor": {
          "ref": "59207f59-a554-438e-8dbe-623cf2909148",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c89e900f-c0cd-4d20-8d2f-d57f310dff09"
        },
        "item": {
          "id": "18d28d91-c5bc-4b6e-af63-b65adef99d9a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5a43443-fe63-4334-b84b-d6e0ec83f621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a4b8d-13c1-4a01-a36e-6702fb0f7e1e",
        "cursor": {
          "ref": "567f3300-bf14-4364-ae3b-4620df405a0a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "817497ac-6db4-498f-b4bb-99a318807635"
        },
        "item": {
          "id": "807a4b8d-13c1-4a01-a36e-6702fb0f7e1e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c17fa861-65d5-4c16-a1c3-82a43bd8e115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e42ab9d-f04e-4778-9e95-8fb8ecaccd1b",
        "cursor": {
          "ref": "1c4abd36-6924-4999-9886-91c10f89727e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2fa823f2-6a63-4aea-9c49-9604e700c77d"
        },
        "item": {
          "id": "9e42ab9d-f04e-4778-9e95-8fb8ecaccd1b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f25bfbe-c61a-47bf-b3cf-06e9dfd80907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdef4081-9103-4e87-8dd4-580c438e88fd",
        "cursor": {
          "ref": "90b90199-35f7-4386-ad51-9a53407124d1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b6a6ecfe-2ec5-44a5-9481-feaacb17bbd9"
        },
        "item": {
          "id": "fdef4081-9103-4e87-8dd4-580c438e88fd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6692b992-fa39-431d-9c3b-be7ee5f095b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e3ac54-5a20-4cc4-9761-87b22284de57",
        "cursor": {
          "ref": "5a5fa267-928d-4215-a890-7ec5edd4fae6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7e015262-7b4c-4a96-a440-38cd6279debb"
        },
        "item": {
          "id": "42e3ac54-5a20-4cc4-9761-87b22284de57",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "56f77ad7-5849-46fb-8fb6-c6f8d7be2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966d47f7-7ab4-4f79-a1d9-6e21389953c9",
        "cursor": {
          "ref": "0321e24c-3450-4990-9d2e-a0c49b66b9bf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "03bf965f-3e1d-45bd-b89c-8ab8b6dbaf81"
        },
        "item": {
          "id": "966d47f7-7ab4-4f79-a1d9-6e21389953c9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eb35f6fb-d1db-4504-955a-7f30e862fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38277a55-8009-4fed-a6aa-89aca4a3c814",
        "cursor": {
          "ref": "3e77f3ec-352e-480c-b46e-57df95f6abfa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd95be01-eed4-48ee-87ca-e511ad6926d1"
        },
        "item": {
          "id": "38277a55-8009-4fed-a6aa-89aca4a3c814",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d878ae8b-566e-4958-9c16-3ce5cd4d493d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee5e27a-bad7-45cb-94de-e4117df1481d",
        "cursor": {
          "ref": "df8cb2f5-f81c-4681-8864-df90ee885ee3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "061f9a95-048d-48e4-96aa-a7451797c267"
        },
        "item": {
          "id": "cee5e27a-bad7-45cb-94de-e4117df1481d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e7aadd58-228e-45b1-b9e3-7ed18f0be000",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 913,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed5dfc5-3186-4c4d-9978-da08862e532f",
        "cursor": {
          "ref": "b8e25cdf-9c25-4fb3-a090-df6e9f0dee36",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "471ed5a1-53c9-4eda-b04d-d5dbe6593f34"
        },
        "item": {
          "id": "bed5dfc5-3186-4c4d-9978-da08862e532f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a3f7ebd0-5bcc-45ed-bc0e-34bdaa373c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf699a8-c7b0-45df-8714-38657abba80a",
        "cursor": {
          "ref": "d9e79cf9-475b-420e-84f7-a33231515f5d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "471b4032-62b3-4f42-92ab-425c497b554b"
        },
        "item": {
          "id": "1bf699a8-c7b0-45df-8714-38657abba80a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bb4445db-df64-4491-9fbd-e7b8f6763f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08defd56-27b2-4f87-b388-03f9decd3b91",
        "cursor": {
          "ref": "81d2ef98-e9b6-4410-9da4-2e444d6a2f10",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e08d0e2-0c05-46c8-843a-42094a5a6eb2"
        },
        "item": {
          "id": "08defd56-27b2-4f87-b388-03f9decd3b91",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1ee53310-db3f-46e2-907c-9439512e3c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b5c97-da89-4e06-8542-0828c2f16dc0",
        "cursor": {
          "ref": "e92d1097-024e-4c58-b042-001a5d02e556",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6309778a-f97d-4821-80bc-ed136c20424b"
        },
        "item": {
          "id": "138b5c97-da89-4e06-8542-0828c2f16dc0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1b0866b9-43ed-47d7-9334-39a702a5db9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fddef60-55e1-40d2-95dd-d56018694769",
        "cursor": {
          "ref": "45dff325-789c-4b24-a6b3-551a42af801b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4148978b-9c4e-40a9-a40b-421508416e06"
        },
        "item": {
          "id": "6fddef60-55e1-40d2-95dd-d56018694769",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fe33975d-edb8-4d29-8ba8-614585130ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4197e8-3f80-4d58-a386-daa150b32f70",
        "cursor": {
          "ref": "accbfa73-ed9a-4be6-8c25-b8269db0c5d8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "36412372-0e76-4cee-b4a0-dd232404e6b2"
        },
        "item": {
          "id": "7d4197e8-3f80-4d58-a386-daa150b32f70",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0ff229ef-1e6a-4624-94b1-d56fc45449c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69717a6c-a281-403e-af8d-cab1a58d4acc",
        "cursor": {
          "ref": "72f177c0-68ce-405d-9f00-da989712ea49",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "00dcf0ee-6bc3-4a4c-8cb8-55081e34904c"
        },
        "item": {
          "id": "69717a6c-a281-403e-af8d-cab1a58d4acc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73a2b301-d49f-4349-baea-fb9e845aa938",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 983,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178806d9-3e56-4d1e-84fe-498417d2d310",
        "cursor": {
          "ref": "4768acb3-122a-440b-86bd-ec0a812377f2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3387e9b4-cb84-42f9-bccc-2602f9ec4c9d"
        },
        "item": {
          "id": "178806d9-3e56-4d1e-84fe-498417d2d310",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "44c79a63-3490-4ff4-b470-9c40e0f8b65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13107bf1-b721-47bc-8ca3-2fd8019d3165",
        "cursor": {
          "ref": "f9a423e1-6582-4cea-a609-f19954944d84",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2f405959-4688-41e9-9bd6-f0bc23ded3d2"
        },
        "item": {
          "id": "13107bf1-b721-47bc-8ca3-2fd8019d3165",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "73ba4995-32ba-42ba-8f9e-a11b99a19d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff69150c-0bec-4479-a43c-e412d0644c13",
        "cursor": {
          "ref": "4dad2f91-845d-4fc4-814b-f18e04c7204d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ba82b60a-1a58-4d59-968b-6b9501e34dda"
        },
        "item": {
          "id": "ff69150c-0bec-4479-a43c-e412d0644c13",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6d025a71-94fb-4694-a4c9-283654c77014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728df02e-3ae7-4665-8163-98c7b76661c4",
        "cursor": {
          "ref": "2ba1b5cf-af8d-4ed6-be40-f23a0a2c859c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf4a5ab2-e543-4495-8a58-59be1a420acf"
        },
        "item": {
          "id": "728df02e-3ae7-4665-8163-98c7b76661c4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8af9767b-624a-4624-a4bb-63d2b361847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f14f0f-5715-4b8a-8f98-36c6484f3e6e",
        "cursor": {
          "ref": "b5ee29a8-c13c-4992-afab-809c3f5d5aea",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd750be3-6388-429f-9fe5-6ea45c4adc8a"
        },
        "item": {
          "id": "39f14f0f-5715-4b8a-8f98-36c6484f3e6e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6611ec95-7db2-417b-ad41-5b64b999dbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4cf50f-6b3b-4325-a1dc-b6d5c6917fcc",
        "cursor": {
          "ref": "703e6548-68df-497e-b100-63ac7cb47b63",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e40e21a0-134e-4740-9fdf-391ed47206b5"
        },
        "item": {
          "id": "2c4cf50f-6b3b-4325-a1dc-b6d5c6917fcc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df2942fe-b105-4894-8d84-5a37deb6a91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8417889-29ef-4ef7-baec-5db91efd5f46",
        "cursor": {
          "ref": "3a2323d7-211d-4889-be55-b8e064a252cc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cb3ee289-02ba-4417-87fc-4a15e2c7e7f7"
        },
        "item": {
          "id": "f8417889-29ef-4ef7-baec-5db91efd5f46",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "db439a51-571e-4df2-8bc7-7aa0371bf5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1c507d-d1e1-4b7d-a31f-9f706ce224eb",
        "cursor": {
          "ref": "ebd80923-61b8-4222-9b29-96597657a1f0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "48a58a2f-e1a7-4882-ae8a-b29bbaade829"
        },
        "item": {
          "id": "9d1c507d-d1e1-4b7d-a31f-9f706ce224eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6074e194-e0fb-497a-bcb1-27b0a8e9dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a39cee8-5f8b-468a-8b5d-fb05f07c7b8c",
        "cursor": {
          "ref": "218a02d9-3b71-4967-91b2-2f2902ed03f7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0edadbe2-beb4-4517-baac-816fe7495085"
        },
        "item": {
          "id": "3a39cee8-5f8b-468a-8b5d-fb05f07c7b8c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1cb66e67-fc49-4760-9465-e6c2dc4bc3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0882ba61-a873-4195-a35b-143ff21cb377",
        "cursor": {
          "ref": "9dadfc53-138f-43f4-ba49-a72f0d31c03d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b0a8bc3-0f63-41e0-b385-72caabd4c818"
        },
        "item": {
          "id": "0882ba61-a873-4195-a35b-143ff21cb377",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5c90397e-3364-4cc0-a5ee-3c70f7cdbf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d000e274-ba22-4337-be1a-7d6618092ffa",
        "cursor": {
          "ref": "4d24898a-fbda-4a71-a58a-8271e95550d2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ab78b35e-063d-47c7-880e-2c48e6dfe3d6"
        },
        "item": {
          "id": "d000e274-ba22-4337-be1a-7d6618092ffa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb145f3a-63b8-4b20-b90c-6d695cacf039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd96303-77bc-4726-9857-48bec43d0876",
        "cursor": {
          "ref": "bcc1e373-149b-4a85-96ee-5322741ddf28",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "48090eff-8f93-400d-8ade-e7be0ea34c4a"
        },
        "item": {
          "id": "2dd96303-77bc-4726-9857-48bec43d0876",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e37e0330-461d-4695-aeee-bd20f979712f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbfda16-ef4c-4d48-bb3f-bea79dea0a3a",
        "cursor": {
          "ref": "09f66631-9a76-4070-bd65-c83517873894",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b5f09b2-e17f-4b2b-acd2-276e665708c4"
        },
        "item": {
          "id": "0fbfda16-ef4c-4d48-bb3f-bea79dea0a3a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "390bfe41-530a-471d-bba6-76d5345ebed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3046d67-81d0-40a4-8072-cb126558651f",
        "cursor": {
          "ref": "270efcf0-d2d2-4db4-90ea-1b8d6fdec8b3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3bad9af-7bd4-486a-a976-6a5b82d684bb"
        },
        "item": {
          "id": "b3046d67-81d0-40a4-8072-cb126558651f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eb99782a-1d95-4395-9f91-666addc2b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3279df-dda5-4e7b-a2bb-402930cb6262",
        "cursor": {
          "ref": "5815b227-65da-46a4-8b92-a331002406c5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8198b5cb-7d1f-4e3c-86e2-c55b98cfb3cd"
        },
        "item": {
          "id": "6b3279df-dda5-4e7b-a2bb-402930cb6262",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "02a10fa4-869c-47a9-b035-dc081a665fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b7eb4-2f44-4c91-ada8-522d081e97f3",
        "cursor": {
          "ref": "fed22cef-5ed9-46f7-86b8-5480241f82a3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d15f1f4-e5b9-414e-ae9a-6d8115d31999"
        },
        "item": {
          "id": "3d2b7eb4-2f44-4c91-ada8-522d081e97f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "06da726a-fd3b-4fb8-81a1-c146e6fd280b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0cbd02-c487-4eef-8431-b56d5ed8c35a",
        "cursor": {
          "ref": "f636c2da-6a2c-4e39-9c73-6e39d8b0e62d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab675a18-4d73-4e9a-a31f-69bd3373a5a6"
        },
        "item": {
          "id": "9b0cbd02-c487-4eef-8431-b56d5ed8c35a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "198119a1-44f4-48a4-a31c-c3687908b737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44dc2c4-6a19-47ed-9e75-b9468ef93199",
        "cursor": {
          "ref": "c67f7dcd-2d5d-4f9b-92d4-3faba8792622",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ee5f55a8-e684-412f-9b34-d5b3638b0b44"
        },
        "item": {
          "id": "f44dc2c4-6a19-47ed-9e75-b9468ef93199",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "59b8c3f4-1a54-4d96-b3d0-b85142b99b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ae6d4f-5e78-4a95-b6d3-f722a3ea6184",
        "cursor": {
          "ref": "e2026760-e618-4c5a-a3ab-0d3a9cd1f088",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f4506437-409c-4c2a-b5d0-d906d40aafce"
        },
        "item": {
          "id": "37ae6d4f-5e78-4a95-b6d3-f722a3ea6184",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "877223ed-e196-439a-9b9f-5a2dc0dadb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f7de7d-7d03-453e-b18d-94c8ef288ccf",
        "cursor": {
          "ref": "4dff2253-a760-4c81-8839-d3b1b9c1286a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebe071ba-b33a-4b74-8a42-6e9225cde699"
        },
        "item": {
          "id": "13f7de7d-7d03-453e-b18d-94c8ef288ccf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3e636e6b-95a1-47a5-befd-36855350d831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8377bbb3-ebdc-4676-b31d-3e0364939bb7",
        "cursor": {
          "ref": "74ada3d1-fa7d-43e1-b2be-a604b280a58d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5306abd-e3c0-4dab-bdf8-7019e4b88d13"
        },
        "item": {
          "id": "8377bbb3-ebdc-4676-b31d-3e0364939bb7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b278858d-be81-4462-9809-a317c37df4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abebe894-7396-4c7b-88c3-19aaf96b3124",
        "cursor": {
          "ref": "bb99ce1c-ff0e-4575-a2a8-cb4b662f16ee",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a2199446-b46b-4641-b9c1-063893ce2733"
        },
        "item": {
          "id": "abebe894-7396-4c7b-88c3-19aaf96b3124",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "80b99e6a-a60e-4ac4-bcd6-ff5f6ce133bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb05412-c63f-4517-b7b7-dd47eb7549a2",
        "cursor": {
          "ref": "9bdffc29-cbf4-452b-b9e2-bb4f12b91e3a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1f4bdf5b-f8a5-4828-a91b-f85219207dfb"
        },
        "item": {
          "id": "8cb05412-c63f-4517-b7b7-dd47eb7549a2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "67a3287d-b34e-4a61-9c9f-dc6df6358ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb615831-2fef-464e-af3f-636d8330eb8f",
        "cursor": {
          "ref": "46a034b1-4543-412f-92b0-0349328c57ec",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "75a672f1-4ab3-4472-ab3d-b81f34dc7489"
        },
        "item": {
          "id": "cb615831-2fef-464e-af3f-636d8330eb8f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "93a45fba-0e2c-4e43-8c04-f5df751577cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9a4f2c-2fbb-4d1d-a9ad-f2114ca6695d",
        "cursor": {
          "ref": "78062680-e013-42f6-895c-20f02c97b5f5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66b450c9-e437-4629-87d4-db5e354f0be1"
        },
        "item": {
          "id": "7a9a4f2c-2fbb-4d1d-a9ad-f2114ca6695d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aa5d5411-4696-458b-99cd-456d8f31d9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e441af9-5f0b-4937-b373-e768ab7d9c99",
        "cursor": {
          "ref": "68b2489c-e37f-4108-b42b-fa077aa2bbf3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf429d12-1e52-4559-9723-49cfb9ad0de1"
        },
        "item": {
          "id": "2e441af9-5f0b-4937-b373-e768ab7d9c99",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "30087780-2d1c-4b52-9190-4429df674a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81de975-45f4-4e54-bf23-541910c67f04",
        "cursor": {
          "ref": "e9b1e587-551e-4052-a08e-ab8c57b0f9af",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "26adfe4e-9a83-466c-ad65-30250b4bffb1"
        },
        "item": {
          "id": "d81de975-45f4-4e54-bf23-541910c67f04",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "26a33c97-476e-458f-b3b0-112a64eb4222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1385,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9ef6a1-8739-4064-b40b-a334c4eb0645",
        "cursor": {
          "ref": "27b24cfa-a3e4-4b48-9d34-8d604c5528e8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fed61a4f-a032-42ac-881c-b30ff1b2e94a"
        },
        "item": {
          "id": "4b9ef6a1-8739-4064-b40b-a334c4eb0645",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba154423-c72c-449e-8507-492a5b72d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83787611-6439-4d00-9f0f-9afce2a6743f",
        "cursor": {
          "ref": "26da1fef-7746-4c7d-b431-361e5f318e6d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7d98e463-7ad4-41d8-8c55-eeb5aa4f20f7"
        },
        "item": {
          "id": "83787611-6439-4d00-9f0f-9afce2a6743f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b2e9bb09-c1a9-4588-b6d5-81a9db6fd051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d1ff76-d5b2-47a8-832f-e869dcc3ae52",
        "cursor": {
          "ref": "82ef491d-c1f9-422a-b310-20cd5e7ef41e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5c5df5d8-1224-490d-ab93-4bb87fd8c734"
        },
        "item": {
          "id": "91d1ff76-d5b2-47a8-832f-e869dcc3ae52",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1dd3ae5f-1ec1-45f4-bfbe-4991c3ae4e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66303ee-74dd-417c-b7b1-79f6516b67c7",
        "cursor": {
          "ref": "8133294a-cde5-4e16-8696-13b450cc9c25",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "42ae1e85-fa4b-45f5-9c94-4e05692710e0"
        },
        "item": {
          "id": "b66303ee-74dd-417c-b7b1-79f6516b67c7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fae225bd-96ac-4904-ba62-e8f61b21c986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f42ab7-1c3d-497c-a009-9f16863fa3e0",
        "cursor": {
          "ref": "1712d876-ed2e-4aae-98ba-275d08599e12",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "349203df-ec34-4175-9bf1-e503952bb060"
        },
        "item": {
          "id": "02f42ab7-1c3d-497c-a009-9f16863fa3e0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4e75986e-0ff9-4a32-b5e9-ae2aaa6faa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b9a94-9cd2-4d45-9b2e-83473b090867",
        "cursor": {
          "ref": "31eb2249-c693-4781-8a4c-02a9a29e6d7c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3dd62575-b17a-498d-a6a3-21cbfe3222b4"
        },
        "item": {
          "id": "9e5b9a94-9cd2-4d45-9b2e-83473b090867",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e6ffa092-b4a6-473a-9ee9-9919807ae5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536be6fc-0ea8-4c03-9d68-b9750eda095a",
        "cursor": {
          "ref": "78cbf424-ff82-447e-b348-b30c144d2c13",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3156be5-b2e6-4b22-b3b4-91e042196888"
        },
        "item": {
          "id": "536be6fc-0ea8-4c03-9d68-b9750eda095a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "52f4f2cf-d176-4b9e-8d8a-4cab095c9a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4ce3f1-1043-436e-9c63-19f959fd6309",
        "cursor": {
          "ref": "b5f10a58-a732-40f2-8e90-eaedd80b5985",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3dc27033-9110-4b14-9176-76f290c1383e"
        },
        "item": {
          "id": "fe4ce3f1-1043-436e-9c63-19f959fd6309",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9fe5d608-9791-490e-a732-ab4e2a7dc0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e681b9-90b9-4814-b7a2-3b13fe473871",
        "cursor": {
          "ref": "e63e70bc-b0af-4fcb-b4cf-aa3cfc9a72dd",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64a5d00d-9122-4cd1-a14c-a65b767709af"
        },
        "item": {
          "id": "18e681b9-90b9-4814-b7a2-3b13fe473871",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9e1620dc-2083-429a-b682-c1a4ead5a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f037996-f99a-4a11-aa7f-bcb6aa019628",
        "cursor": {
          "ref": "b9b67e89-2e74-4e8b-9bc5-38780156c1bc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "df03232b-73cb-4b63-a2fc-1762e294472e"
        },
        "item": {
          "id": "6f037996-f99a-4a11-aa7f-bcb6aa019628",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b501760e-59ba-4515-98f6-0c5d6746f5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cd2d3-faff-49aa-8db4-224ee6329891",
        "cursor": {
          "ref": "ed1e9d42-7d3b-4b5e-88a0-593d38b20892",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8329703b-6d81-4541-a16a-df8567fdb9b9"
        },
        "item": {
          "id": "563cd2d3-faff-49aa-8db4-224ee6329891",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "07c38b90-9422-402e-b1c5-d7da333dad22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9467945e-f38c-40b2-8b76-2d0405d09df8",
        "cursor": {
          "ref": "f785f6a2-d6b8-4bfa-9fb5-2b59cf6baa12",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4286d070-f928-4ce4-ac4b-08e4ff137786"
        },
        "item": {
          "id": "9467945e-f38c-40b2-8b76-2d0405d09df8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "703b2359-73bc-42cc-aafe-80738aa84e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73a8f0-877b-409e-ba30-093cf3aaada2",
        "cursor": {
          "ref": "8afa8b2c-b03c-46e3-b607-4520afe36332",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a528255-2539-4d51-a303-90849094eb27"
        },
        "item": {
          "id": "7b73a8f0-877b-409e-ba30-093cf3aaada2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b46ddae9-cb85-41b6-b050-6e9b96091083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f03e5-4c34-4790-893f-4f8709a5c5ce",
        "cursor": {
          "ref": "bd5c5107-d4cb-4e43-9d2a-2b542b43e785",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e4e5181d-44be-473a-919e-ec7da5668b73"
        },
        "item": {
          "id": "6f9f03e5-4c34-4790-893f-4f8709a5c5ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "976a929c-e7e7-4d90-bae2-455ce04d9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ad8395-9bf2-4500-8e66-e68843182bd5",
        "cursor": {
          "ref": "07a894bd-4a48-40c3-bc98-9a78814c7d57",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9d4515a7-41a6-45fd-b000-ad2b76084243"
        },
        "item": {
          "id": "32ad8395-9bf2-4500-8e66-e68843182bd5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b37d6e22-1428-44ce-8c96-65e203c91309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddf1959-b723-4182-8603-db1fbbce3052",
        "cursor": {
          "ref": "a1f1c736-83d6-4d3a-a05d-b3f5020eeff9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fbfe38b9-7d5a-473c-a982-3f7dc8ca9202"
        },
        "item": {
          "id": "6ddf1959-b723-4182-8603-db1fbbce3052",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e7df82c-3eb8-4e03-b79b-fb598296e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1e0949-cb01-451a-b3a1-11a6d1443feb",
        "cursor": {
          "ref": "d03928a5-f33a-4421-b035-9ca054ae5fa3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be709eae-4429-42f4-a705-f0efe0d036d0"
        },
        "item": {
          "id": "bf1e0949-cb01-451a-b3a1-11a6d1443feb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91ef471a-a5cf-4b38-8c74-1121c5c4c302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510feb4e-25af-4fb1-b4d3-a63708e5d36a",
        "cursor": {
          "ref": "a0db1749-8b67-46a4-ba86-e032bee8b21b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ae53d29d-3d18-4412-82cd-2a0026fddf2c"
        },
        "item": {
          "id": "510feb4e-25af-4fb1-b4d3-a63708e5d36a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9e1ca486-c51b-4a8b-9f8e-c28104e49381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fe0164-80a3-4598-acdf-0573201da1aa",
        "cursor": {
          "ref": "e3b28ac3-a2d0-473e-a608-7a3cd4882125",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1e20733a-7d98-43a8-81ce-3c1049fcbc63"
        },
        "item": {
          "id": "e7fe0164-80a3-4598-acdf-0573201da1aa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "82c358d0-5af2-45f3-a2aa-e90c514f77cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7938f3-c08b-4b55-b1d5-57c000162554",
        "cursor": {
          "ref": "5c4a30fb-b3b6-4f7c-82df-613e0e3f96ee",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fa2fb340-f35d-481b-8e54-71d3afe45ca1"
        },
        "item": {
          "id": "dd7938f3-c08b-4b55-b1d5-57c000162554",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9aa9bf2b-53cb-4c6a-aefb-770fe1d7c9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfea0a46-e65b-4d40-ab11-c438422e5408",
        "cursor": {
          "ref": "13b07c11-6aa3-4c3d-8b85-4c5e07a37db0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bdee3343-e096-4bbd-9ad9-0ee14de5ce75"
        },
        "item": {
          "id": "cfea0a46-e65b-4d40-ab11-c438422e5408",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "733e2bcf-9343-47c5-bdc9-e638f98d132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a25ada-4216-4a58-b571-453eb009175e",
        "cursor": {
          "ref": "e1921307-b086-480b-9d20-c2aefa90232e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aba10a47-a374-4802-ad76-50be55049413"
        },
        "item": {
          "id": "d7a25ada-4216-4a58-b571-453eb009175e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b992cd83-a399-4b77-a79c-19a922f1bf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033185d7-f358-47a9-8932-7dfed44278dc",
        "cursor": {
          "ref": "f827d42d-60e4-472b-a434-5310bd3a8ecc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e9638e03-e05f-4825-b50a-bf7c2749c1f8"
        },
        "item": {
          "id": "033185d7-f358-47a9-8932-7dfed44278dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8060b5b2-91b2-4afe-8b0d-8f2225c4e508",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923c52f1-e801-4c32-87c9-fbec6f81f0fb",
        "cursor": {
          "ref": "daab7186-a80a-46f3-8244-275e214a7b87",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3f0583a5-5fd5-435c-b282-47c5c702d1e2"
        },
        "item": {
          "id": "923c52f1-e801-4c32-87c9-fbec6f81f0fb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7c81e6df-cad2-4cdf-9d39-5e6177b034be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc216a6-3fe0-41a0-a3c8-c40e5104ab35",
        "cursor": {
          "ref": "33c5cd6d-ee49-491a-a557-4e919367416f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8e199a98-4050-4097-8148-0ad00f553267"
        },
        "item": {
          "id": "acc216a6-3fe0-41a0-a3c8-c40e5104ab35",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3667dc20-7946-4d4d-992b-cbfdda24af8c",
          "status": "Created",
          "code": 201,
          "responseTime": 4686,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4585e-b4c3-4426-b527-bdd7040218ef",
        "cursor": {
          "ref": "580c5b6e-521d-4a98-906a-f646d3647392",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "913543dd-1eef-4350-9ea2-6a967a60264d"
        },
        "item": {
          "id": "86b4585e-b4c3-4426-b527-bdd7040218ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1a9a133e-2cb8-4a9e-8f6d-b826a0cddea4",
          "status": "Created",
          "code": 201,
          "responseTime": 5970,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e3a982-6abb-4fef-ae00-20ba886017f6",
        "cursor": {
          "ref": "27e025f1-50aa-4ab6-9546-9861bc2ff3d3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "94251ce2-bac4-41d5-b8df-31c9387e8428"
        },
        "item": {
          "id": "01e3a982-6abb-4fef-ae00-20ba886017f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20d1675a-3f85-4bcf-94b6-6ca4576db4ae",
          "status": "Created",
          "code": 201,
          "responseTime": 4573,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d048d0d1-be4e-44cc-be3b-190a9d97f82c",
        "cursor": {
          "ref": "55ac1d9d-e8aa-4b28-8d4b-0a4008d32b6a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "24710d04-9a7b-444e-88a0-282b4a45331c"
        },
        "item": {
          "id": "d048d0d1-be4e-44cc-be3b-190a9d97f82c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9538ec61-08a7-43e0-8fc9-cd151d1200b7",
          "status": "Created",
          "code": 201,
          "responseTime": 4850,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ca9202-8a9f-44d8-b9d3-c58e9b7d0065",
        "cursor": {
          "ref": "eefa5702-484f-4a24-9b8c-a128a1373a47",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "06b7dff1-9cfd-4040-8a71-39ba44261218"
        },
        "item": {
          "id": "34ca9202-8a9f-44d8-b9d3-c58e9b7d0065",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5a0967f9-22f9-4d5d-b5f8-182c42785b87",
          "status": "Created",
          "code": 201,
          "responseTime": 4820,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c7babf-74d0-492f-bc59-4e9a2b46ba78",
        "cursor": {
          "ref": "29b0a3df-504d-4eef-a4b0-4f95ec4484c2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "05c4eb54-cc50-4c2f-8da2-d4d547d9ff5c"
        },
        "item": {
          "id": "60c7babf-74d0-492f-bc59-4e9a2b46ba78",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "194647b2-266d-4c10-9e23-eca5b60cc68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c7babf-74d0-492f-bc59-4e9a2b46ba78",
        "cursor": {
          "ref": "29b0a3df-504d-4eef-a4b0-4f95ec4484c2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "05c4eb54-cc50-4c2f-8da2-d4d547d9ff5c"
        },
        "item": {
          "id": "60c7babf-74d0-492f-bc59-4e9a2b46ba78",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "194647b2-266d-4c10-9e23-eca5b60cc68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cd1401-3fb8-4259-a74d-bedf0997d1f8",
        "cursor": {
          "ref": "432d51e8-bdd9-4a99-818b-573cf865f024",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "db549396-e395-4ec9-958b-fd69cf4ec444"
        },
        "item": {
          "id": "c3cd1401-3fb8-4259-a74d-bedf0997d1f8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d46effe-c248-415d-a148-fe15824bf46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6756e873-59ce-4b06-b59f-3bceb9278603",
        "cursor": {
          "ref": "1febf4a3-fef3-47b6-9e68-4dcf741a7fd9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0c6922da-2669-4d22-ae47-f64d71cec680"
        },
        "item": {
          "id": "6756e873-59ce-4b06-b59f-3bceb9278603",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "01a1a984-846d-409f-ad52-c821c56c15c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb98e9-db61-4362-952c-f18b69a05b01",
        "cursor": {
          "ref": "9325c557-d3b4-4afd-82be-f5e02e706f36",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33afd962-b24d-4104-bfd9-b2ba54bd125a"
        },
        "item": {
          "id": "27eb98e9-db61-4362-952c-f18b69a05b01",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da40a8b6-c025-4258-8920-662260d9d716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c75bbd7-e78f-448e-a561-b248c848be30",
        "cursor": {
          "ref": "7a69cc88-d5b3-4c3b-a46e-e2edb7391f96",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e109c49a-a9e4-4dc1-b11b-a2eee200f69c"
        },
        "item": {
          "id": "7c75bbd7-e78f-448e-a561-b248c848be30",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a72b780d-1df4-4860-9e38-f24a95857d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8038c87d-d6fc-42ba-844f-871f4ac5b2d5",
        "cursor": {
          "ref": "6bd5ef90-afc6-4f15-828b-f26eccd575de",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4477fe08-ff6c-417d-a665-6a0171f5d9b3"
        },
        "item": {
          "id": "8038c87d-d6fc-42ba-844f-871f4ac5b2d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe7e73df-2277-440f-862f-bdd04dc0aada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31294f81-3d6c-4d38-8003-9018b72ff45b",
        "cursor": {
          "ref": "1bee623c-7213-4d0c-b947-56f7a9f8764e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d74ac3fe-1791-499b-a04b-8611d1a0d227"
        },
        "item": {
          "id": "31294f81-3d6c-4d38-8003-9018b72ff45b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba2018cf-e20f-49ba-8085-dc62ab046977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6ffbf6-3152-4bb6-a6ef-a6ec32257e57",
        "cursor": {
          "ref": "63539dd8-9b1c-4336-a5ae-ed67f1c9d135",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1af70984-b743-4b8e-a6e0-2fd8459bc2c3"
        },
        "item": {
          "id": "ae6ffbf6-3152-4bb6-a6ef-a6ec32257e57",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f38550b-d703-4807-9037-8f352c8b687a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c134d5a9-7466-4729-8cc7-e6425540f3e9",
        "cursor": {
          "ref": "d32002a0-5e92-47af-bb7b-a6f08ea8db72",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd58411f-5109-46e7-99be-6b9564aa8089"
        },
        "item": {
          "id": "c134d5a9-7466-4729-8cc7-e6425540f3e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "06500fd7-a447-44cf-983a-990e80293c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d59374-f0cc-4b9d-93a9-42d1aa849273",
        "cursor": {
          "ref": "1ea14033-653d-417a-b71e-09b263f7c643",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9b688120-8e96-4770-b0de-4169585d5dda"
        },
        "item": {
          "id": "33d59374-f0cc-4b9d-93a9-42d1aa849273",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "736e131b-ce42-4e12-8dcd-95974235b2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdb97a4-2b06-4848-873e-a2fbb87caa78",
        "cursor": {
          "ref": "6fe56498-17f7-43e9-af51-194b27baa66a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e4889d11-d23f-4cdd-9f4b-da616aa225e7"
        },
        "item": {
          "id": "fbdb97a4-2b06-4848-873e-a2fbb87caa78",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "349b5ade-53d2-4e65-8b4b-fb794d7b65b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be57977-ac2b-4988-9c35-7e533871e606",
        "cursor": {
          "ref": "61152390-ebee-4206-af7b-00fa1108c82f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72de2e57-f232-427e-a292-166818913146"
        },
        "item": {
          "id": "8be57977-ac2b-4988-9c35-7e533871e606",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0e331dc3-f19c-4cd8-bfd0-6581879df530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8d4e4d-ffc1-4b3f-b0d6-be7193421a7f",
        "cursor": {
          "ref": "af61ba01-d421-434c-ac5f-3cd711ef2aba",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9b56df8a-6500-46e0-a72d-5ee9f074a624"
        },
        "item": {
          "id": "db8d4e4d-ffc1-4b3f-b0d6-be7193421a7f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "52919857-d4fd-4f38-85cd-341ad9846eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78e4c9d-5db5-4c44-93b9-f6514d30811c",
        "cursor": {
          "ref": "19027173-b6c3-40ad-88cc-07c57f8d4fba",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5a2ae698-2829-4a6a-8d07-b52082bdb26c"
        },
        "item": {
          "id": "e78e4c9d-5db5-4c44-93b9-f6514d30811c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "792f1869-0d33-46a7-8425-73c33d4c1287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02749025-9772-4618-8996-1f6b6535eeda",
        "cursor": {
          "ref": "609fc2d3-a9dd-4e00-9e51-1e7c9ad4dca1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "079dacd1-d1c7-4e83-bb44-8f4ca5c15f4b"
        },
        "item": {
          "id": "02749025-9772-4618-8996-1f6b6535eeda",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "38dc9950-63c9-46bb-9acd-8fe3750c3507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b932f6b9-3863-4d66-9870-7bb370a79599",
        "cursor": {
          "ref": "58c3d225-bd6b-4e3f-a5ed-371f954a68e5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e61ddff9-df20-468f-a63a-a3a15a5009ee"
        },
        "item": {
          "id": "b932f6b9-3863-4d66-9870-7bb370a79599",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ca46d67e-8ddb-4812-a3f3-2637f16a8337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fe7872-2b92-4ba5-8724-3fc4678bc7a0",
        "cursor": {
          "ref": "c721375c-5ead-42bb-86ec-efd27629e6c0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c141140-3584-4692-b58b-6dba9a8a39e9"
        },
        "item": {
          "id": "24fe7872-2b92-4ba5-8724-3fc4678bc7a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d2f5579-7f55-46b9-af54-68b64476c6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac8ecf-b160-4157-a76e-b5960074eadd",
        "cursor": {
          "ref": "1c36408c-d074-4454-89ac-c23f25936769",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f8533c6-556b-4d64-bdda-75fe3e233f2b"
        },
        "item": {
          "id": "aaac8ecf-b160-4157-a76e-b5960074eadd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "22f644d4-e7f3-464c-8be6-7595c8dc9455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7f978f-2adf-40f6-acc1-4aae145ba55f",
        "cursor": {
          "ref": "1467b926-e65f-40f9-8fc3-46b67dbd4b54",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "94da86be-8238-47fd-b4f3-97134cb98f68"
        },
        "item": {
          "id": "ed7f978f-2adf-40f6-acc1-4aae145ba55f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0bf78a07-294b-4088-80f8-03d0862315a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adad52cd-947a-41f0-a86a-d39ce5f741bb",
        "cursor": {
          "ref": "406baba4-30e4-4716-8b3d-22eee9efd888",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54338350-a1d6-4657-b475-780a12948be4"
        },
        "item": {
          "id": "adad52cd-947a-41f0-a86a-d39ce5f741bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d95bf8d8-e04d-477f-84c4-f5dbc6f9b2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e0c44e-e130-4a2f-90b6-53355cb527f8",
        "cursor": {
          "ref": "545c7b36-faff-4c4c-a694-187e8eff958c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f162c148-2dfb-442e-9128-2f60a56eb354"
        },
        "item": {
          "id": "d4e0c44e-e130-4a2f-90b6-53355cb527f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bdae8524-4855-4425-9ec3-c2ceca2cf7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a41cdd-54b2-4e76-bb2f-23b313f5b8d2",
        "cursor": {
          "ref": "ddc325e0-c30e-4c18-9156-eeb7cd283396",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ac03038-9c69-4bc6-aa87-efbe6e76b46b"
        },
        "item": {
          "id": "92a41cdd-54b2-4e76-bb2f-23b313f5b8d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "559eaf9d-c7bd-4898-a0f0-554aa655e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1a3486-7848-44fa-8c4a-6d5250291ea7",
        "cursor": {
          "ref": "f7a5bfb8-564a-4506-a54d-ca7df41d8c95",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "480f18b5-ca12-4e32-8762-cfc45c97a746"
        },
        "item": {
          "id": "8d1a3486-7848-44fa-8c4a-6d5250291ea7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "865facc7-5723-481e-bcbc-d8fe1a1ec5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5985d2f-4623-4594-95c7-366563b7d525",
        "cursor": {
          "ref": "2f20c68d-8969-494b-9c5a-48b21e072bc9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1b17258d-2e73-41b6-9cef-d05a27b7fb01"
        },
        "item": {
          "id": "a5985d2f-4623-4594-95c7-366563b7d525",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5bf1f33-77f6-46cf-9d9d-8e1dccf5bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1fea9c-f59c-43f7-8434-00c92ef11fc8",
        "cursor": {
          "ref": "172f1201-1961-4369-9b0f-f9e62edb7c5e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "97fefadf-04c6-4ad9-be74-cc5925cd8839"
        },
        "item": {
          "id": "8e1fea9c-f59c-43f7-8434-00c92ef11fc8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a205333-e318-48e3-bf4c-377d55fe5546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa1aaa3-68c0-4cea-a74d-ded79c5d4fee",
        "cursor": {
          "ref": "094f8cde-56d7-4d35-a2a1-ec37fccfeb06",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4c08167d-78a8-47ce-b629-1c05fedeef58"
        },
        "item": {
          "id": "4fa1aaa3-68c0-4cea-a74d-ded79c5d4fee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b4ab0b0-bab7-4463-b72b-00ac44aca955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75284f10-d5d8-4f1f-85e8-6474003f5d52",
        "cursor": {
          "ref": "0fdf7640-93ea-4bb6-af05-4cb158c13f2f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "29cb23d8-74d8-41fe-a332-cf500edb91a1"
        },
        "item": {
          "id": "75284f10-d5d8-4f1f-85e8-6474003f5d52",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d7292786-dedd-4b57-b462-cddad67a07fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191d75cb-e2b0-4be6-8895-b44a7de51d1f",
        "cursor": {
          "ref": "f6ed88ea-4c73-4ff7-bc0a-15ef81f91e60",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "876ddadc-a4af-4d70-9553-00cd702a8880"
        },
        "item": {
          "id": "191d75cb-e2b0-4be6-8895-b44a7de51d1f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4254302e-99e4-444b-9a99-e504f7ac2356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5611efb3-c31a-4eca-ac4a-4c440d2139ca",
        "cursor": {
          "ref": "3219135d-a25f-4de9-b154-8bd72289166a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "63aa66b3-448a-4e43-898a-6ad6148d7bd1"
        },
        "item": {
          "id": "5611efb3-c31a-4eca-ac4a-4c440d2139ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a6527c4-2341-4d26-97d0-f4a144b39853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c97e5a9-5071-4aac-8496-e7bf93653075",
        "cursor": {
          "ref": "4943c804-27a6-49e7-a11b-d2ed414d848d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "514b1066-7b74-47d4-97d2-cd4e3fc91b9d"
        },
        "item": {
          "id": "6c97e5a9-5071-4aac-8496-e7bf93653075",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7357b025-28aa-4ecf-9f2a-7a0844c1b323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618948e8-01ed-4dd0-b5d2-e849e5794355",
        "cursor": {
          "ref": "f82d3b60-150e-433e-a583-ba698de0507f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e10aa6d6-f261-4042-a7b5-c06680235ef6"
        },
        "item": {
          "id": "618948e8-01ed-4dd0-b5d2-e849e5794355",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4a7a9710-2e26-48b2-a709-123b76e03b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122d11a-cd87-4a49-9359-e9b7505c3cdf",
        "cursor": {
          "ref": "70be7330-ea43-43d4-8288-fe047759dbda",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b5bf5e8-5198-4088-b524-f762512964a7"
        },
        "item": {
          "id": "2122d11a-cd87-4a49-9359-e9b7505c3cdf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e2b45590-75c3-4e65-8e1a-aba4a69b073b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0556bc75-c797-4794-88cb-ee0f9ef67c1d",
        "cursor": {
          "ref": "f72057d5-66b6-4e01-8b3e-2141790e92b9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b73d7007-7b1a-4414-a081-fa199a1f507e"
        },
        "item": {
          "id": "0556bc75-c797-4794-88cb-ee0f9ef67c1d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "302d11ef-fc75-468a-8d91-b8438f6f4903",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c566a5-3f1d-45a9-964e-832d8f6996c4",
        "cursor": {
          "ref": "12cce59e-6443-4b60-be20-7fface316efd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "42be7605-a06a-439f-a404-53a09457cf66"
        },
        "item": {
          "id": "58c566a5-3f1d-45a9-964e-832d8f6996c4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6695eeb3-a727-47cc-bdbf-4c39bc05d303",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f950f9-fca4-4d64-86ea-a7ad0d5edf98",
        "cursor": {
          "ref": "c9335ad5-296f-454f-b6ad-4f5c6f581c6a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "995b3769-405b-4a75-b9f4-6dba1c9f48c5"
        },
        "item": {
          "id": "54f950f9-fca4-4d64-86ea-a7ad0d5edf98",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "006f959e-bfbe-49c3-b244-fb044c510e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f950f9-fca4-4d64-86ea-a7ad0d5edf98",
        "cursor": {
          "ref": "c9335ad5-296f-454f-b6ad-4f5c6f581c6a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "995b3769-405b-4a75-b9f4-6dba1c9f48c5"
        },
        "item": {
          "id": "54f950f9-fca4-4d64-86ea-a7ad0d5edf98",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "006f959e-bfbe-49c3-b244-fb044c510e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd818538-93b2-4991-809e-ab2a48290a4b",
        "cursor": {
          "ref": "db29532b-3f74-4f22-b057-9fe7b03821c4",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1e9480e0-256a-45f5-962f-0733cd3babbd"
        },
        "item": {
          "id": "fd818538-93b2-4991-809e-ab2a48290a4b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b694a08b-263f-4023-af1e-7163a0c00bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee4e42a-1bf7-4b90-9229-144109e752bd",
        "cursor": {
          "ref": "a7965cb7-7f48-45ec-ab5e-bca82587b982",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "93b91c73-2fe5-44be-b7bc-f22ad69afa86"
        },
        "item": {
          "id": "9ee4e42a-1bf7-4b90-9229-144109e752bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07438e3a-87fc-4a0e-8a31-f8b757ec57d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1c7cb1-b3bc-4b60-9546-732ac1ff7c98",
        "cursor": {
          "ref": "263431a8-5162-4ee2-8834-20c28a2b280a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3afbe8ad-3941-4d33-8eb4-027fbfa4bc76"
        },
        "item": {
          "id": "0b1c7cb1-b3bc-4b60-9546-732ac1ff7c98",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "41b8e805-e73d-4aec-869a-a146e9e22511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0ae95-dcaf-4ab2-b871-37e693fd17bf",
        "cursor": {
          "ref": "241f0638-0780-4cc6-86e5-9d9ec092ae9c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2453e69f-3036-4eb4-9080-d309a0944fef"
        },
        "item": {
          "id": "78e0ae95-dcaf-4ab2-b871-37e693fd17bf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "96419a7e-812c-4b84-b422-33c53bd54887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8906b1e7-9519-4ce8-a947-7ab64064ef35",
        "cursor": {
          "ref": "baa68312-0f85-4edb-9851-5ebc9a43a4be",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "96b7b6dd-f9c5-496b-826d-125fcb2493b2"
        },
        "item": {
          "id": "8906b1e7-9519-4ce8-a947-7ab64064ef35",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "479dfaf7-a84d-4c00-8299-9f6b5b10af93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89998f0-6104-4424-b9ed-5b81003a6237",
        "cursor": {
          "ref": "44c871e1-d197-45f1-bb9e-64b6ed0e45b1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9741a339-ed67-4700-8863-5ca835903cb5"
        },
        "item": {
          "id": "d89998f0-6104-4424-b9ed-5b81003a6237",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba292fee-6208-4213-8bce-1dc8da11bfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c292626-87ea-444c-b458-3efe1352849c",
        "cursor": {
          "ref": "a6414620-2793-4e8e-9a09-ec6b8c7ea6e6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0866fbb7-7bb3-4229-af5f-e2889682572b"
        },
        "item": {
          "id": "1c292626-87ea-444c-b458-3efe1352849c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26b24ac6-ffa4-492c-8e47-b08c93d04885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e46448-147f-4677-9337-e94f8b075e03",
        "cursor": {
          "ref": "5d509e18-7856-4ae5-bb08-90067ca37d87",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "025694ea-6b5b-4ff0-8924-3dc531b842e4"
        },
        "item": {
          "id": "49e46448-147f-4677-9337-e94f8b075e03",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3b4c9ad5-a463-4809-8a4a-4f1622971faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fb0ca0-96d3-4e00-939b-714d28ae348c",
        "cursor": {
          "ref": "282f7663-0613-4ff6-b6a8-651ece805535",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "35750fc2-b432-4a96-b95d-27505a731d4c"
        },
        "item": {
          "id": "89fb0ca0-96d3-4e00-939b-714d28ae348c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f172d5ce-c30d-4720-90f8-f9d621192c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d65926-e3b3-4863-8266-78c313f37748",
        "cursor": {
          "ref": "e02b408b-ab54-4678-9b6d-2b443ffb13a4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e90335e7-8195-4548-a3cc-859254ed270d"
        },
        "item": {
          "id": "01d65926-e3b3-4863-8266-78c313f37748",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a4d8ca51-9a81-4007-b238-6e48d9db59e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bb4532-b5c5-4cf6-b4e7-cb8cfc850b06",
        "cursor": {
          "ref": "33e0a9df-ba30-49d9-89be-30b98e5f7e3a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "494c1b67-63d9-4a59-b175-11a91705429b"
        },
        "item": {
          "id": "f4bb4532-b5c5-4cf6-b4e7-cb8cfc850b06",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b2b6fe56-08ce-4669-a718-6566d3236cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91badd55-431b-4796-92bc-42ab24ae3541",
        "cursor": {
          "ref": "01971c7b-cf5a-4056-bbba-d0ea5c0623e2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "754ba37d-68fc-46d9-9af4-53445a90378a"
        },
        "item": {
          "id": "91badd55-431b-4796-92bc-42ab24ae3541",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "83e8fe07-ab92-43c0-84cb-16eaa94d4c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce4757e-d833-4ae6-95b4-d3a16e1ddac1",
        "cursor": {
          "ref": "f7d75ece-353b-4dca-a04e-69370bc58885",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "de128466-1473-4a60-baab-0bf5cad42d1e"
        },
        "item": {
          "id": "5ce4757e-d833-4ae6-95b4-d3a16e1ddac1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "647203f2-ce2e-43d7-b275-560dde6919dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f933666-3084-4167-ad37-6a2ee82acf70",
        "cursor": {
          "ref": "411800ef-2dfd-46a6-9438-a3bd46d2a152",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6aca1868-6723-4f4e-a0e0-b4cc47589c2c"
        },
        "item": {
          "id": "8f933666-3084-4167-ad37-6a2ee82acf70",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee89f409-e1be-4877-ae14-c89051438524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9a1fe7-ccf5-44a6-bca3-db97d147814c",
        "cursor": {
          "ref": "3c36a340-b292-4bd8-a087-2292a517b0fd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "99f67d08-3b55-4581-94d6-e7d0e6b8f098"
        },
        "item": {
          "id": "de9a1fe7-ccf5-44a6-bca3-db97d147814c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e2f78d58-0796-45b7-9335-6d5ee17cba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184bceca-eb7a-4db8-b8bc-9d374381a601",
        "cursor": {
          "ref": "99c2cdf8-7de7-45d9-97be-cd68d9b6befc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f0019452-950b-48c9-a8c8-e319d02c7647"
        },
        "item": {
          "id": "184bceca-eb7a-4db8-b8bc-9d374381a601",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "29d511b8-6257-4d0f-882c-9c4d5b80fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f13a90-3633-4d43-b1f4-758b25c9a9c4",
        "cursor": {
          "ref": "43a2e777-9ce4-4ee7-a273-c4119660792c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6660e82-9e80-4112-a902-2c33b192d9de"
        },
        "item": {
          "id": "86f13a90-3633-4d43-b1f4-758b25c9a9c4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "45ecc30b-b550-40c1-a543-07f4bf0cd57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f03e058-198a-4cbe-9fdb-3cd00aded4f1",
        "cursor": {
          "ref": "bf75d944-816f-48d7-a606-87bd8a30f072",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "280b9e72-5524-4530-a731-b663451131d0"
        },
        "item": {
          "id": "2f03e058-198a-4cbe-9fdb-3cd00aded4f1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "af695903-812c-49d3-a336-94d41f93e285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b69a5e-6a42-4db1-b3e7-5d905aee6b35",
        "cursor": {
          "ref": "04706f5e-d544-4b62-b2ee-17fb1fbc6786",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "95e3049d-11d4-4a12-a71e-27f666802687"
        },
        "item": {
          "id": "a2b69a5e-6a42-4db1-b3e7-5d905aee6b35",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "77c59bf1-1383-4212-9ff9-c51140e75364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6402a2fa-4e25-4481-adea-d5a0319ff101",
        "cursor": {
          "ref": "07ad50c7-2153-4cb9-93d5-61fc68254b90",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7cb11caa-6d9b-44b7-bcbe-d1e6cb10c981"
        },
        "item": {
          "id": "6402a2fa-4e25-4481-adea-d5a0319ff101",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17680c95-4f45-4e18-9209-8dcadb9d70c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d616e28f-f12d-4d8f-bec5-bbf610e0fc52",
        "cursor": {
          "ref": "84f5f536-6c1f-46b8-91ae-baeb0d62a5a8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6cf2b31e-4f14-4ae1-9f1e-d659a60c6c53"
        },
        "item": {
          "id": "d616e28f-f12d-4d8f-bec5-bbf610e0fc52",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7a876427-714f-42b9-a5c6-6468330d9b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c75cf2e-4cb3-4178-8c15-ae047de27502",
        "cursor": {
          "ref": "de0ba4f9-1383-4425-8fe8-980cf4b0f9b4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2337abf7-1d56-434f-8da3-91da43446b4f"
        },
        "item": {
          "id": "7c75cf2e-4cb3-4178-8c15-ae047de27502",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7db10171-fece-4f8d-b523-737d25e2a769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d99cbc-a859-48c7-9a13-88267deef064",
        "cursor": {
          "ref": "8c67600d-b209-4315-842b-91e6094fc6e9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "21801816-6efa-4333-bbfc-372127abb383"
        },
        "item": {
          "id": "49d99cbc-a859-48c7-9a13-88267deef064",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "317ee366-8fef-4c19-8ee0-8c8474798908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c75114-037b-4974-b25c-b883ba90dcda",
        "cursor": {
          "ref": "463eb5bc-1aa1-4e7c-9935-791f2871c126",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0a48cb6f-aa3e-444b-9f2e-d92882ad9b15"
        },
        "item": {
          "id": "b2c75114-037b-4974-b25c-b883ba90dcda",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8fb79557-6310-4b0d-aa06-b127e24ded7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdca871-8efa-4f44-99d2-5c65e39886d2",
        "cursor": {
          "ref": "2b15e9ee-0dfe-4067-816b-8d4651a6b12a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bc8a71a8-74a3-426f-8efe-a834f610b6c9"
        },
        "item": {
          "id": "0fdca871-8efa-4f44-99d2-5c65e39886d2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "20dff070-6106-4ad8-8227-aefa7153de91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f86fce-b6eb-4db6-9450-7b67ad1c7eac",
        "cursor": {
          "ref": "0b3a1f66-01b7-439b-b3c3-b08f414c9179",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2f90a2d7-dff7-40c3-96b8-79bc0f54089a"
        },
        "item": {
          "id": "00f86fce-b6eb-4db6-9450-7b67ad1c7eac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8bc832f-d82f-41de-8342-0d3eed95ad25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cbb891-5cb9-4257-8080-e3c70c900d2a",
        "cursor": {
          "ref": "e797afc5-15fb-4ba3-9c91-4e8798daf96b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e1dc286-8f4d-45bd-b095-a522c509302f"
        },
        "item": {
          "id": "17cbb891-5cb9-4257-8080-e3c70c900d2a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ab37e74b-37b0-4432-b02b-18da2e0501a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a01f299-c0f5-4355-8a3b-4fb05613079d",
        "cursor": {
          "ref": "d595fb13-c4ce-4f24-b418-e3062d342c74",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fa5f89d2-f52a-4030-8168-fb38c6c24508"
        },
        "item": {
          "id": "0a01f299-c0f5-4355-8a3b-4fb05613079d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ffa891a-8c97-4944-928d-01896ba14861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d64881-4dfc-498b-8fb1-ff18b73aeaff",
        "cursor": {
          "ref": "2898098e-f7de-43b2-bd02-ce228f99126a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3a6594dd-0889-4385-a3f4-4822bcf660d8"
        },
        "item": {
          "id": "b2d64881-4dfc-498b-8fb1-ff18b73aeaff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2f0365bb-d915-479e-a58d-4e05babdb7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe164ed-238f-4103-bc9a-7385b9b4e410",
        "cursor": {
          "ref": "e37f3885-bad8-449d-9e44-344dc7ef82a0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "09c6e07a-eebb-495d-a066-d78b40cfa51a"
        },
        "item": {
          "id": "bfe164ed-238f-4103-bc9a-7385b9b4e410",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "18ad0fab-87d2-43ed-a1d8-ba98dd956aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f098f70-fcb1-47f0-944c-1a0025fd480a",
        "cursor": {
          "ref": "b729dcca-63b1-4ca8-8536-624a8e499cfa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5eefefc6-afe8-4bdd-8ab7-34039347ee17"
        },
        "item": {
          "id": "0f098f70-fcb1-47f0-944c-1a0025fd480a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1938a7fd-e9d8-4f54-b485-ca8920638a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b90891-a196-406a-a011-37fc0646ef2f",
        "cursor": {
          "ref": "56990bbc-ca33-4d24-86c6-a2a83c8470ea",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a41d6cd-5db2-42e5-909c-1bbf3bc7e24e"
        },
        "item": {
          "id": "76b90891-a196-406a-a011-37fc0646ef2f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bcafab75-56ce-4cbb-8c70-42057d2fe465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51995b2f-3fe6-4775-a998-11a8df33fd92",
        "cursor": {
          "ref": "3d99f242-d463-4a65-82fb-169173e4989e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "18e6f678-1a89-4e14-ae7c-f348bb43d8b3"
        },
        "item": {
          "id": "51995b2f-3fe6-4775-a998-11a8df33fd92",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c39dcb7-1602-4d25-89cf-dd8932709d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8980665a-1390-4e15-bbef-467300c11147",
        "cursor": {
          "ref": "98132f7e-765c-4a2b-be76-86b61459e06a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2f0e11f7-e7d6-49c5-8c16-ea7a517fb4e8"
        },
        "item": {
          "id": "8980665a-1390-4e15-bbef-467300c11147",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "75fec76b-2f7e-4769-a664-2912eaee72d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f925b-f9d8-41be-9d58-63a848ad467e",
        "cursor": {
          "ref": "d34f903c-2b16-4218-aa2b-99da32717b29",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8851b137-4af5-4553-9752-f3482acf0031"
        },
        "item": {
          "id": "a88f925b-f9d8-41be-9d58-63a848ad467e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c2f1d6a5-1241-43ba-9354-0c92e88f8fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aad076-48c4-48e8-9ff8-5ea31db38366",
        "cursor": {
          "ref": "f4178d13-95fb-4976-81f6-2c2742913c53",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3bba1c97-003b-46bc-9f98-4d40375c9a4e"
        },
        "item": {
          "id": "f0aad076-48c4-48e8-9ff8-5ea31db38366",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "70b1dad1-c3e4-45f6-9596-35f1ee43c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2b533b-bee4-4f62-86da-05e2a6442a4a",
        "cursor": {
          "ref": "0647a280-66ae-4512-be9d-ad4f763aa9a4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5960ea4f-cf58-4943-b85f-b3cb075ecafb"
        },
        "item": {
          "id": "ae2b533b-bee4-4f62-86da-05e2a6442a4a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a110acb7-b610-4884-9b6c-1cc9aac6b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e3c166-b8d7-4519-af49-12c0cb8f7d3e",
        "cursor": {
          "ref": "b49dbcc2-cae2-47eb-8f25-c828fd43dab8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "38db34d8-cd05-4600-b70f-1b9dffef7ea3"
        },
        "item": {
          "id": "b1e3c166-b8d7-4519-af49-12c0cb8f7d3e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c2048e09-9fd8-4cca-bdf8-6b96c6fd2459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cfa82-507e-4a80-afcb-6d4d0ef59953",
        "cursor": {
          "ref": "821aa2b2-523b-4c23-bc17-e8edaaba8f48",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "44835c50-89a4-4572-8f13-391ddedf4305"
        },
        "item": {
          "id": "443cfa82-507e-4a80-afcb-6d4d0ef59953",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "70ed4242-3f34-48c5-97d1-12c97f66f0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d016a2a7-6f70-4f23-b32c-13b2dfbfe8d1",
        "cursor": {
          "ref": "6ee6f0dc-9ba6-4e48-9ec1-c4cf10168961",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b766ac68-d4ed-475a-8e94-3d5148762cc7"
        },
        "item": {
          "id": "d016a2a7-6f70-4f23-b32c-13b2dfbfe8d1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a8a2ecdf-b4cf-426e-9ef3-68b0dddbfb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56c12e-0373-4b3d-a83c-37aa384a63fd",
        "cursor": {
          "ref": "016138da-fc51-4d3f-96b3-56cacf3b111a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dca69a21-ff11-4378-996d-146cb8fe46fa"
        },
        "item": {
          "id": "da56c12e-0373-4b3d-a83c-37aa384a63fd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a57540ee-436a-4504-8ce7-cec7e080a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4d1ba1-f1b0-4252-9d68-d9bf2a2334be",
        "cursor": {
          "ref": "6c4f28bb-7303-4366-a1a4-fc36eefb8e97",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d9ff5322-a8bb-463a-94c2-3d37f4e29ead"
        },
        "item": {
          "id": "1f4d1ba1-f1b0-4252-9d68-d9bf2a2334be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a7aab11-780c-42c7-8f50-e422a5848ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadbd9e4-a046-4720-97c2-eec0981d5823",
        "cursor": {
          "ref": "00571c22-3c43-4796-a9a3-0f9dd3cfc22c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa5186bc-73ec-4986-8123-feba254be0e0"
        },
        "item": {
          "id": "cadbd9e4-a046-4720-97c2-eec0981d5823",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6198675d-49c6-4cf3-b017-7d639c3037c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0498400-25d2-4ff5-8e39-14efd22a3867",
        "cursor": {
          "ref": "3d82c477-b890-4693-a48d-f5bc3f29b9f1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7fbee88b-1bad-4c3c-b3a7-d59d78624556"
        },
        "item": {
          "id": "f0498400-25d2-4ff5-8e39-14efd22a3867",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a53fceab-08d8-4cae-b902-411919e1a748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b107b18-f2e7-4552-8f53-821b829349b8",
        "cursor": {
          "ref": "5dd07822-7cf3-4a07-bbb5-4637964503dc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "79cddcbd-5c0c-4707-9a1f-b5e7f9b09418"
        },
        "item": {
          "id": "1b107b18-f2e7-4552-8f53-821b829349b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "243cb04a-65a1-4034-ae7d-c3e88c151bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5255b9-c1d4-4fff-8680-dc5680bec8f6",
        "cursor": {
          "ref": "6ab44904-0732-4666-b00c-fdfd6e214a96",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3bfd4e5d-7d9f-4d97-a038-135e9f8725e4"
        },
        "item": {
          "id": "4a5255b9-c1d4-4fff-8680-dc5680bec8f6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0febf52-5915-48d5-8929-83f9cc841d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e68760-76d9-4254-8d2b-4c8b39bbd551",
        "cursor": {
          "ref": "c1705b66-294b-4f25-98a9-cd65fa26b117",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2934805f-34ad-4f24-8fa9-0d4983a47c5a"
        },
        "item": {
          "id": "90e68760-76d9-4254-8d2b-4c8b39bbd551",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f88ea920-439f-478f-9e93-a9d1f36c9c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9936b3-a91e-47a0-bf04-afb7f3124000",
        "cursor": {
          "ref": "33291927-92fc-4354-8ff2-42d290de8e1a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d05fcadf-4330-4e86-b79f-1da0a9d71719"
        },
        "item": {
          "id": "bd9936b3-a91e-47a0-bf04-afb7f3124000",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a6d7ef8-70ad-44d1-b3a3-8168a0b276af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46629939-0d84-47a6-982a-54afd7a0e399",
        "cursor": {
          "ref": "1d88cce6-9580-4918-b2fd-748d90b62d41",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62cded2c-0cd2-425b-9afe-8f7028469701"
        },
        "item": {
          "id": "46629939-0d84-47a6-982a-54afd7a0e399",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a8f10e7f-f18e-4b98-b366-2c2ca3a6e017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137b1d31-4473-4deb-9a92-a222b16b5d95",
        "cursor": {
          "ref": "d3c85946-c67e-495e-91b9-7b6246d33c61",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "926a7a2b-a120-41db-902a-b869e14ac859"
        },
        "item": {
          "id": "137b1d31-4473-4deb-9a92-a222b16b5d95",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3bbec147-79b7-4482-8bed-e7fed2721aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f30200-6bb8-4d19-bd93-73c51fcae4f1",
        "cursor": {
          "ref": "90dfbd02-9c98-4e0c-90e6-4a8e1e9cbdb7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a563022c-3596-4169-8ca0-cbc386adb9a6"
        },
        "item": {
          "id": "49f30200-6bb8-4d19-bd93-73c51fcae4f1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "461d049b-cefb-4ec9-ac91-a9250056051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c432b06d-7c02-4a12-bdaa-d91c2605b907",
        "cursor": {
          "ref": "d3eba5e6-aa4a-4fa2-b9d5-952d8cf57995",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6efb26c7-8c21-410d-a98d-2d6b1e0bc9fe"
        },
        "item": {
          "id": "c432b06d-7c02-4a12-bdaa-d91c2605b907",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "58bb0c00-f8e8-432e-93ca-e929c97ce58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fab227-4351-486f-b1d3-82366884084c",
        "cursor": {
          "ref": "866e5f2d-4509-4490-8f7a-afbc5a80af11",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0f021ba0-e2c7-4aad-b476-64eccf84baaa"
        },
        "item": {
          "id": "a3fab227-4351-486f-b1d3-82366884084c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0f59990b-1295-4fd4-be8c-5481e69e2f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad1d52e-8b11-4eaf-97a9-697d38ab13c1",
        "cursor": {
          "ref": "41ea1a67-aeee-4d26-8d84-ce51edda5e7b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6674abd-c17d-46f6-92ea-cc83ef9eec54"
        },
        "item": {
          "id": "bad1d52e-8b11-4eaf-97a9-697d38ab13c1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24081ad4-2ea1-4331-ad15-5fce5edd2862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f93351-f362-4012-b10e-0f9068310aa3",
        "cursor": {
          "ref": "cafe71fd-512c-4082-9851-fd53d81ad833",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "11df0933-7883-4b7d-a99c-b416d6665b97"
        },
        "item": {
          "id": "12f93351-f362-4012-b10e-0f9068310aa3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08c848b0-7450-43dd-98ba-e3f68e7ca02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa514fbb-a4c7-41bd-a5cc-d50166a06fd2",
        "cursor": {
          "ref": "c2d4ee9f-5144-4860-8c0c-5756d1ccd7b9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5314bde2-cd22-46e3-ae7d-357c7db0bf09"
        },
        "item": {
          "id": "aa514fbb-a4c7-41bd-a5cc-d50166a06fd2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33350719-f851-4729-99f1-bbb93bf52ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c9e928-c675-432a-9b55-f4d6da19db74",
        "cursor": {
          "ref": "cb934182-78de-42d4-a890-aaeba76b8505",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ee9c5251-219a-4683-b656-c6c729be6692"
        },
        "item": {
          "id": "52c9e928-c675-432a-9b55-f4d6da19db74",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "83c96232-0103-4718-b16d-8d8bb472db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17f163-e651-4318-a273-bacc5157eb97",
        "cursor": {
          "ref": "169b7324-f4bf-45da-85c4-54e7e73019d0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4950075e-cd9d-4f64-af30-fcd1c1799841"
        },
        "item": {
          "id": "0f17f163-e651-4318-a273-bacc5157eb97",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ba24334f-cd8a-4d98-bc84-d094ea75325b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30b6319-cc2d-4ec9-8894-cf179a0b204e",
        "cursor": {
          "ref": "7a7ef167-a3c7-4665-a601-aacc932d142b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c65c87fd-ccfc-44ee-a302-5eae866ba81c"
        },
        "item": {
          "id": "d30b6319-cc2d-4ec9-8894-cf179a0b204e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "44b60e55-2497-49fe-ad7f-f9ff758ed1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37acd7c5-fe9e-42b4-a8ea-ceddf75afa44",
        "cursor": {
          "ref": "274a5e76-3ad7-4c8d-bf75-a655d0a64cdb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6fd07534-340c-472d-bbad-5186267a791e"
        },
        "item": {
          "id": "37acd7c5-fe9e-42b4-a8ea-ceddf75afa44",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6224698a-1b54-4829-aa23-c9f1c38c8bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9247f2-5a88-4a42-a9e1-20d7932150f9",
        "cursor": {
          "ref": "54c00e2b-c94b-4bff-af47-ac402a9d29cf",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "00f57e3a-a392-4e4f-a740-ce2d9a989713"
        },
        "item": {
          "id": "ae9247f2-5a88-4a42-a9e1-20d7932150f9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "344dd630-4eb9-429c-bee4-9dc8dbb17ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37471236-3691-4410-9b16-94e541ab43c5",
        "cursor": {
          "ref": "8eb92005-c09e-46e7-8d2d-a887db26eecf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0b63195c-2d81-4a37-9ee5-a241ebbb1e07"
        },
        "item": {
          "id": "37471236-3691-4410-9b16-94e541ab43c5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b16e41ae-26b7-48bc-b72b-3ab4e0c643c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04089f0d-cd97-4b61-99d0-b79c8c0304e0",
        "cursor": {
          "ref": "eac71182-17a4-440e-9e67-450950940c23",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bec9325a-9a5e-4930-bb65-ed9293f0b1d0"
        },
        "item": {
          "id": "04089f0d-cd97-4b61-99d0-b79c8c0304e0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5392da06-a610-4ab2-b60c-9d1ea8627e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc38fc8-d71b-4d0f-8965-cd184ccc55c8",
        "cursor": {
          "ref": "0882ff43-2630-4033-a9de-ad5d021005c2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0a37ae81-79b2-4203-b555-4bd29400287e"
        },
        "item": {
          "id": "9cc38fc8-d71b-4d0f-8965-cd184ccc55c8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2b8f469a-8ffa-45d9-bd0d-dff10a8d32fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0203f0-cceb-4fae-ba0f-51f1e9112d14",
        "cursor": {
          "ref": "f5a31dc0-d6e9-4187-85b3-f189fb154659",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "43f1f047-d953-432c-a6cf-1d841858fe36"
        },
        "item": {
          "id": "ac0203f0-cceb-4fae-ba0f-51f1e9112d14",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3537b2b3-38cc-4429-bf4a-12bbd5452629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a4b419-fd17-48a6-b9a6-e3fddc5d2978",
        "cursor": {
          "ref": "e06788b2-2cd2-46f2-893b-52f4312f7171",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ef71ce22-15bb-4418-946e-5c3e5cd2af9e"
        },
        "item": {
          "id": "e2a4b419-fd17-48a6-b9a6-e3fddc5d2978",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6fd4e605-30db-4dc3-ab91-a2cf94884c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a48894-8864-44d1-b13d-f30b46001eb6",
        "cursor": {
          "ref": "2f6b418f-3869-4208-80f2-4977fa1df0c3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7c51710-a1b5-4be8-9492-36c8cdcf0fd0"
        },
        "item": {
          "id": "72a48894-8864-44d1-b13d-f30b46001eb6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e7039b42-f141-4cc5-8fd5-cf38e7f7557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fb906b-7f6b-4d7b-ac6c-b1f27637f6ef",
        "cursor": {
          "ref": "e53875f1-c60a-49c5-8832-090d6e168b87",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e87f324-1bf3-4b02-b40a-9bed0397373a"
        },
        "item": {
          "id": "96fb906b-7f6b-4d7b-ac6c-b1f27637f6ef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c612be6c-b547-4a4a-bc39-2f6db505661f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf9015b-3934-4cf8-8d41-652d1e8e2eb6",
        "cursor": {
          "ref": "d6b76a62-ff63-4637-a733-27908a828d58",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "16576110-6d25-4707-a980-6eefcb4f9a0f"
        },
        "item": {
          "id": "2bf9015b-3934-4cf8-8d41-652d1e8e2eb6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3a291af4-a03d-49bf-ae7a-d3826d7ac08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490fa881-637a-4a10-a34b-bc371e4c93fd",
        "cursor": {
          "ref": "dc79f976-a746-4329-a16a-27704e7eaf85",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0c1cab50-56d0-418d-92d9-3d0be92fd51c"
        },
        "item": {
          "id": "490fa881-637a-4a10-a34b-bc371e4c93fd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f6e321b2-66f6-4988-97e1-57a7486e2f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0c0a4a-bf4a-4ac4-b2e1-3df790d19600",
        "cursor": {
          "ref": "89f47516-b8a3-4e13-9900-e5bdc00316cc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fb65c35a-c69c-4e53-b74f-be76bdae6b70"
        },
        "item": {
          "id": "0d0c0a4a-bf4a-4ac4-b2e1-3df790d19600",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1e006e20-9999-4efc-9bd1-d1ad5d43e84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c06fcd-56a1-423e-ac24-f203f53f621c",
        "cursor": {
          "ref": "e49b14c1-e24b-4213-9204-1addae72cf6c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8eae2893-8a9c-4fad-9ddc-b57cc35fad7f"
        },
        "item": {
          "id": "b2c06fcd-56a1-423e-ac24-f203f53f621c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fc6a27ef-e158-414a-a0ce-e4bd1703a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70189dc7-0327-45e1-9e3f-3cf8354d9852",
        "cursor": {
          "ref": "927d8380-697a-443e-8aec-241e16a672a3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d67a128c-5de4-4326-9997-fa772f1a5725"
        },
        "item": {
          "id": "70189dc7-0327-45e1-9e3f-3cf8354d9852",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2a0f3d1c-e62e-46eb-bb6d-b7c37f14a991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97500313-5ac5-479c-a900-afbf7ec70948",
        "cursor": {
          "ref": "4bc12a12-18b2-4569-87fc-4a59a133511b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dc01d1ec-f166-4d41-9e95-d59bbef67521"
        },
        "item": {
          "id": "97500313-5ac5-479c-a900-afbf7ec70948",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2cabc97f-0067-4f0e-a812-f80b33770534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a513d7fa-ebf5-453b-a8b8-8bf95b4f710f",
        "cursor": {
          "ref": "875ce6f6-22a1-4e91-a994-080697fe8274",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e6a6161-9486-4458-b45d-121966101d34"
        },
        "item": {
          "id": "a513d7fa-ebf5-453b-a8b8-8bf95b4f710f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "526f537f-46f5-4aab-b7fe-1398d5d8b239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49a702d-dde2-4702-a45d-7c910d01eb5d",
        "cursor": {
          "ref": "ca0523f7-0f9b-42dd-849d-52c1102ce7e4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5cb9f3a3-df86-4ed8-8a72-58521180e6ad"
        },
        "item": {
          "id": "e49a702d-dde2-4702-a45d-7c910d01eb5d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7306269f-7334-41ef-a79e-86c11ba21fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfcb3d8-7a83-4459-bfa9-6d064f5a2fff",
        "cursor": {
          "ref": "012b977e-29e1-44e3-9dd8-f5b6475e5032",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "416c8abf-745b-40fe-a4d0-f0bab24d8641"
        },
        "item": {
          "id": "1dfcb3d8-7a83-4459-bfa9-6d064f5a2fff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eee4e2bc-ed46-4032-85f1-2cabc42c3dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b8bfd7-d091-4791-8a79-a2cc783476eb",
        "cursor": {
          "ref": "ffd1d664-56b4-4679-b7f0-e0c9bc9d4797",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "35f6bbc9-b685-4d44-a922-53fb4c791589"
        },
        "item": {
          "id": "32b8bfd7-d091-4791-8a79-a2cc783476eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a119761-4144-4b54-a4cc-d0f11037ea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0401bb12-c794-427f-99b1-52bba29b38f8",
        "cursor": {
          "ref": "ed792a6e-1080-4627-b417-d797e6147850",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7283cfed-0981-4622-803a-84418d2c2e63"
        },
        "item": {
          "id": "0401bb12-c794-427f-99b1-52bba29b38f8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6495b271-af9e-4c0f-9569-25e88b4b4ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c4d430-d6f1-4f26-8a3c-037ff39750bf",
        "cursor": {
          "ref": "71a5084b-bbdb-4dd1-92f6-0cf899e6cbc8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8c1cd402-f71d-4680-90b1-44e2597db301"
        },
        "item": {
          "id": "f4c4d430-d6f1-4f26-8a3c-037ff39750bf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c9ee51ca-92a7-4a3e-8d2b-0fe1a101e952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fc5db7-c0f2-41c5-84c3-b9bab35514b7",
        "cursor": {
          "ref": "a24dff62-fd33-4c5b-b3e4-986a34bf10e5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15f3d933-e12f-4ff2-9b0c-4acd9e5a2bd6"
        },
        "item": {
          "id": "84fc5db7-c0f2-41c5-84c3-b9bab35514b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4c35b8ef-d6da-4756-a7a6-f358feb072a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816bec34-b896-4904-9664-48266b06a04f",
        "cursor": {
          "ref": "780f4700-0e55-4df8-8633-3e17f02ad1b1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8829940e-a65e-4de3-882f-60135e80efaf"
        },
        "item": {
          "id": "816bec34-b896-4904-9664-48266b06a04f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "622568a6-1bfe-4542-940f-24f135b0faad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1603baa0-5fa1-4ad6-ad8e-1fd719170a70",
        "cursor": {
          "ref": "f98e747f-e974-4019-a0d6-7cb2470d452d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "498d417f-5f55-45ac-8281-0e29a13a5f1d"
        },
        "item": {
          "id": "1603baa0-5fa1-4ad6-ad8e-1fd719170a70",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dcdf6826-eaf2-4bad-90df-a5514e6c3f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa221918-f562-40f2-b2b9-025ec0e72d38",
        "cursor": {
          "ref": "6a98a1f5-a3ec-4c70-9403-c2035d8f5152",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "20c0763c-d52c-4a41-aab9-b876d4440a96"
        },
        "item": {
          "id": "aa221918-f562-40f2-b2b9-025ec0e72d38",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1fe80e2c-823d-4a38-a4fb-ef8a2ad759e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e714064-f7ec-4848-b478-1fce67c19fdc",
        "cursor": {
          "ref": "df40f062-6143-4f25-be55-7fc37d4d8db7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "54732499-3fc8-4300-84ab-6a2b4c271d3c"
        },
        "item": {
          "id": "1e714064-f7ec-4848-b478-1fce67c19fdc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "95376121-423f-4c02-9181-9acb38bf21fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7c3e53-1f51-4f33-b3ef-879b12d9da71",
        "cursor": {
          "ref": "21ee5636-0213-4a64-b970-ead7fbbc8166",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fcc53ebf-8085-462a-bce8-9c7479a4c749"
        },
        "item": {
          "id": "4d7c3e53-1f51-4f33-b3ef-879b12d9da71",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "448c8b4a-b6b7-4f59-9ec5-806f27d62bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0bd7b3-d9bf-40e8-bf9b-761b928f19b1",
        "cursor": {
          "ref": "6a9782d1-cd5a-411d-9a23-22ee5e9751e7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e231b9b9-3e6c-4661-a9c8-2a33f426c67c"
        },
        "item": {
          "id": "5a0bd7b3-d9bf-40e8-bf9b-761b928f19b1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a9bc4c09-470e-4161-a73e-bcb9f7618373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce111c69-7be0-4091-baaa-dad773c2be94",
        "cursor": {
          "ref": "82b6fa5b-b659-4539-a2f2-09d6501e9f53",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "88fa0b25-73ad-4018-8938-f9b7102debcc"
        },
        "item": {
          "id": "ce111c69-7be0-4091-baaa-dad773c2be94",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "888ae6cd-1c53-4ad9-8ee1-eb3d77564d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59798c2-2acc-4fe8-9b2d-cf2d82d98fe0",
        "cursor": {
          "ref": "5bf07bfb-295a-4aab-93a5-cc87a5b4b7b6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bc784cc9-5488-4459-9e01-89fbd23d82fb"
        },
        "item": {
          "id": "b59798c2-2acc-4fe8-9b2d-cf2d82d98fe0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ea6a66af-019e-409e-aa8a-ba488c792580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5b002c-5134-43de-91d1-aa6499310c02",
        "cursor": {
          "ref": "4acd9677-d2ef-4859-bd2f-23aa3ce48a72",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9abc834f-ca05-4723-b7aa-7641f3bb6631"
        },
        "item": {
          "id": "7f5b002c-5134-43de-91d1-aa6499310c02",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "574363d2-dc1f-4786-aa0d-b8e987e55525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c04b38-e67d-4c5d-bb4f-e19de4268c3e",
        "cursor": {
          "ref": "96de6d57-ab18-4ca6-8400-4525e3101c40",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "28d72d38-9b60-4149-a7ac-b870ea727a2c"
        },
        "item": {
          "id": "a0c04b38-e67d-4c5d-bb4f-e19de4268c3e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "08e07600-f063-4250-9ba0-22c041fbd21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ff099c-42e2-4e92-a86d-3dd1e57579d4",
        "cursor": {
          "ref": "e2c84653-afc4-4e1c-8957-a958ec0a3dce",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67c3b8c7-0a03-4474-be40-2b8d6dffe8b2"
        },
        "item": {
          "id": "e4ff099c-42e2-4e92-a86d-3dd1e57579d4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "25ec9b57-419a-4f00-87c9-f49b74ef05de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ff1426-cc8b-442f-8ed4-693348d84621",
        "cursor": {
          "ref": "0c6c65b2-9e39-41e1-a26f-675c32163cec",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a97dbafc-deab-4bdc-9c3c-ba5610b85ad6"
        },
        "item": {
          "id": "03ff1426-cc8b-442f-8ed4-693348d84621",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "deb5f48b-dc82-45fb-9a14-d515dbd4e949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293fe7d2-6242-46b2-9ed0-40ea8420c42d",
        "cursor": {
          "ref": "9e9d0747-4b57-4655-b4f5-4bc5ce8ae543",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2040b87f-e464-4ad8-9e6e-1059eebefba6"
        },
        "item": {
          "id": "293fe7d2-6242-46b2-9ed0-40ea8420c42d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5827282c-7b84-49f3-99cb-c3ad2a11256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616c5a8a-b37d-43ab-8471-32bdc9e1c54e",
        "cursor": {
          "ref": "4ce33fb8-e0bd-49d8-80cf-59b070f5a8e7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da71c435-ab44-4223-b2a7-b8675f97f99e"
        },
        "item": {
          "id": "616c5a8a-b37d-43ab-8471-32bdc9e1c54e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9415a7fe-5d51-4598-9334-0d170c7019c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5d4e7b-5dfe-4274-8051-a0dce65baa19",
        "cursor": {
          "ref": "1ac32e0e-987c-40f1-bddd-052d24ab2b90",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c8a6628c-1a1c-4cd0-bfa1-b71da6b67c1c"
        },
        "item": {
          "id": "2f5d4e7b-5dfe-4274-8051-a0dce65baa19",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "49e9140b-dbca-4fba-a662-18853508d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935f982-64ae-48c2-b2d5-0237fb29ad12",
        "cursor": {
          "ref": "d6a11dab-edc1-44e1-9759-586ab3ed5859",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c188cbb5-403c-4600-a506-6666d24d8a42"
        },
        "item": {
          "id": "6935f982-64ae-48c2-b2d5-0237fb29ad12",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4b8a574c-ad14-4d8b-90db-1542405d2364",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff4b2f9-c541-435f-b6e6-ad42414d4a71",
        "cursor": {
          "ref": "2dbe2303-c2a4-4ab8-995b-ec22abd420b5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b80d412d-da88-480f-af9b-7b9402b1ee92"
        },
        "item": {
          "id": "aff4b2f9-c541-435f-b6e6-ad42414d4a71",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7932f511-4952-444e-971c-488d2bb6a066",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 376,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2592d9d5-6055-4227-871b-bcd8df2f624d",
        "cursor": {
          "ref": "30bd544b-e6ad-42d6-8f3e-da3644a1d14b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2f8ba45e-51c4-40bb-88d8-4dd6d388eab3"
        },
        "item": {
          "id": "2592d9d5-6055-4227-871b-bcd8df2f624d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fb534bd7-ef17-432e-b1c3-d2559ad3d84d",
          "status": "OK",
          "code": 200,
          "responseTime": 469,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4af513-d758-420f-8579-1ee557b8b326",
        "cursor": {
          "ref": "cca6efac-0866-493a-9436-92c1ecbf94bd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f6935f7f-d072-4b2c-8aee-49ae0ea7f538"
        },
        "item": {
          "id": "dd4af513-d758-420f-8579-1ee557b8b326",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2fd3ec53-4cf1-4ede-8063-890adf3c2f39",
          "status": "OK",
          "code": 200,
          "responseTime": 1987,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafad66b-f71c-48eb-a128-5fe631f11aec",
        "cursor": {
          "ref": "7251a428-227c-4481-a3c4-474b0a13633f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1c9d6090-5bc5-480e-9314-acd11315f2f6"
        },
        "item": {
          "id": "dafad66b-f71c-48eb-a128-5fe631f11aec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a5b89d6-8c9c-439c-af68-1e8f85192904",
          "status": "OK",
          "code": 200,
          "responseTime": 2176,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
        "cursor": {
          "ref": "da1566fb-5088-4376-b54f-8f33410d8afb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "64d0de8d-02ed-4801-ba55-9b01d21fbe7c"
        },
        "item": {
          "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1babc949-ae59-4006-ba83-b42dc283b8e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
        "cursor": {
          "ref": "da1566fb-5088-4376-b54f-8f33410d8afb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "64d0de8d-02ed-4801-ba55-9b01d21fbe7c"
        },
        "item": {
          "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1babc949-ae59-4006-ba83-b42dc283b8e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
        "cursor": {
          "ref": "da1566fb-5088-4376-b54f-8f33410d8afb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "64d0de8d-02ed-4801-ba55-9b01d21fbe7c"
        },
        "item": {
          "id": "b2dd05fe-4c08-4dcd-afa2-2c109b700932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1babc949-ae59-4006-ba83-b42dc283b8e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6531743c-1855-48fa-8167-9b06ed2b83d4",
        "cursor": {
          "ref": "134ced0b-da83-47cf-ba8c-aa3ff83ab2e2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0427a93c-0213-4392-a901-512404f8f383"
        },
        "item": {
          "id": "6531743c-1855-48fa-8167-9b06ed2b83d4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e2c32624-4f81-470e-b4db-a9e80e43b309",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 348,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c2893-e179-49b9-a8cb-0382d7b9dc89",
        "cursor": {
          "ref": "580d4ea0-5f5f-443e-96e7-9edc6fd5f33d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e0f7b37-3109-459f-9c78-6831c4d94010"
        },
        "item": {
          "id": "3b6c2893-e179-49b9-a8cb-0382d7b9dc89",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "85253eb1-3727-4274-bda1-08732070787e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c2893-e179-49b9-a8cb-0382d7b9dc89",
        "cursor": {
          "ref": "580d4ea0-5f5f-443e-96e7-9edc6fd5f33d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e0f7b37-3109-459f-9c78-6831c4d94010"
        },
        "item": {
          "id": "3b6c2893-e179-49b9-a8cb-0382d7b9dc89",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "85253eb1-3727-4274-bda1-08732070787e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004508da-cb82-419a-b0a6-4f598af75b45",
        "cursor": {
          "ref": "787948b2-b4ca-423d-a18c-55ca02998dbe",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a2f67f16-6df2-4b8f-ad4b-420cb865ab0e"
        },
        "item": {
          "id": "004508da-cb82-419a-b0a6-4f598af75b45",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e2639966-a06b-41dd-83d4-8dd9907848fd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48e8e5-8639-4ee1-ade2-d6e9f6cf6f6a",
        "cursor": {
          "ref": "730c691f-92e6-42a4-947a-54a7cf854eaf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6a416083-decd-44c9-a397-53614281de2b"
        },
        "item": {
          "id": "cd48e8e5-8639-4ee1-ade2-d6e9f6cf6f6a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33d3b048-9787-46e0-9700-c7c3be5b8c31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48e8e5-8639-4ee1-ade2-d6e9f6cf6f6a",
        "cursor": {
          "ref": "730c691f-92e6-42a4-947a-54a7cf854eaf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6a416083-decd-44c9-a397-53614281de2b"
        },
        "item": {
          "id": "cd48e8e5-8639-4ee1-ade2-d6e9f6cf6f6a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33d3b048-9787-46e0-9700-c7c3be5b8c31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973dffe7-8dcf-4a11-b6ac-d55ab6bf5d8e",
        "cursor": {
          "ref": "aa861290-3422-4334-8e6a-f71229ff8f5c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d88c2060-280d-46b1-ae0b-e6987f89fe0a"
        },
        "item": {
          "id": "973dffe7-8dcf-4a11-b6ac-d55ab6bf5d8e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "aa81e3d6-1a58-4e06-9413-ee21ca7c0c80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 662,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}