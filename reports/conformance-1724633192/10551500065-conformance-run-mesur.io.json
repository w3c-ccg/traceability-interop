{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1a67cefe-c355-4d87-92d5-5d9967809129",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7bc75f58-ac79-47a6-9b47-b657619b5028",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "027ba1fc-b1b3-4dac-b3dd-078a5580267e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51e0ecb2-a8d1-4abc-bf9f-675181761a4f"
                }
              }
            ]
          },
          {
            "id": "84bd8d9f-a8e1-4f57-af1a-bbf735c246a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cb480fd-99d3-4582-8105-3046a425de7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ca7d6ce-671f-47a9-8ba1-0fb81e1ba067"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0c7d442c-faba-486f-8743-3bf799216395",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "63cd06d9-3dd2-4b78-909f-edfb856e0d69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95c2871d-a5e6-43a5-8da8-ca3b6896181c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d652cd8f-0214-44eb-a5c4-0dcfaeffda58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72368520-acf3-42f4-b0ac-db941207788b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ab446d0-9eaf-462a-8286-04243efbf231",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c6583d8-ca87-4068-900a-020deb347891"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a181ebc5-21a3-4ba9-8182-1beebb15ad80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ed24d5f-f7c1-41cd-ab65-1d2a03c2d80f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a4b2097-be3b-4b29-a78a-f104d2dbdd0c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abc3f301-08de-4d4c-9fc7-671de94dcf5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60341da1-b393-43f1-9539-62a83f3f824d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4b37073-ce14-4632-a505-3e0382770bdc"
            }
          }
        ]
      },
      {
        "id": "72b3aafc-469e-49d1-93f9-b74fdbc8158f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd2c4d3d-cf4c-4071-acd2-be3657129df6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f147a35-215e-4673-96a8-00e024bcea15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb40c32c-866a-48f9-a798-31bbc6a000a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a23d2c-010b-42fc-b091-e88e7808feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13565f81-abac-4676-9fbb-1c7ccc8bc7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee8a778-8a3e-426f-87df-2c666da7eaff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edffb03d-76e7-409f-8068-d89017707cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f8761bb-d3ee-4e77-8a5e-0db8b46f9de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8a34af-d158-4707-bf9b-fe8cb06d0170",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f9cc0f-99eb-48f2-9290-2e824bfbe754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "929426ea-955b-4e60-a11d-70bdc81625ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a08ae355-e4d4-4e07-aff1-3570fa08e9e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8de00ed8-1516-4972-b47f-195b3cf88293",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f149bc8-7072-4c51-b47b-9736b17b3625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7efdbeb7-4e46-4e8d-8473-deb6d100c65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b24a608-6e65-4707-9dac-1adac12a8dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07689d4b-9f15-4f4e-aea3-8bcc639fbce3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d36519cb-4ab8-4c92-ba10-cd3b8a39c0c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e61b3f4-acf5-46c3-87cc-5aa7bf4f8a20",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd9c735c-c4e2-4c56-a96a-94de915ee345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d511e61f-f299-45ad-890d-b0863abaadbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4735dc9d-dd2a-4038-a434-19c0d3b9db88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "92e02b4a-2168-4352-8b64-283511035827"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df856ca9-50b2-40aa-bf65-2f4537238a77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "606ef6a5-8a70-47b2-9362-28451ea5b520"
            }
          }
        ]
      },
      {
        "id": "b75864af-8877-430b-9c99-4aa7fb38884a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c069831-148d-41b1-b546-75d60f9dc701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dc156ab-295e-428c-9ab9-c167654f7819",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d25e668-5f1e-4b6b-9b85-ac7359cf3ed1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dd3036-81dd-46c2-9e8d-1645536a015b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e011f81b-857b-463a-92d7-af38070e9b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a6f0d6-bd7a-4806-9b48-783179b89189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2246d3a1-72e7-466d-a9b8-9957cd3d0eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad3e3f-2f40-4065-aae0-6637eb14c15c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d041e5fb-e7cd-40a2-b600-1d5f982c298b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c377c255-57c5-46a5-9749-0df785dd7325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346af1c-6b65-43c1-8de4-87c6f832dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be3bd38-621a-43ad-9d6a-f7bba6fa5f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3abfd78-9279-460e-921c-ee2457b3f9b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11a76f2-42c7-49f4-a584-52b5e3c4d638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eddac5-5dc5-42d4-a476-074b81a0ea2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bd80d-d0cd-4103-87bd-5ff4918eb0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91fb94c8-e123-4096-8bbf-cdc8d3005676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1270885e-5a68-4377-bf48-0da413d052cb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702f91ec-5c07-4c1f-a7d5-5a972d16b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7758c7ba-9a4c-45a6-9093-7bb089114e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09a92e3-6d43-44f5-8c6f-c16a35d81aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4fb9f84-75a6-443a-bfb9-a980594e0147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e29485a-0a9b-4e9c-9b18-f7f63741265d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b98e85-bd8c-4898-a362-7b41f20e8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabc53d7-a84b-4e89-8029-016e2a5ddc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88243f0f-c533-489f-8386-d02264cf41b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490e2ec9-238e-4bff-bd11-3b4a311c89c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ff67ec-e440-4fea-a7c3-f07b930c7cfa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a456ea0-3caf-4920-ab9f-883de14ec11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e82da2c-39a7-4a8e-913e-90ca8ee4eda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97650eea-0049-43e4-ad1d-c2e79bff3ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd846822-ecfd-4015-8496-6026ac446b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152819a7-e7b9-4904-81ac-44df6687cf0e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65828c0b-f58a-4249-abbe-8c5c52330d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0f2105-4d21-4592-bb5e-b0ce5129e675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec6600e-c20f-42da-a592-1d3a045dd109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e0dfa6c-668c-408b-a546-8e7cfd60cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a555932-966f-43c4-8cfd-167379a0df9c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6270213-fde2-4f36-8e46-b122b4b58a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923f4147-7b71-4949-a87b-9b2518c2ce8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0108d3-4e54-4de5-9a68-8ed32a00a768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78115dc8-5f08-4781-b5da-1a21be7e69cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14122566-b87a-4f1b-b41f-877f931ea59e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a92c78-0dfd-40bd-8524-13d934588a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98879d9-c9e2-43c3-925d-3c25b84dd62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cf41c8-c5fa-404a-82fb-ac533386d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "649c83ad-15b9-4ff1-b6e3-36ccc843cffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e9f737-43a0-4edc-b56e-9627905a5e63",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb039c0-9e99-42d4-ba7e-07d4f573a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34121bc6-eb60-4423-ab77-cb4388f85b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87591047-45c2-4b18-b3ed-f9b3ba9151b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f236cfa-899d-4580-bd1f-caadbd815d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46245b04-5713-4433-805c-321858ab010c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e364c8b-cf2c-40bf-9e1a-2596147cef47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf56c70d-8a13-4857-a729-b761988a1b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580c0b40-6e19-4a3c-8a57-ced0835135af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28518e69-7e4c-4362-8d91-47eb0552fe70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4629bc0d-aa10-4f27-bcd7-17af335fedc0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4d8311-c981-4b2e-8db2-789a4ca504a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5093009a-28b8-43a0-b829-026497001c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bc76fc-17b5-4831-b565-eab2d55bc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f45dcc3-d9be-4b42-ae06-7f6318e4962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e706f8f4-41b4-4e5a-b048-af136c1da04b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c76a98c-4ba5-49da-a011-bb19e45cb8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26969168-5196-4bfe-8dd2-b594907b69da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d6af7b-71b1-446a-b6e5-65d4b636e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "344a8baa-cdfd-4c7c-9673-baeb9f6c1264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9391b234-6422-4c58-a894-1f9963d8b5f2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7363d3da-6a35-440c-8db5-d9f9465e6cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6d2c19-f287-4563-bc41-f5c567a32b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f313ac7f-9b4d-4eb6-b584-0e6a63f2796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ef681dd-5637-4151-85d8-f5a736c90781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5404a179-b1ca-4fcb-a086-d4c0caccba42",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930967c4-1fee-4f2c-9ec0-68ff1c2e03ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a214562-7647-471c-90aa-0547a44d6e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d9034-9a35-4c3f-a8fc-348145cb2aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b91c0c7-f5c0-4c66-980c-bfaae2909e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96edfd4-9f11-4dac-b482-7ecd9dd93867",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53059258-e7a8-4d3c-abee-4a4a6a9c365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a978d331-487a-487e-a48f-1ae50b5ab636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1168e675-7488-4c9f-838c-a127d5110ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "888946d4-652c-4ad6-a804-6e6054bdb491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f21a9ce-afcf-45d9-a34b-7351ac962b35",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b2dfe9-b21b-4f49-a780-9734f65f5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853e7991-c44d-42ad-8c7e-0a99fce1981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03d7c6a-0b0b-4af6-8725-30a28feb4301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d3e0236-f556-460f-aff4-bc09b5cc42c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbe52c9-5f27-43ad-a804-b00a40543cb3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1230556e-a095-4213-8fdd-ef9f573d41cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e4211-702e-488f-9749-f38db648f36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf17312-02ed-4d7a-9dbc-93848becef5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "056ca9ba-5348-4a9c-a03d-7368e25e7ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbeb34f-d786-4a92-b015-4633b3500fd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ab791-c73a-41d3-a09b-f62453d976dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c39c3e-db31-4f78-81e1-c54e9beedeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e446a4-e7e3-4cbb-915e-bc862a7771c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5b394b-5689-47dc-a571-2ed2189bd872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b209d66-e2c7-4d50-8cfd-29aeb359de3c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9137ab31-866f-41bf-8049-b3ec03e4b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ac0217-9e9d-4c01-a37f-2c4d963f73b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c69543-858c-462d-96f4-4b59b0174d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b95c655-df88-4612-98a5-70332e16de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c877c43a-cfcb-47bf-88db-1211efded14e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c74eb4-c2df-42d5-81c5-9fca4b72ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86a7bd8-92ef-4ddf-b992-24895440010d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cccc89-48d5-4b6d-ac0f-208228fc4c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da810dd6-f317-4c78-890f-fe9d1f3a0415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9dfec6-f911-4a97-8aef-f4a3e9831b57",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7278ef-370d-4148-b238-c70d6def059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df943a2c-7521-453a-aaa0-b5ad0d868ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeb59cd-369a-4de7-a525-462815423691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee85617-9798-47f9-a288-27c8489df5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ead4d-21d1-4614-9f27-a08b55561a75",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b2df8-4313-49d4-9161-a74cbf356c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d1dca4-284e-48d6-80cc-172f7ef5c9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c0405b-c140-4251-8aeb-4ca6ab8b4969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20298c84-f913-4720-b205-d0984351cb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d6991a-8296-4ee5-a807-99a3fa870f82",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb79315-c04a-43c8-b053-c88ef6921cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f5852d-c06c-4c53-9ab7-b1eb16eae3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe914ed-8944-4ca5-ab70-99259b175e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "009458b1-791e-4651-a784-4a7bae079ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc0811a-3d7d-4c3d-9863-5c207a565eef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ff0e26-31b2-4d1b-8113-3bac1a5ad8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549046f4-d311-4c22-940c-fae7588f1b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6253ce3-3b18-47f8-be19-f50006767031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aedccbe-2242-4dbb-b255-6cb3b3be5b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f6e5c5-d53c-434f-8a28-6bbab323b16e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc623c8-6008-42bc-842f-6055c16a223f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73609155-f8d9-42bf-9342-82035a373863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4a13b-e275-470b-9454-7237323ec770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88283c30-050a-4035-83b0-b74f414f5a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239c8dd-0dbd-40af-8401-01770f60baff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba5872a-375c-4621-8e60-78d5f88134df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b01ba7-4b46-483b-b2d3-43db4a1731ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f120a5-31fd-44e0-8f3f-fd55d12833ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ac0a16-3493-48bc-98f8-9e85bd6b7b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb5fe3b-f858-449c-94eb-7665d17dd30c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dcbd33-0ad9-4e7a-a80a-27754aaad869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c115e53a-9371-46ed-949e-80b9a9fc0932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d5c023-436a-4442-8e87-4bc8e8f6baf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0adc61-9193-442a-a7c2-0efa1fe03275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77af6095-ab47-4aee-b7c0-a2bf5842e71a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13390a4-2d6e-4952-a1bc-c6a5efe56bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1565beb-9815-435d-bb4b-3d9f6c773288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b325bf-066c-4b6c-abdd-a2faec4efa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf66b0c-be08-4068-8f32-7b4d8a68e6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5759ad12-7b68-42c0-a29d-5ca108c464eb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc65321-27d6-4365-aca5-858d808a1f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026f026e-5baf-4136-a0a1-4d99c8f4637d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40007f6a-e5e9-403a-a42a-aa5514baece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e445d23c-a66f-4dce-8b31-58a195b6e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc8fade-a61d-4886-8311-70dad6fed594",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d88d24-df27-4bec-b674-4f44d1330f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7215948-8521-48b7-9b73-3cc9daa98f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f35b7b7-37ee-49cf-ac4b-d3efd9d66888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6300ed7f-9d21-4920-a16f-34d9579bb1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804bb7ed-08f7-4c28-9403-6788b687ee03",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0b044-5ec9-48b7-a894-4df5ff847898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ad8d09-c1b8-4034-9620-96733f7d8fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db78549b-0161-4ac0-adfc-94e94f5228d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aacbf2b-8257-4347-ac67-d41c7950ed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adb7a1c-43ee-4f7e-bf83-3a74fd4119f6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e3b6f-b1c3-47c3-8276-535bda687f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1120198-ab2e-4fb4-ac7c-06cba62fc95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721e210c-375b-4abd-ab4c-52c49c30ebae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11640b2-36b0-4c99-a1ff-ad82dbdf45d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b7f316-e285-4520-81ae-2ff958e152cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028ba7f4-0f35-4cb4-bbd3-9f8ad2b5f71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e6c45f-1ace-462d-9815-61d8c84606bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b563a904-6724-4835-9110-6bac25a522c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0f4f1-eff0-4476-8c98-b4f54c92ec1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf06c7ff-cd17-4c7e-8ef9-0447f7e49340",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0311bbef-8740-4af3-b325-6c95e338449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34c80db-548f-4c69-b10d-6632ce0d9f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80376f42-7890-4d12-a30a-5ba6b0f2942c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dfb4ec-20e7-49a6-8b7a-fd249fd32b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8f6ccb-8f45-4428-9cb5-f65dce763a7c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e93650-6bf2-41f2-ad11-3a5dda722a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31109943-cc79-4f77-aec6-3e437eaed12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2006a9-14a9-4c06-930f-9d7c20de9f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2ccf00-57ea-4e8d-8dff-6b89c898f7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03037f7b-bfbc-4ba8-8ddf-fb4cabffbc36",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000f3502-014b-44c2-a950-ab5e8d8c9c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0527d1-b74a-4fd9-90ff-f2f68bf8c248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee044c23-5054-4981-9887-7045c704a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "076275fa-c394-44dc-8bd4-ae56d204d712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05912e22-c603-4ab7-98e7-54b23e34bd0c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d45c39-2161-488d-8f18-832b250643fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7ae56e-8eae-4a52-88d6-0af746fc565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb47d4a-9a7c-44cc-bf53-81671b10e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "968974df-d1fa-4f35-9b04-99393b214731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab90b1a-6973-4d15-8ee6-e5c456f7861b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a4d0c-dc67-4275-bac1-d6ae8d73fd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d20e16-d085-4722-bcd8-4b5361661caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83224635-17ec-4817-a946-4eba6f672c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1241b4bc-4014-45ef-94df-62b90c071d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafd095b-29e6-4e15-8d8c-c268de4fe55c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1b3608-0bac-4622-8d1f-26d72be3ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e99315-a014-4b28-98ee-fc112703c040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2257ebd-e8a9-43ba-af94-8f78ef39e145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a008e5-9592-475a-ab87-a6fe658d7cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eeee5c-8516-4034-b019-72a2768452b8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08249011-35e0-4a09-8c9b-4b51b9660a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00460b9b-20ac-473f-bbcf-50c77bfae21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac4aee0-3a4b-4289-aea5-a8fd9a27d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8990b036-3d79-4076-b77f-30fff991d628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ccacbe-2d16-4f98-a067-7d881e08eeb8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a54d53-bdb7-41f9-84c8-8b9a983f35ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dbcc8e-dcc5-4b9a-8f50-c15b36697266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb5618-bc72-45ef-a726-81ccea1b6101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b357fdc-6c63-4bef-a235-d0346ea4fff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4767d-eb2d-472c-a33f-e68327b7e3d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a5a656-b42e-43d8-b67f-bbd25fef12f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77dddec-c0e6-436a-9cf8-5842443f2b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999e0c6e-c951-4be8-95f1-31b5b8e6bc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "77302286-8fbf-47f1-a1d6-57974c177f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6de592-7af9-469f-a3a8-345eddcad819",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f3840-380d-448a-9aef-85631e86a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d062138d-8937-475b-8ab1-55af3ba09a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a45f40-befc-4653-962f-0433c93fe24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f1c2ee-23c4-4761-a041-be6f3783e757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc58c3d-0679-4cbe-b657-bf5808b902c0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b0eb3-6b57-4342-b979-261ded56545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330beb77-280c-4c55-af82-74761623766a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2613ab9-4f14-4eca-b1c2-36ea646d0174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db890f02-f1b1-44fc-99bd-90e443207cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc093748-a858-4753-986e-7a121127c3f1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3895c162-e78d-4fc4-8c08-10dab9c324d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdad509-a8e9-4e25-be8d-179b1ea3644c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba3b0a-ef90-48f9-9870-dced2eec5d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ab9fba-5e87-445e-ada0-d5bdcc56e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2153b49f-eb77-4c2f-af3f-f30d5d6c59db",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b3efa6-91b0-4e2a-aa1b-deb966bbd018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e2dea7-a72a-4c08-9782-fd43113c2706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b2391-16fe-4420-a00b-aa3ca2d6fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf0ddb7-ac36-43b6-81db-9e80f36c8246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674aa0b9-8794-43a5-9577-facc32acba6b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78e1627-0f24-407a-8e68-b482ba277406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a6fc47-3581-4f15-b1e7-4314978d7230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94109908-3940-4014-9555-12cccb5d655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b831c7-307b-4026-9f20-731d606d13c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada9a36-cb40-4807-a7e0-c591c84fef3e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f959f99-f0e8-4196-8ca8-015bc12da0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3996d06-21db-419b-9d91-5e71d0862721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbf66fa-1dd2-414f-a5ca-5e088c3a548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9671d2a-84e9-4f14-a308-d36bc22f5d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a9ff28-cb13-451c-a646-67aa5bbd201c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172e304e-230b-4c73-920b-4869d0927171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94edbc6c-0f14-45ee-ae82-32dd43c4a932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd3c64-2641-487e-9613-9573cece6bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b98d1b71-1c98-4367-8ffc-f63f49f5aaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43961442-ee66-435a-b75d-fa27b9f74d13",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2f5ddf-7d51-4edb-824a-60235d331c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19674141-8694-4cec-b806-4f791e8cb0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7d9047-98d3-464d-9003-6571ccd3d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64748de-5b91-4a5f-93ff-68d617b8eae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2506c79-b414-4eda-ab78-f38a77cc4947",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f3b41e-dc13-4d4d-bc10-439c3f317391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1b9ecb-9a27-4e8c-b302-114f7b7eb242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363fc016-5530-4ed9-a9f8-c4251fcedcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b857f9cc-5f74-4c3e-b79d-fa49caa7bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5500ec-961b-4703-a951-4287f2e553f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ea337c-a509-4b48-8c3a-ebfc7c952cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4e0a47-9c4d-4445-b2a1-14e043c7633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2fbfd8-cb71-415c-9afe-54d883e0d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc31a60-1cb6-4c66-ae27-763140830d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a48074-72be-4cd7-8ae1-1eca24bf87fa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7433a2-ff30-46e1-8143-3800ecaacefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e700f4-f493-484b-b7e4-6ae55f42ae54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c7c2ea-0c64-406c-8fa2-2e830bc0a817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dafe223-ced6-4176-9b82-7c4e328f26a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a468d-67d0-4219-8ee1-605e5e320e01",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb92748-daa3-4231-836c-1d6274f61dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd205a9-78d5-4ac9-beeb-272959f0c88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968a6cc5-fa2e-4d4d-a4c4-b9b90b59d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a228b2-40ee-4d7e-8b3c-9e688a37d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58357554-a4e1-4799-8d21-f1724dd98e40",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b94f8fb-8f30-43a1-9b38-0da100ade0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc34a951-91ee-4c49-b87b-77efa85ef663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70fef17-f29c-4fc0-a802-49a7401ccd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6c27bc98-8b51-427b-a52a-294c5a2bef06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e5320-5a89-4093-9da1-92df6e9ebcb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28438088-56a1-4b86-9de4-76e5eeb101d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c66921-236a-4c55-83cb-90a3939997ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090de2b8-5e3e-4b23-bcec-1fbef5bcbcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a805ad-7c7e-41c7-afae-af7481988b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03155b-aa16-4023-ab55-d0f3225f4f27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca6b4dc-0df3-4a92-a498-9f0413ee7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c05df2-2c3d-4a88-8526-df01572175d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2631fc61-3799-4dc1-b044-e57fb302195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9330663b-b0cd-4bb0-b0e2-190d0e7a904b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddaad34-32a1-4b6d-9d47-357cbaa316a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcafc32-8d2a-4183-a6a4-6ff2feeb2fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22430ddd-e2ee-4004-9041-f140809cc1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9ffe45-430d-4cd0-ad10-9314f6e6cc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d3f854-3e85-451d-8cdd-20416e045f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e42cc3-a1d9-43c0-ba9e-058fbc11ecba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf71b18-3d58-46d2-9ce4-a6555e300feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6930b3e-cc3f-4b81-bfbf-f07adcaca5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01807e1f-8b5b-4480-9d03-2097bb80d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "038457f1-31ec-4048-88d2-3c18155f99a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afea447-777b-4856-a21d-3e3143109740",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c09f54-75bb-4756-85d4-d2dc7cc2c14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94909e1-ceae-4e32-9e25-c763c07c454f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349e24df-4da9-43e6-8796-1c1ac656ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af5d1971-bfb3-4a2c-b100-a1f2fe2b0eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f731f58-a3c7-4931-b011-76eb91e6a51e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcdbfef-2715-4d6b-97ab-bd3426619e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c20b1f-cba3-4f2d-9bb7-baa2ecef196f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d7d7e1-ef1e-4e7e-900b-acb587c4669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "79625bdd-142d-4783-869e-7988b6ccea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcc08e4-76a1-4d5e-99bd-8ab7563d0758",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f690d-60c3-4921-be77-dd91ad32d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fdb08c-f26e-46dc-b1be-ee09daabf4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141eb9f5-30ab-4967-9de8-0cbb7a1285e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea51d3c9-e8a7-4af9-9991-fd8c34cc639b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27161809-11f0-4584-ad95-a64d3284775b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094bfa7b-1245-44d4-b3b1-ccd303fd997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c6fff9-6f59-45c9-ac20-695bbfcd71ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5149c9-4798-48cd-ae30-3fd9e47628dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77601f3e-0abb-4d7c-b319-6394c3a63b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fd300f-f991-4c69-aa65-5fbe13ac72bd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b848a6-fcff-4ceb-95dc-b7d1ce35458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886ea6ae-8c97-450f-9315-7c0a4c7146a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c9fd7-6c34-4a60-81af-88ceed0d86e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72249af-3dc1-4d26-bfba-6b4ff1775a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9b01a5-4c07-45d1-ae0f-e3215a7d681f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c078e61-56c8-4a3a-8dd3-e1b72cd0a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20140eef-d6a0-412f-8b18-8102c432ee6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b201ea-eddb-417d-a394-2d5aad2f2e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b1277f-1e7a-443d-84b7-8fdfe6a9474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f78c45-7de2-4fb1-92b7-6d6cffbac4cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dfbab6-322f-4007-9410-e89dbafd2043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a22610-6d57-493b-bc5d-6321735c7749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0c75c1-a8b1-498a-8cf7-07c5c6886178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e04e688-a641-4e22-acbd-5bb1c7d20257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade57933-5290-41c3-97f0-9295a187031c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55531bfb-06dc-422b-820f-4fc31b65b35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca858e4-9d73-4d05-9e3d-8778bfb77f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9d46a1-626e-4b1a-b335-d1b6ef1bdca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa62dd7-240e-4fba-8e9f-04786f6089eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7143f6bc-fc83-45d9-ae31-c32d76a426ba",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5138f697-4b96-4c95-bf30-ef27cd0e1066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f9bb9f-b08b-4518-baae-1f578659e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba632fff-7aa2-43e8-b7dc-35182af61efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e760b9f-df62-40ec-8168-677a3dfb6391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a742dcc-9963-44b2-b630-152f483b02c6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b4dac1-5a7f-447f-bc89-4179ac51019f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe87c49-10f7-49bc-8b44-84c39313a3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30051194-c677-423b-90e3-a251a351d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c38a97e-b01c-48f6-9d1a-3c7206449c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10210d29-570b-4fe1-9788-33c2d8987770",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3f3abe-5ce5-4934-9ef5-b5a20b097feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60aae5b-160a-4f19-b490-f68a240664ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f46ab46-15fc-4863-a718-0ddf80f090ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c73f05-f1fa-4a8b-b1db-dfd7468cbcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6625e6-0967-4461-b212-bb0bf978e237",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4cfb8b-3ae9-4ab2-9e61-970632d148ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64ec8ed-c720-4e13-a46e-6dbe8729eb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b698db5-7d85-44c2-9749-03141c212915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7b86d8-8529-43cf-b46d-0b22997fcb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7a7d7-8199-425f-aad9-b3c4a57a94ea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f395c47-8d8b-42c8-b2c6-fe34525ae427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9999c1bc-682a-4bd1-ba10-dd87cd61db88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dd808c-a91b-47bc-b6d1-6249f9953332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c72e8492-4797-4b9b-b47a-807bb129df56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a6c57d-d43a-4079-8ce4-29ced0c16a62",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80904e08-d291-4dc8-8a1a-9daf1c9320cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c715fb3-910f-4b6a-8f95-3468ad2bc70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59da85b-099f-43a0-b41a-e57c451ffbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2363ba4-cc31-46f5-b493-63e9320fc647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc89a2-ebc6-4b4c-bf1a-71228b2d6e2e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6dc66c-ba2f-4c0a-ab3c-649b20e18a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35da7035-f978-4b54-832f-8e5e9439d97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033924aa-e4fd-4017-a384-270912a3bde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2534cb05-1b7e-4c4c-b3aa-446f956a09f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc85653f-b797-46b1-8d00-d1c23bc74b69",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9402dabd-c1c0-4ecb-878d-3c7fbddf27d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71146f2-f4b0-4d1a-a290-8dc6c892af2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1809889-311d-4aaf-b9a2-a862781b2f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38fa01ae-2749-468b-b8cb-882be3c1076a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81a8d39-5369-486e-9e8d-630105a5707e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034a94af-bcaa-4621-acbb-cd5c0ae18e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0613fa24-f8ad-4393-923a-63f5b69593f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed6884c-883b-4520-ab90-402873a8af9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2d8787-786a-4bb4-ad46-142e5d084dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c61ab-afd6-49e8-8bfc-e6d10ee26098",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d0d6d5-bd37-4162-842d-0d1843a87356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660af307-b834-4c24-a91a-1d78e69ad5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed94fa01-18fe-46f5-ba9a-f3fff89657bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "075d1d63-dbd6-4f06-b0fe-8049f0949d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a115a4-9598-42ac-8ea6-f11a049ff05e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbe27a5-fc51-4ef1-91d5-e643a03e6895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c056733e-608a-4cad-8889-d50adb1e4110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b27ed9e-44a7-42be-b6fa-13c798885420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21abdaac-9067-498f-ae84-31dd268c8eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2213c52-5f8d-4da6-bfd6-6875d8e1924c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a963b-80af-4936-9b38-65df83c49d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac95a3e2-eef2-411b-b436-f3c0feefebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2e0d8e-dc5a-46a3-9126-49464d228f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdc90b2-0021-42a4-bdd0-9af4aace3271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29729d32-43a6-490c-a998-1ea4e1f711bc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae0c118-2531-4a5a-9c57-4cbe19e2b9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e22404a-7e2b-4dd7-a7d8-ff20bfc61aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03badef3-4959-49ea-8016-2d97685ba0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efda9002-164b-4f16-8baf-30d2b4f23106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c22df0b-98c2-45cc-a273-9f855ddea70a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a873febb-f58c-4a2b-a0d4-83367038e510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d869d61-268b-448f-b698-d6472146f01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9860b3a-3f64-4d9f-8d85-04431485bb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f99ce2-e970-467d-bdaf-e2d4cba76c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045a2cba-3fa0-46b6-b361-25854223756a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8527d6c2-1f97-4a20-a3d1-500100fc6483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89339289-7321-4d2e-9d77-27db05ac8d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d497c66d-98e8-4ee0-a28f-df53a3cc4c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b122394-1061-4e7b-a7a1-05ebe6a5ff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5738b1c-ac32-4e60-b05b-becdebf33a4e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f93670-d1f1-4fbc-a155-6ed361a9eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddd0a1a-8858-4d74-8068-99aaa894a4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa90f1-eb7a-4d68-8ed0-0bb757440c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b018980f-30b8-40c4-8fef-66b1759e1d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f302b2fc-0efb-40fd-b57f-6e9cdfba4989",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabc05a9-e4cb-4dc5-910c-2f8f56edcdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08051816-726f-40d0-be43-5762148574a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713a9c8f-f035-4877-b6ed-8939a6752b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e251e775-1e07-43a8-b6e5-a2bcd184ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b74a288-f9ed-42db-9225-db0a5ccff501",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72add2e-15b9-46ad-ab9c-b23dc3b34aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfd7848-45f9-4f90-bf3b-90cccc6ad20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd4612f-53e0-4ed6-9fd1-076e80b7a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8961d1d-4c1f-430f-afb7-746b25b7a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d070793e-3b3f-48a2-83b7-aff78e92dcf3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1157b8bb-abf4-40b0-807d-88f50f285bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf95c82-dac2-4340-8361-577c188360b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9bb176-f3e5-4b6c-b537-804e74beb2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37dfd620-f56e-47a0-bd5b-f64281242de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f286e3fb-45e3-4d1a-a577-8cc53571bde0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6610ab2a-2151-4fdc-b707-32593643863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb6c96c-a960-489f-9526-4ef9b87c7d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a28fa46-2b4f-490e-9be7-336bd5e92c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68790b7-91c0-4ee3-9c8c-3a44d30ab65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8cad28-1acb-4579-9825-8f0e1975b8d0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df66ec8-62a7-4561-91d4-efb0a16ae2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b348f0-a567-4e23-b3b5-ef31579812c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f562ae-732c-4f42-84cc-984225ddd6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "412aeb5e-5fd9-4269-91f5-cbbdecc3617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d1995e-622c-4fb8-b313-a1691106e71b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d043f0-7c03-434d-8ae0-51a610edf912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6e9fd6-b29c-4dda-a6a2-3fd1f94d3f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dc2eb3-6678-4c68-8df5-b80415f7a5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2702125e-c115-4406-848f-f8a770d9970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf8886c-2328-455d-a201-44c03401baa8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a32cf0-4452-4362-9baa-8f1b910eb37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b7ed2b-b783-4a89-94cb-6ef3fa23d0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48bd25e-f84a-46dd-b543-dcb310ec75f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b24c536-a154-4144-bc17-985fcbdae245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fad257-d817-4dce-af6c-856e715221a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfd890a-2a2d-4c37-b4ea-e7be9aa2e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "df3e0b45-08b1-459a-b61d-8130092501fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253fb200-0560-4ea0-aadc-9ec1cba3d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "98995d37-dde9-4ebd-ad9d-d17dd9a1a37a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e210763e-d2d9-4a15-afe1-21c9236a7eda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8f5023a-b7cd-419b-a070-82af93802cb1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec4387e-3816-4551-ba74-0efe823be17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0288824c-815b-47dd-8bad-c525a2e80e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db0a4a-3703-4892-b618-3c349f63a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "869fde50-25d0-4a74-8f4d-9cac9ae9f57e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23aa32f0-a5c1-4659-9f09-d564c7e69359",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c05fb1-481f-4923-857a-2eb962d8c743"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db5e843-6623-4964-848d-717c1d28b3ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02a4178-33ab-4961-a62c-147f95cad421"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "413e66f9-e116-4fb1-a62f-2de3db6224cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42afd78e-0a5d-4ea4-9c09-e769b46b1750"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4d83c6e-c882-4153-a4cc-4033553f3657",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9222d0a-e32f-430d-aea1-d83c53b89382"
                }
              }
            ]
          },
          {
            "id": "f104400c-eb13-438e-bd00-876006bbe92e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1cf88b87-e1e4-41b9-9734-5c63a9e9d881",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fea5bc3b-061e-4606-b239-656c6bd7b8ad",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add83f36-0070-4e2e-a6ed-c80eb8ee50aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a61af05-f7e5-4cdb-a25b-46ef526bdc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44195dff-3f71-400d-91e1-209f46c34b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90d8f26-5c52-4fe1-a72c-f519c9ad1809"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90058fcc-b2a4-47dd-b338-681803be738c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "521c31ac-c126-43e9-a95d-7265b581243c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71ddddde-8aae-4db4-8f62-c9ab00e8407c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd366644-ef25-4095-8e38-523d5aebbbef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a1b44a8-79a1-484d-8916-1c1e49498892"
                    }
                  }
                ]
              },
              {
                "id": "ce513841-8232-4335-9d35-ea8df6daf5a6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab999594-0774-4f2a-836b-cb458e392b53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55af7bb2-120b-4144-a5cb-cfcb7ef76327"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "717871d0-f9ac-4533-b912-6eb1d6002c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a06303d8-9b49-45f6-ae73-06e21440b810"
                    }
                  }
                ]
              },
              {
                "id": "93f88b45-5724-4f67-9f4a-e5a8bbb79bbc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14e7576a-0d67-4b85-9125-080b715a3b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f30c817e-d48a-44f2-9a2f-5089a84212a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91152574-5046-488c-bc54-cdb78081ecbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fd11901-80cb-4a8c-80a6-fc9ea4eab2c4"
                    }
                  }
                ]
              },
              {
                "id": "679ac373-0c1d-4e84-b17a-5e846ab03235",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34cd9853-e59e-4a8e-99e9-f8b38ea93d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a4e0f3d-62f7-4bce-b81e-f07206ba7cbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04903377-fcb4-4cf3-9be9-3cf472076ae0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d3592c3b-04ab-471b-a861-1f9ee35ae315"
                    }
                  }
                ]
              },
              {
                "id": "d3f278d1-e9c5-4fdb-8c25-7f345dd98620",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c9a6494-a7d6-4493-962a-0108aa40b2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a909629d-3db9-418b-b447-0f3e379d738e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c3269a-ace1-499c-b849-b008efa6bd42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7438218a-8c8f-47fd-958b-ee5e65ea032e"
                    }
                  }
                ]
              },
              {
                "id": "90100969-b620-4adb-9616-e9d11a0bfcb4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "212e8b89-0d14-4557-b077-09319d531f52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bc2b9ab-3221-410f-8cfa-334f0ad3487c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b76647f-5385-4f9d-ad4f-42399fdd9dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5e96d66-88e6-4f49-bf7e-927c7ef9d281"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b0d3b36-84c6-4ddb-8b4c-9b4f020e6eb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28a8dd67-2977-4dc6-bde3-37a98b4fd900"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4e30aae-d7d8-4d38-9826-30b3cf17a804",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1698396c-5f72-4892-9880-fbe7bf49647c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35903ac3-3dcb-4169-819f-fbc37fccbb21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e0c461b-1c2f-46c6-94f1-9ed25b6e5198"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffd15ac-b2ff-400c-a534-98a4a94a7b4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e162582-d63d-4dc0-8700-b8db3e859f25"
            }
          }
        ]
      },
      {
        "id": "c5b4f541-14e7-44cf-81ed-23a5ab411aed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e04ef88-2e2d-4098-ad13-1f0575a1627e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cf6f33a-c327-4241-a748-e09f46428279",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea59caae-4ec4-424c-86de-ff4ea8756635",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d872f38f-b917-47bd-bdb2-2cc38c498bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b924df43-b1cd-4c3f-b3a2-443402aab608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f98fc5a-dc48-4039-8099-7fb3f29c875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4343cf1a-d230-4a97-b700-674785282937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42c01c3-bef9-423b-89a5-ef83c209d8a0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa035a3d-2a21-4b7f-85ae-c2ede84327c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9cc526-cf9d-42b5-a985-3faf578d3cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54052efe-44e5-451e-87c1-9721b4dffc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f1e79a-e450-4d60-9dae-4d91483fcb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8fca19-d6e8-4a03-9dd7-0e236e632024",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31174515-4757-414f-8fce-1d67e10b0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b11f0cc-e623-4baa-917a-5b8c3895cd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d088e51-ccb5-4407-9406-cc20f24bdbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0455c44-f6f7-4657-b9d7-a3eed9ecff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba716f6-4ef7-432a-8fba-9814d8f3d55b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0046de0f-0a5c-4b68-9a1a-1ab3bcfdf5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102250d9-c4eb-430f-a427-e0f910a22c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cc10b6-7e5f-46b1-b0ef-591fe9219ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18f2112-5b05-4735-b41c-0790ad14beca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8545f0d-45da-4359-bc1d-3796f0e5eb3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3164175d-f174-405a-8adc-f94f0a0c4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91215a03-6245-4ca8-ba9e-beee0abf227f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde01c02-4771-4317-938a-6d6616d860ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "960d7b1a-66e9-436d-b6fc-e087ad9e8c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680528e3-eccc-400c-9f6d-bbbe6b10f483",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b663e7-88ec-4121-8a2f-ad1623cde70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6015c43-6603-4daa-abec-41eee660d05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10f6ff7-ce13-46a4-8d0d-dec396432e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabc5a46-1c55-4bfe-87f0-a10cbb78c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e20d00e-bf44-4916-9a22-06aafb988e08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70c6c4-776c-436e-973b-3074ffd6d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa14282-9ac9-4322-82a2-371379a4c272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a1b4c7-1fdc-4ecf-b1a7-6009654d3d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aba3f8-4b1e-4f3e-a358-b86b3b281a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb430ed0-0cfb-4de4-a196-099e02dd8911",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d44a3f-97ec-490b-b9ae-94a412fce1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257b4ac6-7a6e-4400-8b4b-17208a99d558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a273ca-7077-4cc8-954e-2a6ebe199343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62266b27-3d1d-4ce9-8a80-d10613009196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc56402-8ecc-4634-8eae-b03c832b03a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c5eb9-f5a9-4e00-9a0c-69410f79bff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5006b779-aa0b-4d1d-8da2-60ed428bff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6150cc8-1892-46b3-82fb-297b454dee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d350bf2f-7fb0-49aa-8258-2a03e994df3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae5e6c8-e978-4455-857f-e2948c13df2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863e4603-8aff-470e-9c6c-13c5d63e9fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3f7d35-0949-4d3b-a735-70a317a35a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7024ebd3-2709-4317-8012-350da2ec340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "260da95e-72dd-4799-9584-a8c9618fcb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb5835c-58bc-4a77-8bac-8d73efbefb02",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c960195-aaa8-4ea7-a3b9-46afa55da88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcf668f-aff9-490c-b048-29e4e4945319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b163d13-a592-4a8b-bee0-b22894879ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c47932-bf27-41e7-a6e5-f8f6fb48cf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381b6fc7-3fbb-4cab-8599-115802490aab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4ecc2a-a87e-4423-a80f-3ec68b7d51ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b09a5e-cfb8-4045-aaa8-a7154aa12da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73198af7-0f5f-47dd-ab79-ecf1e0e80e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60d95a6d-e2c3-4fac-ab6a-0d2a57262736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbbcadc-e5c8-4181-92b4-8253683b044a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e760d13-7d1a-4816-96e4-cea2b88a7cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f73d45-d0e8-456c-8cbc-54f948fea995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f1058e-3072-458c-80d6-fc3d15e4a70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6e753d-26ac-4083-a385-a55cce2d890d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9000e3c-0662-4521-b3de-d55a22c27638",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2880b476-b4b2-432e-861f-03465ff0f0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbad954c-0eb1-448b-aadc-12b3aec87862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9531aae7-ab36-412b-8dbc-cebb8fd10400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a523ee1-84d4-4837-bc8b-8d912cd1dde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fcc334-0584-473f-b90d-7c0f5c2b7250",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a05f30-235d-4246-841a-ba1d75e14522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007c0c76-6aa3-4476-8aab-ec094f62e069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734e1799-d827-4e01-9c48-c9abfd3eb0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b38dc49-2b80-4bd6-862e-032243e3ed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c0f6f1-f79c-4a98-b4bf-96d3b46e1704",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6c2745-4334-44d8-a5a3-bd814dbd8ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e064461-3d1c-4f9d-aea5-d759f38288eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714cc787-6232-4d4c-9f35-d5deb8a9dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2260e5d6-d921-4c5a-be1d-3b42331a3477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2612e61-045c-4faa-8c29-8b38c1d11154",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b56e2-be6f-4c2a-8d85-e5f372ceb5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4522df1-5da9-4e9f-be56-def40c250d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f224f3b-c782-4206-8f06-f2ddaa04528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "084b54ed-ce3d-43a2-9cc5-4ceb09af9904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81ea85e-90fc-4999-9c65-66edf0928304",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e7032e-7951-45ea-a04a-4000b836dfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad977e7-b8fc-4f7f-a490-cf8c61100002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbba40e-367e-4351-853e-6d1a6388ace7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5874f98-9bc6-446d-a55e-e1fbeaa974ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9758a0-58c3-4a88-a5bd-f9e178adebc1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1112f062-ed43-4ef6-9cab-8a7570b4eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e62427-8162-442a-85c9-8045133de0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c48740-1774-40f3-838d-e52436f4a83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f257649-8424-41ec-8232-85dace33e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9815c93-2a34-4411-99e6-3434f63074d9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8ddb3a-9e57-4a8b-9b0f-47585f256181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fb1794-004a-4358-ae88-28908ad42f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a957cef-4758-4812-a75a-d1c12aebe2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5988d18-911f-435e-a57f-9b601e499601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1179b3-f150-4a8f-a64d-955a4e012933",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e876c031-c918-452e-a72d-b78806cb30a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8102817-11ed-4c17-92d4-6cfc073279e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748a738f-ab7c-4edb-82f3-78c5a2f10337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b9dd0d-dde8-4974-b44a-bb5b89d4edcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e634a512-99e0-47a6-8959-8ad2cbad09b1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706430b0-6ec3-44fc-92e6-23b6189f46fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe13e1f-21bc-4bb6-b700-cc939108667a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccda3843-c38a-413b-976a-f03082aa5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb53be49-a116-4bb4-ac47-2b7e37e411e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958353c1-f884-4489-a445-759e8118978a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b48b58-9a41-4739-ad21-42492cb82c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b260dad-85ed-4326-ab58-9b2964e11109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da19610-a0a3-47a2-ad67-4120e9bb5a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc7d5c7-66f2-4189-bcd0-dbae7f369b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20c2a2e-3d9a-4f45-bb22-86641ebdfbc7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3459424e-c09a-40ea-bfb0-b0c366d00952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5d7c1c-3963-47b7-9447-bb69c31f2745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb763cb-8991-4f7d-ab82-f0239616bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4871779-717d-48f5-ace0-5e9a878d4280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3196aa-fcf8-4b38-8b9c-a2b98345640b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6dc510-e4d8-434b-9f7d-8170ff03edf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2d30a5-40cf-4af8-826b-649e0b94d36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef6ab97-531b-4981-a348-f1178ba43a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1a255c-4cd6-4e5b-9b3d-47a937611102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4af0bab-b17a-4bcc-a08b-b5d037174a4b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bed6d57-1dd1-4096-9826-c6ef96f2e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6217fb8b-9a98-496d-835c-03991b673772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fc9ec1-ff9b-4826-a2ba-2ca642284ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a64602-307f-4a9e-9b47-43e0fd88a9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2179de3f-ae8d-488e-9d3a-6d38d6a3b1f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32a6fde-6c99-4738-b9fa-165a422ea56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06972214-a08e-4cbb-8124-d6c0311ab1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fed2c78-0bb5-4b4a-8909-2e3903ed932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060c92fe-9ac8-4b47-953c-94a39edd8013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc600df-dff3-4767-93c0-ed1390612e5b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e582ba-018e-4509-94cf-f9ab14a86ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0760374b-9c1a-4d3e-90a8-56acae145e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff7a1ed-37f4-4655-8090-b94436af8828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "021229a7-bb23-41cc-a98c-17540182c437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fe90a0-ecf0-4b76-850d-bf0ebaa9797d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c63380-bec8-4f44-b9a0-d346fa36794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfb7bab-efc9-4fca-baf9-15d8d115ffc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec62d0f-79b6-420a-aa47-5a73959ef54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de4e432-cd9f-440c-a304-6e2ea69df2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e7f56f-af68-4e89-a333-c8eb9bc6441c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44768935-5a77-42ca-8b52-733c77b41a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b1f08d-1668-45b7-933b-8ffd29dacd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbcd71-dcdb-4ebd-bfba-dd99a21ad1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37380a70-82c4-440c-aaa7-a7c8ff98d8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f48cc0-bb04-4f29-a1ac-d671cc96c9a3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeea78c0-95cf-4451-84f3-b63b27da80f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f192fe-793a-4ca4-b501-ee434e7d3c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ffc6d9-7df0-4fee-a62a-d614b87793b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c28d49f-b6c8-46f4-873f-5be0aa07fbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7add05ec-2eb9-4379-a125-ea1de710c87e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e965902-8f45-4302-822d-f4bf022a5cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57018189-966b-4419-b8cb-4e568e1a270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2c3752-31d9-43eb-ae7a-732ad9fdd904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e801935d-ade0-477c-94e6-e0dd4a0a8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c81482-7e01-4598-a60e-640205ff5288",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404d050e-0083-4f3a-92cb-cfd7ae961aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6e9e8c-31b1-4f6f-a2fc-a9a57ac65466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7504e071-e4e4-466c-ae94-d8693075615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6904efb8-41cf-46ce-ab30-65dd9a0e56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2729ffbb-144d-40b1-b194-3bc7e83bbbaa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85e7202-1c18-450d-94fd-64b4ef11dfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a2976-095a-4b2a-b7f5-595b0d8b7c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8ca60-f6fd-44a5-8893-9b3da7649498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b2e610-0d3d-437f-a313-664579daf9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2fe337-5766-4e93-931b-c47bbf80ed3b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf94b762-e8c9-44d1-9744-b65f8acbb172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a261434d-8c32-4627-a670-ed887837a8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9332b096-96ed-4ade-86b0-039f8debd4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50136a0b-cc5f-4886-979f-4dc945221278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dde154-115b-4e71-a049-ef7aeea9b5aa",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfea8c42-11ab-4b60-9105-dec2f907d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b9f29b-c9ad-459c-a164-9a090bf32927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be081b28-7333-41a8-9fe1-5fb727183a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "652eda95-fa30-413b-86d8-e6b678057310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1017a45-2bb0-425a-8ff4-fff17ce1ebbe",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10129528-5457-4700-af3e-a2a063ee7a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf85c08-f1a4-43ea-8d28-499bf7f0d063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd823a85-6169-473d-9c31-9d6b04974b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b4400a-420b-4e6d-9c4c-5379aacca5e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08c540f6-b134-4ba0-85aa-2312feb596e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d417f81-cdd6-4ffa-8d0f-3cefa8c9d54c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060ab88f-c935-4b2f-b4b8-83e403edcf5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "55f79931-49f4-494c-b92f-ea687edb5ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db124f47-9f3a-40e2-83e9-74f55a707cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c847a5-01e0-4793-88d3-6c378a8efc07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8f111b9-ad22-48b5-9179-4564cd1566ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3ca5466-f5ba-4f6c-b963-8646cebf470e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a081c65-8c4c-42a4-830e-9e4bed97ffb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04c0af89-1c8b-495c-b1b3-fdf8fd3a8fc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec92239d-ab00-4503-829e-aea7fd4f2a2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "937e5864-ea24-4294-8042-f8749e2576a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2424c5fd-97cc-4b25-b120-1398ab885ede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "649c353c-1e89-499e-a8e1-d2dfe56a5cf3"
            }
          }
        ]
      },
      {
        "id": "a55ad083-cd0a-49d2-8478-b5e799308055",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "358b9286-3756-418a-bece-5a8ae7362eb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0489ee72-8646-424b-9702-69ac3f198c5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf79dd88-71df-467e-a204-2384acb2a44c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cba7c7-9864-4e78-98fb-8fd552d3e86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd99ab3b-7fdc-4e96-88ec-9b49177c5a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4dfa02-daa9-4e8d-9b7d-31dc12c23b31",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f856438-5a47-4816-a3f7-15a2411fd97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bb3ffb-841c-46b5-8b2b-3b595a2886f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce323d66-bc7a-4142-9fad-faa6d9db53b3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da64a204-fef0-474f-b80a-db0d8520982d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea02f25-4c08-4643-85e9-767558cc42eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9b0b6-e4bc-4005-9db9-b9b3d24d59fb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c9fec2-3095-4112-8992-de8784d297c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b17e77-ae23-4178-9172-3f07eccbab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f988ae-9b2d-4109-a6a1-2d5f7e928abd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f5291c-c4b6-4858-92b4-7b6c1881eb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da2c77c-153e-4ba8-ab11-beedb430fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c542cfe9-ff88-4862-94f7-0140ec732efd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a8f788-bc27-4061-a307-7b62a27ae848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02503baf-7ea6-437d-99ce-9a5270c2ebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e14e9-c43e-4ac9-8a12-45486c9134cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce33031-f37a-46da-b815-cbfffb5a485d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6e0b54-2efa-438f-a3be-d37bcc853706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0edbbf-5be7-492e-af8d-b59aed3fbe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7f4998-a4da-4656-9a4f-e11b38734a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b326626-6c61-4b5a-a22e-0f5c3224770c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c00032-676e-4ad5-bc09-96017fd2c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ed976b-8fe8-451b-9c4f-17fe81e697aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36283d23-1e65-485c-9105-1abc5b79a967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613f7926-d9f6-4db1-b182-b7229bbc0e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388570bb-e33b-4d2b-8ea1-02ce3e67898a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6a96fe-10b0-4062-9d36-f6b908f79a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1338bbfb-b161-4cea-8873-109a0061d36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e543d505-21d4-4a3a-a241-e3e64ef3d925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e294266-32d0-4e14-8440-374c4f3a00c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff362a-0038-47e3-8db1-c21008d6f949",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd14e9c-ebe5-4023-bba2-378eea970d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c5c3e9-c8b9-4db3-ad24-a02b7b93b19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea6cc96-3032-473d-960b-751eb88c376a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b74cbd-0eba-44c9-a728-4abe94571bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c4588-3b2e-45e9-beb2-19a65fc26cb6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9028b075-64dd-46db-abc8-2ea7b9ea4cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1f3dab-2925-4452-9ba0-f189e7ec459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a5d4d5-3142-4e7e-83fa-98633ece751a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75199007-17ad-46e0-a3a4-31437b0f304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3858a2a1-7435-4a71-af64-2eebf34ba64a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6692f88-590b-425d-937d-b3713b6c2c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3995a0fa-5724-411a-965d-01c5b7d32552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7885918e-9dd3-4838-86d8-242a6d47d197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b63fb95-39bf-4668-b92f-9481945a09da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f5fbbe-c0ce-4389-ab06-6f5592020a43",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a4db85-5b57-47e6-b118-74148aa5a1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eed5953-e29a-4ad6-9435-6852bf078f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3241e05a-0f8d-4d4f-8eac-07a77ca5fa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249e00be-a249-404b-ae81-acee7ef7eb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8b078-817a-42fc-bcc6-0da55e9fdf9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253686ec-1385-42e3-af21-f7d8b2a55ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8bca7a-8411-45ee-8a74-ba98c82f60d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4179f54f-9cde-4f17-895e-59429b5446ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a6e87d-7ffb-4240-b946-e70ad52b82f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6939f38-05a2-495c-be8f-271562320b22",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac0aaa8-8c30-47ac-bc5b-8175a5acd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8584a5a-3871-45d1-b81a-a328bf9eb2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2f923e-68dc-4340-87bc-f13435dc98f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ede4ba8-ef97-4a55-ab85-a37a3f57af45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0098286-cc90-443d-825f-9904a536cb02",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1555693-ecdc-4652-b1b7-a143442b1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f15cbd-21e9-48d8-bc73-4d16ccb3f5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9994441-aa26-4d34-b7dd-47b987985e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c3568a-4699-4ffa-bbf2-8309e140c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56888238-f41f-4379-a10c-51cf000b2d77",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfd66f-8b90-40e7-baa5-994802397a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d70a4b2-b25c-47de-be56-82ffbf11554d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cc74d8-4f51-4c10-b56e-73532cd54d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac26009-ac8e-474d-9658-f7e0ff2ef2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec8ad91-bd3e-4811-89e1-47a85e65cf61",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca30dd42-2263-4cb5-81c2-91b601c2300f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63edf1d-58d1-47a7-9519-86e8d251bb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0577ee9-7769-4cc3-8c41-69117de7f195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b518864-730b-4f4d-9041-c20430342772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61af578-b126-4153-95ff-e47913fc8528",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a4c687-cc87-44f0-8dda-376f5641f7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ff068-0768-4161-aa0c-52d344339889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9888fc44-d5c7-4d46-a0ba-7c66fbda573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9a07f8-d0f7-42b6-8117-aaee9c73841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1901f08a-1750-40a0-a8e7-613e52495ee7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad41e16c-5ec0-489c-9d26-af82b6ceaa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4109ad66-1759-402a-8e60-6ac52b5e3f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b1a8d4-7e20-4346-a0a5-ae6240517436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c569372-d5d5-4460-93e2-416a57e7fa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14409973-52a6-4a3c-a258-a1794236475c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c53923-5ae2-4f88-bc81-cff6a4893b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38d4bd0-fb76-49c0-8620-103d2555f790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba27e4-9437-4ee8-bcbe-62afab8ddeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840ca4cd-e183-4584-8703-4ac70beced91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458cb29b-5702-4e56-8ba4-3e69393b0ab0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2b805a-696d-4c66-8200-420b92794a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467c2b66-da3f-4e58-a7b0-3e15aebad4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea64003-7f23-425f-981b-4631088593de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28563e2a-d70f-45d0-a7aa-334332fd0ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7ede6b-044c-47b1-b4b2-d974c3c02219",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae463233-038a-4c98-a4a0-e583f299266c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d530f2-da28-4e57-80d3-47bc89717ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a587e07-8021-4ad3-970d-7954774b5b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e559e0-30bf-438f-9906-9de277b3f71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1fe5f1-115f-4724-a42c-64a15c15f887",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be29a1d7-49e8-4477-a5d8-6577180ba64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ef85b4-5fbd-4c55-8730-e24cbd131596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f30c63-5184-4ebc-a7e9-4060a6465937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec3070a-b75d-4955-beb9-ae9a1e6440fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ee0e09-32e2-4fdc-af56-7ce595daf9de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32404bb6-0ebe-4d4f-b88b-697e20acdd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aaef98d-25a9-4487-83af-dddfe3fddcb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ef30b-08bb-4547-b477-40a78c80fafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ea217e-a313-4623-8516-0dc59120c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a676d-8d9a-44f9-ac0d-f5f0324cae4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c125f03-e949-4051-9347-42e17cbb3ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dcfa31f-1454-40cf-90cd-badc23f517fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637795b6-c09f-4d25-8ed1-8c596b6339d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcc2d24-1c57-4868-8a55-10293bf667ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425aa4cd-82ef-46d6-8de6-d75ac4244ad1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d7dac9-21e0-4393-aff5-6f815c58d90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3890f10c-fa04-40e5-9050-be7f7762014c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793b2a6c-db73-4e75-b9a4-0f66183aa0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3652a1e-9b34-4df5-b274-314e5d6fd28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5d0287-6fe7-43f1-9a5a-a4934605dadb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc116af-83f7-4874-be2b-f26d5f0b9afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d01f9a-fbbb-4359-bcc4-80b31c5672d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58f4ab-c489-4085-b24a-343be52e6843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2108a419-71bc-4966-989c-e8450c6752ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a8c4ed-281f-466c-95e6-e4cad4ec6109",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7936f795-2820-449c-b37c-4325f16ac9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2872193-3b08-4f9c-a070-98eb74c861bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc008061-c28b-4d74-bb65-38c352016560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc29b50-5375-47b3-8c9c-65793c50b2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab0b28-0311-4204-9ca9-10572f5b716d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b0d0d-3761-4a20-a898-68d3601d9c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c93cf9-a402-4a56-b3a1-00fd402eea4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20ed1c9-d707-48b6-bdff-ef9c0af261c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f335f68-6ba1-4a27-967c-a6aef5a2df39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71268fb9-6c05-4846-afec-df86545a8a44",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578f9d36-e52e-46ac-8067-033b4466c080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd12e8c-4d56-4438-a075-94ca58c94627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9342a9-487e-47e5-9c70-af01764e189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fc6db8-1735-4188-a1d2-5ac6f77da8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed71cc-48e5-44d5-ba16-c4595823b121",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f185d4-3184-4ae3-a09e-f29ebf42edd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ddfe99-fa52-4db0-a32a-e9302ec2e178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f028f73-58c8-4a1f-8c39-6406898befde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e63f358-a909-4b45-8641-9f4e93628cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33cfb06-a949-4d3b-8c0f-71c9566ab7c7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6717a38-92c2-42c4-8a7b-57ff1a979e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03689eb-594d-4ff3-8ba5-c40c9cb5d35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3d3aaf-4b37-48fb-ad59-c0cd7f1c4ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68afd15-4125-4d7b-8d20-ed9bca1f71ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8e5337-9f65-478b-a210-4d4b3942200d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb2674e-c2c3-4657-80de-421741cd1338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62cb4ebf-dfdf-40aa-be5c-1c319598af3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654bd7a2-b2ba-4b4a-912b-b81bb49c29be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50658bc-4a32-4a3d-9ad1-5934f25c0eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2936dd40-31d3-4016-91ff-f6a993abf6b5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955ac50-a808-4faa-a424-8dd50f04a103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195b8925-fd11-49c8-b023-4a5f29f0a130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b0c8f-80b9-473b-a89d-1dc681bbd990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108724c6-39c0-4f14-9b41-df8aeb689ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9d196c-fa12-481d-9eb5-a44404c3b3a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e787c8-9d66-4848-9ea9-01c2ac168092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a11fc4b-1890-40b7-ad3b-c3086be79f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33357df6-36f9-4f99-8006-00b03eb914f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e960786b-0f43-4532-affa-49dc27d8bdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af97c37-6494-4fc0-9fb5-2ccba45af8e3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37624f46-a237-479d-876a-74de94f5752b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266b9988-06ee-4974-94a3-785b8c7da3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491f7978-b61f-4998-a8f6-ed1a2dc623ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24091a-7e30-460a-8eb8-b752559f7995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc4f9fe-28bf-4c57-b571-386f068e81f6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc86f6e-0773-49c4-ac31-4632f3b5ebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba354ce-b9a0-43f7-92ce-a864c348e3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a9653b-319c-4fb3-ba8b-f73f364db70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e9a5ae-ea25-4138-ace1-ec4e6256b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a6f3c7-ef00-46c4-b929-a0d50cd32493",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef04bb-51c6-47e1-86f5-44dee6c00608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c43365-34d3-48b7-8825-176edbbfd693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaca093-6f55-47af-ac5a-95b3214e73de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e1acf8-1855-4934-b0e4-abbfb409150a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ac4d3f-2573-4bb6-b337-f051d6b9a3ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb1d40e-0ac9-4a1a-9d47-794fb84badb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7e37d8-90c0-4f9d-9dab-e9c26239ecc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41fa8d2-db93-434d-84c3-a065969d6d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b3ea8d-1350-49ce-831c-fce18e925058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1243c1d-9d85-442c-a203-627beab10242",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aedac0-60ce-4442-9d09-7ee9cb49ef44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1745adda-e20d-4510-b942-d16101561b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210b7181-867a-4058-8a41-7ae9f1b74a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b88450-2914-4707-a263-78c5bd1aa84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de8c943-fa35-4da3-b7df-8a81d652d413",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285710fc-e6d8-4a5e-9a41-0317e870646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8463da48-d918-4cfd-8042-fd8bf4e0b097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9c4432-e136-421f-9975-3d863d73b156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d173c975-a4ee-47ca-85d1-fcf7b4909d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b6f41c-2d87-407c-ab6c-722c4795063b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58885620-9b57-422a-9b35-fa0a909db597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606680ca-c45b-475f-956c-3f2586f3c444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03ba929-00f5-4d2a-a457-f28f4f019f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafeb9fe-6bc5-4948-86dc-89ea40b5a27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343405de-18e1-4f89-a685-891587040e8e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1666c44-d6ef-4e11-93aa-b9ab68470da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f925b2-20c2-4168-b721-b3cf113634d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765416d-aa9a-4f45-ae39-bafb250c370d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb79337-b1ac-4054-9001-e04465b6dea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a1dae4-f9e4-4bc1-954e-473e44f41f1a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ec56c0-8290-4411-b68c-fa5cbad4ace6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3cd634-260f-43c8-b432-ed6ef60ebd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03419f5-9480-4659-88f2-ce34b99bdc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7082e10-38ad-4384-adc8-5a6c9d89ca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5b5c6-045c-4e7f-ae7e-190201f217c7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b4a5f2-d298-4619-8187-13d4852efcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c67735b-3fc7-47e2-aff0-6cdd7edae023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6306938b-204b-40fc-be43-eb9e8758f676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b01f97-b5c1-46f4-ad64-ae6224dc481e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e1d345-556e-490b-aa04-391130d8d0af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a4a894-f976-43c5-8df2-5088b5fbe2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4864d530-4ca5-4d96-b7db-dae362b1ad00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c89ff2e-e384-46ff-9dca-07a467c87966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866cc3fc-3c90-4f6f-bf50-76b3ec340162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c886a5-040d-4ddd-9342-d399d9c02d9f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7de8f8-0d3d-47cb-931b-f7c1336a07da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14cb404-5832-4263-8a5e-b777000fa008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc63544e-b3a6-4332-a757-049d790d05b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af68d0e6-e111-4f2b-9c83-3325470d046d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612e8043-f862-41e0-af68-cfea9dd691d4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c6eef-ce5c-4278-8c52-a90a27db3fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8da6b-d34b-401b-8693-5e447f537f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0228c0ee-c902-4c57-bb10-c7a8ae19d90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a574ddcf-5a93-4a8c-937c-baace670b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac77d837-613a-43b1-9db8-e37d086443bf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8c2b7b-454b-4fb2-bc5b-dc3fa63deb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6d2af8-9dad-417a-96a0-afcccd0d8b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5008837f-5735-4535-b912-07af782fd2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bcaf71-ef3c-4181-9c11-816594cbc0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719b07f-16ed-4db8-b72c-4dc3842e71dc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14f20e9-80b0-4e12-a131-a1a3bb004617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5910725c-01d7-40ca-a78e-e639af4fcc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e8db91-ee40-4cf5-84ab-dc25a64ecc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0911342-369b-43c2-a624-d16f610426c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c250ad-bfe3-401f-8497-91ea19defea7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b65cf5-d6ca-484b-8a1a-a5199ceaaf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02738fee-240c-4d30-9969-a75853bd4023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3891bc3-8335-4abb-88e3-63f8bf6ad100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250d76c2-f37b-49e3-b2e1-2c1b2a0ed99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4ed16f-f416-4462-bd32-aef2f48de668",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587b450e-23f8-486a-834f-36c208c47b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac37f1ad-d5e9-4dc0-81a1-3b1c4a1783cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f8202b-eade-4f4f-94bb-074f4055e746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dafdbcf-1f7b-41ad-a5db-e26401285439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b4ef5-96d6-4c99-9a31-6ac3a21f49a4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a84760-5c16-44e3-aa1b-58e2ae81bbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08bac65-9250-4175-af04-0be2c2cd1b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b975d-431e-4df2-9ec2-fa570f6cd6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13490df3-0676-4c7c-8c7c-c68c44dc78ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6a80bd-f2f4-4049-8bae-81b2224f91b0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec40d28-c731-4010-9766-5dedf387f200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4283047d-da67-4a82-8c98-297c607c62a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e595c91-735d-4021-9901-6ebdb8f0dc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531dc187-da42-4cd7-bcd7-b8ed3719fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d6c2ac-1452-4732-b0b9-9ec21d790215",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eba864-e648-4a03-85cb-9468d235306f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8074492a-b2f1-4c6c-894d-e0c9c66f4145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d89e10-e010-4e53-8d39-74bf13a8337c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04072c86-acf0-4003-a8f0-9e496876a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c31c07-3829-4f84-9b89-1e1c918e572c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1325d099-22bd-44f4-a51a-5c332a9c30a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399367c4-4c16-4aca-b990-c21aed23071f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c685e89-fbc4-4bca-8416-69187785548d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952360fc-54c6-4f75-b2c1-c876fd1697f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1359089b-3a7f-44cf-ae06-f87682367635",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5dd198-456b-4a71-90c8-4c79bc11d897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0486b7-2770-44b6-bab3-ff522c60ef71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebf3fac-5683-4bd5-9410-2fdcbee7a06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704bcfe1-04b2-4c3b-a059-e8532cca1962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a1f1b4-037d-4ca6-94a4-c85fa62f9e6a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e80d527-6a48-4d88-a846-456ab8a9c3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1746bf39-1017-4fbe-b79f-7f317337ff72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e1cb3d-c1e7-47f9-8234-2b630b020c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915e6596-eb89-4d87-aaf2-09b765d76159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3703067-9149-434a-a641-42ca330ddb8b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9286f24c-7906-4f75-bdbb-a2dd37f7382b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8949adec-2dce-46a0-a10b-a778410ed83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c8b5be-b9fe-4fc4-92d2-71e6be48612f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf660892-5012-469b-85e1-44ac2fa59f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef24b93-4f3e-4d09-b19c-078036838e30",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4544cfe-64d2-4135-8b62-18d3bc52bdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37acbb8-df77-47f1-a26e-eb82e718f94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5324b253-11f2-48de-a52c-05c7264ddb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5199f27-76de-4e5c-97fa-dc95812284f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9657aa17-5b56-4927-876e-19a0fa8150bf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09605268-fa21-459c-b647-db11d1942c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6490cb30-e7d3-4885-b3fe-833b755b00b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124bcad0-0f60-458b-a733-5faa857efa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96996f27-351a-4dc4-870b-e033906d16ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83203a23-d1db-493b-ae71-3cbc0e57ad31",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c292ef9b-651c-4591-8da2-c69467c00c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5365d0f5-668b-4ba5-a633-5cd68ee09a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3bf42-cb4c-43a2-818f-0b8c63e7b4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f8217d-ab90-4888-9970-41da7e6da776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b1b11f-8c28-4454-81bd-bde0c41c8b20",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d55c64b-e588-4088-8042-6cc65b22e820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63ab999-a711-4684-be36-8ff6fdca9364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dafa8d6-90b5-4179-91dd-69d45684cc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa839aae-55a7-4a92-96dd-7e10d0b3e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462652d3-bd3b-4d09-bfc8-b30d89bc34eb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e32f724-f696-4dd7-8a1c-e1f576ff9298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f56c2d-4b63-4882-a527-73c8741128f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5912a5-58bd-4c66-bfcb-d9ee66e5fb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a5f20f-f170-4332-a9b5-80dc0a293bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828c4a5-ba46-4a16-bc4e-90c60609dab9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5476df-e0cc-4ccd-82a1-ae85cea8a81f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350599b9-b28e-4ef7-ae4b-ad4e3d21beae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47830e3-5a07-4fdd-b901-efb4db7765b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941b42e7-8801-4150-bb78-ea3ac5fdff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0396ff1c-88b2-488f-8ffc-d1b908cc034c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17be9eb8-0db1-45b7-b801-bdfc145788cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219fad2a-a87b-45a3-b127-a83862ec806c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273ec425-91c0-4adb-9342-0919608daf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d62d1b5-fca5-4d5e-ba7e-869c28d2a40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dae5517-8761-482b-a9b7-9d81f2c6264b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e74defc-7e30-4983-8cdb-e79079858c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8ae866-e522-4ad0-9183-3ac11bbbd1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59805593-c398-48eb-b5cb-01e0165e59b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee077ca-b466-4fec-828d-526a9b55ca06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f39b9d7-e3d5-41ca-ae2a-3664c0de0cff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6b65a2-c9f6-46be-b207-81d7cd8068d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1061cadc-6a4b-4bfc-89d9-a08d17c591f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f2f273-b2d7-447c-966d-d5392946714a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a61fa2-e167-42a2-905a-580bc4d33bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66b3f1f-eda6-497b-97de-798c2970abcc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f7e4e2-6732-403c-8d9a-ffbd22d2c33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "609ee0ae-d0d5-49ab-9acd-74420ba7d639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f18c3e9-0c16-4e6c-b414-d1df41d90c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e5f846-2626-4fc0-b72c-103113754568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b94de6b-a458-44ee-ad38-548206d73f20",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2da1559-e6fe-4424-b70f-acba90d4e762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bae1be-5552-4f65-b9d9-99d9c468cf8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16464081-f0a2-4814-9da9-c26807943383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d4f73f-599e-4dd9-a33b-20eddd54e9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e38a46-5eff-474e-b99a-10bf773a1223",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5f2f9-d066-4e80-8c4c-c4c4ff946eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7d9aca-592f-4ba9-8834-9a22cd859a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f71d2-2629-48c8-87da-803757e78e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8e7a6-c4f2-47e0-8b75-cacc8f73222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1661d3ad-5fd3-419f-b920-ebfcbd5203dd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5278e10b-d5b0-402d-86d7-cd1b0047e6a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee92cab5-0496-4c93-8606-83adf2b37636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012eba8-bee1-4dc4-825a-36357fc89aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6397327a-98c7-4247-b777-08775bf60747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ae611f-97fe-422a-b44c-cbf0322cb0dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c426dcfd-a728-4298-8a2f-9e77ca119564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804f104c-5084-43e3-8aca-9641b6bb48c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9543f047-d947-4144-95f4-77dec0217027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7d4cd-59f6-44d8-abda-4ece48d65756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26911df1-6cd3-48c8-81fe-4b6a428e7bee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbfc3f0-844d-413c-9d87-47d266db6e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b160f53-14e5-480d-b44d-1046c93048fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e78b3-a9d6-4a34-a93d-b9c6090916bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee97a3e-9eea-449b-829b-b7d772803cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a509e5-fc82-4ea0-b7c4-e7a2ce2dd6a3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d00cf71-1939-439d-9a53-4576c2cd170f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b8231c-0666-4358-aefc-f3c42bfaf2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d741d5-f822-405f-b211-68b7fd163f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd69c5e6-2dbc-4201-9425-896b011ba48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e4036-4ca9-47e0-891a-58a45758ca28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24480b7e-c6ba-4944-bb13-43c44849ae34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c418bf79-831f-43de-8ac4-16b143cdca88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6689292e-34a9-48d0-9d27-6323fc45b585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8af554-f821-448b-af04-cc67dd9a621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30669149-5af4-4a5b-9b65-a893777c8a00",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e23b466-4c77-4dc2-b464-618df5ed9a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0817e0-d0f9-4ffa-95d4-d4b2caca10e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e040e000-7141-4e53-b712-6f89de508d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43baa5ac-62e8-4143-86dd-987322e7f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a7026-ab1f-4ef3-aa20-c36b7b268e63",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b659b968-0f5b-4999-ae04-2140abbab7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92e030b-da81-48d6-9a98-5e4671bb0c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d48779-c508-46b8-a2c2-fe6f0aa6049b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9182476-47b2-47eb-a55c-2aefa974e574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9547eeb8-68c2-4204-b8ed-c6cc23523c09",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa8e200-3cdf-4709-a199-603109bc5124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ea4de4-6f4f-4f4e-bdf4-6e94268a878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20a0816-a149-4d62-bd6d-4ff4f2c25bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438082fe-cbc3-4c3e-b618-49dd6f3179fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0a4105-9b94-47df-bf2f-ea53b2bdc034",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72a0f43-7a5c-4e32-9aa0-beb2270a5646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ed3c6f-38fe-45e2-b103-634b63fbbeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6719ff20-e4bf-40cf-837e-4ae36e3dfaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278bd604-c13e-40e5-ad0e-96fa1bfd077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d08018-71e0-4edd-80a1-2e5116243154",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7339b0e8-0f52-44a7-90f7-d4b65f50e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62184634-cf90-4b48-8b1e-e40529fd31c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2fe134-2ddd-4c0f-b0b7-c7a6eea59fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e18d93c-8167-4163-9e23-d51c8276ce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbe33e7-3f7b-4e6a-a2ef-356f2d7f281c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d11cf63-196c-4132-bf90-5737049f94d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459d6030-87c3-45c8-bf39-beef2448da49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd6ec8-ba4a-4b74-86b7-e628bb390fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef407a70-657c-4253-b4f7-1898456f7398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c8ae91-f228-43c1-b109-d513715f1836",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20eabcf-486e-4045-af1a-5e92c8e4d05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd91e0d0-994a-438c-ac6e-499574aa10ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb80463-1b3b-4467-9952-ea616043c90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a8476c-ac38-4249-8f81-fcff664c5c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872cec9a-c2eb-48dc-ad5b-d42f80a70c1e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dde89e-7516-4493-a5a9-8327bf0c6f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320de1d5-2f4d-441e-a5a5-f13bca0fad4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aa364f-8452-4eb9-bdfe-6df46252ca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0de6ac-8e06-400e-b400-03ef210debf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9dbfaa-73e8-480d-8a6d-e6bd458874a0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc6d75-8a09-4a66-8e5d-2c1d04c64790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ffe1981-dc2e-4ba6-a1b3-47aa4704508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5903efe4-1f71-4630-a98d-e489521c8248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ca9b9e-ac6e-4a1a-a42f-b25ce1d8af58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f009217-4c0a-48f3-af59-892311dde9f2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c1fa02-d041-44d6-b9d7-6af53e0b2cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca12b817-9a67-4b65-8b91-8d4a0122cc4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b5a01a-5376-40ed-9269-5faa78a375e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfe823a-5a80-4e15-a6c2-4a1175981d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85951e-2620-4390-bd42-6aca805b8f8b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b9bcd-ca0f-4c3e-922d-e5cf503fd7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8410acd2-8fa3-41b8-b34d-1a8d90fec441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22b5a69-1301-4187-81b5-1dc385f13981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c6c49e-9d23-4928-8ebb-28a98d0e6fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc00aa-4035-41a5-8d18-1e95e46d818e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862338fc-e0f8-4575-8c4b-1a801067befc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa22b756-3809-4568-ac78-5d1fbcf98a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c82860-8372-425f-8d8b-aabed3dc24a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a247652c-b0af-49a8-8fba-23f2e43ce226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f434812-d83f-4bb3-ae2b-ad449914a855",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e405aa67-db17-4493-9fb9-7719791c47d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc82b98-8e7e-49ca-8aa9-0b9158f94f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a8c867-fbe8-4062-8eaf-1f81aabbf1b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c77a8f9-10b0-4a53-94da-60da0fd46c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813d83c8-7867-4285-b40e-e362cb49f3dc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc9d71c-5e12-4bf2-b106-69c4e2cd17b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b670c4fa-cdf4-4e91-9d45-7852c86e42d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68e3bb-f107-430d-bc7d-c60ad3a3b626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd496f05-2f98-4cf0-8556-d8c02be0ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa68789-416b-485b-991d-4d096717f8b7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3d36ab-9b71-4b57-94a0-326e5b415869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8c5459-ae72-4ad2-9856-8f18be510c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5550e69e-1c83-46e9-a056-9db9a018c7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d305d01d-82eb-4efa-ba9b-6fa5ad0a3704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d7cf14-56cf-4413-b825-eb2348ed82f5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07161ea5-d442-4119-ad97-874b1ab01b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07bd8ea9-5a2d-44d6-868f-09486b002df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b909a6ff-d435-47fa-924e-ce1336786276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e3f9fa-ca82-4b26-9e25-91be751599fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57836a15-ccd6-4600-9255-c07aef1d0186",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdcadc8-f080-4f77-8dac-52f18959f941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14e8971-979e-47cb-88c4-4e6fe60b03d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d614c58-f183-4770-9294-8c281a1bd284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25692218-9661-45ce-874b-952077babdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660a713a-e49d-4ce1-b3b4-c61d2bb66b63",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60cf4c8-b5c0-4d85-bf2e-22a92a703e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f814c04a-f4a8-4ea0-805b-4d3331dd6119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d640eb09-ad73-46d8-9fe7-e21471470e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00461864-620a-4076-9cd4-b4dd43040bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee21556f-bdf3-4025-a863-4cf6bb3a1001",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717ca2d-bda3-4796-88b3-10dfd301cdb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa8474a-fec1-421b-a0e8-00edaff363a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0db009-9b2e-4ae7-87b0-28d0270ba196",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d3beb7-958d-45b5-92f5-40064d51f9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fd61f3-b695-4374-8d7a-1d4e3ba71a5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc7f38-dd22-42dd-9c1c-4132b8771c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6f49a1-0db5-4e59-ab34-16a36f33f676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3c5ad-32bc-48d8-8f5a-6ecedfa49c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f0dd08-0114-4f6b-ac08-c3aada4ac8ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb01014a-21db-4074-964c-3c891b0fc140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7caf8c37-975d-4b99-965e-942134e92b63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8fde96a-fad8-49d8-8e03-e607ffb2192c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f05f87db-ec2b-491c-a080-7b5c3128c474"
                    }
                  }
                ]
              },
              {
                "id": "a49e6464-a81b-40b3-93d2-877185bc7866",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9099e6c9-4bb9-4ac5-a2e3-b18ad37298c2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf3847-e162-4456-869e-9751d1c05521",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb242cc8-8f0b-4bd3-9377-92ef4f9ffb20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741f986e-831b-4aa8-bf66-c3de31a858e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df7a17f9-30aa-4046-addc-bf57316b0948"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e5324e1-44e0-4f6c-8cbc-eb4ab34e70b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfa791ca-36be-43fb-aeb0-0010c53eccda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9fe485d-cb24-4112-9109-ba30c6f3099d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65f882dc-5b2a-45b9-aa90-bcad104d04dd"
                    }
                  }
                ]
              },
              {
                "id": "ac3a15e3-8bec-4ab4-969b-ceda6c6d8c6f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f2fcce1-99bd-4d03-b4d9-b85458c8d29c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174d0526-eaee-42ed-9585-057162ab0b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9909e36d-0f89-441a-8526-0e58efd883f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83cca1b-9649-4d94-9489-81dbce610eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860b2ce8-ef58-4fd8-a228-186a878a2d1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e4aa904-8175-4600-aeba-2dac1f71608c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63af2cb2-dec0-4ca6-96ff-7e0675a8970f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eb0fbe7-5afd-4692-b493-c0ba73385e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5d0f57f4-1db9-442e-a5b8-2c5f08f27e4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc282933-c177-4cd0-9fee-81dad3dd1803",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2adf304-284e-4592-ab3a-9bf10fceff62"
                    }
                  }
                ]
              },
              {
                "id": "ec810cbf-b396-4242-8ced-cb29cb2f6bb3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e741591c-5838-4497-a56a-53023cde7b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6dcbc81a-1102-4a2b-9af6-e262aff6292c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d13709a2-7b57-4251-b6ae-d4957155c38a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c4f21db-2ca3-4319-923f-0c881eb3a84d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c945792-7b3b-411b-83fd-d7d5132e9abf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "953cba98-a6c1-42e0-8213-ec59ba01a9a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be7b0ec2-9989-47f5-8e77-4819c371c9b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a296e65-4ac2-4938-96eb-a9387c996af3"
            }
          }
        ]
      },
      {
        "id": "8872ef05-787d-4a2f-af79-5bb7531f422f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3067a321-f82f-478e-9bca-6a71d5daea8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2b0f443-e984-4dab-b360-f0b84570754f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e38ba0c5-a7c7-40f4-b331-f65217b6354b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f361e15-a3d5-494e-922d-2cff9364b444",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "97973a57-fc1c-444b-b2f0-6e4fcc54b36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a6d59d-2354-453b-98c4-dbe97def4722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22207e50-4ead-4d3a-b9c2-9de122b718cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0f17832-83be-49cd-9cf2-04973e15b794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "943c474c-281f-42f1-92d4-e01084df091b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74026a42-0ef5-4749-b10b-f589eec3bb86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a59d6134-c746-4d84-ae85-741a0a292821"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "837247f9-58e3-488c-8788-1c1a1f6c2faa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "360462e2-226e-44c5-8376-f50ca263f4b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fe1b1dd-d3b1-4ed3-a895-180a2b0ec144",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94acf336-d1bc-428f-a097-2b30fd10fce1"
            }
          }
        ]
      },
      {
        "id": "8c754c14-b5ee-4c0a-ba39-ad66ec28f144",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c00fa883-ff37-4340-bf74-7680f072ee6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eab3adea-3eb8-45b0-831c-ca2fe4359c79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f88b562a-464e-4dfa-8fe9-3de1f6afab26",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc1d196-8617-4426-ba0b-c8a72fe69710",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cdb4e6-34c9-4ebf-83a4-51c5f75487d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6219cca-461c-4e8f-afb3-01523026eb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c6064b0-4ed1-451f-822d-763eed4686de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f937c69a-1b71-4729-9c4a-944e48e56a7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e3fe6cd-61f1-4385-a5c6-ba5935d4c3d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f8a5f38-9af9-4488-863f-1ad86be64d00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fb03bd1-4bc0-4029-8d15-84c950c18082"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db2fb40b-400c-4b62-8d71-973ffdc77b6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fea0bd8f-7b24-46fe-8685-c86bb3280b47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09873034-e633-4ea5-92a6-a6f333512c8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2c7e0ea-2a59-4f0e-9d6f-d90dd154e367"
            }
          }
        ]
      },
      {
        "id": "6fc06b7f-4411-4297-8730-d76f4f185937",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0c8ac14b-8adb-4d2e-82b2-cfdd886897c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca00bdea-3d19-4b7e-b163-5240dd927a65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff9bf132-9a24-4993-bcc8-629c8f0d97db",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87353309-3e43-466f-8785-ba4f99f44203",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc089bcc-108a-4cdd-a6d6-ecd51eb2d3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4648fce8-84a7-4d31-b90e-5a03c1179151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b9b85bc-41a2-4440-a6c7-802f13b997a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae8191a1-8b84-45f6-a300-be432d5e6b59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "136386b9-590d-466b-a1b3-9c85f81bd2dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48ef14ff-5e34-4eea-a168-aa75a9467df1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0ce113e-69ac-4377-9111-8468e39b4319"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8688f63-a106-4f98-8947-2284437510f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c43f97de-e872-4d8f-8ede-096031867b3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18330d19-cec7-4043-8616-a5d405dba191",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e94c6d3-6886-4b8d-8995-2ab632c1b8f3"
            }
          }
        ]
      },
      {
        "id": "2584b338-47bd-41ce-8adc-a2494be7bcf1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ce3f702-4dfa-4af6-9551-c4e66fae66dd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08742569-1f15-4ea5-9df3-bdc43322da9e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d772d93-8bcc-43f8-8cd4-ce3404fe93e9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6d652e9-cefc-45c1-a97b-03f343392b1d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b81559a-0877-44bb-817f-76c04f6372a2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.51587301587304,
      "responseMin": 6,
      "responseMax": 364,
      "responseSd": 25.52923444875367,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724632894257,
      "completed": 1724632920463
    },
    "executions": [
      {
        "id": "7bc75f58-ac79-47a6-9b47-b657619b5028",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5030fdd1-b2dd-42ae-9850-6ab2ff64b3a3",
          "httpRequestId": "d8abd7c6-66fa-4058-b51b-13944efdd3e5"
        },
        "item": {
          "id": "7bc75f58-ac79-47a6-9b47-b657619b5028",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4c1e4604-a21a-4efa-a8bc-896107adb944",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "84bd8d9f-a8e1-4f57-af1a-bbf735c246a5",
        "cursor": {
          "ref": "5c360463-e153-4378-a083-6e9f46969931",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a54f249-a55c-492a-9334-1534ab123b04"
        },
        "item": {
          "id": "84bd8d9f-a8e1-4f57-af1a-bbf735c246a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fbb8e910-0a33-4c3e-985e-1c94ac50f5bb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "95c2871d-a5e6-43a5-8da8-ca3b6896181c",
        "cursor": {
          "ref": "88f94038-b6c2-405b-93b0-093125170e9f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77be9b07-cd19-463e-9abf-cd4062c45239"
        },
        "item": {
          "id": "95c2871d-a5e6-43a5-8da8-ca3b6896181c",
          "name": "did_json"
        },
        "response": {
          "id": "34acecf0-f656-4474-85fc-10a85f6b48ac",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb40c32c-866a-48f9-a798-31bbc6a000a3",
        "cursor": {
          "ref": "f5ecf1eb-e8d8-4d57-bce0-a23d41b29501",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57d4a646-8c75-4848-86d9-7e7a469791b3"
        },
        "item": {
          "id": "bb40c32c-866a-48f9-a798-31bbc6a000a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "cfca2c08-1295-445b-a963-ecf2d1509b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb40c32c-866a-48f9-a798-31bbc6a000a3",
        "cursor": {
          "ref": "f5ecf1eb-e8d8-4d57-bce0-a23d41b29501",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57d4a646-8c75-4848-86d9-7e7a469791b3"
        },
        "item": {
          "id": "bb40c32c-866a-48f9-a798-31bbc6a000a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "cfca2c08-1295-445b-a963-ecf2d1509b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee8a778-8a3e-426f-87df-2c666da7eaff",
        "cursor": {
          "ref": "bdfd38d6-7883-47e4-9e94-5e85518bec18",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "36d9810b-bcdb-49d5-84ee-edc9d645c8ff"
        },
        "item": {
          "id": "5ee8a778-8a3e-426f-87df-2c666da7eaff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f070c723-fe44-42a8-8e69-cb8307ac67c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 133,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8a34af-d158-4707-bf9b-fe8cb06d0170",
        "cursor": {
          "ref": "beb15cd9-6ff7-444c-8193-dc61a64a4bdf",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e4523b5-2a87-43be-8d7c-b12e5976af10"
        },
        "item": {
          "id": "0c8a34af-d158-4707-bf9b-fe8cb06d0170",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e373c0ae-e0a8-4e98-bc66-5e8711858ffd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de00ed8-1516-4972-b47f-195b3cf88293",
        "cursor": {
          "ref": "136f44a2-0cba-4fff-bb8a-9a8afd16e5aa",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "670bd823-a68d-474f-a7c0-22db7493b74c"
        },
        "item": {
          "id": "8de00ed8-1516-4972-b47f-195b3cf88293",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8632f0f8-6d77-4839-b36b-f267ed33e62d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e61b3f4-acf5-46c3-87cc-5aa7bf4f8a20",
        "cursor": {
          "ref": "ffa707b6-0e89-49c8-b95b-6abcc5341ad0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "34b5a012-ac58-4610-baff-c64890b80fa7"
        },
        "item": {
          "id": "8e61b3f4-acf5-46c3-87cc-5aa7bf4f8a20",
          "name": "identifiers"
        },
        "response": {
          "id": "3fae885b-835b-4b91-918e-3cd58f331263",
          "status": "OK",
          "code": 200,
          "responseTime": 282,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d25e668-5f1e-4b6b-9b85-ac7359cf3ed1",
        "cursor": {
          "ref": "dd6a2543-fe85-4df8-9efc-2f737673e61c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "40096b72-4d21-460f-be93-66a57967e52a"
        },
        "item": {
          "id": "6d25e668-5f1e-4b6b-9b85-ac7359cf3ed1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1bbfeddc-9db3-46ba-b52a-e203c9729820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad3e3f-2f40-4065-aae0-6637eb14c15c",
        "cursor": {
          "ref": "18531cb6-fe80-471a-8ed3-b4b355301820",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c8224b32-e05e-4912-ac30-dae4a9f119c8"
        },
        "item": {
          "id": "28ad3e3f-2f40-4065-aae0-6637eb14c15c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aa1d4132-1836-489a-82dc-abd0a470650b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3abfd78-9279-460e-921c-ee2457b3f9b0",
        "cursor": {
          "ref": "fb3f6355-25ce-4c5c-878b-cb515c2ae082",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0e506f66-a646-45fb-9553-57ad780845d8"
        },
        "item": {
          "id": "d3abfd78-9279-460e-921c-ee2457b3f9b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "695fdd18-c278-4503-acf4-70d89009c08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1270885e-5a68-4377-bf48-0da413d052cb",
        "cursor": {
          "ref": "4a0d9f43-4fde-4f3b-81ed-c651b56c22ac",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8e22174-7779-4248-98b7-5f9fb4153e41"
        },
        "item": {
          "id": "1270885e-5a68-4377-bf48-0da413d052cb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "274fecaf-c962-40a3-a7fc-23c358ad56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e29485a-0a9b-4e9c-9b18-f7f63741265d",
        "cursor": {
          "ref": "d642dd1f-4051-4147-9f79-1209747b84b1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b97b6fd-1bdc-4b23-b80c-a8216ef6dc64"
        },
        "item": {
          "id": "8e29485a-0a9b-4e9c-9b18-f7f63741265d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "abe4d3ce-2643-49fe-9b00-dcc5cdda9f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ff67ec-e440-4fea-a7c3-f07b930c7cfa",
        "cursor": {
          "ref": "fddff367-d9c0-4dce-a656-9e054c21c5c4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "655986e7-e7f9-4faa-9d03-01c6b86a2a5a"
        },
        "item": {
          "id": "28ff67ec-e440-4fea-a7c3-f07b930c7cfa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d415c440-0ba0-4776-907e-69ef9b29c2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152819a7-e7b9-4904-81ac-44df6687cf0e",
        "cursor": {
          "ref": "8e61d0e3-74de-4ef3-bd06-860713d0992c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "62a95292-4030-4739-bbd9-07902bbc2054"
        },
        "item": {
          "id": "152819a7-e7b9-4904-81ac-44df6687cf0e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "115d2795-6813-4477-8778-021633e04444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a555932-966f-43c4-8cfd-167379a0df9c",
        "cursor": {
          "ref": "0e53cb1a-a0f6-4e4f-ae8c-271b630f801e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "32413b36-750a-49e3-8cbc-d547c7d2cf6b"
        },
        "item": {
          "id": "9a555932-966f-43c4-8cfd-167379a0df9c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "44b52044-bbd3-4006-b1ef-1399ea22916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14122566-b87a-4f1b-b41f-877f931ea59e",
        "cursor": {
          "ref": "ea4b9989-146b-42b1-a4f0-83acc3b41738",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fb11500d-77f5-4242-b98e-579793cd24e6"
        },
        "item": {
          "id": "14122566-b87a-4f1b-b41f-877f931ea59e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8bcbd578-9e7a-435a-ab99-37e119f4954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e9f737-43a0-4edc-b56e-9627905a5e63",
        "cursor": {
          "ref": "03f6d037-3b05-41ce-943e-4d1a3aa7b329",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9261837e-62a0-49fc-a315-a99472dd90b4"
        },
        "item": {
          "id": "15e9f737-43a0-4edc-b56e-9627905a5e63",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df3c9a41-f277-42de-8876-7c5d153895ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46245b04-5713-4433-805c-321858ab010c",
        "cursor": {
          "ref": "a8ab7185-68b7-456e-8756-bbb08a552653",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "25d45cfb-d894-4eeb-a0f0-1bb1e58654f2"
        },
        "item": {
          "id": "46245b04-5713-4433-805c-321858ab010c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fbbc44df-13bf-47f0-9827-e58f2627fd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4629bc0d-aa10-4f27-bcd7-17af335fedc0",
        "cursor": {
          "ref": "e8c17b90-987b-47dc-bff4-a78a81660a08",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "36772b57-126c-4031-89b2-507e2e5a971e"
        },
        "item": {
          "id": "4629bc0d-aa10-4f27-bcd7-17af335fedc0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e67b8832-6de9-49a3-bcc8-65d8698d49af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e706f8f4-41b4-4e5a-b048-af136c1da04b",
        "cursor": {
          "ref": "3118c032-d948-45c2-892e-7c0b09c7622a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b4d18fea-0236-4426-941d-6d29e460f486"
        },
        "item": {
          "id": "e706f8f4-41b4-4e5a-b048-af136c1da04b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b72e817-1e92-43eb-aca2-950b4265dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9391b234-6422-4c58-a894-1f9963d8b5f2",
        "cursor": {
          "ref": "6371b0e5-ceb3-4c3f-891f-b409783583ed",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f75e2993-8d96-41db-b31a-9815ade33707"
        },
        "item": {
          "id": "9391b234-6422-4c58-a894-1f9963d8b5f2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "64bfb481-1b2d-46b9-84c4-a465cf99d580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5404a179-b1ca-4fcb-a086-d4c0caccba42",
        "cursor": {
          "ref": "49af8314-bdbf-4cae-859b-993d052ab861",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "79d70f9e-14fd-458d-b146-3c84a78ab441"
        },
        "item": {
          "id": "5404a179-b1ca-4fcb-a086-d4c0caccba42",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7d11c8b1-29e2-46a8-905e-493fec9b87de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96edfd4-9f11-4dac-b482-7ecd9dd93867",
        "cursor": {
          "ref": "8ea5069f-b937-4af7-8305-bcf2a1765060",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "638b7c03-7b97-4b80-97b5-9a8b18fc626d"
        },
        "item": {
          "id": "a96edfd4-9f11-4dac-b482-7ecd9dd93867",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "14fbaebc-24af-4a48-8a6d-d69914992a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f21a9ce-afcf-45d9-a34b-7351ac962b35",
        "cursor": {
          "ref": "3a771c71-01d8-4917-a04e-842c1bbd8771",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "edc3114a-6a9a-41a0-bb33-096ebe3d72aa"
        },
        "item": {
          "id": "0f21a9ce-afcf-45d9-a34b-7351ac962b35",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b142bb67-0cb5-4db0-88b6-67c8501991a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbe52c9-5f27-43ad-a804-b00a40543cb3",
        "cursor": {
          "ref": "921e34a5-31e4-4d5e-9df1-ff4b880930e0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6a69a652-3050-42ed-8340-10ccb90d6c71"
        },
        "item": {
          "id": "2bbe52c9-5f27-43ad-a804-b00a40543cb3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d07715a8-1258-4ef9-b9fe-a3f44482162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbeb34f-d786-4a92-b015-4633b3500fd0",
        "cursor": {
          "ref": "31a84266-1cef-4fa2-9eff-1be657853ab8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "95693897-7f84-4be9-bf21-997d3daea706"
        },
        "item": {
          "id": "4fbeb34f-d786-4a92-b015-4633b3500fd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "511bab4a-75da-4d92-8f71-e10eb441f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b209d66-e2c7-4d50-8cfd-29aeb359de3c",
        "cursor": {
          "ref": "69870231-72e5-4275-8bae-985c569ab471",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88a3002e-ae9d-482f-b438-97ddca765423"
        },
        "item": {
          "id": "1b209d66-e2c7-4d50-8cfd-29aeb359de3c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d87cd7f0-e725-4970-aaae-27570207bcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c877c43a-cfcb-47bf-88db-1211efded14e",
        "cursor": {
          "ref": "e2eb3055-6656-4d78-b302-7d95502b6603",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "614c46cb-0f64-490f-973f-2677d1a620b0"
        },
        "item": {
          "id": "c877c43a-cfcb-47bf-88db-1211efded14e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bfeae948-e819-459a-94a4-7187ad95bccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9dfec6-f911-4a97-8aef-f4a3e9831b57",
        "cursor": {
          "ref": "bc8f9657-6ed8-4475-92d8-e8aae00fc907",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "015e0b3c-4470-4c76-9949-907fd0ad7b0e"
        },
        "item": {
          "id": "bf9dfec6-f911-4a97-8aef-f4a3e9831b57",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e5cc5805-4892-4013-9970-105adf7e2e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ead4d-21d1-4614-9f27-a08b55561a75",
        "cursor": {
          "ref": "d72c81c3-e588-447e-80ef-71a61810ec14",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ad0f8f3d-f83e-45c4-b6cc-04110105ceb5"
        },
        "item": {
          "id": "1b7ead4d-21d1-4614-9f27-a08b55561a75",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39cd7c88-8354-4612-92b3-764a5beb249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d6991a-8296-4ee5-a807-99a3fa870f82",
        "cursor": {
          "ref": "d6a831d2-a1f9-4405-9977-74c69e019a00",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5d60ca86-a16d-4cd5-8113-00b3a4a03743"
        },
        "item": {
          "id": "10d6991a-8296-4ee5-a807-99a3fa870f82",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d2cc405b-428c-4002-ab1b-3f528c015dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc0811a-3d7d-4c3d-9863-5c207a565eef",
        "cursor": {
          "ref": "89640f6c-fdc9-4902-a256-4b1b8ca42d2a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "713eb6c5-e6cf-48d6-aa7a-4bff65036c10"
        },
        "item": {
          "id": "abc0811a-3d7d-4c3d-9863-5c207a565eef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2200f2e4-53d9-4998-bc10-a8430835abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f6e5c5-d53c-434f-8a28-6bbab323b16e",
        "cursor": {
          "ref": "e668b9fd-e7c8-4c09-8fa3-92a4ad5b4917",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d79ab33-1f78-46d7-aa12-5e61bf3de2f7"
        },
        "item": {
          "id": "69f6e5c5-d53c-434f-8a28-6bbab323b16e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4ad1ebd7-7e76-4a2e-b911-5ce2f093a7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239c8dd-0dbd-40af-8401-01770f60baff",
        "cursor": {
          "ref": "a61104e1-7f74-4805-bf55-957316683e7a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cabf9667-c3aa-45ec-a1c4-bde76ee790c3"
        },
        "item": {
          "id": "6239c8dd-0dbd-40af-8401-01770f60baff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c02653a3-c891-43d7-b332-117859faa332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb5fe3b-f858-449c-94eb-7665d17dd30c",
        "cursor": {
          "ref": "a1ba72bb-68ba-4402-92fe-ed6d002b0d00",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "631a8a90-217f-4b62-897f-21aa0ec0b1bb"
        },
        "item": {
          "id": "5fb5fe3b-f858-449c-94eb-7665d17dd30c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "18756103-4c5b-4411-bda1-4fc181c3bdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77af6095-ab47-4aee-b7c0-a2bf5842e71a",
        "cursor": {
          "ref": "6c107350-203e-4c40-80f2-1c89ef068f65",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74b38bd2-4efe-464a-9b7d-dbe10a62c09e"
        },
        "item": {
          "id": "77af6095-ab47-4aee-b7c0-a2bf5842e71a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3da8388b-c615-462b-8c47-26ecec1fcc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5759ad12-7b68-42c0-a29d-5ca108c464eb",
        "cursor": {
          "ref": "ca527b4b-0690-440a-bce1-11370af56e0f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "26dcf77c-6916-402b-9264-8794fb7b06d7"
        },
        "item": {
          "id": "5759ad12-7b68-42c0-a29d-5ca108c464eb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "86600946-b5a7-478e-9b1d-ca83a3331cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc8fade-a61d-4886-8311-70dad6fed594",
        "cursor": {
          "ref": "4c60c930-a5b5-4720-bcdd-a4aa9577889c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be701972-69b7-437d-8ffe-376f163c8cfd"
        },
        "item": {
          "id": "4bc8fade-a61d-4886-8311-70dad6fed594",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1e6477e7-e45f-430b-8042-83a221cc88f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804bb7ed-08f7-4c28-9403-6788b687ee03",
        "cursor": {
          "ref": "25ff94f4-6de2-4823-81fc-60a818cf7c30",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "91dcd135-448f-4c75-af1e-e240ef1b2a3c"
        },
        "item": {
          "id": "804bb7ed-08f7-4c28-9403-6788b687ee03",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5afa0077-616f-4222-abab-226a8397534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adb7a1c-43ee-4f7e-bf83-3a74fd4119f6",
        "cursor": {
          "ref": "0b3c6f24-1c3a-4a2f-b1f0-733c3a3896d9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d6e25598-e59f-44e3-ab84-c17bf9c1342e"
        },
        "item": {
          "id": "8adb7a1c-43ee-4f7e-bf83-3a74fd4119f6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1161d357-0a3d-47f4-bb94-042a2532f0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b7f316-e285-4520-81ae-2ff958e152cd",
        "cursor": {
          "ref": "a2d24377-a963-4b8d-a21c-f8b9ecb854e6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77b5b5fa-8164-4a61-a4b1-f7da76eec1b0"
        },
        "item": {
          "id": "c9b7f316-e285-4520-81ae-2ff958e152cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad0230f1-4013-4fee-acf1-3515c2a1b615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf06c7ff-cd17-4c7e-8ef9-0447f7e49340",
        "cursor": {
          "ref": "551290eb-3d60-4b94-8cf1-4d9d03ad0174",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "881f0c5d-5f6b-40db-a2c9-620a1b1ed4b6"
        },
        "item": {
          "id": "cf06c7ff-cd17-4c7e-8ef9-0447f7e49340",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "33919f7a-2595-4b5c-9315-9655c08968a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8f6ccb-8f45-4428-9cb5-f65dce763a7c",
        "cursor": {
          "ref": "aa1eb751-f01d-4728-9ff1-4056542cbe74",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3981aaa6-2767-4005-a8da-96391ef1bcd3"
        },
        "item": {
          "id": "3f8f6ccb-8f45-4428-9cb5-f65dce763a7c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "89dc4e41-5df1-4035-b9cf-19d1f7de2dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03037f7b-bfbc-4ba8-8ddf-fb4cabffbc36",
        "cursor": {
          "ref": "84d0acd3-72c9-44dd-85e1-c55b7f7d51d7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1d162e9d-be1e-4881-a60f-afa42d8e075c"
        },
        "item": {
          "id": "03037f7b-bfbc-4ba8-8ddf-fb4cabffbc36",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "82cdada7-99a0-4686-96b2-13b1cdd1fa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05912e22-c603-4ab7-98e7-54b23e34bd0c",
        "cursor": {
          "ref": "26264a3a-dac3-49fc-8a84-36dc30eceb94",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5c6b2760-19a1-4ef1-8199-f924bfcb4da8"
        },
        "item": {
          "id": "05912e22-c603-4ab7-98e7-54b23e34bd0c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aaca64ec-3f2c-4524-864e-b74098213100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab90b1a-6973-4d15-8ee6-e5c456f7861b",
        "cursor": {
          "ref": "f9239f44-6ccb-4910-a0f0-49fb380eab9f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23db7cce-8832-4517-a919-9aa6dd008423"
        },
        "item": {
          "id": "cab90b1a-6973-4d15-8ee6-e5c456f7861b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c9768a6-9cea-4f90-acc4-9866429574cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd095b-29e6-4e15-8d8c-c268de4fe55c",
        "cursor": {
          "ref": "fac607cf-2839-4756-84d1-53339029556b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a40ddde-8f37-4e95-939b-ba74e223f2d3"
        },
        "item": {
          "id": "cafd095b-29e6-4e15-8d8c-c268de4fe55c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dc884bbc-5431-4658-b731-706758cdd1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eeee5c-8516-4034-b019-72a2768452b8",
        "cursor": {
          "ref": "fdba225d-f0d5-4678-85bc-5ab0ecbf974e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "96462031-adae-41d7-8ab6-82c093a4d23e"
        },
        "item": {
          "id": "03eeee5c-8516-4034-b019-72a2768452b8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "84b26e92-877e-4b57-9b3a-4303993fbc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ccacbe-2d16-4f98-a067-7d881e08eeb8",
        "cursor": {
          "ref": "680e7903-31b5-4f4f-b2ed-d6e640da46b2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d3c12c70-d36c-424d-a49b-4df562e21662"
        },
        "item": {
          "id": "99ccacbe-2d16-4f98-a067-7d881e08eeb8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ae52bd0f-fb8a-43f0-9fb7-5a0cc6f6d370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4767d-eb2d-472c-a33f-e68327b7e3d6",
        "cursor": {
          "ref": "2fd5e9c6-493d-4ced-bf01-32c150137560",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f65a50d0-f5c7-4324-bcbe-35a203e33db6"
        },
        "item": {
          "id": "5fd4767d-eb2d-472c-a33f-e68327b7e3d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c2fe5ec0-7056-4ab5-a9e7-42c17ba72060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6de592-7af9-469f-a3a8-345eddcad819",
        "cursor": {
          "ref": "12f54686-2354-49f9-91e8-f80ebc5b166a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f49ae69-56c8-4108-a830-3c4d5d7305c9"
        },
        "item": {
          "id": "2e6de592-7af9-469f-a3a8-345eddcad819",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fab30ef6-de18-4d09-a0fa-511ddba2de62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc58c3d-0679-4cbe-b657-bf5808b902c0",
        "cursor": {
          "ref": "d84b09e9-4b67-420e-8c4b-a11618c39ed4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d65fa093-781d-4b20-a82f-f0a9b00c1474"
        },
        "item": {
          "id": "5dc58c3d-0679-4cbe-b657-bf5808b902c0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0929c66c-da4c-4ef7-b53a-9151025f5adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc093748-a858-4753-986e-7a121127c3f1",
        "cursor": {
          "ref": "71ef22ad-8475-4587-9ed9-70c4b3a1de73",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3592fcbe-e43f-4d1f-b3e6-cbf61b870645"
        },
        "item": {
          "id": "dc093748-a858-4753-986e-7a121127c3f1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "525e119f-1149-48b3-be04-9b8d344392eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153b49f-eb77-4c2f-af3f-f30d5d6c59db",
        "cursor": {
          "ref": "158193a6-bb99-424c-b635-0038098b916e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "49e4cdc5-2e9b-4dcf-bbf4-3f4dd0fbca51"
        },
        "item": {
          "id": "2153b49f-eb77-4c2f-af3f-f30d5d6c59db",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a54fcaae-79b3-43e8-9881-fb933e13b845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674aa0b9-8794-43a5-9577-facc32acba6b",
        "cursor": {
          "ref": "776863e2-a623-4661-b5fc-c9d2a323a355",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f944b3b8-49c6-4e35-8333-52a300f9d186"
        },
        "item": {
          "id": "674aa0b9-8794-43a5-9577-facc32acba6b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c1e18999-5890-425e-b8a6-87bc3d764d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada9a36-cb40-4807-a7e0-c591c84fef3e",
        "cursor": {
          "ref": "e765ab01-b175-497b-a6c8-d6d9de89bd09",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b857f808-b5e9-469c-b610-fdea0b59aad5"
        },
        "item": {
          "id": "bada9a36-cb40-4807-a7e0-c591c84fef3e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "593b3900-a01c-4a8e-acb5-0bd70860c1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a9ff28-cb13-451c-a646-67aa5bbd201c",
        "cursor": {
          "ref": "87cc88ff-c32c-4590-a81f-3f1859ce80dd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "02d8bedb-b415-4579-b364-dcb21fd1dd59"
        },
        "item": {
          "id": "d7a9ff28-cb13-451c-a646-67aa5bbd201c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39f23e05-7468-46d1-bc05-5c275e6c0575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43961442-ee66-435a-b75d-fa27b9f74d13",
        "cursor": {
          "ref": "56b24a4c-9adb-4212-8cab-b0a17304383d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f0ee39f-6e2f-44c0-9062-1e9183f7e404"
        },
        "item": {
          "id": "43961442-ee66-435a-b75d-fa27b9f74d13",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68c7e9ab-eeb8-4986-92bd-8422f87c1da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2506c79-b414-4eda-ab78-f38a77cc4947",
        "cursor": {
          "ref": "22379b25-db6d-4018-af3e-3ef3e7f1082c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4dc8f98b-bcac-47f5-941c-8eeb5fd583de"
        },
        "item": {
          "id": "d2506c79-b414-4eda-ab78-f38a77cc4947",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ae6092c4-1e20-44b0-9f41-6634b628d522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5500ec-961b-4703-a951-4287f2e553f9",
        "cursor": {
          "ref": "b8f6ad60-322f-460d-8bf3-57644d695d7c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "78088ac2-252c-4d2f-af3a-ffd84b9ee7b5"
        },
        "item": {
          "id": "7a5500ec-961b-4703-a951-4287f2e553f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9902a07d-52c8-4cdb-90c3-473908dd5302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a48074-72be-4cd7-8ae1-1eca24bf87fa",
        "cursor": {
          "ref": "4fbdb5f8-32a0-451b-bef9-e7ad00b97fe5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1eb7c95d-cb96-44b6-8559-57849711c670"
        },
        "item": {
          "id": "68a48074-72be-4cd7-8ae1-1eca24bf87fa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "efe3e9d8-9d1b-40b0-8e7a-872f26954ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a468d-67d0-4219-8ee1-605e5e320e01",
        "cursor": {
          "ref": "eb88ef13-eb8f-4f6e-84b4-03673774259c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6939a9a-ea4e-4ae0-bb9b-eb4774cdc072"
        },
        "item": {
          "id": "6e6a468d-67d0-4219-8ee1-605e5e320e01",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da352a80-415c-438a-8b7d-8db685366aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58357554-a4e1-4799-8d21-f1724dd98e40",
        "cursor": {
          "ref": "052f1cd9-647a-4db2-b291-19a5ebedab94",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b944afd3-6628-452e-a603-71d7c620a2b7"
        },
        "item": {
          "id": "58357554-a4e1-4799-8d21-f1724dd98e40",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "22424cbe-6187-4333-8a1b-ff4cb082609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e5320-5a89-4093-9da1-92df6e9ebcb3",
        "cursor": {
          "ref": "b6faee1d-e9db-4d7b-b696-86530e6e5a47",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "48b417ae-1672-456a-b0e9-28c3d277755e"
        },
        "item": {
          "id": "6a6e5320-5a89-4093-9da1-92df6e9ebcb3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8240359c-ede2-46af-a3d6-95b43ab44f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03155b-aa16-4023-ab55-d0f3225f4f27",
        "cursor": {
          "ref": "c001fc07-e584-4ab4-99b7-aebd52bb7396",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c0db1b8b-072f-4b4c-a7f5-a59fafcbe857"
        },
        "item": {
          "id": "8f03155b-aa16-4023-ab55-d0f3225f4f27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "69429c67-ec92-4c9d-b373-0b844cec271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddaad34-32a1-4b6d-9d47-357cbaa316a5",
        "cursor": {
          "ref": "b7fb418b-6439-47a0-84a6-4a1d887f34b8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bc2b0799-1d7f-46c5-ac45-e65be6227d4b"
        },
        "item": {
          "id": "0ddaad34-32a1-4b6d-9d47-357cbaa316a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dbb75174-df4d-4f0d-b3d8-67b67d14f63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e42cc3-a1d9-43c0-ba9e-058fbc11ecba",
        "cursor": {
          "ref": "5103ff62-1eb5-4472-b239-770d56432484",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7a0a14e6-81af-46dc-9197-8cae90bad4d1"
        },
        "item": {
          "id": "56e42cc3-a1d9-43c0-ba9e-058fbc11ecba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2d4f36ad-b124-482a-9b12-20394124b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afea447-777b-4856-a21d-3e3143109740",
        "cursor": {
          "ref": "2491ea5d-20fa-4d9b-a68c-80f3a2e7565c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5a792ae1-255f-49b9-9a71-8111483d4eb2"
        },
        "item": {
          "id": "1afea447-777b-4856-a21d-3e3143109740",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7b5231b-8926-4a1a-a187-a4d4eb7968f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f731f58-a3c7-4931-b011-76eb91e6a51e",
        "cursor": {
          "ref": "45dceff8-490f-40a9-98e9-16a25d11f0fa",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b79fe5d0-f59e-4cc8-b7aa-0f2bfb12dedf"
        },
        "item": {
          "id": "9f731f58-a3c7-4931-b011-76eb91e6a51e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "17c43b40-0651-4416-8e50-5f2c6b192401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcc08e4-76a1-4d5e-99bd-8ab7563d0758",
        "cursor": {
          "ref": "53fdd029-5963-42f8-903b-09fe1c2bc7da",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fcbe676e-f8da-4628-9fcc-be611e8bd978"
        },
        "item": {
          "id": "bdcc08e4-76a1-4d5e-99bd-8ab7563d0758",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be04d267-46eb-4dbe-9131-9078cd1984fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27161809-11f0-4584-ad95-a64d3284775b",
        "cursor": {
          "ref": "73f3e6a8-7891-4f5e-9df7-e54fe11ae5f9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7486c98b-d36e-4173-be4e-e7a6bc53be1e"
        },
        "item": {
          "id": "27161809-11f0-4584-ad95-a64d3284775b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e6dee858-fe78-409d-bafc-86f44245d9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fd300f-f991-4c69-aa65-5fbe13ac72bd",
        "cursor": {
          "ref": "d515aa72-c017-4a21-b7be-1b56a3491bf2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "61ba822a-873f-4b90-9392-7833c6d8aa6f"
        },
        "item": {
          "id": "16fd300f-f991-4c69-aa65-5fbe13ac72bd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2a090d74-0187-4a10-bc88-62cd9276aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9b01a5-4c07-45d1-ae0f-e3215a7d681f",
        "cursor": {
          "ref": "18b1b1f8-9156-4619-93e0-cea8d37c1b5e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb2a6173-1e52-4921-a2cc-0aeda7ac0eb9"
        },
        "item": {
          "id": "ee9b01a5-4c07-45d1-ae0f-e3215a7d681f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab97765d-b954-4131-b1b8-d347fb4d7161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f78c45-7de2-4fb1-92b7-6d6cffbac4cd",
        "cursor": {
          "ref": "bc16d479-102d-426b-bda6-f6fddee3145c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f89577b7-f2d6-4a31-887b-e3f7b967bf77"
        },
        "item": {
          "id": "56f78c45-7de2-4fb1-92b7-6d6cffbac4cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c825d37-7aa8-46df-b92a-0a98a0cae717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade57933-5290-41c3-97f0-9295a187031c",
        "cursor": {
          "ref": "46dc34bf-345c-429a-81ee-5e0bd26943a1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "34179a6d-b47e-403c-89be-3766f60cead8"
        },
        "item": {
          "id": "ade57933-5290-41c3-97f0-9295a187031c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "10f56c2b-086f-43c6-818e-3a33121a06db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7143f6bc-fc83-45d9-ae31-c32d76a426ba",
        "cursor": {
          "ref": "2bb3643a-eeab-4eb6-b174-96c5fffec34d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4ba0c425-2cad-4ff3-891e-0b8920b59587"
        },
        "item": {
          "id": "7143f6bc-fc83-45d9-ae31-c32d76a426ba",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9ef72cd4-63e4-480d-8fee-315491bc5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a742dcc-9963-44b2-b630-152f483b02c6",
        "cursor": {
          "ref": "95237ecd-4865-48ca-a1bb-d905e1af3b5e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9317b3c3-ac62-42c3-be07-772b46f8a9e9"
        },
        "item": {
          "id": "1a742dcc-9963-44b2-b630-152f483b02c6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58800ed9-d3cc-4370-a4a9-20a8dfbea86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10210d29-570b-4fe1-9788-33c2d8987770",
        "cursor": {
          "ref": "89262cb8-82f9-47fd-a7e0-2871d256f2f0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "606dc352-2a32-4a35-9da6-4b4d36b6544a"
        },
        "item": {
          "id": "10210d29-570b-4fe1-9788-33c2d8987770",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0331438-e965-4c96-863e-bb92748e3f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6625e6-0967-4461-b212-bb0bf978e237",
        "cursor": {
          "ref": "483ea1cc-2066-4446-900b-e2ef5200c78e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5948bf9-7e11-47f7-8d2a-7d417e30965c"
        },
        "item": {
          "id": "9e6625e6-0967-4461-b212-bb0bf978e237",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1b999c59-f029-4eda-9d6d-e9af435d3d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7a7d7-8199-425f-aad9-b3c4a57a94ea",
        "cursor": {
          "ref": "bba9e0e4-1b51-4bfd-a3de-da5f1eccf06e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2987b190-bf49-4861-adb9-d463aab27391"
        },
        "item": {
          "id": "40d7a7d7-8199-425f-aad9-b3c4a57a94ea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b9fc0635-271c-4033-9a45-a2303811e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a6c57d-d43a-4079-8ce4-29ced0c16a62",
        "cursor": {
          "ref": "fa4893a3-9bc2-4960-86c0-86d83010df62",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "71d11fa5-27cb-4453-8268-77dde09fab5e"
        },
        "item": {
          "id": "61a6c57d-d43a-4079-8ce4-29ced0c16a62",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b44feb3-ee7b-4429-b5ae-0471ea1474d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc89a2-ebc6-4b4c-bf1a-71228b2d6e2e",
        "cursor": {
          "ref": "64010530-644c-4208-bbb6-56513a7c0ba1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e5eafa04-4cf7-4677-a936-b8006b901a05"
        },
        "item": {
          "id": "e8cc89a2-ebc6-4b4c-bf1a-71228b2d6e2e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fa4e1018-c16f-4379-9797-34dae7ed1b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc85653f-b797-46b1-8d00-d1c23bc74b69",
        "cursor": {
          "ref": "6bbaa6fe-eb2f-4318-938a-b738ce6038c4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dfda72ba-18c6-4678-b179-6eb74e4996df"
        },
        "item": {
          "id": "bc85653f-b797-46b1-8d00-d1c23bc74b69",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0603547-63e4-4ef4-a519-48743620e3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81a8d39-5369-486e-9e8d-630105a5707e",
        "cursor": {
          "ref": "312c6351-647d-4692-837e-49f7babc5efe",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "584c8609-70f6-4db7-96e3-8dbf72e7ee82"
        },
        "item": {
          "id": "c81a8d39-5369-486e-9e8d-630105a5707e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6ad2357-9e22-4717-92f9-cf2fd34cf05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c61ab-afd6-49e8-8bfc-e6d10ee26098",
        "cursor": {
          "ref": "1a529c57-80db-48e2-a629-999cd11542df",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "802c2e19-ed2a-42f1-abbd-a4461e38ea0f"
        },
        "item": {
          "id": "a83c61ab-afd6-49e8-8bfc-e6d10ee26098",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "664afb6d-8384-43c1-8398-b7554707b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a115a4-9598-42ac-8ea6-f11a049ff05e",
        "cursor": {
          "ref": "b9baa62c-061d-4c11-bef8-d8a1e351ccf9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "36772db4-ad12-4928-96b1-a8048d63803c"
        },
        "item": {
          "id": "44a115a4-9598-42ac-8ea6-f11a049ff05e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0af3a9fa-c257-432e-b5e1-c7e4e029f097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2213c52-5f8d-4da6-bfd6-6875d8e1924c",
        "cursor": {
          "ref": "bc019a91-8a4e-49fc-99f8-e40e63ada05b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "25e8acaf-e046-4190-adf1-ad90c17aec57"
        },
        "item": {
          "id": "f2213c52-5f8d-4da6-bfd6-6875d8e1924c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "42e16747-1141-439d-91b3-4a62fcf5c130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29729d32-43a6-490c-a998-1ea4e1f711bc",
        "cursor": {
          "ref": "619b7c75-8cde-4ebd-b8bf-255b6f916c69",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5cf208e8-b3f0-4cb4-9ff7-fb7ba39c7117"
        },
        "item": {
          "id": "29729d32-43a6-490c-a998-1ea4e1f711bc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86a0a1f2-be49-4611-8345-0472db41271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c22df0b-98c2-45cc-a273-9f855ddea70a",
        "cursor": {
          "ref": "8d80144f-eef6-4d9a-a01f-05c4d6f19ea1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "62ac00ef-d2cf-4345-99b1-504a221bc3f0"
        },
        "item": {
          "id": "7c22df0b-98c2-45cc-a273-9f855ddea70a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "35d12a64-c820-4418-9af1-fd36b6237a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045a2cba-3fa0-46b6-b361-25854223756a",
        "cursor": {
          "ref": "b0950359-09d1-4808-818d-114e408ee891",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "601a58ba-a643-412b-8827-5161e0b03962"
        },
        "item": {
          "id": "045a2cba-3fa0-46b6-b361-25854223756a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "93cc2738-fe96-46da-abf4-dad91d49d599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5738b1c-ac32-4e60-b05b-becdebf33a4e",
        "cursor": {
          "ref": "b71f07d3-4e53-44cc-aeee-3f7b0b9d5458",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50db051e-4a9c-4276-ae7b-ce877f5e5995"
        },
        "item": {
          "id": "d5738b1c-ac32-4e60-b05b-becdebf33a4e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "62d8437e-ea5c-463f-b460-0252d3d30968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f302b2fc-0efb-40fd-b57f-6e9cdfba4989",
        "cursor": {
          "ref": "5848a67f-997c-4c5f-9342-adfef940094c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "35579781-2fee-4f3c-b379-511099551a3b"
        },
        "item": {
          "id": "f302b2fc-0efb-40fd-b57f-6e9cdfba4989",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8c163a5-3eab-4834-bb69-057a420e34a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74a288-f9ed-42db-9225-db0a5ccff501",
        "cursor": {
          "ref": "8b268f7a-b9e7-4fba-8c6f-1d40bbcd2977",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2cbb5ada-f5fe-43a9-aa7f-b6f74c2d36a9"
        },
        "item": {
          "id": "2b74a288-f9ed-42db-9225-db0a5ccff501",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "79af8fc7-b7bc-449d-976c-b46492786020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d070793e-3b3f-48a2-83b7-aff78e92dcf3",
        "cursor": {
          "ref": "548250ef-c321-4cdb-b160-97a048ac604e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4e940304-bfcc-4c54-90d5-060faf0acff8"
        },
        "item": {
          "id": "d070793e-3b3f-48a2-83b7-aff78e92dcf3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "28668661-02b4-4d3d-bb37-500011522db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f286e3fb-45e3-4d1a-a577-8cc53571bde0",
        "cursor": {
          "ref": "2a1f12a7-de7b-44b9-ae2f-eae49de7229a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1648c9c0-a793-4cd2-a04a-40de078a627d"
        },
        "item": {
          "id": "f286e3fb-45e3-4d1a-a577-8cc53571bde0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eabce548-f7b7-4883-844d-fc32f7625fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8cad28-1acb-4579-9825-8f0e1975b8d0",
        "cursor": {
          "ref": "52418a90-808c-4d1c-88c7-d3f271c0d83b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e55ed2f2-e84a-42f0-88b7-511f1326598c"
        },
        "item": {
          "id": "0c8cad28-1acb-4579-9825-8f0e1975b8d0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97f90b6e-18c5-4705-88a6-b0ebe5fe87a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d1995e-622c-4fb8-b313-a1691106e71b",
        "cursor": {
          "ref": "689cdce0-acdf-4fcb-ba55-760b598f049d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b037bc2e-ad8b-4f0a-840c-ed4fe71f9b5e"
        },
        "item": {
          "id": "37d1995e-622c-4fb8-b313-a1691106e71b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "129a7804-cf95-455e-91c9-744ceb9a5a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf8886c-2328-455d-a201-44c03401baa8",
        "cursor": {
          "ref": "65856043-7868-4235-8d0a-96ee6bd1bc49",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4b7fae3b-77a4-4731-b565-9b4035015069"
        },
        "item": {
          "id": "6cf8886c-2328-455d-a201-44c03401baa8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bcefc438-2d71-4701-b953-6d9689dd4a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fad257-d817-4dce-af6c-856e715221a8",
        "cursor": {
          "ref": "39a6f430-2de2-4e13-b793-5db59649823d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d75e48e7-d52e-4e92-ac68-adc8b6d25f2e"
        },
        "item": {
          "id": "46fad257-d817-4dce-af6c-856e715221a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0ca1eb36-13e0-45e7-9fda-d9daeef9d27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f5023a-b7cd-419b-a070-82af93802cb1",
        "cursor": {
          "ref": "5b643ad9-7a2e-4831-983f-a8027b844aa5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eff207fa-1163-4ae0-b4b9-b6b94d7d6d3b"
        },
        "item": {
          "id": "c8f5023a-b7cd-419b-a070-82af93802cb1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b49e5af6-6c6d-499c-806c-3b94e6c3316d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea5bc3b-061e-4606-b239-656c6bd7b8ad",
        "cursor": {
          "ref": "faa6ebff-27ae-4c88-956a-1ce05ce4295f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "279d30b5-aa2e-4af2-88d0-b14deb9983ec"
        },
        "item": {
          "id": "fea5bc3b-061e-4606-b239-656c6bd7b8ad",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dad05a53-0596-455e-8faf-dc300bbab47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "90058fcc-b2a4-47dd-b338-681803be738c",
        "cursor": {
          "ref": "a2d90e63-c626-4130-b72a-345fdb756fad",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a803067e-6395-4dbc-9cdf-850c2304f507"
        },
        "item": {
          "id": "90058fcc-b2a4-47dd-b338-681803be738c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1fbbd193-3769-4e8f-9180-e54dca367ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ce513841-8232-4335-9d35-ea8df6daf5a6",
        "cursor": {
          "ref": "fabeeea3-9ff9-4f7b-aba7-28e2091ee00e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92dd440b-17b4-4297-aabe-3b7bf59fd34f"
        },
        "item": {
          "id": "ce513841-8232-4335-9d35-ea8df6daf5a6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b0cc7196-a196-4099-8dff-9c16f4278c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "93f88b45-5724-4f67-9f4a-e5a8bbb79bbc",
        "cursor": {
          "ref": "0c76b933-771e-4196-8670-58d5aea729a5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b63e0ec3-d745-4a0f-8e07-04aa245115bd"
        },
        "item": {
          "id": "93f88b45-5724-4f67-9f4a-e5a8bbb79bbc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1f3f51c-d825-4c5a-b7eb-170a2ddf8d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "679ac373-0c1d-4e84-b17a-5e846ab03235",
        "cursor": {
          "ref": "83e36cd4-1a70-4368-af7b-2225d4e7585c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "106066b9-6935-49e4-a010-0a832e08e160"
        },
        "item": {
          "id": "679ac373-0c1d-4e84-b17a-5e846ab03235",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b4ebd753-e1a7-4164-9fba-9a10a3722808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d3f278d1-e9c5-4fdb-8c25-7f345dd98620",
        "cursor": {
          "ref": "ae107ca1-f6a4-409b-bebd-b5daf575ca0a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8791a356-3dfd-4f7f-abd3-54a00a26519e"
        },
        "item": {
          "id": "d3f278d1-e9c5-4fdb-8c25-7f345dd98620",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "140119b0-59f1-4433-9680-a64dce6e773f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "90100969-b620-4adb-9616-e9d11a0bfcb4",
        "cursor": {
          "ref": "55a2b158-6c6f-4c32-a310-befaaf1289e1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01b377ba-f0eb-493e-a38e-ca26861bb4e8"
        },
        "item": {
          "id": "90100969-b620-4adb-9616-e9d11a0bfcb4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f556f277-3157-4bd8-bdd8-a18295642de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ea59caae-4ec4-424c-86de-ff4ea8756635",
        "cursor": {
          "ref": "c8f60d5c-374a-43de-a450-1f38e75561ef",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eba33ea3-854a-4cbe-9b6f-7d593d4fd249"
        },
        "item": {
          "id": "ea59caae-4ec4-424c-86de-ff4ea8756635",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4bd9067c-7b6c-4881-9e11-4a23c16e56dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42c01c3-bef9-423b-89a5-ef83c209d8a0",
        "cursor": {
          "ref": "87dfacd2-1314-4bcc-a9fa-570bb219764b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4da660eb-59e6-420e-befe-526123bef32b"
        },
        "item": {
          "id": "d42c01c3-bef9-423b-89a5-ef83c209d8a0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ede3be4-7613-448b-a1e4-2752ac3cbb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8fca19-d6e8-4a03-9dd7-0e236e632024",
        "cursor": {
          "ref": "21cf0b37-5fb4-46d8-a25f-0f50e05b9fe4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "77d71629-766f-4cce-aacf-2baa4b52c36e"
        },
        "item": {
          "id": "eb8fca19-d6e8-4a03-9dd7-0e236e632024",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c00949b-d8f6-46e3-9581-3546b7b155f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba716f6-4ef7-432a-8fba-9814d8f3d55b",
        "cursor": {
          "ref": "aa5f1dcf-6d3e-464e-8300-25cec192a985",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "26dd5781-37a1-453d-841e-b75dace4fcb1"
        },
        "item": {
          "id": "eba716f6-4ef7-432a-8fba-9814d8f3d55b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c600f760-20d6-4dca-aa90-1d3a5c8115e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8545f0d-45da-4359-bc1d-3796f0e5eb3b",
        "cursor": {
          "ref": "6fd18745-4140-4757-89cd-be988b524b76",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bd29d8c2-dce7-45c6-8e3d-e94ed6885644"
        },
        "item": {
          "id": "c8545f0d-45da-4359-bc1d-3796f0e5eb3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3adfa1fb-35d7-4039-a983-839d32f88bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680528e3-eccc-400c-9f6d-bbbe6b10f483",
        "cursor": {
          "ref": "ef9c6580-0b33-4ae4-9ed1-a2ddbcc63760",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "453b9b0a-631d-4fc0-a4d0-2098262681f6"
        },
        "item": {
          "id": "680528e3-eccc-400c-9f6d-bbbe6b10f483",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "79ee6a83-640d-4444-9d3c-575e51ab12ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e20d00e-bf44-4916-9a22-06aafb988e08",
        "cursor": {
          "ref": "54055496-340a-417b-b462-84b9eeceee1e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ec4d7cbe-8a3e-429a-9dc4-5398d89edc53"
        },
        "item": {
          "id": "2e20d00e-bf44-4916-9a22-06aafb988e08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "73b0c929-68fb-4149-80ee-4d8bef50417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb430ed0-0cfb-4de4-a196-099e02dd8911",
        "cursor": {
          "ref": "37a73589-3bcb-4148-a616-02fd7a347a0e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff5c1d47-d84c-4723-8439-9d513c6c2014"
        },
        "item": {
          "id": "eb430ed0-0cfb-4de4-a196-099e02dd8911",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "473d96f7-64d9-4e52-a955-916ae1523c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc56402-8ecc-4634-8eae-b03c832b03a7",
        "cursor": {
          "ref": "b3a8e1ea-d92c-4e43-9159-fd8f529ec4e7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "707829a0-6b72-4d0b-916b-d5449623ad2e"
        },
        "item": {
          "id": "dcc56402-8ecc-4634-8eae-b03c832b03a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9cd53c6e-3b99-44c6-a0db-2f1f478c5938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae5e6c8-e978-4455-857f-e2948c13df2e",
        "cursor": {
          "ref": "4474ec3f-68d9-4fd1-925d-2e67a0acb068",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d280394b-cf6b-4f4f-a20a-8b0427304774"
        },
        "item": {
          "id": "eae5e6c8-e978-4455-857f-e2948c13df2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d70e3a6d-2904-4c47-97cb-e2d8dff1c220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb5835c-58bc-4a77-8bac-8d73efbefb02",
        "cursor": {
          "ref": "6e929c5e-8edd-42fd-96c4-e32ebd52af12",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da631eaf-09a8-47cf-b620-cf741dd4310e"
        },
        "item": {
          "id": "beb5835c-58bc-4a77-8bac-8d73efbefb02",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "503ee4c0-2039-4dda-b4b9-a62293855d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381b6fc7-3fbb-4cab-8599-115802490aab",
        "cursor": {
          "ref": "9db926a3-5c7d-44fe-beda-a0eb961b551f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b17fd76-e413-41eb-8d51-1e85d0bb1352"
        },
        "item": {
          "id": "381b6fc7-3fbb-4cab-8599-115802490aab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7fb7fdd-949e-47a1-9f3e-785399878e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbbcadc-e5c8-4181-92b4-8253683b044a",
        "cursor": {
          "ref": "e207916c-94da-4ace-b63d-ce1ea11d7173",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "963f98cf-1418-41de-8c49-3bd5d708e775"
        },
        "item": {
          "id": "7cbbcadc-e5c8-4181-92b4-8253683b044a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8e698c7-c9ee-464f-8a12-f747642dbf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9000e3c-0662-4521-b3de-d55a22c27638",
        "cursor": {
          "ref": "691841d1-6f0e-4cb7-a96d-1d0def6350d3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "204f3051-5273-42eb-89c2-33e68f7f9db5"
        },
        "item": {
          "id": "b9000e3c-0662-4521-b3de-d55a22c27638",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e70d163f-07f2-4e28-8fb5-ef9c85c68b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fcc334-0584-473f-b90d-7c0f5c2b7250",
        "cursor": {
          "ref": "37e26c28-0fb4-429e-b4c7-c356a5f5ee67",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23b2c405-caca-4545-bb4f-4827769ecd71"
        },
        "item": {
          "id": "00fcc334-0584-473f-b90d-7c0f5c2b7250",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc9ef1a1-0654-40b6-85c3-8fb90652f019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c0f6f1-f79c-4a98-b4bf-96d3b46e1704",
        "cursor": {
          "ref": "2f58b6a6-e811-4766-be9d-670770eaf33a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "547fb129-80a5-4320-b3ef-7b3c172727e7"
        },
        "item": {
          "id": "e4c0f6f1-f79c-4a98-b4bf-96d3b46e1704",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8f12e532-8aa8-4fde-aa82-873a27531085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2612e61-045c-4faa-8c29-8b38c1d11154",
        "cursor": {
          "ref": "eb7b6ce3-6a9f-4cd3-8da1-bc21dd1866ea",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6977f239-6b73-48f8-9303-b5aab556d0da"
        },
        "item": {
          "id": "e2612e61-045c-4faa-8c29-8b38c1d11154",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "01339437-21ad-4970-968b-31b0fd2f5717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81ea85e-90fc-4999-9c65-66edf0928304",
        "cursor": {
          "ref": "43c14f97-dc0b-4162-9586-b779d50ddf73",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "243d8f47-3b92-4064-a6c9-21e31d3a21f1"
        },
        "item": {
          "id": "c81ea85e-90fc-4999-9c65-66edf0928304",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1f14ee5-5544-4f70-93cc-8addff8ce55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9758a0-58c3-4a88-a5bd-f9e178adebc1",
        "cursor": {
          "ref": "f5d7e8d6-b77c-420c-908d-f94171d9b489",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "52f6217c-368b-4a89-88d5-0fcf9d905ec7"
        },
        "item": {
          "id": "1c9758a0-58c3-4a88-a5bd-f9e178adebc1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e084569-c658-4a74-9369-f766aa0f3efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9815c93-2a34-4411-99e6-3434f63074d9",
        "cursor": {
          "ref": "9deafe80-9171-4243-b8c7-934886b1fdaf",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8ad416d8-d7a9-4d97-927a-564bcf7121c4"
        },
        "item": {
          "id": "f9815c93-2a34-4411-99e6-3434f63074d9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8936628-7b6b-4230-bd60-d449aa05fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1179b3-f150-4a8f-a64d-955a4e012933",
        "cursor": {
          "ref": "0fbf4186-6585-4248-884c-43cab67ca4b4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ee9a3ff-28ed-4a88-b72f-b7106d39c454"
        },
        "item": {
          "id": "7f1179b3-f150-4a8f-a64d-955a4e012933",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47f8c2c8-a312-439b-b11e-332b9289acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e634a512-99e0-47a6-8959-8ad2cbad09b1",
        "cursor": {
          "ref": "784a44c6-007f-4144-a3c1-e72f05a97cfe",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "116634cd-c90f-4a01-acee-a84f9385e7d5"
        },
        "item": {
          "id": "e634a512-99e0-47a6-8959-8ad2cbad09b1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43c60a01-972c-460e-b65d-36022f7748b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958353c1-f884-4489-a445-759e8118978a",
        "cursor": {
          "ref": "676c51d6-9d70-4659-af5f-ede927697e22",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "473eeea8-bbf6-4bae-a2be-aca17babca40"
        },
        "item": {
          "id": "958353c1-f884-4489-a445-759e8118978a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a70d2aee-1b2c-4949-b0ca-0ff9899e680b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20c2a2e-3d9a-4f45-bb22-86641ebdfbc7",
        "cursor": {
          "ref": "dd1afcbb-4825-4435-a7af-0d7914f0b405",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6405dff8-52c4-49cf-a97d-a61e9f80ac4c"
        },
        "item": {
          "id": "e20c2a2e-3d9a-4f45-bb22-86641ebdfbc7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9dd705d-d95e-4a70-84e2-eb1e3300e126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3196aa-fcf8-4b38-8b9c-a2b98345640b",
        "cursor": {
          "ref": "f0823586-5267-4f83-aa38-69a9592f6394",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5e1c153b-cd51-4926-85a2-b2f2c70dd441"
        },
        "item": {
          "id": "5a3196aa-fcf8-4b38-8b9c-a2b98345640b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ed32c8f5-bdad-4d63-9b78-bf8e6e206e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4af0bab-b17a-4bcc-a08b-b5d037174a4b",
        "cursor": {
          "ref": "f7ed85c2-506b-44fd-917a-094353d9e14c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3ff8d899-3155-47e1-93d3-3cdd89ba50c0"
        },
        "item": {
          "id": "b4af0bab-b17a-4bcc-a08b-b5d037174a4b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2ce4d8c4-98a2-41ce-8c35-e0e802e84467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2179de3f-ae8d-488e-9d3a-6d38d6a3b1f3",
        "cursor": {
          "ref": "d978bf96-4276-4109-9eee-c5307ba4c892",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e86653cf-559f-4555-b196-7a14d48c6d3a"
        },
        "item": {
          "id": "2179de3f-ae8d-488e-9d3a-6d38d6a3b1f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "496eaeff-6c7e-48af-9cbc-3e0efb8c9c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc600df-dff3-4767-93c0-ed1390612e5b",
        "cursor": {
          "ref": "6429b428-5177-42f8-aa85-8b9dc643bd1d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "671fb301-cb78-4cc3-aaae-b1e038d3471e"
        },
        "item": {
          "id": "7fc600df-dff3-4767-93c0-ed1390612e5b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e023314-ab67-4177-9183-5f746dd71e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe90a0-ecf0-4b76-850d-bf0ebaa9797d",
        "cursor": {
          "ref": "2a07fd11-8d3b-409e-aa96-509bf9658e1a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1017c16f-3e25-4e4b-93b3-6ce49867955a"
        },
        "item": {
          "id": "37fe90a0-ecf0-4b76-850d-bf0ebaa9797d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ca2da564-c790-4e0d-bf4a-9739fdefb5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e7f56f-af68-4e89-a333-c8eb9bc6441c",
        "cursor": {
          "ref": "80c59f9c-3223-4aad-8ce4-7f8684a76556",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f0e6d50-be7e-44a5-ac01-cf3fb07c86e3"
        },
        "item": {
          "id": "29e7f56f-af68-4e89-a333-c8eb9bc6441c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb96fbfb-41a6-460a-86b0-25e6b1e1f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f48cc0-bb04-4f29-a1ac-d671cc96c9a3",
        "cursor": {
          "ref": "88df3fab-9463-43ed-be54-1f26bdafd463",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a33c5cac-71cf-45e0-ae8f-5a319f203c07"
        },
        "item": {
          "id": "34f48cc0-bb04-4f29-a1ac-d671cc96c9a3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1144affe-6353-48e7-8b91-7bd825e8ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7add05ec-2eb9-4379-a125-ea1de710c87e",
        "cursor": {
          "ref": "a855875f-606a-4f60-bec0-6714d9df112c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "885ae1a6-7f9e-4be5-a9f9-563b20989b58"
        },
        "item": {
          "id": "7add05ec-2eb9-4379-a125-ea1de710c87e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b5acf8f2-8299-4406-9072-38e744772db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c81482-7e01-4598-a60e-640205ff5288",
        "cursor": {
          "ref": "5699b43c-ee49-4084-a2cb-0dd49ab0de3e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "27ed9a48-b801-4a6b-9ee1-e5df4d466514"
        },
        "item": {
          "id": "94c81482-7e01-4598-a60e-640205ff5288",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9ca21d3-4063-4208-8c14-bb43e7c03b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2729ffbb-144d-40b1-b194-3bc7e83bbbaa",
        "cursor": {
          "ref": "6af1e2d7-1e5e-48d2-a503-afd9ef205cd3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1d936d67-5733-4108-9972-495ef4a4b3f9"
        },
        "item": {
          "id": "2729ffbb-144d-40b1-b194-3bc7e83bbbaa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dd337e81-700e-45af-92df-e20b6ae99bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2fe337-5766-4e93-931b-c47bbf80ed3b",
        "cursor": {
          "ref": "4b138f55-81aa-4c5a-8b08-4dc3a8dd402d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "92730c7d-13ac-4c66-b761-08c0dd2f2f3e"
        },
        "item": {
          "id": "3e2fe337-5766-4e93-931b-c47bbf80ed3b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b3bdae27-ca92-493a-88e3-4eb21fced030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dde154-115b-4e71-a049-ef7aeea9b5aa",
        "cursor": {
          "ref": "a6051d17-c300-4b7f-836f-01f175a8c0f6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7e2577b3-90ec-4e37-b4a0-4d91daa80240"
        },
        "item": {
          "id": "46dde154-115b-4e71-a049-ef7aeea9b5aa",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "26faf2d5-6848-4854-af7b-4cc31a0fd8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1017a45-2bb0-425a-8ff4-fff17ce1ebbe",
        "cursor": {
          "ref": "7d03a868-b8ff-4410-99c2-3a32177fac44",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3cc6f4e7-8d88-4061-aaf5-ecaac3b93371"
        },
        "item": {
          "id": "b1017a45-2bb0-425a-8ff4-fff17ce1ebbe",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "04ec734d-a83a-4a8b-ab0f-d7fb2dddc8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d417f81-cdd6-4ffa-8d0f-3cefa8c9d54c",
        "cursor": {
          "ref": "6a934fb9-29af-4d3c-8450-b051c31a6cdb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "072af77d-f9f1-4bcf-9e7e-79456a2806c0"
        },
        "item": {
          "id": "0d417f81-cdd6-4ffa-8d0f-3cefa8c9d54c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dbca1d49-84d5-462b-8ab2-51a61060928e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf79dd88-71df-467e-a204-2384acb2a44c",
        "cursor": {
          "ref": "d0a4a581-8e90-435d-a6e7-d6027967d6f3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0dcb6412-5b5a-4d0e-9512-573f4ddaaf96"
        },
        "item": {
          "id": "cf79dd88-71df-467e-a204-2384acb2a44c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7346cc08-3c71-457c-b92a-16fc8583f412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4dfa02-daa9-4e8d-9b7d-31dc12c23b31",
        "cursor": {
          "ref": "210b3be0-b77c-464c-b223-ac95c8a68b5c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "442230b1-0689-483d-85b8-255201db383f"
        },
        "item": {
          "id": "8d4dfa02-daa9-4e8d-9b7d-31dc12c23b31",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e8b4d772-a906-433d-8aea-7cb4c60d078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce323d66-bc7a-4142-9fad-faa6d9db53b3",
        "cursor": {
          "ref": "abdedf7f-68f9-4280-a54c-914a91004737",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ae47917e-d86b-4387-adef-856707d5be5a"
        },
        "item": {
          "id": "ce323d66-bc7a-4142-9fad-faa6d9db53b3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a51094a0-b7bd-4a27-977c-b3c7bf52c3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9b0b6-e4bc-4005-9db9-b9b3d24d59fb",
        "cursor": {
          "ref": "546b29f1-06d1-43bd-b130-56e54dbec3da",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4e6a7204-84fe-469e-b5b2-148dd0996c54"
        },
        "item": {
          "id": "62b9b0b6-e4bc-4005-9db9-b9b3d24d59fb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "17493543-0c47-444f-8b8e-4fb2629e8059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f988ae-9b2d-4109-a6a1-2d5f7e928abd",
        "cursor": {
          "ref": "74621681-fe82-48f1-a1e0-8f20351ccb3c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c0a0ab4d-3334-4706-bef8-69e14aa248c7"
        },
        "item": {
          "id": "98f988ae-9b2d-4109-a6a1-2d5f7e928abd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "baf3adec-588a-4a17-a6da-7d872cff0ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c542cfe9-ff88-4862-94f7-0140ec732efd",
        "cursor": {
          "ref": "d081215f-629d-4745-88db-f884a45772c2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5ddefcd-2492-4fa6-bf28-ceb613f80132"
        },
        "item": {
          "id": "c542cfe9-ff88-4862-94f7-0140ec732efd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3403fd1e-d96f-4581-adca-22133a8e949b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e14e9-c43e-4ac9-8a12-45486c9134cc",
        "cursor": {
          "ref": "56b65a96-1715-41f6-a11c-e631755917b2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3cf97034-6d28-4c9a-a72d-cbba2f49e84f"
        },
        "item": {
          "id": "8b9e14e9-c43e-4ac9-8a12-45486c9134cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "45d0dc9e-0d59-465c-a3e7-10cde47135b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b326626-6c61-4b5a-a22e-0f5c3224770c",
        "cursor": {
          "ref": "1bf851d8-0518-4589-8f70-22e4bc7a4acb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f57dbc2-39a8-47f3-86c2-8b628bd80ce1"
        },
        "item": {
          "id": "2b326626-6c61-4b5a-a22e-0f5c3224770c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "affeced6-7d91-467f-9537-0e3771f831ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388570bb-e33b-4d2b-8ea1-02ce3e67898a",
        "cursor": {
          "ref": "7663fb91-02e4-4fe0-a9f2-858cda06bcb0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "02678082-02b7-4a99-bf45-4ca4570231af"
        },
        "item": {
          "id": "388570bb-e33b-4d2b-8ea1-02ce3e67898a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5c8c940e-c07c-4dde-8e93-6af8b956fbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff362a-0038-47e3-8db1-c21008d6f949",
        "cursor": {
          "ref": "b14406dc-be85-4305-9aea-1caae42c3046",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e9beaaf6-0463-40c4-8b09-8ab9dcf8940c"
        },
        "item": {
          "id": "99ff362a-0038-47e3-8db1-c21008d6f949",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4799dd60-537b-4fce-9ec8-fcf3624cbff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c4588-3b2e-45e9-beb2-19a65fc26cb6",
        "cursor": {
          "ref": "8ccac610-3912-4e0a-a6a9-bfc582870693",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5615a0f3-a52a-4e31-b818-c39ac6ebe0a7"
        },
        "item": {
          "id": "ca3c4588-3b2e-45e9-beb2-19a65fc26cb6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1af09bbb-90a4-47d7-bc08-cf2cea75f056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3858a2a1-7435-4a71-af64-2eebf34ba64a",
        "cursor": {
          "ref": "0cb74a3c-e47e-476a-9f27-ae3c1e9e9e11",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2c1b691a-de0e-4f12-a03b-c8534b3a4b5b"
        },
        "item": {
          "id": "3858a2a1-7435-4a71-af64-2eebf34ba64a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d96d8896-9edb-47df-8a97-12f2194e6c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f5fbbe-c0ce-4389-ab06-6f5592020a43",
        "cursor": {
          "ref": "f786d2b2-195d-443c-bc78-8cce544ed6ff",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2e6c2f44-1635-49fa-97c6-99ad8b60a0ef"
        },
        "item": {
          "id": "f1f5fbbe-c0ce-4389-ab06-6f5592020a43",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f1a8f759-cc8c-4acb-b32b-f5fd4a704e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8b078-817a-42fc-bcc6-0da55e9fdf9d",
        "cursor": {
          "ref": "0e6ca276-16cd-40e9-a80f-5259f0eea9c5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cea77fdf-b8ed-4bb3-8949-259ea5911634"
        },
        "item": {
          "id": "d5a8b078-817a-42fc-bcc6-0da55e9fdf9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "171e5d25-9247-4e15-bce6-40234726f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6939f38-05a2-495c-be8f-271562320b22",
        "cursor": {
          "ref": "d7a07082-ae7e-4079-a40f-dc63a58bfa73",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c164267-dc83-4962-bd4c-1fc2fe158980"
        },
        "item": {
          "id": "a6939f38-05a2-495c-be8f-271562320b22",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d36a52c4-77b7-4599-be86-0e3a80e7a496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0098286-cc90-443d-825f-9904a536cb02",
        "cursor": {
          "ref": "967a8631-ee67-4c68-95a3-27829c7930d9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c64cd0b6-f1e3-47fb-884d-cd7675362377"
        },
        "item": {
          "id": "b0098286-cc90-443d-825f-9904a536cb02",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "da9e3b1e-f7ca-4420-b380-61052f1946cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56888238-f41f-4379-a10c-51cf000b2d77",
        "cursor": {
          "ref": "84c1437a-19ee-4d3b-94a5-adf51a3fdd8a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "713d86bd-4d82-4162-b79d-c9054a0f2403"
        },
        "item": {
          "id": "56888238-f41f-4379-a10c-51cf000b2d77",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e7f240b-627c-4794-8bc2-3256acb2c589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec8ad91-bd3e-4811-89e1-47a85e65cf61",
        "cursor": {
          "ref": "fcd6d71c-2016-4800-8fdb-a4cb9b4ce08f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f1b2a2bf-fc05-426d-b74c-54e7ea032cde"
        },
        "item": {
          "id": "5ec8ad91-bd3e-4811-89e1-47a85e65cf61",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8cfe434-4db9-4899-81d8-316da5e86ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61af578-b126-4153-95ff-e47913fc8528",
        "cursor": {
          "ref": "1064ccd5-35ef-489d-9698-495c89f5a259",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "44d4887b-bbc6-4048-bca6-ea898ed4486c"
        },
        "item": {
          "id": "c61af578-b126-4153-95ff-e47913fc8528",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "74256859-19b8-46bc-8c3d-605530260000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1901f08a-1750-40a0-a8e7-613e52495ee7",
        "cursor": {
          "ref": "76c5a47e-aa2d-4969-9cc4-7e525dbddaaa",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "42eda8d5-8fa4-4891-9881-fede4b2e2859"
        },
        "item": {
          "id": "1901f08a-1750-40a0-a8e7-613e52495ee7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6d587cb1-b3f7-4e46-95f8-91032044b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14409973-52a6-4a3c-a258-a1794236475c",
        "cursor": {
          "ref": "4cd1e3e9-c68a-4039-a32c-389651ada4fc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f943d0c3-9830-45e0-9f2a-8f3741083afd"
        },
        "item": {
          "id": "14409973-52a6-4a3c-a258-a1794236475c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4bd14782-29a3-4ec5-837d-7f9658ff3909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458cb29b-5702-4e56-8ba4-3e69393b0ab0",
        "cursor": {
          "ref": "83c3da01-9c03-4027-a7d1-735be7bfcfa4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f5ba41d-84e2-44fa-a5b2-a24770593cd1"
        },
        "item": {
          "id": "458cb29b-5702-4e56-8ba4-3e69393b0ab0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ec5d38da-32d3-4c15-94f2-b1c3dedc981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7ede6b-044c-47b1-b4b2-d974c3c02219",
        "cursor": {
          "ref": "c073d401-0e46-47df-932f-5fa726925407",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4a0e6d9c-1a43-4cef-ba5e-bd266b1d8692"
        },
        "item": {
          "id": "8e7ede6b-044c-47b1-b4b2-d974c3c02219",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "be033951-ee0d-4706-ad1f-1b089b71d7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1fe5f1-115f-4724-a42c-64a15c15f887",
        "cursor": {
          "ref": "5d0a0733-2769-4ee4-a64e-71cdc11505db",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "24a60d16-e1fd-4320-a21f-7f6437ad813a"
        },
        "item": {
          "id": "0f1fe5f1-115f-4724-a42c-64a15c15f887",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dd17cd76-23bf-44bd-a6af-901d1d762342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ee0e09-32e2-4fdc-af56-7ce595daf9de",
        "cursor": {
          "ref": "e7f78149-672f-44d4-9e0a-c069286a924b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc158ab1-f4a3-4d74-a21c-54d6a4942129"
        },
        "item": {
          "id": "39ee0e09-32e2-4fdc-af56-7ce595daf9de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b92c15fe-9e4f-47ac-ab4b-882121c70be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a676d-8d9a-44f9-ac0d-f5f0324cae4f",
        "cursor": {
          "ref": "662c3d64-39c1-4811-a8e2-74c21c2e1a32",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e503fd0-3c9e-4a2b-a7b8-e31f9603c4e4"
        },
        "item": {
          "id": "932a676d-8d9a-44f9-ac0d-f5f0324cae4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "64e86959-45a7-4c72-a4b7-c484b85c3efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425aa4cd-82ef-46d6-8de6-d75ac4244ad1",
        "cursor": {
          "ref": "ff9d4e2e-eb97-41e0-aeb0-fc20143a1145",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "64e38dde-78c5-45cb-a440-ffe3958ac20a"
        },
        "item": {
          "id": "425aa4cd-82ef-46d6-8de6-d75ac4244ad1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "db65be10-987a-4c5d-8afd-0b148618065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5d0287-6fe7-43f1-9a5a-a4934605dadb",
        "cursor": {
          "ref": "c0bebb12-916d-471d-a785-88371388acb7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb40bd4f-cbd1-4487-982d-c6461da75412"
        },
        "item": {
          "id": "de5d0287-6fe7-43f1-9a5a-a4934605dadb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "15a5754d-631f-40c2-b37f-8c05c86768da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a8c4ed-281f-466c-95e6-e4cad4ec6109",
        "cursor": {
          "ref": "e03bca47-065f-4956-a670-c8b76c89b135",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "148ae8b0-4fa6-4151-b39a-c7ea28cd01b2"
        },
        "item": {
          "id": "33a8c4ed-281f-466c-95e6-e4cad4ec6109",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "52c5eeb3-7d6b-4376-b0b9-97ee322dcd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab0b28-0311-4204-9ca9-10572f5b716d",
        "cursor": {
          "ref": "cc81cd8e-ebd1-48c0-bd59-9efb5ec6c7bc",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f36ada61-abed-44a6-995a-c1c94583311a"
        },
        "item": {
          "id": "0eab0b28-0311-4204-9ca9-10572f5b716d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "66062471-dad5-4e31-a8fd-5090044b172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71268fb9-6c05-4846-afec-df86545a8a44",
        "cursor": {
          "ref": "9df951e8-b88f-476a-a02d-b0468ab9a011",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "79852faa-c328-4391-8bb5-c924d6c90a7f"
        },
        "item": {
          "id": "71268fb9-6c05-4846-afec-df86545a8a44",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8ddaad17-0566-496a-9cdf-0f15f85c8e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed71cc-48e5-44d5-ba16-c4595823b121",
        "cursor": {
          "ref": "866eba58-2285-451d-a42e-b517df3281b3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "449842a2-b29f-475a-a0d2-f387a023d30c"
        },
        "item": {
          "id": "3eed71cc-48e5-44d5-ba16-c4595823b121",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2bd6fa4d-6d55-4e72-a150-bfc455308195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33cfb06-a949-4d3b-8c0f-71c9566ab7c7",
        "cursor": {
          "ref": "457a5ab3-db85-4007-9e3a-7084dbc4b257",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "82568513-0a9c-481b-99ed-f9f633181226"
        },
        "item": {
          "id": "b33cfb06-a949-4d3b-8c0f-71c9566ab7c7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12e3bec8-29a1-4efb-afb9-bb9d0892eff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8e5337-9f65-478b-a210-4d4b3942200d",
        "cursor": {
          "ref": "c2d936a2-385c-4236-aab2-c95c1d45f9fd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dac16894-6da8-4fa3-8592-15309abc0de4"
        },
        "item": {
          "id": "db8e5337-9f65-478b-a210-4d4b3942200d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee4cd869-a6bd-42b5-a2df-1afd395e3f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2936dd40-31d3-4016-91ff-f6a993abf6b5",
        "cursor": {
          "ref": "dad7860a-22a2-467e-85da-58ac510bffe3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "99478e7a-100f-40aa-8020-6e41793871bb"
        },
        "item": {
          "id": "2936dd40-31d3-4016-91ff-f6a993abf6b5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4824ffa7-3ef6-4798-aeb3-dddb8686d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9d196c-fa12-481d-9eb5-a44404c3b3a9",
        "cursor": {
          "ref": "b21c43c0-b528-46e8-b733-de2d6d85b97d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "899ae70b-e623-47c6-8ec6-eb2294f7c742"
        },
        "item": {
          "id": "be9d196c-fa12-481d-9eb5-a44404c3b3a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ee343835-73f3-4f01-94c8-0335a9a16d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af97c37-6494-4fc0-9fb5-2ccba45af8e3",
        "cursor": {
          "ref": "1da7cb46-3ce3-400a-a611-ed536ecfe2fb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cbc92f6a-d7f0-4962-bcb0-47dfcd48b68e"
        },
        "item": {
          "id": "9af97c37-6494-4fc0-9fb5-2ccba45af8e3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ed3a950-1fa7-4c7f-a1ec-582c6f1460be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc4f9fe-28bf-4c57-b571-386f068e81f6",
        "cursor": {
          "ref": "ba78c743-7aa9-4cda-82d9-69724a4bea02",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "253dba3f-68bd-43ed-9c80-12e7f7520da6"
        },
        "item": {
          "id": "2dc4f9fe-28bf-4c57-b571-386f068e81f6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f645988a-1563-4280-8b61-aef2d3f44665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a6f3c7-ef00-46c4-b929-a0d50cd32493",
        "cursor": {
          "ref": "a129b63a-57b1-42c8-9705-b4e47f3faa46",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c9bfb0e9-77f2-46a7-8f24-2740b6d3bc1f"
        },
        "item": {
          "id": "68a6f3c7-ef00-46c4-b929-a0d50cd32493",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46820c7c-92b6-41ae-a74d-f8fd85388f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ac4d3f-2573-4bb6-b337-f051d6b9a3ed",
        "cursor": {
          "ref": "e0b9061b-efdf-4a06-9e12-48ac7e813afa",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7a1615f4-75de-40ea-9414-958b730524ce"
        },
        "item": {
          "id": "e6ac4d3f-2573-4bb6-b337-f051d6b9a3ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d13e85c2-fc37-4f49-b572-2e27bbe05bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1243c1d-9d85-442c-a203-627beab10242",
        "cursor": {
          "ref": "09976ee4-9986-4edc-8780-e3645d4c9af4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8156258c-bce0-4cd4-984f-95fefb3b812e"
        },
        "item": {
          "id": "e1243c1d-9d85-442c-a203-627beab10242",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3f10f2d3-af9a-43e0-bf43-0041c3c36420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de8c943-fa35-4da3-b7df-8a81d652d413",
        "cursor": {
          "ref": "9b87c9a4-fa7b-4aba-93e7-c947ae7dd36c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "23f41cdb-38be-4452-a12b-134332d0e260"
        },
        "item": {
          "id": "0de8c943-fa35-4da3-b7df-8a81d652d413",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1ee3d2cf-e3d2-40e1-a5df-e70d58eb19bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b6f41c-2d87-407c-ab6c-722c4795063b",
        "cursor": {
          "ref": "cc42feef-3c35-410b-9eed-748530ad6734",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "27ebb5d0-3441-4f7f-a612-84d30ea8f2da"
        },
        "item": {
          "id": "76b6f41c-2d87-407c-ab6c-722c4795063b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9fa2066c-9126-4a6e-901b-7b08c731185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343405de-18e1-4f89-a685-891587040e8e",
        "cursor": {
          "ref": "72c83bf3-5f56-426e-a076-fa63fc59559d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5d6ce3f-2290-4504-b214-79e22d07e195"
        },
        "item": {
          "id": "343405de-18e1-4f89-a685-891587040e8e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ac521067-3c07-4fd4-9957-7dece0818ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a1dae4-f9e4-4bc1-954e-473e44f41f1a",
        "cursor": {
          "ref": "d0dc30e8-adcf-49c3-8ddd-53a7d4d58499",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "663db066-8be1-4111-a084-e83f58b1f20e"
        },
        "item": {
          "id": "49a1dae4-f9e4-4bc1-954e-473e44f41f1a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f46eb815-a630-4968-b530-c4ded02afccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5b5c6-045c-4e7f-ae7e-190201f217c7",
        "cursor": {
          "ref": "c81c6c61-a406-4e4e-9f28-2d73b54f23c4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4114742b-6c8f-4100-b7c2-05e8702970b5"
        },
        "item": {
          "id": "f8d5b5c6-045c-4e7f-ae7e-190201f217c7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6fcfbcec-1909-4b8a-9d0a-47e52c5cbabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e1d345-556e-490b-aa04-391130d8d0af",
        "cursor": {
          "ref": "f2f860d5-2ff8-4f5f-bf0d-deb498184ae9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "461aa3fd-c99d-4d46-b49a-9705a20a0f8f"
        },
        "item": {
          "id": "39e1d345-556e-490b-aa04-391130d8d0af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bda22520-ce9a-4133-afe6-0461aa494e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c886a5-040d-4ddd-9342-d399d9c02d9f",
        "cursor": {
          "ref": "5b25db4f-6a3e-4761-96a3-c7e4d09e4e0d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "94726329-6229-4bcd-8c02-5e471793f930"
        },
        "item": {
          "id": "e5c886a5-040d-4ddd-9342-d399d9c02d9f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e503210-bf53-4110-adab-6daa65789b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612e8043-f862-41e0-af68-cfea9dd691d4",
        "cursor": {
          "ref": "293abd26-72dd-4c03-87a2-d616a6963b59",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "28f4f621-71b8-4cd1-b0c3-f2bff3ff9118"
        },
        "item": {
          "id": "612e8043-f862-41e0-af68-cfea9dd691d4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d5187344-9466-4627-b888-7183bac01015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac77d837-613a-43b1-9db8-e37d086443bf",
        "cursor": {
          "ref": "5aae6255-08b9-4e2d-aca8-0c8281724b3a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "39ad47cd-0254-42b2-b616-18092bb9a9d2"
        },
        "item": {
          "id": "ac77d837-613a-43b1-9db8-e37d086443bf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07ce9d6a-b230-421c-912d-815a2bda5164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719b07f-16ed-4db8-b72c-4dc3842e71dc",
        "cursor": {
          "ref": "643ddd1a-fa17-430e-9608-4cba7d8df5db",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1bb87e5c-e7b9-42a4-b286-01f1ae3bc125"
        },
        "item": {
          "id": "6719b07f-16ed-4db8-b72c-4dc3842e71dc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9e5eeb9d-3df8-47bc-af56-c0493e6a7586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c250ad-bfe3-401f-8497-91ea19defea7",
        "cursor": {
          "ref": "db0fe32b-a8ef-4c99-95f4-de43a74b7091",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "839eba50-5f33-4a66-bfaa-f90662254a81"
        },
        "item": {
          "id": "78c250ad-bfe3-401f-8497-91ea19defea7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "50b80fca-1b44-4809-becd-e685c3f8e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4ed16f-f416-4462-bd32-aef2f48de668",
        "cursor": {
          "ref": "57fc017c-e89c-462e-afe4-4827a712261d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "63a6f3bc-a98b-49dd-ac57-157e5e5424fd"
        },
        "item": {
          "id": "bc4ed16f-f416-4462-bd32-aef2f48de668",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e7fd1eb3-d3c4-4d85-97f4-70d4b00ef197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b4ef5-96d6-4c99-9a31-6ac3a21f49a4",
        "cursor": {
          "ref": "328787b0-373c-49d8-a2f8-3dcb767a1ae1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9d520a56-91e8-4777-b00d-f2c92bcdbc8a"
        },
        "item": {
          "id": "6a8b4ef5-96d6-4c99-9a31-6ac3a21f49a4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1564b3fe-da84-49f6-9c98-dcfa0a2dd27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6a80bd-f2f4-4049-8bae-81b2224f91b0",
        "cursor": {
          "ref": "b73b6f2b-6970-446c-864f-962716d663ac",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "220241f4-92fe-4cda-82bd-f564e989640b"
        },
        "item": {
          "id": "bb6a80bd-f2f4-4049-8bae-81b2224f91b0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6fd8d863-4a5f-4847-9c97-adef0531c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d6c2ac-1452-4732-b0b9-9ec21d790215",
        "cursor": {
          "ref": "6fbd4fba-a0a2-452b-98a9-4f2e57d464ea",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab66cb7f-67fe-489c-864d-236aac4363a6"
        },
        "item": {
          "id": "83d6c2ac-1452-4732-b0b9-9ec21d790215",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75639f9e-91b3-45b4-8165-65a5ece7af8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c31c07-3829-4f84-9b89-1e1c918e572c",
        "cursor": {
          "ref": "084badcf-af8d-4315-8e5b-81a327e6754d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8dbde340-5503-4c90-b964-815f7ca7319c"
        },
        "item": {
          "id": "70c31c07-3829-4f84-9b89-1e1c918e572c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d68b573c-76fb-4695-be42-321125952a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1359089b-3a7f-44cf-ae06-f87682367635",
        "cursor": {
          "ref": "3ab2885c-b849-4c0f-85e4-cfea0f04cd4d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a1c8076a-d9c3-4665-97e6-b2e406e7d2db"
        },
        "item": {
          "id": "1359089b-3a7f-44cf-ae06-f87682367635",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "728950f6-9715-47c5-952c-f15e788290bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a1f1b4-037d-4ca6-94a4-c85fa62f9e6a",
        "cursor": {
          "ref": "0f1481a4-f253-4cc0-9cf5-2e3571bb5d2b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4ada9fcf-3ff9-4032-9989-5c601d2d76f1"
        },
        "item": {
          "id": "b3a1f1b4-037d-4ca6-94a4-c85fa62f9e6a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "407d0394-f0aa-4d0b-9727-3e6def6aefc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3703067-9149-434a-a641-42ca330ddb8b",
        "cursor": {
          "ref": "c5d810d7-0361-4af1-af89-1f8938f34099",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2a0102ad-f940-4da7-8ae1-2cca8983b855"
        },
        "item": {
          "id": "e3703067-9149-434a-a641-42ca330ddb8b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5ba9a4e5-0132-4133-b07b-dcac9b5a8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef24b93-4f3e-4d09-b19c-078036838e30",
        "cursor": {
          "ref": "c9afb8e9-6e6d-4d64-b043-41aaccf47497",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5862e1af-5d6c-4b6f-a9ba-5229695d4292"
        },
        "item": {
          "id": "7ef24b93-4f3e-4d09-b19c-078036838e30",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2c265a43-c97f-406b-90f5-2a2816fc10c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9657aa17-5b56-4927-876e-19a0fa8150bf",
        "cursor": {
          "ref": "aa6104c4-d36a-457b-aa0e-8f35aefb0f3c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "07d4b3f3-75e9-4e5d-92db-83cb36e065e1"
        },
        "item": {
          "id": "9657aa17-5b56-4927-876e-19a0fa8150bf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8a0579c4-efc3-4614-80be-d7c5c07d4af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83203a23-d1db-493b-ae71-3cbc0e57ad31",
        "cursor": {
          "ref": "30edbd20-5250-4f78-84f5-95be6d1ad03e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "70f61855-cfb7-4b74-abf8-f28ce8a8e706"
        },
        "item": {
          "id": "83203a23-d1db-493b-ae71-3cbc0e57ad31",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "696bfeb2-36f9-4e42-9236-140eca95b16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b1b11f-8c28-4454-81bd-bde0c41c8b20",
        "cursor": {
          "ref": "c5a7969e-4d34-442c-a7ec-f7881e1b71f4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d51665e-89d4-49b9-be58-9129e7e8d672"
        },
        "item": {
          "id": "11b1b11f-8c28-4454-81bd-bde0c41c8b20",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "758374f7-719a-4bec-bebc-c1abaf0e18ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462652d3-bd3b-4d09-bfc8-b30d89bc34eb",
        "cursor": {
          "ref": "6bb8417e-bbaf-4d22-b570-2852ddebdafc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "90f4afce-21a8-44af-be35-bb65260c2108"
        },
        "item": {
          "id": "462652d3-bd3b-4d09-bfc8-b30d89bc34eb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "daf34638-473b-435b-a185-405177365ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828c4a5-ba46-4a16-bc4e-90c60609dab9",
        "cursor": {
          "ref": "f0d3ee74-5b8c-45d8-8c77-2dd8038a7795",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d4009a00-b85a-4f1f-8015-0186ad3d7de5"
        },
        "item": {
          "id": "e828c4a5-ba46-4a16-bc4e-90c60609dab9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "28e1b6e4-4efe-4e7d-8a12-67354363bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0396ff1c-88b2-488f-8ffc-d1b908cc034c",
        "cursor": {
          "ref": "ab9c2187-b3f5-4ef0-ac27-dbb8bb1c1d85",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a7c36560-eb7a-4af5-b8cf-6485e0d16aa1"
        },
        "item": {
          "id": "0396ff1c-88b2-488f-8ffc-d1b908cc034c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0f04f12d-56ee-49b7-92a3-ae0fa8917eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dae5517-8761-482b-a9b7-9d81f2c6264b",
        "cursor": {
          "ref": "2ea20ae0-accb-4282-89e6-894af828c2a1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bd1068af-43e7-4c27-99ce-af2fa8e34d0c"
        },
        "item": {
          "id": "7dae5517-8761-482b-a9b7-9d81f2c6264b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58668483-bd63-4f6c-8df4-5f37d64a8229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f39b9d7-e3d5-41ca-ae2a-3664c0de0cff",
        "cursor": {
          "ref": "e29e1cfc-c763-4229-af12-fa9b97a6d2b1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d4efc58-83f3-4822-8613-82bcd72a094e"
        },
        "item": {
          "id": "7f39b9d7-e3d5-41ca-ae2a-3664c0de0cff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2319c0d0-3e43-462e-9c1a-b2aaa3509898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66b3f1f-eda6-497b-97de-798c2970abcc",
        "cursor": {
          "ref": "7aa306d5-27bf-407c-a488-ff5b6266c179",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0b18e91b-e1b9-4e70-9387-be39d8f052a1"
        },
        "item": {
          "id": "d66b3f1f-eda6-497b-97de-798c2970abcc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6921fab8-02e2-4347-a71f-420bef7c8b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b94de6b-a458-44ee-ad38-548206d73f20",
        "cursor": {
          "ref": "dbf6aaff-4e86-4ab3-8963-8f6badea4e57",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cb2cca81-5881-4924-95cc-5c4ed16d5620"
        },
        "item": {
          "id": "3b94de6b-a458-44ee-ad38-548206d73f20",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d3e40be-3e0c-47bc-bd76-ca97ce700611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e38a46-5eff-474e-b99a-10bf773a1223",
        "cursor": {
          "ref": "49d97588-848f-4ee5-87a8-4ccf9be32d7a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "21986b39-4228-4f6d-ae41-32deedbce2a0"
        },
        "item": {
          "id": "68e38a46-5eff-474e-b99a-10bf773a1223",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "843a7ad5-6ad8-4027-a96e-9971cab8b020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1661d3ad-5fd3-419f-b920-ebfcbd5203dd",
        "cursor": {
          "ref": "7e613974-246f-431b-aa8b-d8498e1b4461",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d3a5887b-7d46-449a-8094-0f24912a4ea9"
        },
        "item": {
          "id": "1661d3ad-5fd3-419f-b920-ebfcbd5203dd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6d6e58ef-90bc-4049-bc31-54ff17c38752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ae611f-97fe-422a-b44c-cbf0322cb0dd",
        "cursor": {
          "ref": "122e96a1-dc5b-46e1-a32c-e74c80a0996a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9b2336af-90de-47f5-ba48-af08fe39e2ac"
        },
        "item": {
          "id": "98ae611f-97fe-422a-b44c-cbf0322cb0dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4492853f-d961-49c5-b5ea-fa74c07d8c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26911df1-6cd3-48c8-81fe-4b6a428e7bee",
        "cursor": {
          "ref": "8632e75c-8278-4ca0-a0c8-167563cde3d8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0539468b-7f80-43b4-9327-8d5007821f04"
        },
        "item": {
          "id": "26911df1-6cd3-48c8-81fe-4b6a428e7bee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cf20454d-2246-4484-9cbb-ae9fc9ac3468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a509e5-fc82-4ea0-b7c4-e7a2ce2dd6a3",
        "cursor": {
          "ref": "eb120787-3252-4234-9776-845e5b4f222c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2858e37a-bb84-4cf3-80c1-6cc47f22a7e0"
        },
        "item": {
          "id": "40a509e5-fc82-4ea0-b7c4-e7a2ce2dd6a3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d83aae8-91ef-4405-affe-5e85150de1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e4036-4ca9-47e0-891a-58a45758ca28",
        "cursor": {
          "ref": "0cf9a1da-f854-447f-babf-489bba2e230c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b996c3c-2af4-4a68-9ddd-e11c64e5546a"
        },
        "item": {
          "id": "362e4036-4ca9-47e0-891a-58a45758ca28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2991a92f-0e85-457a-a287-28538082a0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30669149-5af4-4a5b-9b65-a893777c8a00",
        "cursor": {
          "ref": "34180cb8-643c-4c73-b1c7-4a960141b82a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6fa9237f-0121-479d-939a-bfb3be8bc9eb"
        },
        "item": {
          "id": "30669149-5af4-4a5b-9b65-a893777c8a00",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a3157569-19d6-400c-910d-9ccaab7b13a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a7026-ab1f-4ef3-aa20-c36b7b268e63",
        "cursor": {
          "ref": "5ace49ec-d93c-40cd-b76c-5abb9e2089c3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "26a4db26-9162-466b-a3e4-e780298e0471"
        },
        "item": {
          "id": "a60a7026-ab1f-4ef3-aa20-c36b7b268e63",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a6bcd47c-d946-4bcb-9b01-30b5ce31905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9547eeb8-68c2-4204-b8ed-c6cc23523c09",
        "cursor": {
          "ref": "f2fb2e9e-0c58-4371-8aba-c4b86e78dae3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb087d13-4898-4eb1-93b9-3314c1e924f5"
        },
        "item": {
          "id": "9547eeb8-68c2-4204-b8ed-c6cc23523c09",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bd77d536-0e7f-4335-891e-04914a9c8856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0a4105-9b94-47df-bf2f-ea53b2bdc034",
        "cursor": {
          "ref": "22a172cb-fa49-4888-97c5-6d8c09b69bb4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "781716bc-dc74-4d43-b0b5-444146f397e7"
        },
        "item": {
          "id": "7e0a4105-9b94-47df-bf2f-ea53b2bdc034",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f57c9588-f41e-4877-90eb-5134fb2dbff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d08018-71e0-4edd-80a1-2e5116243154",
        "cursor": {
          "ref": "a1c79aad-d5c4-48c5-b5ee-8f3ab7442aa3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6be886d6-02ac-43e9-8622-14f5d118d99a"
        },
        "item": {
          "id": "25d08018-71e0-4edd-80a1-2e5116243154",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1eda2baa-e2d8-4c21-8881-5a0eacd79236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbe33e7-3f7b-4e6a-a2ef-356f2d7f281c",
        "cursor": {
          "ref": "07ab8773-319a-4baa-91b1-36b1dca47879",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "07ecbfbc-4cd3-4dac-a914-3275c49e1123"
        },
        "item": {
          "id": "bdbe33e7-3f7b-4e6a-a2ef-356f2d7f281c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bc92fa3b-fbe7-4cfe-b0b3-c9db905181ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c8ae91-f228-43c1-b109-d513715f1836",
        "cursor": {
          "ref": "3c65f8f1-6037-4636-a956-16442eacaf84",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7d331bac-9e5f-48f5-b98b-3fb4e9df4058"
        },
        "item": {
          "id": "e3c8ae91-f228-43c1-b109-d513715f1836",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e88c05ff-ebce-4063-834b-0a4f5cc19010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872cec9a-c2eb-48dc-ad5b-d42f80a70c1e",
        "cursor": {
          "ref": "6723954c-0cf6-4ae7-a0f4-ea116fd03334",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c762ccf7-755f-4d01-a177-206611d2cfa5"
        },
        "item": {
          "id": "872cec9a-c2eb-48dc-ad5b-d42f80a70c1e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "58aaf9b9-e757-4bbd-b3fb-121f9cc78f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9dbfaa-73e8-480d-8a6d-e6bd458874a0",
        "cursor": {
          "ref": "8eee7863-cf16-424c-b73a-4d3d610426c2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b8a3cac5-4793-4328-b4e7-e00f385cc8f5"
        },
        "item": {
          "id": "9d9dbfaa-73e8-480d-8a6d-e6bd458874a0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "41f3f4b0-06a1-4278-97fd-ffd90ebad31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f009217-4c0a-48f3-af59-892311dde9f2",
        "cursor": {
          "ref": "0d3a28ad-afb2-4b46-b573-6f6d0e9f288c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b327b70d-d333-45b4-89d7-5cef27343422"
        },
        "item": {
          "id": "7f009217-4c0a-48f3-af59-892311dde9f2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ba35d01f-e43d-44df-b361-d8f13c7903dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85951e-2620-4390-bd42-6aca805b8f8b",
        "cursor": {
          "ref": "9ac7e287-be5d-4eb7-a09a-3092a96c4b73",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "717fd923-0807-4c57-8ff7-39ec585ffe6c"
        },
        "item": {
          "id": "fa85951e-2620-4390-bd42-6aca805b8f8b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5cd76149-2c40-43d5-9276-c58363c13720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc00aa-4035-41a5-8d18-1e95e46d818e",
        "cursor": {
          "ref": "6e1bfbaa-e0e0-4b86-a242-03606f0b7982",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8cb96e94-2805-46cb-987a-20d22aafcbe1"
        },
        "item": {
          "id": "20dc00aa-4035-41a5-8d18-1e95e46d818e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "60500ef5-b379-43bb-bc22-3b82efe4a7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f434812-d83f-4bb3-ae2b-ad449914a855",
        "cursor": {
          "ref": "e2655db4-3c27-4ce9-925d-6bcb85975d2e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b05fe18a-9cb5-4967-8d10-40c42311dde1"
        },
        "item": {
          "id": "7f434812-d83f-4bb3-ae2b-ad449914a855",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "756d74ad-d10f-4131-b6c5-a0add259a010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813d83c8-7867-4285-b40e-e362cb49f3dc",
        "cursor": {
          "ref": "01610aac-ae67-4477-8fa8-7ee71f479f66",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "36ec310e-7241-49c5-9c8f-13b23aa602d4"
        },
        "item": {
          "id": "813d83c8-7867-4285-b40e-e362cb49f3dc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23840735-eaca-4290-8976-283d01ced944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa68789-416b-485b-991d-4d096717f8b7",
        "cursor": {
          "ref": "f5298375-2c41-4683-9413-ed542da4e1df",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "af7ae20b-3e9f-4bd0-abfe-7c039d266928"
        },
        "item": {
          "id": "eaa68789-416b-485b-991d-4d096717f8b7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bf728c61-1faa-4e54-bb8b-d784770fa899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d7cf14-56cf-4413-b825-eb2348ed82f5",
        "cursor": {
          "ref": "0a389ec9-0b50-41da-aa8b-65b6d8416fa7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "66429de3-7db8-463f-8234-2174cc6e0a8c"
        },
        "item": {
          "id": "31d7cf14-56cf-4413-b825-eb2348ed82f5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8bdfc26e-5359-4974-babe-805ba59f30fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57836a15-ccd6-4600-9255-c07aef1d0186",
        "cursor": {
          "ref": "d4fc8b10-6d4f-4c3b-b28a-6efb901d804e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4fd8adbd-69a8-4db3-b7e9-b6e9e60b77e0"
        },
        "item": {
          "id": "57836a15-ccd6-4600-9255-c07aef1d0186",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "799e007b-8450-4e43-a591-ec9775955537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660a713a-e49d-4ce1-b3b4-c61d2bb66b63",
        "cursor": {
          "ref": "11699fbc-3015-4bb3-81dc-ee73215695ce",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "810f293d-8ff4-453a-b29c-4b0eb3d389e4"
        },
        "item": {
          "id": "660a713a-e49d-4ce1-b3b4-c61d2bb66b63",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56617155-6d57-4149-b185-09bfa076d835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee21556f-bdf3-4025-a863-4cf6bb3a1001",
        "cursor": {
          "ref": "575daab6-6bc6-4ac2-80f6-ee81e6ae0842",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "228a68fc-5bd2-401c-a3a5-e659296cae9f"
        },
        "item": {
          "id": "ee21556f-bdf3-4025-a863-4cf6bb3a1001",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "61b0dd9e-e44d-421b-a67d-9ba106996c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fd61f3-b695-4374-8d7a-1d4e3ba71a5c",
        "cursor": {
          "ref": "f09eafbd-ce48-4233-a004-62d76cf80a40",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d0e819a6-0a2c-4fb7-9434-762527581103"
        },
        "item": {
          "id": "51fd61f3-b695-4374-8d7a-1d4e3ba71a5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8edb1413-aee4-45ed-a4f8-fd79845c1dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9099e6c9-4bb9-4ac5-a2e3-b18ad37298c2",
        "cursor": {
          "ref": "4457dc05-3fc5-472d-98de-c7aa56768c0a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60ecf2a9-2151-41cd-8765-aec4f0254f8c"
        },
        "item": {
          "id": "9099e6c9-4bb9-4ac5-a2e3-b18ad37298c2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fdd1b6d4-5286-4452-b20e-9c7ba4fa0edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2fcce1-99bd-4d03-b4d9-b85458c8d29c",
        "cursor": {
          "ref": "dd918540-2b1b-4f38-84d8-4f888e8438d1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e49db769-9770-4ba6-9bed-da6038aa718d"
        },
        "item": {
          "id": "0f2fcce1-99bd-4d03-b4d9-b85458c8d29c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "93b6839f-5b0e-498d-aaa9-102030e9c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "63af2cb2-dec0-4ca6-96ff-7e0675a8970f",
        "cursor": {
          "ref": "9071e0d2-9c8b-41f6-9d3c-061c209ec9c5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20d002c7-ab8b-4226-bf38-3e98cb8d021a"
        },
        "item": {
          "id": "63af2cb2-dec0-4ca6-96ff-7e0675a8970f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b0842736-017e-42b2-bc46-3599ac417a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ec810cbf-b396-4242-8ced-cb29cb2f6bb3",
        "cursor": {
          "ref": "6c8a4c6f-36a4-4e70-873c-4ecc2e0e04e5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "30bd8f3a-eb8e-46ae-af17-71509344a3ca"
        },
        "item": {
          "id": "ec810cbf-b396-4242-8ced-cb29cb2f6bb3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "da694f3f-a740-4063-a7e7-3a37bce4d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e38ba0c5-a7c7-40f4-b331-f65217b6354b",
        "cursor": {
          "ref": "9a111523-44cb-4002-9b82-066dcda5cf97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3825764a-71ec-4e06-9642-524fe29ef75a"
        },
        "item": {
          "id": "e38ba0c5-a7c7-40f4-b331-f65217b6354b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1769a1a6-8d5f-4fe2-91cb-0e91aeec27bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38ba0c5-a7c7-40f4-b331-f65217b6354b",
        "cursor": {
          "ref": "9a111523-44cb-4002-9b82-066dcda5cf97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3825764a-71ec-4e06-9642-524fe29ef75a"
        },
        "item": {
          "id": "e38ba0c5-a7c7-40f4-b331-f65217b6354b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1769a1a6-8d5f-4fe2-91cb-0e91aeec27bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b562a-464e-4dfa-8fe9-3de1f6afab26",
        "cursor": {
          "ref": "85fa163b-a818-40cf-a690-3f2fa51e0ba1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9cbea941-1a94-4521-aec7-3322f80aa43c"
        },
        "item": {
          "id": "f88b562a-464e-4dfa-8fe9-3de1f6afab26",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "194c6fd9-0876-49c1-a473-9fa2c052a6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9bf132-9a24-4993-bcc8-629c8f0d97db",
        "cursor": {
          "ref": "b1e93a9b-0f37-467a-8ec7-b31620da24db",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "971d1d01-4df7-4b8d-a29f-a19196d00284"
        },
        "item": {
          "id": "ff9bf132-9a24-4993-bcc8-629c8f0d97db",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f04becc9-470e-4477-8f24-bb9436eb673c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}