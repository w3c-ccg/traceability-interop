{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fa95390f-2eb0-40fd-aa81-1243d7171381",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3c9d36b-3637-405c-86af-c73f02ece61c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2443ca74-affa-4527-8044-ebaf5a403f2b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "61fea904-869f-4535-86fa-588bc54b7ccd"
                }
              }
            ]
          },
          {
            "id": "c3bd5716-6150-424c-9354-2b47892850a9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edf55016-d06a-4aae-ba30-775dbe7c80f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b6492f9-beae-48bc-8123-83ebdb59612d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "af49cab6-5202-47ad-b470-17cf083efcdd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "567f4e8f-650b-4681-9203-8f742c254043",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5817c08d-ab8f-4f15-ac94-1f04e8965ef0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a7d7f98-3244-48af-9944-4085244432d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c158a307-8ae8-46e5-957f-ffefdc0a8404"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5a1d073-8627-4d2b-8f76-13970b2d49c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d17a258b-455b-4fd0-8a63-6e3db836f9c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fff957fa-b851-4713-9e57-1442c0f73e67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79ee4c34-3044-43bc-92ce-d15435978cb4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f311b8-fdb1-4e8e-aab2-55d841adb235",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8c055f49-2cf1-4723-968a-287a4cc307b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76738390-0785-4198-8000-3a5cb990632b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a6ce5e3-c737-4019-9b5f-4f29178c8bb1"
            }
          }
        ]
      },
      {
        "id": "1e8ace5e-0bec-42ee-bd0a-9f159e6710fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ab158d0-5ff6-4769-ab7b-62f6033857b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70b90da0-054f-4021-b63f-394b4a68269c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19c907f2-23a3-476e-854a-f092422e6a4c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1255f734-f725-4ccb-b843-93499d4be3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d8c456-87a4-471b-85b2-c005b65082bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e80e7f-76ff-4fa2-be42-6b58bcf2e4e1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189383a8-ae58-4247-880e-63a53a45ee10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2de267ee-8f13-44d3-9f49-4a6504ee44de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0708b6-3ecf-4019-995f-4a0388d86aa4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48d1bc-1acd-456a-9fad-586093a0bdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4696241d-7218-432d-a73f-57f4f5dd0313"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57101c17-4bf6-4c9a-9e8c-2edab2adbad0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6943db31-b0e3-49b5-ad84-b6b6b96505c5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61b52c1-35fa-48d4-a244-2a7321b5384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a11d027c-3e50-4060-b560-f2042fd01802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d43e832-e555-41d1-861e-fa2d1616d250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05451b55-5e27-400e-9924-165a1181526c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20989be4-dacb-4c1d-83d7-69cc2ad7f560",
            "name": "Positive Testing",
            "item": [
              {
                "id": "193533fc-91f7-4930-879f-45489338bbb2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1cb60bd-b5a4-4c80-b4c0-a6e6dcc37a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "69b91280-a32d-4580-a3ee-80d94bd42fce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02eca61c-8875-4574-82d3-88827b8698da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aa4972bd-d00b-49d8-8b58-47b1a3740b14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c36b814c-9fed-4885-af13-8f0e5fb68d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7e0e4cc-2137-46e6-b297-0c544504d7d6"
            }
          }
        ]
      },
      {
        "id": "9f357f81-add4-4ef2-8c2d-3a49226c1d18",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b22613db-3230-4c47-9ca4-a79f13b67829",
            "name": "Negative Testing",
            "item": [
              {
                "id": "030bd286-7c7c-4185-80f4-0cfe84e4c4db",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3a9899d4-c05b-4520-8c07-575aafc52274",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea94e08e-427d-49f6-b610-c6267407420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b170f200-5feb-4968-93e7-132374ec3516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee36054-c569-4688-a4f0-79e79010e446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a53193-f564-4dc7-ab20-1972113d62c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59789f0-8442-48c0-a9bd-8ed6df022894",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55fd414-0dd8-4787-acdd-cd998296a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84772bf7-af75-44f4-97bb-9d61d352448d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69197d4-3275-4d5c-a325-c550a5c40f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a993956c-8980-4ecc-8385-9c58afb23aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e7a841-3862-4ca3-80a2-b2155b83b879",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f94a235-7bfe-4054-ad67-c6acad27d478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a680aad-6527-4b46-9421-ebad85e91370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af391df9-b9f1-4d72-9935-bfc3462e6a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e753d686-4fbf-41db-ad26-ae11ff16ae1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe53b077-8140-4a05-9ab5-6fb7629a47a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354e7f2a-9e71-41cb-ba6c-94f3c36e5fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f3a367-19ec-4ab2-959e-c43b08251b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca9109f-fdf7-4998-8e67-85a81372a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11715124-7d50-4092-9e3c-68dfebc10048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd2179d-6d2e-4633-b4cd-df7ad0aeb121",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc64ae-251e-4da8-b2cb-b471712a3f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57f5bfc-e2d0-4e5a-ae0c-a687c31b93c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3c5f1e-66bb-4c15-ad7f-d324cfd44530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d72d6c80-376a-4a37-b0cb-b96f909482c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f984f6c2-4e7e-43a0-86f2-cd385eaeac08",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8bf37-9f3a-4a24-bae0-1e20148a4716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1279c105-f78f-496b-b82e-f78c45a5c6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedca27b-508c-4d6d-9d94-31019ef84337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "294fe2ce-45b8-4905-8225-1742643bf789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a17240-fa91-4180-a0db-295c2a2ef39c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6311844c-549f-4dd2-82fd-5097cbfe9999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d944b353-91fa-42d5-bf9f-4f3aad66def2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022e4d2c-8928-4eb9-af81-37c78ee3e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39f61d45-e259-4923-9707-46c80ea51b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c05da9-7ce6-4346-83be-df916e5def99",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a499684b-94d5-45d4-a2f2-6bebfbe19687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437ce761-a695-465d-95e4-ee94f5c7473f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6327946d-d1f9-467e-9d7a-52a15c5170ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c8d149-cfd1-424a-8c02-5b7504e50a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7635c67-f7bc-459f-ba01-647a6fe36590",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06ac681-47b9-49e1-b9b8-49803f76c7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de7c06d-802f-42fa-8182-0b795bc3b2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711ebd45-322d-4fd7-ab81-c6565ef113cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed160229-f43c-4fe6-a233-0ff0c00a0010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcce6118-feec-4115-b7d3-f48bad88302d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cc0ac5-03ef-454f-ad18-6a7ed9102be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a2dcac-96cd-4b70-9392-af48224dc556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d316c3-bc8d-4d18-8ee5-dd3a27352848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3993ad5a-ae04-4b4e-8c4b-995e7945456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28c173f-55cb-4721-95e1-789e64e0798a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fef4eb3-dfac-4706-98dc-dd2a87b5be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdb9d7e-a6c0-49b5-b8ec-4d1f0d420214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079c720b-b287-4e02-9705-ce6c0152a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b77d612a-a15c-40ea-a383-d0647d3431aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a1c2ca-5c1f-40e6-be8f-9c12ac9249e3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ebdf07-160c-47ec-8ea3-0410051204ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f65002d-ed8e-40cc-b599-b8b819f9237b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3349d0a7-b293-40f5-a1b9-f84df24ca60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99cf07d0-ce11-423c-aca6-1e93dbf4e560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa55c0-3015-4000-bd3f-8c7b34b11ac9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca8b71a-7315-4dae-9aed-f2b637015d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce27251-f2ca-4bad-82f2-890f80e5ce42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90054379-ad4c-4828-8c99-e987a8f4dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1126096-c6a2-4aff-a6a8-f5840bc690d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d5055c-8f43-4945-82b7-b88df43e36ba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39860539-115c-4464-906a-b55949d2c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e91fb73-068b-4d5a-af12-299018bbb9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b92fd82-1ae1-4516-a8ac-19d3c780fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345ae2ac-82ec-40cc-8b4a-945cd5f03581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58042138-c35f-4eaf-a572-60cf8ac227d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a737a75b-5d1f-42b1-84cc-33e9794a4e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03208714-f402-474f-83a1-d726fa615b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e002db16-ac69-4b49-9e7f-097fb0779255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75e60a51-f05b-4970-9ca3-df21a4fee55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda5ea01-9b51-44d2-a5cd-fa0e65899cff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8e0da6-3139-42b8-b3c2-68b007e785eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b885c25b-84bc-4eb3-b454-302f3fe9d1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bd42e9-7388-4fb0-8f33-fe5635a17887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "100c5ee5-0c97-476b-8a0a-dd77651eedb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7ebd95-928e-44f8-807c-83050960e3da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46672462-354f-485a-92ad-00349302816d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797f6657-4a14-466e-939d-4fa397fdff5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbe67a3-36a9-436f-aec2-8297324cd025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "925baeaf-79a2-41a2-b7a5-a49ba72f728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3cefa4-6830-49c2-a5db-143a22363c02",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd91af3-3b81-4f9c-9e4d-77ea67e476dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304e6866-d7c9-4504-8b4c-1afb2bfb5fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8951ed88-44fc-40a8-8b9e-653480df8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c8e6b2-b0cf-411f-8e6e-c860c905b7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6f355b-61da-4955-8c9a-9db8ef2e6a25",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed706ee5-7c5c-49a9-8b95-4f14c5c32ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065148a1-08eb-4a84-9ee5-df2ae30f17dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab262fa5-0850-404c-8ce3-12da2572b40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a9f96-2943-4d13-a80a-e019e682b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d206d-9b6c-4247-b838-73501136a2a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d24559e-dd89-49ab-b6a2-188429a9e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4609e3c7-addb-43c2-91d7-a936be0ecd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8488ff-bed8-451f-8a42-37a9c7a6c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c51fda9-9934-47d7-b370-d35c4405eb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d6dea-7df0-4254-8653-883404f1a88d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14511c-5a11-4b9b-aa57-3cfa457854df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6e4059-8a50-479f-97e4-92c85e73295f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14295b6e-7c2f-45a5-9a80-ec025019247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df6feb0-86cb-433e-814f-75afe0891d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a7c04-e4fa-41af-850f-67d4a38031ed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b7af4f-7c7b-451b-a412-92ad61de2b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c439429-c0b6-4048-8acd-69f4e1d05ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726fa40c-3eed-4120-9e74-3713bd6a1481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "faaf63a3-1171-4298-8645-32433f6ba702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8487a0-d35c-442d-aa06-8abfa7d6a789",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abe5f9-76e0-46b7-936a-b2f77d0187d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b276e5-7703-466f-a5e3-a9e8fafd1440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727cca0e-8028-4519-bd10-04514cb01e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bbd304-2c78-4eeb-a4bc-06e6954a8eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ffe685-45e2-439e-b4f7-a67deb1ab28b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e3b2ff-bbb7-475d-86b2-9875be2e2426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c19956e-732f-499d-a2c9-ae62085ccb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5780e-0378-46da-9f82-5a8863e05b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3af3d21-3802-4bde-a1de-ae0046f417e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2009037-c3b3-405f-8e6c-4a102536c32e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb75e8bb-1ae3-45d9-884d-eb0d6e922983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb37b85f-b382-4726-8559-292190e59776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e594965-f31b-4a47-9a63-01c77e4ad7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeeee51-eb6f-40e5-b6f4-035413dfa8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fd67ca-d275-4ec1-bbfe-59f8777a59f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81707c83-eb3b-4069-877b-7bf3c713c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19695de-9f97-4816-818f-6af6a6139891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a86b9d-3ac1-45d5-854c-fff5e9c73c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60271f75-0e67-4e8b-95ce-650bd1813a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c1723a-c3d0-46cf-8d3b-011ee4d40ce1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff5e98-9fe4-4bb9-a108-52454826a1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d8dc8a-f9a4-4835-96be-faabf1587b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0563ba14-d8bd-4edd-81d3-60875b6825c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e184dd-66fc-403b-aaec-c76254d434df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28cb79a-761f-4be3-8c57-54caa256cc5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a66243-806a-4c74-853d-50c481ce0310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f4f8e1-37b3-453b-afc9-6614acc6ab54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0b8ef6-217b-45e4-bfe0-e41dc160b29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d5cb96-d29d-4a00-989b-7c4b583e96b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d74248-f47e-4130-bf9c-7d91e2150aae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2222e9-2cd8-4f27-9e7a-37931876768e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1843037-9dae-41e7-9d35-d3d492a1042d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9346930c-d82a-46b2-bf81-da3460bd2113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "572c3875-5585-409f-9da5-f9b160d78976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851d773-b6b9-4df3-bc44-25ff94b33f72",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef9dcaf-012e-45b2-85cb-feb321865ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d808db-9ecb-417e-807a-1fc52bda30b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771ea026-164f-4db5-9d6a-52dcecde2fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa181f5d-5b52-4927-ade0-09c2f9089124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badf0e2e-155e-4408-bb55-b748ba8872ac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ea287-8d64-46c1-b957-34af89d92c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672f5339-1205-479a-8584-682c853d7afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70f6133-4b3a-4b9a-82d8-7dea24456913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3595fe7-e700-4174-aec9-0d102f0e8f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056c1953-abed-4d8c-b0a3-fbaefc4f4826",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02103882-d02b-4ce5-a7de-3cc72a33851a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d8630-7d15-4119-bc0c-3e242f33aa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca06573-e275-4b4c-9ca7-7c88a5ff0e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f9f1ef-07f4-4175-bcc1-c5f0827a53bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de4dcb5-a6da-400b-873e-2d0b23582898",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f71d4fd-9248-4b10-8cae-f332891de16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85a59a1-ab8d-434e-a119-504b8dd899ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f9fa1d-9253-4499-bd0a-9df7d40844a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd363b50-2c41-410c-999d-8301586ed019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ad2b5-cf51-4165-a2c7-75629651d013",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f0e41f-7dc8-4ed8-9899-856478933705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b79b567-dc10-4a75-80e6-6bd7ba70918e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b10231-582e-4983-8d8e-2be280b54bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "007de5a0-a03b-4109-9505-e25f693c39e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46824eae-565a-4f60-94cd-75a67297b325",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8253cd35-48b3-401b-af36-a64f871157f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2008ef-8f21-429c-8b11-9f7e3b7faa9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71f70f3-58b2-49e4-b93f-eef643f80138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "14b39d65-493b-44a7-9aee-f1671add5906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a39207-dfe1-416a-8bb2-92e9601a1aae",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43efcfc7-a8ac-485a-9740-5fd04a2eed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9cbaf18-6614-4d36-b2ac-b4e83d88d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be4404-4f8a-49bb-99ab-ffdf09589ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7acce83-0e1f-4f7e-9804-84973d3677d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7095b0-7497-431f-b8b5-8f0642a763a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929a69e-3b7e-41c7-923d-8a4cb33e0f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938f23c5-2825-44b6-9cd6-3634fb4d67b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a22676-8c27-4ef9-8965-0936dd9534ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fb443c-d841-4a03-a17f-b8013cb7fbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52525b9-dd17-472e-a388-a85713e88515",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91c48d5-f612-4465-b344-4babdf2ec341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6197fc-2975-4c1a-9a83-bdbaf83ee561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8af0a5-6fdf-44c9-b44e-2d861cc32014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c765791-ff21-4573-89d2-a9c71a2cc801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d6df6-8ebe-4778-bb00-d3dd9573548d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3560de3-c3c6-45a0-8cdf-e7e58507352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c667ef-90e0-4b0f-accb-6342aa23aa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec88251-a013-45e0-9a79-2386d1b12650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f52b762e-336f-45e2-ad7e-cf067b6b2066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c3021-f14d-478e-9796-8af2330d4d60",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f16655-39cd-4dd0-a709-838aa3d07d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f7e94-c558-4295-8034-48781b861eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6af851-34b1-4a95-8c97-6f1541057656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59692490-bfac-4645-b7e5-fd62c6cbb288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060008f4-cefa-4baa-87ef-ed11760f287e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c57cd2-f17a-4ba6-bf57-faa9343e64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1860a8-c6e2-4e8e-8440-4bfc5fad10bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abe3c2c-fb56-43fd-8585-aec4fdcd7059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffd75d7-0646-4795-a7f1-b5418e42f038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399302b8-8240-41eb-813e-65ad491742f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ea7272-b796-4281-8f39-677aff81dd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacbb25e-c05e-41ee-8816-bb6e5efc37cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd577a7-ca36-43e6-9480-77241fb122b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "adbb6bb4-b581-42e7-aa39-e76b5b17c836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a42743-79fc-4d49-a82d-4409f445b579",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b85a59-ea0d-41ad-93af-f54f2a2fed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa8c9df-ccaf-47da-ae42-79a3d3cefe75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24beaf57-f3f2-4286-b503-1c0f64fe695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7644a70-7513-496e-8899-d07f6904e92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54c4bc-f1cd-4c07-9cb9-78b70b7a3cd0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60f63eb-6803-473d-ab19-58e4ddcecaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de571780-a44a-46db-a452-25d959f4e6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78320e50-e748-41c1-a68c-0caa44e758b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a3a197-ad25-48dc-98d3-d1cffac2184b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0214ca5-ce9b-4191-87ec-6a7b89a8e5b2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d781622-2f43-48ca-8ebf-4b240b7763e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a44bac-6828-42c0-bfe1-291abdf6bfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ff402-0a33-45c9-8cea-a539c4d3637e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e20f96-2d6d-49b0-aeb8-7e8713485cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0726123-77d6-4e6a-9190-08184f7efcf0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729743be-c66c-4c75-b842-bd532593d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5354da-76a9-41cd-8995-f0526ea884f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57430317-9a25-4bb9-9255-036e6713c86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8d18fd-969e-480b-801a-32320c905df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e685780b-d246-4d3a-ac69-03e757c60831",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f378161-5b1b-4233-ad73-b51c8da21db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c64fe1b-48b5-4bad-ac4d-b62634279fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767d5b8-a991-4e35-bf9e-6984fa5e9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b57f57-f33d-4075-8c03-e390baa71697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0622aff6-dc4c-444c-9c5e-d1048b176e2d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da774aff-d5ee-4b5e-8447-b800f5c08049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e9f8c8-9984-4743-9973-40a7eca4de6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beb5f29-dd1f-48d1-aea0-2260f1e08a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18dd3970-70d3-4726-960e-ddf952ac0264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d080a174-007d-45de-9cbf-d7743714e8a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bac7ba1-30ae-4b58-adc6-44ef126c4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f49816a-eac7-4898-9ad7-c20a8ab6e547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0e3b2e-4575-4ec6-905f-417bdce5d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1302a530-d43b-4c18-afd6-a4a7850a3dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f231037-9292-4f6e-989a-e2d501bb8c64",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1978c35-7529-412a-91e5-d083812236ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d12214-8066-4c76-840c-b17feb11f9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca31e7a-7be5-47fb-94e1-a1ad40f50b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f098e5df-0234-43ad-be19-e4a9b87c8883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a9a9d8-64fd-4e33-9019-d299d0aef073",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9be45-c671-4d34-80b2-5b0039dc2c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a61e1a5-308e-4f10-b477-1ecd5f545591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba13f09-7c0c-4d1e-885c-787ef8848c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cb3cb0-5dcd-4755-a3f8-63bcec51d30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe89cd-5e15-4215-b989-5b70f6992a5c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa94676-eed8-4823-b3a9-379fbc7d9e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c225b71-f759-48a4-882a-278e6cfdd281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f423fecf-4104-4a14-a462-3588bb961766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffacfc7-dd78-400a-92c4-563c3e5fc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f09caf-a522-4a95-9b54-a3444bb2056d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d790a0-e7ad-4c62-aea7-1e1853e50cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65cca86-7248-4f70-aa2e-205b8c5ef82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4391fc4-d2a1-4e51-9654-87507b49dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6a15af-166a-4c32-ba01-4136d7dcac0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba7546f-c492-4011-b380-3721f706566e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05c92b5-2cf2-46e8-ad50-72fa70a6ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7417cf9-7bd1-4721-9fca-5de3a6ed2ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d65c2be-987b-4cf8-afc7-4088299e407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16915e56-f21d-45f6-a275-99718dcd750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce987b5e-b911-43d5-b580-ef22807279ee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4f02b6-78fd-4c28-a1ea-0b8b66be5336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c850ef9-0d22-4b50-9dac-0c7fcca6a968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2459bf86-f6a1-4d6e-9b9f-6d874217245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3e1117-1a63-466c-bddd-c1214e945400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ab2efa-fb81-4040-ad3c-c21fa67f9075",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef051c2b-c86f-40e0-b636-ff715868375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e309c9d1-324d-4abd-a8cd-9f5fe6ed04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219cd252-0239-4fa6-b173-2d7bc67b5ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "56d0cbaf-4773-4b32-ad22-d0484ac6ca10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417d48c-81a6-4eb1-b17e-f0d407b42ce7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3080416a-41fb-4fa8-991b-261a6d1f7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54849073-f85b-42ce-9f64-b21daf0595f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014869ad-266b-4c54-840d-2ea8e895626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbdf2a0-336d-4ef0-b6ed-35104e2a2804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b15cc8d-8d47-4a28-8ee0-b87e4d6f8478",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d439bb57-0ea1-491c-acc0-856c40550987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdb11bb-bd05-48b9-8c36-ed36998c85e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef15abf-a50e-4854-a347-8e88f7a82c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e3b5be-5c66-4e89-a6c4-1d000b7b3322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f34d3-65f8-45c0-b4e2-cbf769691fb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae135698-e90b-43b0-8e91-617e4a9a85a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c26d9d-f063-469d-85d2-ffe34f7de47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7312ebb3-bda6-48fa-8c71-6fd8f64d26a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d27bf7-8d12-4d25-a1d0-257154a98167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f61cd-985e-45c5-8d59-9ae934a59d19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4551b32-4e88-445d-adb4-0d010ea0a833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8dff16-cb6e-48b3-bd79-44a8922769be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f84c8-7704-4373-993c-703a396855f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10e9d5db-9445-43f2-a259-68f6bd252fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6711fa6-4e0d-4d2d-8544-64e2b7202410",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0b528c-f9d8-4bc6-92a1-72580fd742df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1619b26c-44d4-4770-b149-c20d76809033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7416bd-3534-4a11-a4d0-d6052fd0f8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97462799-3937-4b63-8d78-dc04b372e280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fc64b6-2a2f-4dc7-80e5-982307be74ac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9f64ff-0046-4f2a-a881-de1ab41b15d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343b8cb4-f074-4ac8-baea-b629b14a1b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a04b01-fb45-4155-957a-4a4162b07b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1cc15f-636c-4216-a1e8-9c88fdbbc518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fa0068-effb-434f-8928-1763223a3e8f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d356569-3389-495e-bf24-b10d73a85a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42177d7b-62e8-4a7a-aee3-86405f1a3b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98f7e67-8f5e-4932-9683-5401bec55a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24bc86f1-f2df-4a65-aa8d-6ca9aa9c6041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa7c3fd-a71f-49ee-8de6-4adff4d85922",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3123f3-5f1b-4cbf-9261-cd53124836e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3852e1c8-a93b-4084-bf2a-42accb39152d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69577b63-5072-4197-9155-a6c2fbb34d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "081b116d-6209-46f6-9c39-9526295590ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2364364f-40a0-43a3-aa2f-32b7f54748ee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d615ce-41b0-4ba5-a89b-9b077d8b7160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8704ac04-92f0-4339-8e23-e54d68539960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3db4d7-a619-4a08-b37b-1a1b6d3df5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b966ec19-070c-41e3-9611-63e0ca28786c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645fddb7-c741-4ecc-a1b2-04fc271f8ee8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4617352-9fcb-42bb-830a-384e6569ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636d1f16-618c-4012-a63b-9a9bee8f017a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ee9f38-ce22-43ad-97c6-6afa9c589287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9425924-7822-4820-834c-225e64f2cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c9f7eb-75e8-46f0-ac7f-982e4b09010e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddf2dc6-142b-4e21-858d-a2cd9b9b3d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c991167a-e623-48aa-922a-decd97b35d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ef5c5c-eeab-4c4d-8844-91c1f6af2851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "248f59f3-1b6e-4855-8658-5f84b8cc6a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0799981d-7469-4651-a9af-359a6fc47c01",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0621a45d-b4da-4da9-a667-c812c7ce6be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a90acb-7b9f-4065-ad2b-f83ea4b160c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f70c9d8-d3e4-4807-baa8-3179d1aa411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5c9853-490f-4583-b9fc-78cbff71660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4ce547-1c41-4981-8d63-06a3e6aa52c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ba48a0-d22b-44fe-8a0a-67cd59d819f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068b666c-7251-40e6-a2e6-efac64d9f2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c440cd-1e43-4e15-bb0c-a7ed65dc406c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43782f1-4a28-4ffa-a42f-87364b908aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef305f1-d0a6-437c-be45-0be17da1ebaf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679cd66-1fbb-4ce1-b483-c4b0cccae366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10713609-24ba-404f-9086-89bf21abc381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d9e70a-3061-4327-937d-56465381e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b56e936-da63-405c-abb5-08c3490ed89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cbf4d0-8bcf-4ef7-a5c5-534515b1bda5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376edfd2-3326-43b1-911f-eb320a150dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a753aa4b-3faa-4475-91e3-5ca846424208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0faf2-6894-4634-836c-269867be8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "052d5795-2dca-493c-adfc-06647feaef95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a302f971-22f2-46d3-b7d0-b252d6ea2c11",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db0eae-d53a-4404-b0d7-453ea87704e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a9f2af-70ab-4050-a8ec-41870992717d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a7bec1-2b97-4462-bd93-9809f737a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e289896a-ca42-4852-bb13-ef7bb280eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e4ba0-9b04-465d-8cb7-3590263e74c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f144f562-9905-4f87-9a53-dd56e65c198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b22a77e-0477-4358-9850-4d1259a145e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d037fa-c86a-49d0-8a73-584eb683711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d740d3f-6311-4e05-85c6-6884de9aa08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3993a30a-d91e-4162-9a59-98f192cad63a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bc40a7-38d6-45c7-bb47-5b853b520c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3183e449-8129-491d-a0ec-2216f0eef6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46233fa5-a8e4-47bd-8321-cc124eb2ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a854223b-675a-4490-8290-357058d0431f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce68a1-319c-4f25-8634-ea7597945ba1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780aa5ff-5555-4d24-9f27-57af9cdf8104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fed3eb6-ea3b-4e59-91a4-d5f468fa3401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0d642-df6c-4118-aa65-499d44bc1729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eca2f51-05b7-4d54-b980-14a64b8fb9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cad9211-1069-461e-9885-400b2b9b7cf8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe3e37c-c7f7-447b-8203-fc80dd6a60eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4528d3b0-df7b-4dd4-be6f-e43cee3e5b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f0dac3-d96e-49aa-b4ab-6689f7f7b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "127195cf-4bb5-4b5f-b979-158ceffd1c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3028ba-66c0-4709-a96a-05b6d7fa1697",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d35fd5-cda3-490f-a9fb-1a77b8ec1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a41de3-0015-48bf-a612-f006e27168fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64016291-bfe1-4646-bb06-cd9a8e8e505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe515960-f2c8-404e-b2cf-dbd674709726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aebd59-e978-4840-a096-15cff196e314",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23a2c1a-eb9c-4406-aff2-ca3ddd16926f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ffe493-fef3-44ba-a35f-051bff8fb141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e1c170-b46e-42ae-8b83-5fd780606254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa377770-ebb4-4abf-9faa-8aca54f31872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57439e-c0cc-40bf-9d23-05865f9b5f5a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26a63f6-006d-4a1c-b6d0-d8a8d1a67cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fbfa13-9518-4776-a467-f33dca55fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e55f5c3-4ca4-4da6-8f0e-9324054e3718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d9edfc-c5c7-4614-8c6c-909d7b5fda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e860cd0-a36e-4238-8a17-316e095559a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bebb730-be77-4b73-a26c-7d4417d601af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481c4d41-ac98-4da3-b908-080009104747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58557b0b-9e89-497d-b0a4-636a7859951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c39a3f89-7781-4d4d-8be1-4448c508107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cac853-65e2-43aa-bc4c-ce2ba972f06c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a5688e-4142-4e4a-b960-08d97610e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c78d21-95dc-4a10-9531-004ded03a63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a75e15-ae3a-4ed1-9cf9-9173b6409275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2661202-3074-4f7c-a6c0-ca8b3416aff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4835f7-44f5-4553-9839-40e134894a18",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac5b39c-731c-48e7-a1f2-32213a8910bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c63b07-95e7-468c-9733-aeac39db87a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311a1b23-0697-4191-9f87-9d700c7f5816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66337d6-8842-4f3d-bc3e-21c3a5818503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1b06f2-11c9-4efb-83ba-62468f434169",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506fdc72-0e45-4af2-a71f-ea2cc9321eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4b7df4-3f2a-4848-960a-ad81197bd516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9172da87-228c-4c53-badf-fdbac64874f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca2c959-0982-4cba-9dd2-27216bbb5cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611880a0-7910-4f77-9dd6-f97363d4f234",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858654c7-457f-42e1-898c-883099af8a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5f3245-254f-46ac-964a-1ea6f45b501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df417bd-8b55-4c63-8a3d-dd830c3af08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bbff26-2ad4-4589-acfa-580d79c26059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb1c07d-18d4-461a-aabd-32d6846394f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff159ac-a0b9-4066-bf05-44aa549978bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a93ff64-1512-4e38-a2c1-e8f854a2ff2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abe533b-c6ba-4b16-a69e-e463ef5543a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "503cf0cf-e06e-40c5-a9d3-d8ba998a022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad515478-8072-453e-b1c6-bdb4f164158e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22176df9-6157-439d-8c50-31f26476fb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e707e7-b526-431c-bad0-1025141bf79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3185fe3-82a5-4268-9d26-895cfe849536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd00473-f3be-4ed9-8406-820845924699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05be86d-9a4f-4bf3-b12f-98f39e4a30fb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40754cb-f7b7-4b03-b7d0-1c6c1ee6fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff172e6b-7fe7-4457-af09-f9f298048ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad85c2c-6d31-4bdc-94f6-f1a6ef87d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "390c6e70-1487-4b85-afe7-595caee21790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7547f5a-f930-40dc-a4df-bd9242c3aa48",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9e3ce8-2fd9-4c56-904d-32a466ae508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6d151f-91ae-4ff9-bd57-07c634d2f590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd4c940-ca8e-498c-af8d-bee456ca1da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80d4bc6e-562f-4ce6-9e6f-caaadc9455b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c03bd82-a6f5-4f00-a52e-dda56c458775",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594b6146-abfe-4fc0-bef0-b2bd5f2bfa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979ee8e2-4568-484f-845e-8b9ada43d5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46dec18-0ec8-4977-9f1f-038840b7527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1247a4f-eb1c-42bf-9e6d-98ca11e603cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df56fde8-0531-410d-85c5-099b5ff23c26",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3d6554-66cf-4129-84b4-1c41e69d0d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daed4293-3247-4c1c-aa27-b79121f48c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aca7ac0-f5ca-44d8-b0e4-8eb2b4066167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "581ccc72-ef07-4fe8-ac5e-2983aa2b4698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87329313-f39b-4aea-8918-06b7e6415fb8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8bfbb4-d2c6-40bc-adef-420d2f3c7d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65ef074-dd57-4984-9e27-a83695aa058b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c749d189-7c9b-4c31-bac3-64f5efa7692d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed509336-2aa8-4787-ba1a-7ae1808aa26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e2e59-b870-4df5-a1e0-c1a8a062cfb7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123bec73-b721-44be-9ea9-0603b36c541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a47ac51f-5edf-42c6-8095-a614d110ce56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b2e539-4d26-4d61-bfa5-658f53e3ba04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd0df79-28ee-4bfb-af56-e14ac89f0ae1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "169554ba-0538-4dd8-bfed-4d3489994031",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e478267b-9ccf-404d-a8cd-b9beea8597f4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc41eec-d9e8-4861-9ec9-daa17d2fb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0722fd4-983b-4c7b-a144-bc2354fb7d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c6328b-fc35-421b-8431-afad62eceabc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f110c2a-2cfc-4347-ac46-31283ec1916a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d997bd9-c65b-4abf-a1d2-066b60a2115e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e12dd8f9-6486-4227-b9da-acfa4cd924ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b6cd07-cd8c-426f-b61c-a3270e60b7c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc4e73fc-a2fc-407b-be62-33186dc58461"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b74cedd-d250-4375-b5ed-ddc2fca6f66f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "837834ef-00d1-42e0-ba49-439d59a14ef7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5a3f20b-9022-4b4e-80a1-39a31ba85e2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "083e0eb3-349c-4bbb-9a0c-cf3ed686fb03"
                }
              }
            ]
          },
          {
            "id": "7571936a-e8bd-4d86-9078-ee57b44a91c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7195111c-02ad-432d-bf77-2d03e02bd12e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "783e5c21-0a89-4fc8-b576-dd51b6215be5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf993e2-2374-4de8-863c-60aa22d31a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c1a99755-9ceb-4cf4-a45e-a600fc299b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae5108f-d9d6-4f89-a918-e89aa162d7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddee9766-13aa-4320-ad3d-bfd2aa68538b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7a946e8-7121-46c7-98c1-6e2e24715598",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30043613-1851-4380-bd42-d6ed8cb264c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a099d5b-377f-4e72-a074-1dc866293d4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd8531f-37c6-4d8e-8e42-2cb9402cbe58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca2bc216-5358-4155-ad03-71b7fd34caf9"
                    }
                  }
                ]
              },
              {
                "id": "3d90881a-1f7e-4e9f-9938-8c032f218dc7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "601de375-0712-4663-bd63-8916f7c3ab07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0134b949-6856-491d-84c0-cf6446405c3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ff0f817-c201-4705-9d54-c052d919ca76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0300b9cd-6fa6-4dd6-99ba-198b63d50c39"
                    }
                  }
                ]
              },
              {
                "id": "1bb16116-e88e-4132-9467-b9284dcd3e45",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d752a08c-7847-49b9-9525-f6be4c3c6d88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30f5c0c5-f71a-4561-bcff-4a34779955a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e6ec0a-7352-4198-83d6-87c0688cec23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "053ce6a1-2690-4333-a55c-2d307c4c840c"
                    }
                  }
                ]
              },
              {
                "id": "ccaa8e19-2970-49e5-bf19-5729919f9447",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5cf5c05-a144-412f-bcbd-852332a82f80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e3ffe2f-e7ea-474b-ae11-9f74968dba59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5b5f2ca-ed68-40ea-9ff9-39a3a1f74ae4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "14f528f4-628b-4bb9-a652-491ceda2b94d"
                    }
                  }
                ]
              },
              {
                "id": "866cdab0-1d64-420c-b554-3e7bd0b4680e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eac3b9e-7f05-4519-8490-e19c2899b39d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8e7652d-31cf-43fe-9853-f656b7907080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e0d3ca8-1ed2-4844-b4de-00c6bb2347be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b91d47d6-25a6-4706-b6bd-02eea57d69c8"
                    }
                  }
                ]
              },
              {
                "id": "d92e74bf-11f1-4d80-a255-009f853470a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d738dab6-703f-41f8-916b-7836e15875e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34ed839f-0683-494b-9f68-dd2f632e249c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5e31dd3-e2f4-4752-a1c4-0b307078a0b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bf453db-abac-4c2c-87c9-e4d8f243d0f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ac90ce5-6ee1-439b-8ad6-d21f6b8397fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6da75cf0-d2ec-4287-b6c5-a129a5a5f0e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "871d414c-8049-4091-a1ab-f5d840368b9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dcabb2e-a775-4b3b-a0e9-0f1b4e5d5ab0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b4fb46d-ae1b-45dc-af05-d036cf718cd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "33bd856e-3750-4efc-9206-fc4857fdc862"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e29e6933-a536-4414-9f9a-65f6b56686f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49ac24d3-e9e1-4605-ad61-1e8ba8449309"
            }
          }
        ]
      },
      {
        "id": "42beeb4e-3bc0-4d44-abd8-3612fd2ee9c3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b479e2b5-e5f8-4523-97dc-2b92b6b4cf6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd0b7888-3e56-44fe-bcb1-5054d410bc44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3375d924-de92-4614-9900-ade33527be46",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890f0cf4-5a32-4b54-b28b-57ccd76d5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e531352d-4f78-4a6e-97a3-6b5f5ca7f095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a9332e-8e89-4778-826f-2f3c5a9d1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2d5216-3f4c-4ab0-acd7-18945203b35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9880bb77-15e5-444d-a210-c1a5efaeceed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56e6c8a-da9c-4c79-ae6f-e38de08e9690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503d27ca-799f-499d-a250-4075d3ca7ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d560ccaa-f4fb-43fc-ac19-aaaf2f6aea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7a3e52-7c97-4517-ba6a-57f321b0b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd75f69-9b7a-4c6c-baed-2b339cf53f20",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e9cb6-e1d2-4819-b410-e133395bfb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fab3ad-0f75-447c-81b8-e3f30f8f6ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250aed9e-130a-4c37-8cd6-97cbcc1b028a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a5f7e3-f200-4a6d-9d8b-13ee26963eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820d686e-6508-4ca3-aeb0-97249a565c06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4c09d-2289-4734-a40e-2316f7c967e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b14bc-e38f-4309-a1de-bd1256dee007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b7b9a2-8528-4aee-9eba-64691f3d4a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4860b009-b460-4795-986c-0e7d8c10f860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e21c36-3255-4cf9-8617-e42df5fd87e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b18bc-3e9e-46b2-a5d5-cd135047b061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322af74d-6751-4a4e-821e-aeb47a6a8403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a1b2e4-d1d5-4ae2-83f9-736117bec8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c924d63e-3e00-4aa8-bfc1-a3efa178bcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee29dfdf-f11d-4ede-a685-da8a6b2717e0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a7baee-660f-4bf6-9d97-c3bd4cda73a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0d7a0b-722a-41ec-800e-2ff39741815e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f184058d-c20a-45b3-9c50-4105f6b0ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "674c20b8-26e1-4bbd-ab63-b65081e6e317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ebb80-6cf3-49aa-ad4c-dc0c34fe0cfd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df1379-d1d5-4b03-9797-f7239787cd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e173f9-9556-4d09-9943-f3b04cd6de34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5dbe76-4855-4848-b0f3-84a0edd5fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "047eb681-44ad-479a-a9e0-73f73a4515c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1dd176-372e-422b-aaf7-f6a844ecc88d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e28796-a404-4859-99fa-b402b4fda05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378a262d-4632-4da7-8ca6-18881b4cae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b59bf1f-6860-4b23-942e-581df414073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "501cdc77-8311-49b3-9c49-ccc097d59622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf855b-c210-411a-8ba2-5cceaa6c7ca1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaa84ac-e4c5-4aa6-9bc2-9fa02e348734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f42cea-bfe0-4c7b-a905-4d5a92808dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d84b0a-88e6-465e-a794-7bda4bd104be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17a7c4c-88ee-4fb7-a410-c074688a2bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218f493a-03a3-4c0e-af39-05366f6a4f85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4735be3e-4096-4cdb-9944-6762681247a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dd53a8-5849-40b8-a457-b913fc17d51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5695f115-ac5b-47f6-aaf2-97c6bcf5dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1fe8c3-1292-4d45-93e0-1b09be7a957a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1acc0bf-c78b-4c5d-9b2f-63fea2e54f30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ec57d7-a981-405f-9507-d83ee9d183bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4119a7df-4659-437a-b534-e3d50a6c9e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b0737-c4a3-4e65-8d3a-28959ad630fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7e6452-ab81-4609-96e7-7530e3b975b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2024f12-0656-49d5-b69d-68c07bd61405",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f59d1-118e-46b3-967a-d75d1b76bad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d365f197-33c9-4440-b2c5-a7d6ca122729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d5a46-247e-4977-9034-b3725a9f9d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43d0615d-16d4-49dc-a3a1-bf0e988fa3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084b5634-e78a-4d2c-87cf-caa11bdf45a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f0b920-0aa1-4f04-9971-3b475a257a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeb3ff6-4ad3-402b-8f4d-71d57f6b9bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a842080-b204-4640-9b44-456841f18c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20093f32-6a30-4759-811b-811f0d919789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfcddf4-80e6-4b55-99a4-7ce00d5b27b0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14020e13-968a-42d9-bd26-db506c329db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dec061-cbaa-4d61-ab3b-de7bafe33e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1476e0-6639-461e-9831-806e22815be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74c3630f-e73b-4125-a50f-04f437ece820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d44e0b-fed9-4e80-8d9c-fab5d9fb1840",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90a469e-83e5-4479-a17f-dc9f6dbf50da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef68c41e-6241-4ea1-8a20-15de51ff49cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95c4150-5ed8-48c1-af33-7a5040608678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a491420-b980-4c42-bc2a-5b8c497040ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473616d0-6af3-45d0-b1b6-8cb544287afe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc851965-dc78-463e-ab65-7c02eb332a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523b630d-8398-4eec-8b87-ada4e5bca786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f158d0c5-7e56-4055-8fa7-62914250f2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eac422b-0143-46ba-950e-3b2a1c464114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0429a5-3107-46c9-8acc-ed22dac4f151",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc7d0e6-b8bb-4822-8592-2bfe3b3e19be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7099b233-f947-48e5-864c-91a1266044e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f98c9a-0968-4f55-b84b-b860ff7efc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b052501-68c7-4b57-ab56-137737ede2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8185e60-602c-4d83-bb64-6c3ac858d15a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73553396-639c-47ba-bc48-b613711550a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8655559-94ee-4f8d-a7c3-b75135dc544e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b193c11f-3c12-4ef4-89a0-1babb2690f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59788819-fa76-4b58-9163-03ca67db9ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac338247-2928-4cda-8038-9d7144536492",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08047d67-7325-477c-971e-fb733314bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a3190-5e38-4dec-88b8-573aa8eeb9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ccae0e-f7bd-4883-801b-35dc21a4f258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4562caaf-f7e7-4f0b-a385-90184d237c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b7dbe-6e1d-49f1-928f-9cd1c98d37e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897bccb4-94a9-4c47-adbc-1cc70725d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e1476e-aef5-462a-84c2-725dd1514375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0296dc-b4bf-4e0f-88b1-e44c726e76f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e89a94-68c3-4d42-bec8-60538d01ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc72574-8e6c-4ec6-bf24-d97bfdb8de79",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225c6350-5e3f-4487-84df-e36f0277cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ca8915-1e8d-41a0-b0ed-48b5eba7a0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9747477e-c4d9-4e39-9c6a-c7e2868462c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67de60c3-c1e1-4097-abf7-738e8618f1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93af3fb-79e1-4df8-b4ac-ea5bf5e02359",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698997c9-1601-455e-883e-9bea38035bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20fb63c-5bc3-419c-9bfb-a326fec2bd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56622c73-acb3-4ae8-b719-5e488128123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0438493-c016-4bd1-bd73-284097853cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340c8972-9b1e-4411-aa73-46d245389d81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef685211-c3fe-45e5-94e3-1ebfd47e13c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9423b2bf-79b6-4ef7-a086-8c7bfe5d26ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9170d-5245-41cf-9e1a-14811ecdb3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bacc58-98be-48d5-a25d-183a75227194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9597867c-4994-4454-a1a3-5c3927ab4554",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dab99f-7527-4283-93f3-3351e519138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d497e2c-0fef-4140-9332-89d8b11578d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2f91f6-1be4-48be-b18b-a8130b8f1258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15aaec3-d7c4-4459-afb3-c47c1e392592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e168d-c4eb-48ba-b6a4-f83f0ee6a5b3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6977673d-8466-4906-a959-fd5a6d67cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8a5a3a-d0b7-4566-bcdf-d9bd3793a1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36230e3-3f07-46f0-8975-460506362f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "357211f1-f8fb-4972-9215-f877c5a1330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da66649c-2a07-4479-9c1a-e32292bb6141",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8bb11c-b9da-4212-92b4-5040a4450d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52faace-f439-401b-acca-5f9f1a8a77f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e63cc7-b6ae-435a-9e03-32783f98821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "305af4dc-0f9b-4e3d-9561-9a7ec845aff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34996853-741e-4484-9b16-0578f741a2e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba03c08-5b0b-4523-8948-538be4fdf75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef4009b-5fc6-4b00-9248-7e3377602deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258f10ec-2617-4c6a-b684-87d407f4e01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43c3961a-f225-4847-917f-92ff5a3a4bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a862ccd-c6cd-4b0b-a661-684fbd29c358",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e964003-22c3-443d-a0a7-7389215d072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88230f05-630d-40cd-a020-0a23373cc372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7e218d-a570-4de5-97a2-3e577107c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d67689-bab0-4c1c-b966-6a9a417062a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc6e3b4-7815-4d3a-a92e-49ec268c20f1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf07346-5c1b-4703-b1c7-7151dc9d80c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a439d3-7c31-4f9e-bdce-e69fa4cfaace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb716397-96f4-44fe-b5e9-765a5d3546fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbda97d-c68b-4e00-b447-2f2ba303bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192815ea-96c0-4861-aa2b-a24416e92b86",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1fae4e-7b25-4201-a7a1-99f4380e2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2186fe-619d-48b9-bc4e-fdaff76f3262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5288bf3-e05a-4f8a-a36d-999e38915f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82d0591-f61d-4105-9a10-37a30d07c067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a70bfa6-e33b-4328-900a-aeeb1a84b204",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cf66ff-953c-427d-ae62-681f7dbef98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15039d1d-97fc-4ff0-af50-aeee21a46cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2983164f-8451-4d0b-be23-0ebb876c3c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "262cc779-f161-4d74-9784-f8af054bf2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5616408-6e98-4bb0-94b7-41cf56efd4f2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed134a38-5bdf-4241-8a7e-2438d04e425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc6b632-c638-4625-852a-f83c120243f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fd18fb-abcc-4eb3-8cdf-6621d7827f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "710998ce-146a-47f8-b88f-145f14945854"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e89ebe5d-8b03-42d2-a0c9-649c10f6fad7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "196449f1-25b7-4171-ae37-197940b75e4d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e00e282-78b8-4c9f-8b78-6ff44cd96ed1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9f8899-92d2-453b-b735-8a4e28164370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fe3fac-8929-491f-aefe-1cac167860d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d2c089a-ef2e-4dae-9101-a5877fe28e6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ca40905-7eca-4ac5-a073-c270c9b97cb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b69fa5-0df8-40b7-9521-bab9db703b69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d502b5c-ecf7-4a39-a796-4c33b339b29c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4798ddb-06c1-418a-bf89-ee628b411e83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "520d823a-ce5e-4dcd-8af7-55daa70dbd36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5467d613-4a13-4d27-8687-e2e8c3540d00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9caf25f-11b7-4c81-aa04-04bb2e5b2f25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06b4d75c-bfa5-40ac-b4ed-c174f4a61136"
            }
          }
        ]
      },
      {
        "id": "6eaed550-5ee9-4ae4-901a-cac84034abc0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6b72754c-cbeb-4c0d-8e5d-305f7913772f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "576b2732-ba6a-4a4d-b603-b8358fcfbd86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83fed381-ebf1-4b48-b55c-062e241e351c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4862627-ca05-4837-ab06-f25ce3534efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf1a97a-ec69-4830-baf7-bd2920dd689d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3bbfe6-e5b9-48c5-a6de-09870fcb94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ee864a-9536-4fc5-89ba-f9cbab0388b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44743e-df38-433f-a075-9c150a4eb4d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16f6d85-7f17-4737-9223-857f7a2a3b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1902908-ed13-4c69-81c1-cc410926e402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7afc7b-40cd-4f6d-93d5-4e45f201684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bb4063-0593-420a-8249-0813e431bb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1dea8f-9506-414d-81d1-86f0ee525049",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82197c87-0d56-402b-9ead-b41f22621bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd348360-26c4-46fc-bfe7-df6db947b3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb964684-b56a-4a75-a20b-bb39fa3fdb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eec90c4-5d5c-429a-99be-1422a968238d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450dd468-2721-44ee-978a-8ed3845d53f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca40f52-53de-4eb3-95e6-05ef9f6246e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05397119-bde4-4f78-adc3-a1554b200a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d858837-489e-4690-ad56-a4631db065fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "384bcc68-f965-497b-91b1-1c50e9427433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c1cdc-0c39-4fef-b3f5-029e2cea952f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8040e54-6773-427c-9b2c-76f7d0cc5b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bbedc9-c02d-4155-b175-9475b82796ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4979bc-6759-497a-a3b9-f3205fef02bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f365b308-e84a-432f-b53c-b4d5155f9aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671af7cd-0e6d-4984-a13e-f3cc2de4a8f6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89361cf3-82b0-45fd-b568-d3a15c2870ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680a6b15-f905-4c46-95ee-240f942b63b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d9ee5e-5302-4a83-88ba-80e0580d292f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f3ab8c-7e15-47ad-815d-e748185c2524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d301520b-bdfd-428b-b042-3cd6c48ff855",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dd1976-f168-4d0a-a57b-e4b139d2126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6e8f77-9936-4bbe-b801-93dde4cfa2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edcfd0c-31fc-44d5-913d-100428f288dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b21a5ff-44d5-4bef-ac83-317895cad863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d8e4d-23ee-4785-8036-fa09d28e8abb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89072351-1600-4db9-b3d1-6d59dfaaabd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559c54c0-dc83-425f-8bb6-735d16611be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397a01f9-a967-4ed4-829b-ae810b3af039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8e7bc0-3e66-4eb6-b795-836f7cdea30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e470eb40-2fbe-42ad-88d8-423afff63712",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5f30b5-2a1d-4c15-98e8-a84164ba4dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018b4366-426d-4a78-ae23-8100a015d299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c679ce-5970-46a4-a538-8a1bc97d540e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f9cd3e-a790-40bf-97fb-130befb0e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fdf89c-c34a-456a-8c16-f9777204bf4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21af1fe8-ce2d-42a3-abf7-383f71b57f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb23acdd-f0aa-46d9-94c8-ff934d11e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570dd01c-21bb-4788-b4ff-ac40f63a1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cdc649-7321-488f-aff5-f8d59e1afc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f84aa8-705d-4c0b-8f8c-27dee5bda7bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551cd1f-0923-4531-a3d2-5ac163b44d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b21be3-fb76-4236-bed2-0c03f6da9e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19374fb-2ede-4e46-bba3-326ecdd0ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b729a423-2fc9-49bf-97ba-a0b98c5bae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254679ca-25bb-4656-8c60-b09ffd07c5d7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a76105-d93c-49b0-be44-743f720dde16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e2ea17-e093-4021-b949-9fdac1062387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4624ac7b-fc21-4e8f-9710-e2b498336505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b14c8ed-2675-4751-8cbc-949bf453a9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b88520-65c9-4b94-8758-08d5c0a52497",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b238cf9-6b8e-4cbb-85fc-6a6066aadc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6a1eb4-69e0-46bf-9534-84eb3ba48d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9700eec4-b246-4c79-8772-6b142c5c8e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f296b99-7264-4738-a6cc-24a8469dfe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f51b619-4f39-4155-9488-75531f2fb29b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c86f71-550f-4e02-b5d7-9fd7f25c5957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f4e4d9-dcff-4064-8df3-d44bf8cbb3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7649c6b-c7cb-4b3e-9287-9b9f301ef244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cba6fe0-b8e1-4e35-b211-7b8333a7400f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66acd924-8653-42e2-b3da-2acf80751ccf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74605f78-1a14-4850-a4a6-f4b2be6842ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48281329-fa5a-4826-83c1-95f510a7f83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db88373-f373-4d0b-a3c8-4117b66f3f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4066657-4bc7-4aab-8afd-f0b2b64caa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574fdf64-c8aa-47e0-bf55-27bdac11df55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec37720f-a790-4982-96c6-d47afb292573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d04c35-f665-4c6e-b7e6-a75608cca4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002099d5-50bf-442f-8d00-6e1fff2f48e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "352d900a-e814-4900-8bca-0e4a8af60152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cf26c4-4847-4b8f-a16b-9af114a3f8c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6847e0e-c605-4a28-9f03-015cd4cc39be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87fe704-db46-4fa8-a15f-616ebfa3a7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e67432-5271-4497-b4d3-84b432e5effa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65fef0ff-8589-4916-95fd-337cf9fe6306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c48bfcf-1234-41c7-9f43-ccec924da231",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037a3823-1857-4b14-860c-c53249e2c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e926e0-9df3-4ea8-86b6-43e7047c4bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00121ac-2da6-4883-accd-d313f0720e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c83bcee-be36-4a6a-a008-91438683bcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce94919a-c8ef-495e-90cc-d442ee986812",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eda6501-69b7-41f3-90c1-c69ae42b106e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec5f41c-9234-47ff-961f-3578f53b2347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709caf72-8e04-451f-9e36-e687885ea65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c601c63d-cc36-4db1-b7f2-44ced5768256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c68d0b-1e82-4a5b-b1e5-f3d54d336b98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080dec61-e019-4e5d-ae92-e5bc23c5c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47abf5b8-456d-4865-9932-b9627081490b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1768c1d-7890-4ae1-9949-eece22987428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b328208-8944-4bc6-84dc-baba64842331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e66d731-a5b9-4305-bef3-a76e4622fed1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b83f8f-964f-46f4-b31a-8520f5dda0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb935fa-ab59-46f5-b3c0-e7cc1658b915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257db8d3-f0c3-4b6b-a5eb-87d9b0cb25ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d11949-e6b0-4149-8fdc-0aed6ec593a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5559a7e3-6560-499a-b26c-da4be13a4dc6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a04578e-a5f3-40a2-9067-925228bab87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20277868-0a0a-4cd0-9bf0-3e9de867ea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ad6b49-5838-4b68-82b5-7d36d36e8c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4498a984-1af7-4a32-bfe5-42d3ddf979f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1261ba85-a4a7-4b81-b2a1-c49410e1742e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f94377-7edc-42a9-bf92-f55b578553a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f12cd6e-612a-426b-8d24-d11fe071b67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15948a26-89a7-44de-a677-2e8dcb17475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd5a5fe-b3b9-456a-a04c-5762c4a9c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350a1fd2-8690-4f24-b37a-0e19ce9a84c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301370ca-53a1-4159-9859-750855f33cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750414f3-f3b8-41e7-b6b6-fe797eafa37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83431273-7bad-49c9-b66f-12221eb5cd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab77e022-6a95-446a-8e88-fe10e2cc4f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdeafe1-02ee-4c44-bb7e-d23e1fee3b1e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b967ea10-2c90-4669-8501-865e992b3c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaf297e-385a-415d-8a5a-3128a068c58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd0832-ed43-485f-8f70-a89c128709e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e796439-6c2c-45b3-a53f-0a78431a1296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea236d5-7ea9-4f44-8a7e-bc79fd393d22",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a670e9c9-3e5b-45a6-b238-a355cd048b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bce179-043a-48d5-99e9-b4067466b5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf06a776-775c-4f8b-9b5a-99ffc0f287a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b763419a-d0e5-48c8-afc9-090b8f88a0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae8ca6-191a-4c4b-bf56-c2343414131c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38830c73-c005-4a72-bd57-68e5a3664e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c992d9d0-d3e1-445c-952f-f38003e74bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d69344a-09ce-4cae-9ff3-b45fcbe8db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8712813f-a0a8-4900-835c-a7805d28e215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf8f895-ec17-4d9b-9431-b88ac35463b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9df5b10-426c-4719-a526-5fce7d474991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6421b12c-1622-4fcc-a051-b57a140d92c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232c0811-affc-4e00-a962-18d2f5d14bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54718dbb-431d-4932-a76d-320ccfc7a2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15801c3-db7e-4c93-b72b-072d79a4266c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba279a2-eefb-49d4-a04f-8a7be1acf3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c3b71f-c255-4e8c-b9c9-e6c26cd86708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ff0e3-8b60-4ea5-9416-ea9d55cd020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa1d66f-2929-4efd-8e5b-319ff559c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c222120c-540e-49d2-bbad-a79190a3f097",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b96d5ad-4f97-4fbc-a4ad-34963da262cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee4120b-a525-4912-b51c-6fe68c3ef0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b133e83-cd51-4131-a859-15b5e523d2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ac5603-b8fd-41a9-b993-09dae4db714a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb2f56-c688-4bea-99c6-1966145f6459",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1b6a0-0cb2-4664-96ef-365a01f8f533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a067583-46de-4fb3-82a3-3a37efe30181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0a70c-f0e5-4924-a4a5-62ac280c6cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae018e9-d83a-438b-ac0a-da874f1cbd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7082cf-c2b5-4788-b613-4961928f631e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c41dea-840c-4744-862e-607f916ae538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba7074a-4e15-4a49-8d76-03022b2aafba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf7a2f-8c9a-4843-b619-790723c3dc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6060ed45-bd3d-4cc1-944a-222b8e623ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f546c04-f1e0-426b-a263-960b6ad40847",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f4e08d-3d18-48f6-9bd2-922790647a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf43e46-6180-44b8-873e-61432a221ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d2d15b-2930-4922-8a0d-28f0b773b9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09a51bb-d2f9-4ef9-a99d-46e30c8b30a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c8f39c-1978-497c-81e3-de7974c5c12c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886c20ae-6b82-4355-bdbf-5eb0084e5f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d758057f-05d2-4896-8b5e-8c436a0a67e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eabbbef-5f2b-4f7c-831c-4896927f6a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea3df67-020f-4928-88a1-94bf44b78ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e189455d-2ccb-42a1-9e0e-d264107146fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65aee2-f625-458e-b9ed-8a4f12525dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca32c7f-0893-45d5-a65e-b9ecdeb962b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1dc98-7509-4ac9-91b9-939eb22397b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8328409a-f6be-4282-83ab-2a14851483b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c687477-04a3-4603-b2d7-5916e2824733",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ceb785-3432-43f6-b81d-fbb982fbcd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497f3836-4d07-4df2-adcd-b86dd39a42d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05321ad4-61cb-42af-91e7-441f6963c32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce09a72-d180-4295-9766-d5f007e28fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd06a17-571c-4d4d-b2f7-3985f8b2afc2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff993de-cd0c-4be0-8c89-fac7f0f272b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1e6528-17ec-4854-90ac-f16c0bc73620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc52a41e-7be2-482d-8101-dc856d686c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72aaa90-0c1b-4486-bb30-0f4632d63fbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10d1bc0d-1579-41e7-ba83-d3a67867a7cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98212928-2394-49e5-97a7-c06912b45c27",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0646d6-041b-4060-948e-3e0836a3649a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e46198-470f-4387-9e28-f045ad57f002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073a5410-b194-4401-b70e-e47772455765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a997b83-f4c0-4a3a-8b81-6a5810ba830e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cead1ec-6bc7-42a2-8e0b-f208009c6a48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbade87f-ae58-4a8f-b22f-70dba52ce606"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8feee591-a379-4f67-9421-01deca14d3d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a236bcc-06fc-465d-8f44-8b4ec18fdbab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a13fdd4-9241-445c-a2f3-86e1d85946ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94827212-a101-4239-94e2-9c3a697f6dde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde34ff1-d7fb-4a3e-b73e-b86f40bb5dcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8983cc21-5f55-477f-8970-aeead833474d"
            }
          }
        ]
      },
      {
        "id": "3070659f-2fd4-43df-8821-de3d0fb883b5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b15f263-472e-491b-b3c6-0b0d5144a83b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16136648-e26c-490c-af76-27fb5984b78b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b1a4287-97d9-4e1b-b3b7-187eff2050aa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd212f2-89d7-4fbd-9a16-2830e3c10756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe9649-1837-45d0-b690-f8041303ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69edf8b4-1007-4864-adae-55d21a662e5a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ad6cf-c1eb-40a9-9aa4-f301b38ec035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64084019-636b-438a-9634-f0b53753267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f51ba-b58d-4a01-83be-d1fcba46e08f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b831f59-71d0-4c3c-9517-e6f15bf6fb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d4b39f-2f41-4e13-b221-903fbd27700a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b0858-a9f9-4174-83b1-b9f3858ccee3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e2615-761e-497a-acc7-70bf1674b0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480682c4-b4dc-47c9-9070-d5220998196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e22b5f5-b8ef-4528-bd5a-c3d58b72fb51",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46f7fd9-b66e-45a3-9a5b-71b4e6eefcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7ba809-2114-4de8-85df-a64af29c1e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171e7de0-4b2e-44fd-b58a-1bb24c16450c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dae363f-0032-4f27-b2f7-32b45f4a81f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bcc09b-b949-47ed-bf7a-2a467ed24e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aa5e89-38e6-4297-8e23-41f5475a6902",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7628d6-9f99-4211-8bde-9e27981f0b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12885ecd-f72c-4ca4-be72-3e88ff6e7bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8d760f-c989-48a6-b37b-41a9f29fa4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e82909-ef18-44d2-9eb2-04a740cc944a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89b0e40-1379-4dfd-b009-4d3c793a1ec6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3607552-5c20-48f1-a9c4-786bed61bec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54ef4e0-5b34-4003-9d43-bb3e22a3743c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724d4650-539e-462e-8e76-abfdaecdaf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d278e11-d3e9-4659-b4e3-e0b47ff7d8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162d4b3a-c8ea-400e-b163-0e8d6d06e0a4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575bb550-89e0-4cfd-bf69-adf36913bd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c9743b-3458-4e89-aef9-3934be47c33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabf11b0-0f1e-4034-b228-be5406e6a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2351c76-c02f-4e36-aed0-fbb89a7201a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e5942a-e792-4028-8a2c-6f55fde05a48",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df44f9b-d77d-4128-a51b-0dacb617b0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3dec6c-9ae0-44f4-ad2d-53bf904c73ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60705c3e-600e-467c-acdc-4babc89be0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0276e48-441c-4d54-b057-f16d2657d78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dac5bc-adc4-418a-9cb3-d42997edb864",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa27f72-5431-42e6-9496-318d9ec4bfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f953e72a-65ac-4cd1-be4d-b106305da423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb86fa63-64ad-4509-8a86-8556691a14e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ee721d-3b09-40d8-ae96-c79be68e6d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02424d3-d0e3-41f8-9598-4ae103c390c2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5e7c4d-ff51-449f-8673-7f79897421b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c43afe-ece6-42cd-b059-67809d80469b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90ecc09-a4f0-46d1-a680-50fbc39cd091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70cad56-e040-434a-a0a8-256d09d18d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc489c2c-5572-42b5-b6bf-65072c99476e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91d231b-4b32-44d6-84cb-e6282b319389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8235fa19-f79d-4c3e-b96b-b885c09e9eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be47465f-a349-4acc-a64d-e0eeaa8200e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a381fe-b067-49db-a0dc-96cce38bcf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf19c8-d438-4af7-956d-8da634f27b00",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577223df-a454-410e-a67c-12637e3fe87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e4e06e-e6c1-4ebc-9c31-ddd9bc1c6339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edba1206-e3af-4e17-94ad-f8beabc72685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16477cd8-e059-4ff7-8aba-eb79d6a0ee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ff0450-af77-42f3-bf10-e162ae80550f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e81df90-d963-470b-a8ca-76cd7c515606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b150447f-e251-4752-8e6a-e8bd26823002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bc0679-2cd9-4ce9-888d-a70679e7d5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514b7ff8-82a0-4f9c-914d-791181172227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d6b3a0-7381-4785-b205-a5c3354b99c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc02692-2e95-48b3-b6a0-0dc0f636800b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6170792a-f88b-4fc0-9ddc-0d0f4661bf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43f975a-fa28-40cb-b696-123b5509dc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c2759b-db01-459c-b71f-62784b79581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a7252-f028-4c42-b596-9e622a8ba792",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9ca2cf-372a-4a43-964e-6c688c760a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628b1350-cb35-436d-86b4-bd3e701646a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19593bbe-1dfb-49e7-b708-40cc639194f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a665cb-21b4-4f61-99fe-330345d2b2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e29ed1-1376-4009-93bd-d4034575bcb7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ad4d40-d255-4160-a53c-9a2e763431ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a5b16b-10e3-4168-b072-b8b631d4d977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2d9263-0dc1-441b-8f7f-50bb87ecb366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bbc1b3-d144-4617-9b37-f0d49ce57c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3ccff5-f345-4420-81d9-fc4a942f26b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef931ba-a978-4b49-ac61-3da0a487932e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5a477f-a6cf-48c3-a43b-6562b7b3fe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758ad288-a433-48a9-8597-a8532fce4221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa799f0-4e7e-492d-ad8b-a9782658c0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa74a244-849a-4a42-8cc9-1c28d510f2dc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4614ce-8b60-4c7e-aa6f-d3854e020fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f31f49-11cb-47d1-b81c-ccb96b14acae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40690982-300e-4bb7-ade8-4936ab06eb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4874461b-2964-420f-8b73-980c491c42b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e8138a-be5c-47ed-9d85-a837d2f90117",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b4ff1c-8a52-4f6f-881a-a44b98dc5f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21faf3d-2c63-443d-b027-a649105bece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efc03de-5739-4b00-a987-6f73cb335c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f8f7dc-da57-46d0-88ee-e2af76399aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7970f975-4dd3-4ed6-a15c-88bf76dd65b5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d153f9-046a-4fcb-a66e-5e776f10c842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50519d31-b47f-4a6f-af1d-130079c2b2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1495ce71-3be5-412d-9760-10a53efaa1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4f878f-9733-4a23-81ba-0141223fcb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccab599a-3dee-4a56-a7a7-b17e40cd9b70",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726b6fe4-c3dc-4e69-8055-ce58f9e24422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2754ffcb-e4a2-4f82-b78e-0a3a391caec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431ece5-9b78-492f-b461-5e23856f56b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809788ab-ae7c-4494-9bb8-bfb04a72aa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62d7cce-cc47-47b1-8168-b3118bf40cdc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d24fa7-1ce8-4ab7-94b7-79247849e6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618f73aa-706f-41a0-87fb-efb6988a544f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981eec71-8473-4d9d-a86f-9aaa582e8a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e817df5f-78ce-4ac9-bac2-e306e1285211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd826dc-d1ac-4877-a883-290637a0630a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42e87db-54fd-4bc1-86fe-165248a49158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b979dd0d-59ae-40ff-8206-4c57e9516278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e41377-5fca-457e-877f-b5f7f141ec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4006714a-6f60-42b3-a683-842a730d47b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712075ab-ad48-4968-952a-aa864039cc42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98adaa5b-aeb7-410b-968f-2b6baf1ae648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d6d095-cb0b-42ba-8d80-1deaf39cec9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ed9080-1ff6-4bde-b774-364be60691cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc078a9-59ed-4f8c-bcf9-0a7443cc8c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdce7bd4-5ece-4a04-aa86-74710bfe89cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ec6964-43bb-4ea1-9f73-87dd4997c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba98cd0e-fd31-4873-a93a-6c6cc895616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f4d7c-6fee-4f6e-af1e-f33c4dfe92bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f740d0ec-e10b-49ed-a8e9-18777acd59ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082b8788-26b4-4076-9578-359274cde23b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6315271f-3eba-4620-9087-f6d2c7a3fee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5089a0ec-9d12-478f-b384-41cbdabe5b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f07142f-6968-4ccf-a6b3-2e85ee2f7852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d64cb5-a5f1-4f8b-aeca-af0a6f53bf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da95cc1d-7813-4bc1-82b6-5008e97fb8df",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5932d3-9f30-485b-b059-34e41a45eee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba729cb9-0472-4b88-8c57-14905a20bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42064ed1-4749-465d-aca1-0da094419a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f62d3c-7698-4c30-83c3-04a4c6644cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0390d7-4233-45fe-b5e8-3f0fa965df4a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c600b-95de-4086-9e8f-6185b21aba67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f15e98-1982-4e28-8595-9b4770293e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444f216b-4440-48a7-8df9-ecb0f2bbfe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5b3493-04f5-48e3-b615-81982b14de58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cdf220-b76d-4607-843d-e762509abe3e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de7957f-b93b-4f0a-8d3f-60d821d6b488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7159f7e-5a6b-46c7-b5cc-2712420e886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525901d4-a9d5-4a52-81b8-007ceb31dc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056b2f2a-8e0a-421a-a7d7-d9916e45ef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9377fcb1-2871-4ede-9a11-009c347b2837",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4977119-f710-4030-9010-6c4c37504d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fbeee7c-7e74-4ac7-ad41-4f4e81cc3d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce23c42c-82c1-499d-956b-9c144920c25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a510a72e-4b24-46d0-9d56-205884c78494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ef148-a6b2-4038-a3c4-3103c65c81fa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e759a67-a37b-4de3-934f-2f977b8af99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f8a475-5a2a-4820-8186-3848e514ae30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5249de3f-86ca-44e5-9eef-8a9b63c245de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111a3cd7-7517-4cb5-b02e-11dba6fa4ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a261a866-051a-4ac5-a526-3d5c0959833a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0bfa7d-165d-466a-8774-8e6db059a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2372fcc-ed49-4828-8b46-1cddadfe0e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43303cbb-0fa9-4771-bd31-dababe154265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888eedad-da96-48c6-bc54-d8c18b92bdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c5ba5f-4799-4a42-b9aa-5b271ddf98f7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe1da92-3e95-450d-8fc9-871b71c1c546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d965b5-b7f5-457f-a99b-bbb307136552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4099d99b-67b3-44a1-bfe9-f45b305c4ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3f1d61-7da4-4f23-adb0-34ab998c5d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b273b5-3815-4ab8-b2b5-e3cb5aeceaaf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef788b-5830-4907-bd8f-0d2c84fd8f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2750f05d-1612-4d72-906d-b77319f8e000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9147fcc7-aa43-4faa-9ec9-6e11dcdf4e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533657e2-f3bb-4eed-80e8-eb7871bcf378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a2a69-4230-4517-b5de-33a2de89dd6e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa80c71-ae87-46ee-9c36-4ec992d60f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26b24f0-8ac4-4686-95dd-b86fa1534add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df55c384-6699-4343-89fb-4e28dd716449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf7ad1e-9437-4ffb-9d3a-23c982d2ac76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b7bf3-7f93-4f20-bf5c-e6277db4f60b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd00a16-7236-47ba-91bc-58d68bd29012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8647ae1f-4f78-476a-b605-532b322ec449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13899dbb-2489-4541-8614-74238e6ca498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d518aa-4139-4665-89d7-12607c983157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f0a457-7b97-4f2b-8e7f-9393cbb85fdb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c652d11-3924-4d8b-952b-34ab28891140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a8031c-8620-4fc1-a452-445716567556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b541702d-fe02-412e-bd96-ffdb58734f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9738dff3-0852-4432-a67c-3bf24065614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c625e088-bc4d-431f-853e-f597b4943963",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd82d6c8-0126-4f92-b7c2-46d61dddbe03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99c212a-8c59-4151-87c2-0244f48ec8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd970c6-cec3-4d75-832b-5909e7b63284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28027a68-25da-436c-aa9b-eefa057a942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65717f8-cff2-49cd-bc52-126b04ded3dc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8527495e-ee4f-42d9-a1a7-597cc55e5d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf812b86-25ed-4b0f-a9ba-a1e394095306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa46cbaf-bda6-4a3c-a129-4ee9425c71d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e72a6b-0f7e-402f-8f4f-b99766e5663b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cf9e93-fa65-4473-9865-9e8adf465ae1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1519b904-89e8-41c4-afb9-c6e767a22a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea285be-3bc3-476d-9102-62719f535f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dbee5f-872b-42a9-b8a1-ae4a3366b4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b699d2ad-f5fa-4b95-8ec9-02ef8d5921d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a78b89f-41f8-4ac0-8baf-687be11f4e7b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6537b04f-d52c-4be9-af76-28b794d66070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e10cf9-2ef3-47a8-a489-0e5279d24e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26192841-84ec-4551-bbce-df5df2f678b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcd5cbb-0160-49eb-8a94-9e44e00ae669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e0a07-3e68-4681-8a21-6c72e163151c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655575cc-00f6-48c2-bbe8-2cd0998f2e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21618ed0-55a6-48b1-80bc-62a9f3d93b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064bd733-4493-4634-82d7-fe7096a7fe06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be057d3-44d2-4cab-a75c-f3378c1c51c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dffd66-11f1-4322-af52-5c7895911936",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82144a8-690c-47f4-88bb-6b61ed61e6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e971ad-1c74-4fa6-9663-4b53eb5e5a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd8e82f-e07a-4c47-99bb-45357fad8b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54787ea-ee93-42c2-8cc8-0b0925cee74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c72865-c6e8-4542-a9ae-1fef0dc85649",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7805912c-4a6a-47e4-aa68-b29fe7076626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235ded5f-cbd1-4bd2-b0d9-929c1155fa1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe4ed41-5b50-4332-94e5-a7e906634032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50885772-00cf-45b0-9830-f7b1a00a272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcd719b-5cf0-485e-9f22-bce9e4f01077",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87259570-b82d-4383-9f56-c5be1ac1859f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96374bb5-aaa2-48c8-9cac-5e6908226e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0893959a-63e5-4692-9b00-f24ab7e4dc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa41dfcf-f415-439b-8278-e51db0d3a818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bc8f02-1548-4270-957d-fb43089227e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f765f2d-b774-4864-85a3-5dc54c68f106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb021a29-daf7-44f5-9f0c-f924d4e7b5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74649117-4c19-43f6-8f01-a6dcff04192d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0db137a-3067-4d0e-a646-08894fa9d54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bb520c-201d-4a63-a930-fbcb0fb75314",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0b9ad-0ff0-4154-ba88-d4e013786b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335d0683-d15b-4dc1-8e33-a66c1b65efb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374c4c3e-af0e-43e7-8c5a-b3d6db06724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28428e8b-0d2c-41ad-a47b-c9d3c6f20c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68867439-6cd8-4c2d-9d5a-1ba4a334ac16",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81ae1a-7c51-401c-b885-569ce1c84055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c12d7c-a6a8-4dd0-aedf-6b66dab85f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0945d52-ff11-4000-8a2a-39474bac660c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f5a6ab-61f1-46ac-8b5e-8c94b3c243da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eac5de-af60-4f43-9a92-a60fc375c19e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58db655d-a7ed-4cde-817c-2fef6af9dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec851ec6-58fe-4bdb-b8fa-8df89a35a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1579ab8-7668-4730-a1ca-965799bedcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ec1ce5-0b01-40ca-9159-477d6551cc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57c7e3b-646b-4483-b7ba-a924d5d55842",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cb4658-7264-495a-8c5d-12c1884353c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530dc6a2-4bb6-46d3-b758-1667adc1cd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f40af75-773b-488d-8390-63d95fd039ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8114fe51-75f6-4b12-9100-a72146c895f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d18f5f-c145-46c3-956a-50ae39e6f44e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88848807-fdaa-4ee5-90bf-125381572e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc89be60-b6af-41a7-b00f-dc83ff80202d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e0ba86-1a37-446d-801a-78e2636923f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b74332f-447e-4c87-8440-aea9de8318c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504cfa2a-d009-4823-a6c1-abd3ef3808e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec94ed95-cc25-4b5b-b410-afd446cdc02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6e51a7-ec42-4dbe-93af-ad241486dd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb8e81-80df-44df-a307-e387721deb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf7a305-db22-4ea0-b4bd-b7c7d2d60dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaac318-b697-4c92-8633-2f2653c237d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00973dc-fea9-4418-8d9a-fee40ec56bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da0091-31ae-48c9-a1fb-4802f978488f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947bf19c-b95d-4a89-8891-bdaae365eb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0fa205-7d64-4869-bb22-a6b49796aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00822f08-49d9-4e48-aae9-299ea27dd686",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c036fafd-6693-41c3-baff-8dc618cd44f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc3d615-5aca-4eec-a8bf-22e1b4d72e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb4289-773f-4f9b-9664-dcaf7d940f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2acc3e-90e5-4286-99e7-69135bc3e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edae18a3-ad82-45fa-a13b-e3f2984800fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af9a6e2-3f14-4d39-8607-596db7431778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07dfc6a-9107-4a14-af90-68427ffb3821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8262eeb-e171-48b6-9a95-7e4f16fdaf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507cde22-2660-433e-803c-b35502feba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c821aecb-523d-4b63-941b-8e3550fb3197",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c746719a-59e8-4b3b-b683-e843e4e11ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f578e2ba-959a-4424-9bcf-c3ab117f25e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df54de84-8f9f-46a5-9a63-e8b77ec27986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34042dc7-19aa-4510-80e8-7dc1ac2f7b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b2971c-beb4-4168-9875-15952a076ebe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec0b1f9-8c67-45eb-adc2-e0276366fad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079f2331-5977-4f68-9e69-7d62b998973e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0d1fa-ff81-4f33-8f1b-444730556581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288e3a34-6495-4786-8f60-4724b38f1068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4262f592-0b64-4943-a760-9f5aa191c52b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31087e5-b63b-4fb9-8323-7ce9cba9c41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a2608b-f370-40b3-94f0-2278ed7488ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b149ba0-a45f-4e71-9e74-c7af8ce018c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34640f6d-9bb5-46c0-9875-e2f4f5b9aa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521904de-0a24-4061-8eff-03e78991c90e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5be852f-0d20-4b09-884f-8e2f29ca08a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55088863-818e-4327-b910-ee16db5c01c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec40709-7cd9-4736-8f16-f876606f1ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36be3f55-8d68-4cd3-b6f2-b74039a65ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b91fcab-99e5-4637-bc05-9876b7de7501",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57847099-69b9-4fa8-afcf-1998a261df25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0386b89-af33-4e14-80d3-8f0e909c7b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615adb76-0fc7-4f68-bcb0-8b95486813b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fb6767-809f-4443-b2ec-8e9057e7472c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d079b84a-b9ea-435c-8c5d-c4f1693becf9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7b462-3ca8-47ea-ab1b-0865ce29b898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae64cc4-fe65-45fc-b8a0-b10f0e73bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26eeb97-2aff-4398-af30-e37659a60ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ce62bd-c478-47fd-8566-e31adf2a0f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5e3a23-1e2a-42b8-8796-72b0e353d1fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3610c438-3838-4824-a015-64abe0e3b2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd51897d-f127-4bba-a28a-9faf975fd7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca32f4b0-5729-47fb-9e76-e4a3982b332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45b9eaa-3293-4731-928f-c546d27cfc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d40399-114c-4e10-b555-fdc899ba430f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692d051b-4e35-40fa-869f-1e690d4a01e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00142edd-062f-424e-ba26-f539fe728d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8024dc2-90a6-495c-bf4f-328b029c0e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97d1ab0-64d2-40b3-8ffe-b1ec0f7fa3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d25bb9-fbc1-46ae-a63e-d4077cd73f19",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f95878-445a-4b46-b23d-8b0d7d34f215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e728cc0-47aa-4546-854b-8181eb1be4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77345550-bc7e-4a99-b6b3-c0e56c67bc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7657a8c-38ae-4f50-9373-19226a2f6840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c763b39f-3ec9-4eb9-8976-b9f64532111f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f2388-93a1-4270-926d-076795fef613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86da7b03-7391-4e2a-99fb-7c02dce127a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419d660-d569-4ef3-b534-0ee270b4c1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1425e4-4e4c-4833-87e5-bc9d19e16268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a502469-1588-48a4-96ef-2baa70ef474e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97261e5-7fc7-4b14-b752-9bcd137c37d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e679f3-3503-4a96-a32a-80495a0907a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f8bb2-03e2-4d19-a638-c4a3727f3146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e735ba-2890-4bb2-b16f-664a65c78309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b4fe6a-026b-4543-8169-09ddd1e8c68a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e652486-babb-4f3c-ad4b-3c1c8dfbab9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f18144-6da8-4ff3-84a4-3c304a5ad2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2a396-e7fc-4b49-bdb4-3af9ed6278b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25fc7e6-3e56-4e46-a655-1e2f10cec750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e6482c-370b-4246-adcf-f9581e07149e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96273d7-4815-4ffd-b4f6-e46b56c3ccec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d0aa75-e3c3-48c9-9b99-6817c684e370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9d553-3996-419a-86e4-cb7a489ee34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5308427e-b976-4611-820d-ca8a4fe7fbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e31014-4216-429c-b63e-83c08864f403",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f20d73-fdfe-45ed-a40a-46d617ceb5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51abc5fe-9acf-4803-8f9e-1f37ca35c4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a8d07-ac32-41b8-bf01-e94b43352471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa412f9c-57ee-4af4-a2fc-9d050a8505b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15421306-2080-4044-9039-702c30fc7a95",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984ced2-01ba-4920-8f96-de0370be394c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05bd32b1-296c-4cbb-8cfc-0577c2d1c779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b529fd-ae77-4462-b4fc-89f84b4493fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb80f1f-ee20-49c4-885d-0389cf4e7480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31903526-470b-4d7d-b781-2843fcac6f3f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efeabf0-6700-4f41-9a90-23d5339c3b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a57d50-c3c4-48e0-b03f-1f13d5b67463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad86c732-092b-4c43-8b92-af3a4235352c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92af8cb6-46b7-4921-9d89-0075531e79ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57019ffa-8633-49d4-a595-ca668440c0e6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd428099-920b-494c-9229-b128a9f12529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d966a8-158c-4702-bfa6-41ff1b528002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7fd079-090d-479b-881a-1e266e4e5be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14e4f63-eb61-4021-aaa3-f1159b689edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271d230c-8303-4ab4-83be-212c050dea67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935fbbc1-4f1a-43b4-b8b3-e29e7ddccef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2322355b-58f8-4747-8587-508a8cb5fa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be25fc1c-6649-4c67-a324-a7f78b4c06bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a13a439-be73-4a1e-a052-a68ebda91f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128c25d2-314f-4a61-863c-254bebd9fbf1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425a82a8-9866-4425-b9a5-1a275fc7caae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "894957fa-ce76-4535-a66b-9834f6792441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d5e38-4cad-4e18-9d4e-d2cf9c8e5729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c28fc0-d935-4194-999a-857694d06991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dc27fd-fe8d-415a-9bae-ee0b9d555ff8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f751fd0-a922-4234-b615-810eb85bdee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1d0aae-d245-4997-bd6e-3f90cd22dc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272b5abf-bed4-4cae-831b-6155ab198c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c70bae-b597-4abf-87c9-5151ba8b30c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857e3c0a-3a5c-4f59-95c5-631f050c9a38",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273bee40-50de-49ce-a19c-c98e00bab3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca4a3ff-b1fe-4399-bdd4-7d3a1a011943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f2c6cb-2561-451f-978b-7de218cfdba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbce876-fd47-46cf-aeab-8dff1e3421fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820475f1-98e3-4ddf-a219-c02326719bd0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d667c94-a132-45e7-95ff-04fb12c3e877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38ebd94-1be2-4c41-afa2-6c71289fa28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d226526-5fea-4713-8f1f-73e79e5a5d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54023726-385b-4fbf-8598-22d2f40dc90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123b499f-9229-4ffc-8cc1-3ccec36faad7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f6a4b0-602e-4aaa-aa80-1b91ea7102ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2995c395-705b-4303-a671-419ab1343a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4515448e-fcf5-4e2a-b842-5a7c53fc49a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933f6c8e-1f7a-4785-881a-02129e9ce90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e370174-52cb-413a-91f2-919f807274c7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71c893-8d81-4499-a56c-8f9d8dd28b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be7f6ff-4cc7-4547-b4ca-2e39476dfdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165a1855-8a31-4294-9cb9-e3f1e8fe5a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ea9e87-7ff2-488c-9c49-082d7c9d3392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcd8be8-f69f-4f39-a25d-4c0037ce3dcf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5565cdf-24cc-45d2-b921-49c84449d89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3beac365-ca30-46b4-8f25-e74c1768f4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836b2c2d-c9b5-4b7f-8af7-21318487f90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1025d517-3c8e-4a1b-8cd5-73ad4dd9905e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fc1d3a-449e-4df7-bb8c-ecb7e19ea5b9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48508b73-7232-40c0-816a-4d36f1734748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ca8597-d1e8-4c7a-8452-0e2023800a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a80f2-0646-4530-85f1-6d6d0dbd5726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469f4970-c0b7-4d1f-8b32-21c99668dd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a35a8f-6d61-49ab-8d90-813df2854840",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93082012-1443-4b29-be74-9a11f09e5569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5028fdf5-5863-465b-b161-3d9108d07cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bca721-801e-4cbb-8601-2ce6c1af46ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfab638-9989-41d4-ac7e-2da35ffec999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa0f763-81db-431b-83e2-8eca690473b2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e17da6-72d7-4967-a7e2-52946ed2bd02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d552306-5055-44e2-871d-e970f3945dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7786c610-cb7e-46a8-8f91-0a0039e404d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0a50ea-1322-4c7e-b8e6-c1ec805a881b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62061466-ea60-4e9f-8778-cd8c54ad573c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa067b9-7ba6-4fb8-a7f8-3ca8d724da06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0f6a7a-88bf-4a05-a08d-005eb64569c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa6fd1-3c53-43f6-bb30-ab2fe2b6a9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45622169-3d6a-46d6-bcbc-44b6d643f7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311c39d8-e369-4427-aed2-271680b238ac",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37db4a75-0329-4644-a57b-26c44141ca84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3290771-b524-4a94-a0ab-c9398e858fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0e02c-0d3c-4d59-b110-d1c9d0fd382a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663a5d63-958c-4feb-acf6-d7a20e5cc964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be59e6-c83b-4fdf-8589-6aa2a33fa228",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc1b75-b59a-479e-bae7-2e83d94127e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe2fae2-f726-4871-9786-8d6c34492726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7016b9-eb41-48b6-a21c-e75374bb7e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffa7f14-54cc-4878-8a7e-c90dffd3607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab386418-4d60-429d-b35b-964b08c64fa1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e436b2fa-bfa7-42c9-9ae2-f6cbc4bc7855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb305f0f-8986-4a0f-ab63-6cf219262db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf80d48-fdcd-4eef-8dec-8ff965ee708f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f5d09d-6934-4f34-8912-b1035314e40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795c1034-dca7-4848-af47-d57907120287",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052ab31a-0c72-477d-b334-a376925a17ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3c5cbb-5691-42c5-aa7b-af1738982b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed2a2a-642d-4504-b65d-4ba8a780c982",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813de1e7-05e8-4740-85a0-3d084e0ad3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfffeedf-e88d-4cfc-8b61-da309db082b4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc202ace-8f97-4f9c-a9df-1365fc8cefe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2069637-e04c-4350-91fc-2811e25bd745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20423e5-bf2d-4e67-9c36-e0defcae7ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c80d43c-3801-46e0-a3e3-b45cbc9fc718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1556e289-c3a9-482f-97e0-eed300b870e9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d681c7-0dbd-4f27-bdae-90e70584b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b7313f-c4a0-4e9c-81cb-4de1cdd6a3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7e9d70-ceaa-43c8-830b-8c2c9ebb3268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b050a093-afd3-4c86-9219-01dd888353e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a0fd25-c3f8-4d1a-9851-8799ad0cb1d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c12296f-393b-4b42-94f5-a98877d2e625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061819f3-cc06-470e-ab21-e12d1ac55d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b30be73-6f76-444f-9e50-e835e01cd6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e5dd7c-717c-4c97-be9a-aaa1ae35ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903baa0a-bf3b-4327-8c74-ed916153acd8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679b4155-361b-4d7e-a4b4-5955fcf7deeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7818ce67-85c0-4331-bf07-c9f9988ec958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef44078-b92c-490e-b65f-6cb99ff5276a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8a7e84-fda5-4e65-979a-ae338692ab33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b876598d-cb12-46a0-860c-f950903b8311",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df5742-1918-456e-bce0-00ffb0c09119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f535d8-2bf9-4cb7-907e-c99a30c9cd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85565767-9a81-43b2-844b-582ebbb7e097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a731aa4c-09ea-4c49-8862-873cfbe90a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dca5b3-0503-451d-8b3e-0bc341f9e807",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeec24b-75c0-4546-820e-eab023cc598e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e8b292-2603-4541-8f8d-c35fe9908d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96271267-959b-4c88-8392-c67fd64b43df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b9282b-f967-4114-8bd2-f4aa94982f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3265c5-3370-48b0-82ca-50a8702a146b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f141684-524e-4d8c-867b-f391a82979ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a422c527-0ab7-444a-9915-d3eeb905e474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464d534a-10d3-4b72-8fd0-66ceb850283e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad98d43-f492-477a-ab83-6bfb4ae4191e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f565098f-0d6e-428d-b083-52aa4068c296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f4de1ab-e17b-4615-9154-20c6d3636b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2011158b-d26d-4e4d-887a-7e7483d0c285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cdb4334-24da-4b33-8586-bba51eac5bbe"
                    }
                  }
                ]
              },
              {
                "id": "0723ffde-f67a-4589-a9f1-f06b2fc24c78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdba4105-ec11-46d8-b104-5868c49f93e8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb3ef4-185d-414b-9bfe-3485d51120b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c8697d1-71f0-4440-a005-3548a4a74b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794219eb-7d68-4065-bf33-d26e20fadd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86102222-833b-4450-a309-aa3ced825a99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9022af23-88a3-47f5-a0d7-c7d7d8f16693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8547e6db-99d1-4887-a188-2136d8c94fe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b8ba3b-a4fe-4fde-9a93-4fc8801b7011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a13c872-5577-4389-8d39-40816a8f99fb"
                    }
                  }
                ]
              },
              {
                "id": "31078017-58dd-4577-bb9d-500c6034303e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a41d9c0a-15eb-474c-882f-9586a7ffe59e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce6ef1-4fd7-4d5e-a01c-32780303b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "43d0dec9-9736-436f-b18c-77cfc1fc7747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d75d30-305e-4446-8546-66db0f525f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df532128-a836-4f04-b0bb-5d2d08f57aed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e2de83fe-52d9-41cc-b5d0-8bc892e7ab00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e61b532-42be-49c8-b64b-182d1a6df6d4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10da312c-e10b-46a3-ba8f-0dc6ab956061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "802e0167-ecd5-4ec0-9f7a-369882d512c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "993a059c-6da7-4683-ad8c-fc7a311f5dc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aef312ca-3a53-438d-9bc1-7be540f162b6"
                    }
                  }
                ]
              },
              {
                "id": "dcf5f9c9-dc6e-42cb-8a5c-8c5a1f698c4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2fa2678-712c-4acb-9b60-8a2eaf88b1a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "930274ca-e83a-4158-8722-8a28ddb253a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9638f4ae-c8b7-49bb-9266-86d219df4214",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3e1f7c4-ac31-405f-9a93-3ca30e6d2608"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b389db91-9719-47cc-81da-ca1381a730e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ea03e17a-6c96-441b-8c77-a30c5a7c80ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3d1f342-1818-4b9a-ad58-086460c6731e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87a537c5-3ba8-464a-a5ce-558da8d4be50"
            }
          }
        ]
      },
      {
        "id": "ea377b37-e20d-4f48-8561-611e7e96115c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b42a143b-4a6f-46d0-a711-26236652d81f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78711a0c-eef3-4546-b41e-f660e9254208",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f66daf82-9e2c-4895-9d65-f1dc20fab04c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467f1457-1389-4572-9140-14cc0d01d94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c087d8c-0691-422a-9164-54180afb7a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc133b86-e218-4f1c-9677-7246488286a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d34498e-8716-4031-b1a2-51f50e95ec0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0130adbc-80d2-4209-84c8-3a3e68fb63cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6abf83b5-55fd-4c18-a310-44057a9e27a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "302e17f6-e82b-4306-a20a-2621a2d4d3d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f270df-c8ad-4867-b8bc-8424d93db99a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4073b85-d621-46c8-9218-358671b73415",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "de5a58d5-b680-4654-ba8a-542a3600bc42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "298cdced-94ac-4230-a744-bc37ffdd92e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0c057fc-387e-4444-97bc-f9639adaa1ec"
            }
          }
        ]
      },
      {
        "id": "3c67b759-3c5b-4396-9893-93522f78990c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ec43b3b2-35a0-4e59-a2c3-4485ed2477cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cff267af-c7e4-416b-b400-e05d1f53a301",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdc3e2bf-a5ae-4985-9c8f-2b1fc4a971a5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0abe104-ebdb-4acf-90b9-3727fcc6e69f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb2b3f9e-6fb1-415b-9bc4-59c854747cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4d474-1235-4586-9c81-f9781e3b5a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40f06a34-cd6d-4fb4-9f16-94221ce56643"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "938b7be4-b649-4ed0-9514-4a2a36feea2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b9f64ed-52f1-4320-87e8-e5a4576179e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f344fc-1263-4e05-b415-c2b88165bb47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccfc874d-f404-4f20-971b-51c42ca452da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b139ad2a-5fcd-41f9-bddf-44ae19822b26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "936a88f6-d5e1-4453-80c9-8f716e966fae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd75b5ab-f286-4421-9743-485629164fa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33ac586e-8354-427b-bd79-a2830b0bff53"
            }
          }
        ]
      },
      {
        "id": "b67aa9f3-2645-41e5-8c6e-9d550008181f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "539a834f-b19a-4ab3-8925-76fee386f148",
            "name": "Negative Testing",
            "item": [
              {
                "id": "638aff9a-cd36-4c28-9b82-ca36db95f7e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89451a27-577c-4573-b2d3-62ab3bc8c2d1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a960965-13a3-4bc9-a548-7fe9a18511b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d4fd96e-4282-411f-8f57-34e6bb55a88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524c4b26-4683-4be8-a612-fb7243ed0d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa251452-eac8-480b-b89c-19feecee1a8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51d58424-3214-4cf9-b5db-3b56b7a42733",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b390678-3ff8-4a1d-a8fb-a2eade7b800d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eed71e4-3d6a-4dad-8832-292c102f9bd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9525016-b13f-4626-803d-b232b7ffbba6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f0fc77-ef73-4026-8525-b89edc208522",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66de4d85-86b6-4735-8a1d-4039fd9aafc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b62355f-d12b-4b64-bccb-5a49c9979f38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb5a35e-ad90-4dd0-8859-934172dafa60"
            }
          }
        ]
      },
      {
        "id": "b7d88a9d-96d0-40b2-bf4b-6dccb668ec84",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94ab6019-a2ff-451e-b382-c655f9237a9a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3842f542-ba30-4732-8b7a-f40c8bafd522",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "122e122e-3f92-4dfa-932c-26cc82951f8a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b3f9187-2cfa-4581-9273-c32654392462",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c375ab-c7f6-4843-a07a-2ef03088a312",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.828070175438596,
      "responseMin": 2,
      "responseMax": 409,
      "responseSd": 27.227216481462207,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707093320152,
      "completed": 1707093330955
    },
    "executions": [
      {
        "id": "f3c9d36b-3637-405c-86af-c73f02ece61c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "74c05194-2bcd-4675-af31-43e3537e8c05",
          "httpRequestId": "e32fddfd-84a5-4d2f-b9f2-38f3c2e33580"
        },
        "item": {
          "id": "f3c9d36b-3637-405c-86af-c73f02ece61c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ce7184f4-5c53-4331-a517-12cc782b7daf",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "c3bd5716-6150-424c-9354-2b47892850a9",
        "cursor": {
          "ref": "11b126b4-b09d-4ea0-8287-fbab74a2672d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1dd864e5-2b3a-43fe-8da6-0fcd7b4fa3a0"
        },
        "item": {
          "id": "c3bd5716-6150-424c-9354-2b47892850a9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8c5982ee-d4a2-44bd-ae49-42973d00264c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "5817c08d-ab8f-4f15-ac94-1f04e8965ef0",
        "cursor": {
          "ref": "a207b431-32ad-44c5-af7b-a71fd8c5de95",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d6c473cc-0288-4720-87ad-0bedcc517948"
        },
        "item": {
          "id": "5817c08d-ab8f-4f15-ac94-1f04e8965ef0",
          "name": "did_json"
        },
        "response": {
          "id": "ad64e739-61a2-40f9-9b0e-3e7d1bdf682f",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c907f2-23a3-476e-854a-f092422e6a4c",
        "cursor": {
          "ref": "7a8b21dc-db19-4efb-9263-42d7277762b1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5434b10f-96b8-4ed4-82ed-090cc9cc7a0a"
        },
        "item": {
          "id": "19c907f2-23a3-476e-854a-f092422e6a4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "68fd8f6f-4a98-4065-a0a6-15dcb881f34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c907f2-23a3-476e-854a-f092422e6a4c",
        "cursor": {
          "ref": "7a8b21dc-db19-4efb-9263-42d7277762b1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5434b10f-96b8-4ed4-82ed-090cc9cc7a0a"
        },
        "item": {
          "id": "19c907f2-23a3-476e-854a-f092422e6a4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "68fd8f6f-4a98-4065-a0a6-15dcb881f34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e80e7f-76ff-4fa2-be42-6b58bcf2e4e1",
        "cursor": {
          "ref": "c44cce44-808e-4fcb-839f-a276aea8a315",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fe0df750-6ec5-4562-a847-885bbf8e7124"
        },
        "item": {
          "id": "90e80e7f-76ff-4fa2-be42-6b58bcf2e4e1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87eb2d76-784c-4190-9c10-61880a112c20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0708b6-3ecf-4019-995f-4a0388d86aa4",
        "cursor": {
          "ref": "8d0bd2d5-f2f6-4469-8b34-a63ad8eccf6b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b1c67098-ae2b-4ce4-9659-08fed3e68b85"
        },
        "item": {
          "id": "dd0708b6-3ecf-4019-995f-4a0388d86aa4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "db347769-88ae-4259-a0ad-97f7a508add0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6943db31-b0e3-49b5-ad84-b6b6b96505c5",
        "cursor": {
          "ref": "841b6d10-19df-4ade-ae70-12f9d95dcd4d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9b9f05aa-6057-4ad5-bb21-e79a163ae4e8"
        },
        "item": {
          "id": "6943db31-b0e3-49b5-ad84-b6b6b96505c5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7f9bb74f-424b-4204-b2ba-6276296bc99b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193533fc-91f7-4930-879f-45489338bbb2",
        "cursor": {
          "ref": "6d632734-351c-4d90-9920-da1a00da2a30",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d060e10d-2c61-4183-bd40-69e782d5c999"
        },
        "item": {
          "id": "193533fc-91f7-4930-879f-45489338bbb2",
          "name": "identifiers"
        },
        "response": {
          "id": "8972b457-609d-4643-b2d0-75026d3836e0",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9899d4-c05b-4520-8c07-575aafc52274",
        "cursor": {
          "ref": "5cd116e9-da66-425c-9c04-81a79774993c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b0f07eea-fcf9-4859-9169-3de35f6ba92d"
        },
        "item": {
          "id": "3a9899d4-c05b-4520-8c07-575aafc52274",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9469ef68-5a29-4344-b366-b59b2200edd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59789f0-8442-48c0-a9bd-8ed6df022894",
        "cursor": {
          "ref": "461098c8-8f96-4fbe-a9e8-56271fa1afd1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b3aae597-227f-471b-a9e0-076724c99358"
        },
        "item": {
          "id": "f59789f0-8442-48c0-a9bd-8ed6df022894",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1c007df5-fc09-4fc9-bd2a-832cf425380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e7a841-3862-4ca3-80a2-b2155b83b879",
        "cursor": {
          "ref": "0965889a-ab8a-4d70-bbd4-d10d21ccaf7e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4944013f-57f8-4196-8d4b-e83b46f413c3"
        },
        "item": {
          "id": "55e7a841-3862-4ca3-80a2-b2155b83b879",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b59a5472-37ab-4dd2-9400-63943784d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe53b077-8140-4a05-9ab5-6fb7629a47a2",
        "cursor": {
          "ref": "1d4bbdab-e828-45d2-8a0b-c7f1038f424e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1ba049a-318f-4097-bddf-827cbe74640b"
        },
        "item": {
          "id": "fe53b077-8140-4a05-9ab5-6fb7629a47a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "859d40a1-8c9d-47d0-9aa7-83580c7a92b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd2179d-6d2e-4633-b4cd-df7ad0aeb121",
        "cursor": {
          "ref": "5abeca75-2a4e-4d15-a14b-0d8acfe83f93",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d9ef12e4-6404-4bf9-9c9d-d822e2e5811d"
        },
        "item": {
          "id": "2bd2179d-6d2e-4633-b4cd-df7ad0aeb121",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b0775249-cebd-4ab6-9d1a-9c3f4d8d8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f984f6c2-4e7e-43a0-86f2-cd385eaeac08",
        "cursor": {
          "ref": "1c3aa28b-1fd3-432e-b5ee-a6dda7429b5c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "73f7e448-5d38-4bad-876f-d20378490fc6"
        },
        "item": {
          "id": "f984f6c2-4e7e-43a0-86f2-cd385eaeac08",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bd596334-bf37-4451-9805-04524830cfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a17240-fa91-4180-a0db-295c2a2ef39c",
        "cursor": {
          "ref": "4c834110-ddea-44d4-b7b4-c8d8537576f8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8456ddf7-3017-48a3-9a13-0ddc33836344"
        },
        "item": {
          "id": "b7a17240-fa91-4180-a0db-295c2a2ef39c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "133b7ef3-2d6e-4c8d-a97e-1e17484990ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c05da9-7ce6-4346-83be-df916e5def99",
        "cursor": {
          "ref": "3374b729-809d-4446-85e0-8d6e3747c0ad",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "24eaccb3-915a-48a8-a80b-f925fb10f38c"
        },
        "item": {
          "id": "f2c05da9-7ce6-4346-83be-df916e5def99",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55e5cf69-aab7-4964-b6d8-0b01eab1505e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7635c67-f7bc-459f-ba01-647a6fe36590",
        "cursor": {
          "ref": "1a7e0297-e968-480b-a914-6d96b385d510",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e3b72d0c-80ae-41f8-be1a-9b0d9e0b0db2"
        },
        "item": {
          "id": "e7635c67-f7bc-459f-ba01-647a6fe36590",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "403823ca-56bb-48b1-b3e9-4f355b3a6c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcce6118-feec-4115-b7d3-f48bad88302d",
        "cursor": {
          "ref": "6db07ea3-645d-4713-ad06-135223e71ede",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8117273b-4a68-487f-8b18-39e2eccaabcb"
        },
        "item": {
          "id": "fcce6118-feec-4115-b7d3-f48bad88302d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e382a9ec-afa5-4ac3-a722-a85f3c3e64f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c173f-55cb-4721-95e1-789e64e0798a",
        "cursor": {
          "ref": "850eeb67-7113-4369-8bcd-2ebede67cb76",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5593bc44-9092-4b24-a188-3e01054f1c42"
        },
        "item": {
          "id": "a28c173f-55cb-4721-95e1-789e64e0798a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "99ca9c56-14cb-4403-b410-39014ba99e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a1c2ca-5c1f-40e6-be8f-9c12ac9249e3",
        "cursor": {
          "ref": "833faef1-cdcc-4e73-aac1-a82d14870a99",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "87dcf52e-5bc2-45c6-849f-19610fae5619"
        },
        "item": {
          "id": "a8a1c2ca-5c1f-40e6-be8f-9c12ac9249e3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1bd77621-9841-447b-b70d-a2ebc7c5961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa55c0-3015-4000-bd3f-8c7b34b11ac9",
        "cursor": {
          "ref": "f482d091-281a-4d3f-93ab-832f954bbb1d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aeecfa1e-43ce-4f64-a9dd-a0e50c5e6e81"
        },
        "item": {
          "id": "b8aa55c0-3015-4000-bd3f-8c7b34b11ac9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "36e14a6f-0f33-4344-82d6-3089dfb11270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5055c-8f43-4945-82b7-b88df43e36ba",
        "cursor": {
          "ref": "43fb8ffa-a583-419e-aede-e6d41683c577",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3fea180f-ea21-4bdc-9bba-878ddc387185"
        },
        "item": {
          "id": "87d5055c-8f43-4945-82b7-b88df43e36ba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "92d0512e-7381-448c-a6d5-6f46b0478712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58042138-c35f-4eaf-a572-60cf8ac227d7",
        "cursor": {
          "ref": "39cd8218-e7f0-401b-8024-7fd29a7fca0d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2de372f1-d0d1-4060-b695-7d76193b95aa"
        },
        "item": {
          "id": "58042138-c35f-4eaf-a572-60cf8ac227d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "30f89c22-4543-4bf5-8c61-ca5ed7e6371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda5ea01-9b51-44d2-a5cd-fa0e65899cff",
        "cursor": {
          "ref": "b685eda9-5262-47d1-bec5-5505b8d5cb2b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e0f552f6-b3cc-473d-9d7b-91a0077a6329"
        },
        "item": {
          "id": "bda5ea01-9b51-44d2-a5cd-fa0e65899cff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0e8d74e4-dc20-4ee0-9b42-d47887944d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7ebd95-928e-44f8-807c-83050960e3da",
        "cursor": {
          "ref": "237f8d01-289c-4fb8-8200-476d088bdb15",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "97b78e6b-3355-46f2-9738-1eab7c806464"
        },
        "item": {
          "id": "0a7ebd95-928e-44f8-807c-83050960e3da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c1edbd5-09f6-4082-8ebb-42f5a1160fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3cefa4-6830-49c2-a5db-143a22363c02",
        "cursor": {
          "ref": "c65796b9-4707-4c07-9871-0917d6e3f73a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56c2ee4e-8d38-422d-aac6-142d2eb6a249"
        },
        "item": {
          "id": "cb3cefa4-6830-49c2-a5db-143a22363c02",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c37372f1-e10c-42f6-a829-02ba95134ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6f355b-61da-4955-8c9a-9db8ef2e6a25",
        "cursor": {
          "ref": "4554548b-f38f-4822-a844-c4182a05f39d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "27479303-67a2-4cbb-9386-c0c1d90695bf"
        },
        "item": {
          "id": "0d6f355b-61da-4955-8c9a-9db8ef2e6a25",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a4a87885-df7a-4ed9-89c6-1e19e8fb80f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d206d-9b6c-4247-b838-73501136a2a7",
        "cursor": {
          "ref": "8e34b642-998c-48d6-b7a3-7a729cd106d3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "006b2a64-4e0f-43bd-934b-e6f9b79dd615"
        },
        "item": {
          "id": "026d206d-9b6c-4247-b838-73501136a2a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e9e40ae1-acbb-4242-8bab-2cf8f3d1faa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d6dea-7df0-4254-8653-883404f1a88d",
        "cursor": {
          "ref": "dd7525e5-80bf-49b6-9b8c-578fea1bbd1c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "449d6aed-36ed-4ecc-9ef3-14100d65fc7b"
        },
        "item": {
          "id": "2a1d6dea-7df0-4254-8653-883404f1a88d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "27204d1c-477e-41a8-adc5-79907d765869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a7c04-e4fa-41af-850f-67d4a38031ed",
        "cursor": {
          "ref": "f4111a8e-6a55-4112-905a-4606c8a65332",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7b638787-e4d7-43ee-b129-9233cafeec3c"
        },
        "item": {
          "id": "7c2a7c04-e4fa-41af-850f-67d4a38031ed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4332af51-1408-453a-a3a0-41fb69b4f1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8487a0-d35c-442d-aa06-8abfa7d6a789",
        "cursor": {
          "ref": "41f361d2-e3a9-4f84-8845-61ab8732f720",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "210272a5-1abb-4be2-849e-3119e770a04d"
        },
        "item": {
          "id": "2e8487a0-d35c-442d-aa06-8abfa7d6a789",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "98d1a039-638f-4b9e-b54e-cb1bb481f855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ffe685-45e2-439e-b4f7-a67deb1ab28b",
        "cursor": {
          "ref": "92a2f267-f4ba-41e8-a11f-dc5b796a9d26",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fed87814-02e4-46e5-a8c8-03ddadbb8a7a"
        },
        "item": {
          "id": "39ffe685-45e2-439e-b4f7-a67deb1ab28b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d1f687d6-4fa2-4a6b-9fcc-6668d51a016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2009037-c3b3-405f-8e6c-4a102536c32e",
        "cursor": {
          "ref": "2e36d9cf-a7ff-4f6c-b752-acb554b9dc2b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9b348511-439f-4da3-9200-d6e414610b42"
        },
        "item": {
          "id": "e2009037-c3b3-405f-8e6c-4a102536c32e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f1d079c7-10d6-46cd-9b1a-94b43dabb221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fd67ca-d275-4ec1-bbfe-59f8777a59f6",
        "cursor": {
          "ref": "5fb9dbc9-2d1d-4516-bb90-b6a479176a1e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "aee4c8a8-64c6-491e-9c80-d51af9e8a06f"
        },
        "item": {
          "id": "43fd67ca-d275-4ec1-bbfe-59f8777a59f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "24d7c5ec-73db-4a2f-a18f-53e0d38092e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c1723a-c3d0-46cf-8d3b-011ee4d40ce1",
        "cursor": {
          "ref": "40f13a62-5d3e-4daf-a817-6cc3ce0aef90",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f0004e7d-55a2-4f39-8604-750444c17e1b"
        },
        "item": {
          "id": "86c1723a-c3d0-46cf-8d3b-011ee4d40ce1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a820af3f-12f6-41b5-8833-a3056afcec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28cb79a-761f-4be3-8c57-54caa256cc5e",
        "cursor": {
          "ref": "a52514c2-cac1-45e7-b8fc-b438a89a18a8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d40b44f5-1224-45f2-a6cf-f19b393c4f69"
        },
        "item": {
          "id": "f28cb79a-761f-4be3-8c57-54caa256cc5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb74471c-4a33-4269-a516-1d4096e607f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d74248-f47e-4130-bf9c-7d91e2150aae",
        "cursor": {
          "ref": "651d59d3-757b-4e0d-8e6a-bd7a430f179c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "02d918f4-8693-4e66-b1c8-743810c918ef"
        },
        "item": {
          "id": "17d74248-f47e-4130-bf9c-7d91e2150aae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2716e580-c213-4982-ab6b-548d1b693d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851d773-b6b9-4df3-bc44-25ff94b33f72",
        "cursor": {
          "ref": "5aef242d-ac0d-4149-bc6c-b9b60f748638",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "04fd5836-5368-463d-85d6-8f25c5318c90"
        },
        "item": {
          "id": "f851d773-b6b9-4df3-bc44-25ff94b33f72",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2dc45029-cfea-4c64-82ca-a4ff90a496d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badf0e2e-155e-4408-bb55-b748ba8872ac",
        "cursor": {
          "ref": "c7f68d8d-d2b7-4327-a7b9-acd5f0d43a2d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c7f080ae-b0ac-4689-9eb5-72808357da72"
        },
        "item": {
          "id": "badf0e2e-155e-4408-bb55-b748ba8872ac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0a6aa726-b653-446e-8019-760ce02c3f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056c1953-abed-4d8c-b0a3-fbaefc4f4826",
        "cursor": {
          "ref": "3765d4a4-bddd-4ffa-be89-0bef84aa3d1a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "83aa3a35-f65d-4af5-8724-f4c70e402bde"
        },
        "item": {
          "id": "056c1953-abed-4d8c-b0a3-fbaefc4f4826",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d8a3c4e1-9f31-4e4a-b8a0-f35d729db07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de4dcb5-a6da-400b-873e-2d0b23582898",
        "cursor": {
          "ref": "8dc16a19-6975-4210-aca7-c155bcfb8f0f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5e738023-dd2c-420b-a216-30300557651b"
        },
        "item": {
          "id": "1de4dcb5-a6da-400b-873e-2d0b23582898",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "da8894fb-ac18-43d8-9624-dbd4cf77a0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ad2b5-cf51-4165-a2c7-75629651d013",
        "cursor": {
          "ref": "d214c947-1f37-44b8-b04e-d84367f61c96",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "95ef3026-79be-4007-9970-bc0ecf2d0f0d"
        },
        "item": {
          "id": "a77ad2b5-cf51-4165-a2c7-75629651d013",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "edcc66a8-e32a-4e38-b198-02bd06500019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46824eae-565a-4f60-94cd-75a67297b325",
        "cursor": {
          "ref": "3dc63e7c-eaf7-4e62-b1ea-f68f62406a2f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6929660d-df46-45f6-9190-a50b5a37e1df"
        },
        "item": {
          "id": "46824eae-565a-4f60-94cd-75a67297b325",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2c6c3cd0-afbd-4339-8953-8602f32cef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a39207-dfe1-416a-8bb2-92e9601a1aae",
        "cursor": {
          "ref": "154d2451-94d0-4b9e-a7f7-8175cf8f90f8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "13986a39-a6e5-4778-804a-a721798cfc09"
        },
        "item": {
          "id": "63a39207-dfe1-416a-8bb2-92e9601a1aae",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "37096f18-6bf2-4f4a-ac0c-7a8a300a7395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7095b0-7497-431f-b8b5-8f0642a763a2",
        "cursor": {
          "ref": "eb688582-644a-4d3e-8aca-1632721d6e5d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "69ea0eb1-0b81-4a87-9fc8-9aed4b0c2338"
        },
        "item": {
          "id": "6e7095b0-7497-431f-b8b5-8f0642a763a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a9f30299-bc28-43cf-9771-317705b92eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52525b9-dd17-472e-a388-a85713e88515",
        "cursor": {
          "ref": "f90ed8f6-eea0-459f-86ae-5ece889e9813",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "447e3ffe-0a07-4954-a5ec-0e0b139a9c27"
        },
        "item": {
          "id": "d52525b9-dd17-472e-a388-a85713e88515",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e45aec05-6286-47ce-be7b-7e2bc9f27433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d6df6-8ebe-4778-bb00-d3dd9573548d",
        "cursor": {
          "ref": "3c738f8b-aeb2-4cd0-a1f1-3132ff0df768",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2707d31f-d86a-48f3-8765-e13c31b480f4"
        },
        "item": {
          "id": "fa6d6df6-8ebe-4778-bb00-d3dd9573548d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bbfec8ce-7281-4b37-94d8-fe1675b7a3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c3021-f14d-478e-9796-8af2330d4d60",
        "cursor": {
          "ref": "82264f6e-d996-43a0-8118-46cfd76ed867",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3d8caa7d-8bd4-4c9f-a324-d1897a4127b4"
        },
        "item": {
          "id": "861c3021-f14d-478e-9796-8af2330d4d60",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ef8eac12-e7b4-46a5-a363-fc91f3f3daea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060008f4-cefa-4baa-87ef-ed11760f287e",
        "cursor": {
          "ref": "6d929933-4a5f-4f55-acc1-031b49b657fe",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5700e083-72ff-4470-bde5-6030b97efb0a"
        },
        "item": {
          "id": "060008f4-cefa-4baa-87ef-ed11760f287e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "55ada582-8329-4bb8-a9d7-7a512ec9178d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399302b8-8240-41eb-813e-65ad491742f3",
        "cursor": {
          "ref": "0cf4cce8-9f3e-4338-9e03-f9b4b23a73f5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8b5d066a-743f-4582-92ed-c2a1b6692217"
        },
        "item": {
          "id": "399302b8-8240-41eb-813e-65ad491742f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c780816f-8e75-45cc-9aa6-782e3eccb727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a42743-79fc-4d49-a82d-4409f445b579",
        "cursor": {
          "ref": "96d1fc68-55b4-4f7d-aea0-0d95675828f6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "70a702f2-b62f-43aa-82dc-988b8d28ea6f"
        },
        "item": {
          "id": "e6a42743-79fc-4d49-a82d-4409f445b579",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0fd2af27-8860-43c9-8294-807ff676922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54c4bc-f1cd-4c07-9cb9-78b70b7a3cd0",
        "cursor": {
          "ref": "bc6cf3f8-03de-4b30-8adc-4d0b339a0874",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "75bc0bed-bb90-48d7-811b-2a868536138a"
        },
        "item": {
          "id": "ca54c4bc-f1cd-4c07-9cb9-78b70b7a3cd0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f43a4c23-f91d-4ddf-9046-9727d6d8c70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0214ca5-ce9b-4191-87ec-6a7b89a8e5b2",
        "cursor": {
          "ref": "6f3f46df-475e-4a80-a2ff-43131fd5112d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "080f27e7-49fe-42b9-8396-9d7c85d65c28"
        },
        "item": {
          "id": "c0214ca5-ce9b-4191-87ec-6a7b89a8e5b2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c8868cd2-8c2b-4054-a2fc-081b26e534a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0726123-77d6-4e6a-9190-08184f7efcf0",
        "cursor": {
          "ref": "c5345d03-df90-43ce-a0c1-ff9f6f1b14e2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b499de25-ece4-4d40-8c59-27781121e3d9"
        },
        "item": {
          "id": "a0726123-77d6-4e6a-9190-08184f7efcf0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ac0db6e0-d2a8-4584-a7d4-959dcb062f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e685780b-d246-4d3a-ac69-03e757c60831",
        "cursor": {
          "ref": "af129d6b-ccaf-484c-91d0-22c807c33126",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "418f5fd1-95c8-4d62-a9f0-0a138d901625"
        },
        "item": {
          "id": "e685780b-d246-4d3a-ac69-03e757c60831",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4bbea28d-a2a7-4916-9d5a-b9c621f53b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0622aff6-dc4c-444c-9c5e-d1048b176e2d",
        "cursor": {
          "ref": "c1e13425-a951-4c33-8b3f-4c31e7650b59",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "135e3ed8-9df1-466c-8a7d-7f6e65cb1bfd"
        },
        "item": {
          "id": "0622aff6-dc4c-444c-9c5e-d1048b176e2d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0244ea73-6139-453b-8218-3b80065ee190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d080a174-007d-45de-9cbf-d7743714e8a9",
        "cursor": {
          "ref": "c97d9976-636d-4cfe-940d-7ed8b202cd30",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "21ccbda1-2e39-474f-bef2-a9ba05c049c2"
        },
        "item": {
          "id": "d080a174-007d-45de-9cbf-d7743714e8a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3a807d80-44c2-4245-b1b9-3f94148859a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f231037-9292-4f6e-989a-e2d501bb8c64",
        "cursor": {
          "ref": "7e701cf5-0097-4c32-9fb3-0d9141669a2c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "229152ad-6a2a-4cce-9a7b-22a9b19fbabb"
        },
        "item": {
          "id": "9f231037-9292-4f6e-989a-e2d501bb8c64",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c848d3e-1cb7-465c-b035-8afd973c0898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a9a9d8-64fd-4e33-9019-d299d0aef073",
        "cursor": {
          "ref": "a5bd782b-d5ec-4d3b-8abf-25483125e6e4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e609d370-5c78-4a7e-b75a-162d30846db5"
        },
        "item": {
          "id": "60a9a9d8-64fd-4e33-9019-d299d0aef073",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "694aa05d-43d2-4249-a977-45d74b750926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe89cd-5e15-4215-b989-5b70f6992a5c",
        "cursor": {
          "ref": "db773b99-4a34-4a39-8af5-46cb83b492c4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e84e5c00-70c8-4705-b27e-438ac1c4370e"
        },
        "item": {
          "id": "3cfe89cd-5e15-4215-b989-5b70f6992a5c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "acf9e810-1847-4759-911d-d706eb2db61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f09caf-a522-4a95-9b54-a3444bb2056d",
        "cursor": {
          "ref": "faf29089-548e-43b5-af75-43286a72f5c9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "368945c1-fb4f-426a-8c5f-f6fd34c3528a"
        },
        "item": {
          "id": "a8f09caf-a522-4a95-9b54-a3444bb2056d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cea5f5db-b427-4a70-bf8a-39acf136c4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba7546f-c492-4011-b380-3721f706566e",
        "cursor": {
          "ref": "5f147487-418c-410a-b56c-f3e4827e9fb8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "05faabab-de88-4876-80c3-fbfe747208ef"
        },
        "item": {
          "id": "2ba7546f-c492-4011-b380-3721f706566e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3eb7e1a0-d473-4921-8bd2-529eb7f359e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce987b5e-b911-43d5-b580-ef22807279ee",
        "cursor": {
          "ref": "841a4703-00d4-4099-a379-8ffcc82c6288",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ff70456d-6d3d-4fff-ad73-02172a0dc8a6"
        },
        "item": {
          "id": "ce987b5e-b911-43d5-b580-ef22807279ee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "75cafc77-ac55-4411-8767-ab5182c7c5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ab2efa-fb81-4040-ad3c-c21fa67f9075",
        "cursor": {
          "ref": "f52ff502-a217-4d51-9d40-c3860224a251",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3eb3f086-d941-4f17-a7fc-96ccf1846254"
        },
        "item": {
          "id": "38ab2efa-fb81-4040-ad3c-c21fa67f9075",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef0ba665-3178-46da-961a-b52a71bbf8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417d48c-81a6-4eb1-b17e-f0d407b42ce7",
        "cursor": {
          "ref": "a09b053a-df3f-450c-85b5-78a7a463524f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0a9f7819-5327-409b-b1a5-f4915c346946"
        },
        "item": {
          "id": "8417d48c-81a6-4eb1-b17e-f0d407b42ce7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f6947055-c63b-4b14-9110-86fcc77e2fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b15cc8d-8d47-4a28-8ee0-b87e4d6f8478",
        "cursor": {
          "ref": "1edb686d-2dce-4fd5-b5d5-f4a82a9e8191",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d50e51e9-1a43-48cd-9cf2-dc60383b57c0"
        },
        "item": {
          "id": "4b15cc8d-8d47-4a28-8ee0-b87e4d6f8478",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9f3942d5-5f66-41d4-97a6-0ae219cae50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f34d3-65f8-45c0-b4e2-cbf769691fb9",
        "cursor": {
          "ref": "a22d009d-010b-480d-81a7-0a07518b0c2d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11738848-4147-418d-a279-13ed51741888"
        },
        "item": {
          "id": "3b8f34d3-65f8-45c0-b4e2-cbf769691fb9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ef32a60d-3c64-4e62-a8be-12c9b6b42937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f61cd-985e-45c5-8d59-9ae934a59d19",
        "cursor": {
          "ref": "ee945f05-15af-4b15-9331-cdc8b719badf",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c57a03b9-69e1-4bf2-9429-799278d7c302"
        },
        "item": {
          "id": "fa0f61cd-985e-45c5-8d59-9ae934a59d19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a9bcf588-8e09-4304-a6f7-59354c56bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6711fa6-4e0d-4d2d-8544-64e2b7202410",
        "cursor": {
          "ref": "ff614975-9157-439f-b29e-d62b5b02c745",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "db217bc1-5fb7-47ed-b359-6149e4e0f946"
        },
        "item": {
          "id": "b6711fa6-4e0d-4d2d-8544-64e2b7202410",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1dd99300-47b6-408e-ab5e-cf6e1a45c8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fc64b6-2a2f-4dc7-80e5-982307be74ac",
        "cursor": {
          "ref": "28b4b84f-a21d-4f02-8723-92d3e9b91e2b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "44bd8db4-843f-48d8-a5b2-2d46132dabcd"
        },
        "item": {
          "id": "b0fc64b6-2a2f-4dc7-80e5-982307be74ac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5ee3361e-9d03-4be6-aeca-5d0be2dd6552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fa0068-effb-434f-8928-1763223a3e8f",
        "cursor": {
          "ref": "4c5751e2-f8e3-46d8-a8ea-7b8763c4d546",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0ecc1c8-1263-4449-a32e-40081fa8b70d"
        },
        "item": {
          "id": "08fa0068-effb-434f-8928-1763223a3e8f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "247d852d-6c81-44ae-b959-3355ce22149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa7c3fd-a71f-49ee-8de6-4adff4d85922",
        "cursor": {
          "ref": "c4bbd75b-e8b4-4a72-9387-6df59c44290c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71a31d97-e660-42e4-9c5d-0f7d6cd625d5"
        },
        "item": {
          "id": "5fa7c3fd-a71f-49ee-8de6-4adff4d85922",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d91c23b1-185a-4abf-a029-4f341e5d6868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364364f-40a0-43a3-aa2f-32b7f54748ee",
        "cursor": {
          "ref": "5fac0bba-c6e7-445b-90c0-05477277373b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "36b54cfb-1f1a-4742-82b8-e88cc3048a3b"
        },
        "item": {
          "id": "2364364f-40a0-43a3-aa2f-32b7f54748ee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "280c542e-81c7-48fe-9b35-4fd3c9691c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645fddb7-c741-4ecc-a1b2-04fc271f8ee8",
        "cursor": {
          "ref": "a3d5e2e8-faa9-478d-9836-6510dad54e70",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "673e7b8d-b053-44cc-b5bb-42eb0c554894"
        },
        "item": {
          "id": "645fddb7-c741-4ecc-a1b2-04fc271f8ee8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62a6423a-1204-4d72-9dd3-c6a23fcfde29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c9f7eb-75e8-46f0-ac7f-982e4b09010e",
        "cursor": {
          "ref": "f675603c-7e41-4ae1-85a4-f5a350e65f88",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "052856e5-e915-4ceb-832e-80f01942d931"
        },
        "item": {
          "id": "d1c9f7eb-75e8-46f0-ac7f-982e4b09010e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ade72ca-8320-4dec-826c-a3eb6444d25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0799981d-7469-4651-a9af-359a6fc47c01",
        "cursor": {
          "ref": "8a3d5366-54b9-494d-aa1c-e864e011a970",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "963e0838-e333-4d00-86f3-6cf5f7c5a513"
        },
        "item": {
          "id": "0799981d-7469-4651-a9af-359a6fc47c01",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "466cbf21-f166-4084-aee8-8f799e11f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4ce547-1c41-4981-8d63-06a3e6aa52c5",
        "cursor": {
          "ref": "6f3be6fd-a6c7-416a-894a-e2c19c176db8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1ca82361-5afe-45c3-987a-1ed04980806d"
        },
        "item": {
          "id": "bc4ce547-1c41-4981-8d63-06a3e6aa52c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4e9626a7-86b2-4b89-b368-180dfa465d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef305f1-d0a6-437c-be45-0be17da1ebaf",
        "cursor": {
          "ref": "c2964746-0229-47bc-91a0-5e2433e52155",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "20a76fed-11eb-4112-90b7-42385f682abd"
        },
        "item": {
          "id": "eef305f1-d0a6-437c-be45-0be17da1ebaf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "57130b35-d75a-4b12-8d4f-f140c12194a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cbf4d0-8bcf-4ef7-a5c5-534515b1bda5",
        "cursor": {
          "ref": "09a6f2cd-1094-4a98-b1ce-afa9f8ca9ef7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dd85114e-1890-4522-9d67-b864322b59bb"
        },
        "item": {
          "id": "80cbf4d0-8bcf-4ef7-a5c5-534515b1bda5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "421cc8a9-ec33-4dd4-9b6a-92de0eb21b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302f971-22f2-46d3-b7d0-b252d6ea2c11",
        "cursor": {
          "ref": "7c1f55ce-8eba-4077-a4c9-846626972589",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "93198a18-8e25-4238-934c-485a5004643c"
        },
        "item": {
          "id": "a302f971-22f2-46d3-b7d0-b252d6ea2c11",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "83e9db05-9a7c-487d-b94f-a1cd91cf6edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e4ba0-9b04-465d-8cb7-3590263e74c5",
        "cursor": {
          "ref": "39f8a05c-3622-4f48-9493-0404859e898a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "51b73faa-2ada-4a7a-b461-884c39520eef"
        },
        "item": {
          "id": "7f5e4ba0-9b04-465d-8cb7-3590263e74c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "650f1e6c-c0a4-4f3a-980a-13808b847d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3993a30a-d91e-4162-9a59-98f192cad63a",
        "cursor": {
          "ref": "c5d9129c-14c9-4638-928f-c499ed39be80",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c9199b13-8f6e-4f56-88b2-d8a89e20c867"
        },
        "item": {
          "id": "3993a30a-d91e-4162-9a59-98f192cad63a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0b72bac4-7064-4fdf-8df9-a29cd90a218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce68a1-319c-4f25-8634-ea7597945ba1",
        "cursor": {
          "ref": "84ba9156-d359-4cc9-ac20-fff0119b1ddc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "20137f97-9b87-47ad-8548-f5580c54201c"
        },
        "item": {
          "id": "bfce68a1-319c-4f25-8634-ea7597945ba1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5760c7cc-c23c-4d15-986b-c1793e367c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cad9211-1069-461e-9885-400b2b9b7cf8",
        "cursor": {
          "ref": "b4be7be4-a8da-4a80-affd-eacf6af1c617",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f260aa3c-ca5b-481a-8877-df02b892c9d2"
        },
        "item": {
          "id": "0cad9211-1069-461e-9885-400b2b9b7cf8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4ac2d5b9-532d-4632-b6d0-125a05b50422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3028ba-66c0-4709-a96a-05b6d7fa1697",
        "cursor": {
          "ref": "03dd9bcb-b4fd-48f5-acf4-be00870bf25e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f572e822-373a-4c0a-b9eb-da5246a1a3a3"
        },
        "item": {
          "id": "ed3028ba-66c0-4709-a96a-05b6d7fa1697",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "95c3619a-e8a8-411e-9cd3-2f7209acea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aebd59-e978-4840-a096-15cff196e314",
        "cursor": {
          "ref": "81a658a1-3e4e-4f31-8cf1-690d0a0a183e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "63b5ab4e-a015-4ccf-989d-a621e8162674"
        },
        "item": {
          "id": "a3aebd59-e978-4840-a096-15cff196e314",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a02ec6e5-acb6-41f2-aace-d243fb10d1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57439e-c0cc-40bf-9d23-05865f9b5f5a",
        "cursor": {
          "ref": "f02c95eb-5095-4149-bf4a-f7336192b072",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f71f4a58-784d-42c5-8211-4ce6ea764808"
        },
        "item": {
          "id": "4e57439e-c0cc-40bf-9d23-05865f9b5f5a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "65f2a242-cdcf-449d-944b-c135d0a7cb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e860cd0-a36e-4238-8a17-316e095559a4",
        "cursor": {
          "ref": "28e81d5d-e58a-4093-9dda-4d9afa42da5e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f74524c6-a379-47c7-8c51-65d49a88d79f"
        },
        "item": {
          "id": "7e860cd0-a36e-4238-8a17-316e095559a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b84b5790-c4e2-4774-b72e-454c8de06df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cac853-65e2-43aa-bc4c-ce2ba972f06c",
        "cursor": {
          "ref": "bb71de74-8ddc-479b-bf09-9c82fdcd19eb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39094b6c-c858-47e7-9f24-ed8caae1280a"
        },
        "item": {
          "id": "d8cac853-65e2-43aa-bc4c-ce2ba972f06c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fdc4e312-33c0-4360-80c6-56c58986f219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4835f7-44f5-4553-9839-40e134894a18",
        "cursor": {
          "ref": "bfecd923-a806-4850-93c5-875a6ae89a7e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c9f9b067-eeef-4bb5-968f-fd83ab1adab8"
        },
        "item": {
          "id": "6a4835f7-44f5-4553-9839-40e134894a18",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0286741d-400d-4d2a-a6a6-00224c6fcd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1b06f2-11c9-4efb-83ba-62468f434169",
        "cursor": {
          "ref": "a618defb-bce1-4d79-8d89-213510c8e904",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d545ffd9-2eb3-46c1-bd93-6fc9a75c8617"
        },
        "item": {
          "id": "5a1b06f2-11c9-4efb-83ba-62468f434169",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e0e12464-b755-4e50-8e64-1f31eed7ef96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611880a0-7910-4f77-9dd6-f97363d4f234",
        "cursor": {
          "ref": "cdca2d82-b735-486f-8f44-e95e5216b97c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "152a257e-d441-4685-85b5-199a7ae6c0bc"
        },
        "item": {
          "id": "611880a0-7910-4f77-9dd6-f97363d4f234",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3fe9ccb8-0795-445a-868b-8aa38f526753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb1c07d-18d4-461a-aabd-32d6846394f8",
        "cursor": {
          "ref": "5dc5c328-e8ca-432d-a5f9-3e9121da8fdc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "99fab651-d3a4-451b-96c1-b2ebbf7e935d"
        },
        "item": {
          "id": "aeb1c07d-18d4-461a-aabd-32d6846394f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a56eaa50-a174-42e9-89dc-6c67ac32ba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad515478-8072-453e-b1c6-bdb4f164158e",
        "cursor": {
          "ref": "1736f270-ab0c-40bc-a05d-41b87e7cdc9a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "63a27794-93a4-4d30-9f57-e20ee35b79ac"
        },
        "item": {
          "id": "ad515478-8072-453e-b1c6-bdb4f164158e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "15032675-e221-4ed7-8b47-64aebccf944f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05be86d-9a4f-4bf3-b12f-98f39e4a30fb",
        "cursor": {
          "ref": "f6e2d340-7d1a-4838-9822-d8e8ba044088",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c68e361-7ad7-45ef-9c17-191e107f09ef"
        },
        "item": {
          "id": "c05be86d-9a4f-4bf3-b12f-98f39e4a30fb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2db3d0ca-c290-4b9b-8ecf-4250ac13df79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7547f5a-f930-40dc-a4df-bd9242c3aa48",
        "cursor": {
          "ref": "8f7bd942-6207-4a89-b11f-4b9f3918b79f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "528460cb-6ef3-4f6f-841c-b64ba5f26101"
        },
        "item": {
          "id": "c7547f5a-f930-40dc-a4df-bd9242c3aa48",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a5b1fb5c-0d36-425d-b3ef-479b5946bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c03bd82-a6f5-4f00-a52e-dda56c458775",
        "cursor": {
          "ref": "b6551134-4349-43bf-8f4a-18f70df207dc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38384123-bc15-4537-bd08-8677318edf78"
        },
        "item": {
          "id": "4c03bd82-a6f5-4f00-a52e-dda56c458775",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dd8d5797-ecb9-457a-868c-ea6d1457011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df56fde8-0531-410d-85c5-099b5ff23c26",
        "cursor": {
          "ref": "50eb5884-35ee-4f24-82f8-8348b28a16cf",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c4a2d890-3772-4173-93ee-4bd193203b5c"
        },
        "item": {
          "id": "df56fde8-0531-410d-85c5-099b5ff23c26",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "457a45f5-9818-4f53-b4ac-254228edb34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87329313-f39b-4aea-8918-06b7e6415fb8",
        "cursor": {
          "ref": "86906c57-6272-466c-adb2-932f75232d05",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d087eb61-835e-4ecb-a277-dea4da325d19"
        },
        "item": {
          "id": "87329313-f39b-4aea-8918-06b7e6415fb8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "004931bc-2474-4cea-85bb-f765aab5351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e2e59-b870-4df5-a1e0-c1a8a062cfb7",
        "cursor": {
          "ref": "05d7e030-eb1e-4d33-a3dc-ade9cb9583d5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "df53aa17-af1b-462e-ab51-6b0c6789a939"
        },
        "item": {
          "id": "e52e2e59-b870-4df5-a1e0-c1a8a062cfb7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "37fdbbc7-8b31-4ca8-b0ff-5b576c44830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478267b-9ccf-404d-a8cd-b9beea8597f4",
        "cursor": {
          "ref": "739b7a23-5bb8-4aed-b960-15189f788d01",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c307c71-afc9-423e-ae54-d2d4b6968a83"
        },
        "item": {
          "id": "e478267b-9ccf-404d-a8cd-b9beea8597f4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13f30f3e-6b97-4d99-b023-dbdd0ee9099a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783e5c21-0a89-4fc8-b576-dd51b6215be5",
        "cursor": {
          "ref": "b7c0e5d4-2dc0-4966-a1ff-554df617d139",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "085550ca-66e7-4b55-8839-6599a0aefd5e"
        },
        "item": {
          "id": "783e5c21-0a89-4fc8-b576-dd51b6215be5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "936fed3c-1e84-4428-b3d8-d7d176e0b270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f7a946e8-7121-46c7-98c1-6e2e24715598",
        "cursor": {
          "ref": "9d56357e-d078-4347-8cce-f71c40183ba7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c22e5412-c9ea-49cd-9578-226b4d45ed97"
        },
        "item": {
          "id": "f7a946e8-7121-46c7-98c1-6e2e24715598",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2ff856a8-526a-4574-97ca-5ebb82aa66b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3d90881a-1f7e-4e9f-9938-8c032f218dc7",
        "cursor": {
          "ref": "928cfdf9-48db-464f-9e4f-07be89f87955",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b8c1ce34-c2e9-4e61-8301-46ba71f6f597"
        },
        "item": {
          "id": "3d90881a-1f7e-4e9f-9938-8c032f218dc7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f64b03eb-6bfa-4f4f-bd46-92246e84ad85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1bb16116-e88e-4132-9467-b9284dcd3e45",
        "cursor": {
          "ref": "3d415c12-11b3-4249-991d-df87be061a2d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "71c7fa48-1a58-4cf8-bd53-6a0a97bd3ed3"
        },
        "item": {
          "id": "1bb16116-e88e-4132-9467-b9284dcd3e45",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5df0253d-007f-4034-b0c4-b3ebb7f17349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ccaa8e19-2970-49e5-bf19-5729919f9447",
        "cursor": {
          "ref": "d3280c61-4f48-465f-b635-e39800524b9b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aaa307bb-11ea-4ab8-9140-1fbb54901de7"
        },
        "item": {
          "id": "ccaa8e19-2970-49e5-bf19-5729919f9447",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aee7ae43-f829-4c04-81c0-b5188431f318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "866cdab0-1d64-420c-b554-3e7bd0b4680e",
        "cursor": {
          "ref": "2d9d2687-1968-4e6f-850f-e9b70f614577",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e02d6610-8d7c-44f6-b5a2-5d924bbeb6c6"
        },
        "item": {
          "id": "866cdab0-1d64-420c-b554-3e7bd0b4680e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41df682d-66e0-444d-a7af-c89fc8fcec16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d92e74bf-11f1-4d80-a255-009f853470a2",
        "cursor": {
          "ref": "e66aa01b-9697-43c7-9598-def8d15344d0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b992c3d4-2478-43e2-b072-2829587c082e"
        },
        "item": {
          "id": "d92e74bf-11f1-4d80-a255-009f853470a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e6094147-7c0b-4d79-be28-efa5db429e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3375d924-de92-4614-9900-ade33527be46",
        "cursor": {
          "ref": "91868810-7d2a-443f-991c-0972474752c7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "21240cfb-c934-4802-b09c-bb17ed4167fe"
        },
        "item": {
          "id": "3375d924-de92-4614-9900-ade33527be46",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "44cc572c-1845-48ff-9895-dc73657cfedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9880bb77-15e5-444d-a210-c1a5efaeceed",
        "cursor": {
          "ref": "04888374-1f7d-4391-a8f2-b2febc985547",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1cd3a97-d029-4e06-bc81-d4396a21d63c"
        },
        "item": {
          "id": "9880bb77-15e5-444d-a210-c1a5efaeceed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "75648eee-4924-440c-a1a6-5f1a02447b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd75f69-9b7a-4c6c-baed-2b339cf53f20",
        "cursor": {
          "ref": "d9146574-9e09-4cbd-9e64-c2e7ba2398b7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "41ed2bb8-fd26-44b9-8d15-c5049fdf3b39"
        },
        "item": {
          "id": "bbd75f69-9b7a-4c6c-baed-2b339cf53f20",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "10a9ecdc-5767-438d-a7a4-d21c2e5e4e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820d686e-6508-4ca3-aeb0-97249a565c06",
        "cursor": {
          "ref": "3ee1add6-928d-45e0-909f-92987246c185",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2a624aa3-f9e1-4ae5-8708-4c3b08383b90"
        },
        "item": {
          "id": "820d686e-6508-4ca3-aeb0-97249a565c06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b2287f58-e29f-4fc9-a807-e044fb78b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e21c36-3255-4cf9-8617-e42df5fd87e3",
        "cursor": {
          "ref": "d0bb51d9-f3db-49fb-b3a8-29a291e99a57",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3dbf07a9-ff5c-4f86-8aef-dd04ec4c3132"
        },
        "item": {
          "id": "d4e21c36-3255-4cf9-8617-e42df5fd87e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d67e5125-9172-4244-b9ea-6aac110f96d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee29dfdf-f11d-4ede-a685-da8a6b2717e0",
        "cursor": {
          "ref": "6a8921e8-041b-47a5-a89f-e2e0ce699f04",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14b9755a-70f0-498d-89bc-939f53b9fa89"
        },
        "item": {
          "id": "ee29dfdf-f11d-4ede-a685-da8a6b2717e0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9209a8c-a13d-4107-b273-7c469bb89957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ebb80-6cf3-49aa-ad4c-dc0c34fe0cfd",
        "cursor": {
          "ref": "1cb93c4a-0c39-424d-a901-7a56a5e333b5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c322cff7-9f77-4572-bc5e-3d9e8d71d3bb"
        },
        "item": {
          "id": "c36ebb80-6cf3-49aa-ad4c-dc0c34fe0cfd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "698be2af-d183-4b2e-a3ef-b5c34e90baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1dd176-372e-422b-aaf7-f6a844ecc88d",
        "cursor": {
          "ref": "c34d1a7e-2412-432f-8a56-90ad2fa79228",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c20f2dd-dd1d-4cd2-926f-d18237964637"
        },
        "item": {
          "id": "ff1dd176-372e-422b-aaf7-f6a844ecc88d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f89ab26-1fff-4905-9e90-dd9dfc6cc275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf855b-c210-411a-8ba2-5cceaa6c7ca1",
        "cursor": {
          "ref": "1b6a5ecf-9d47-4eeb-ba0c-e6b837059cdb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d201dd65-7e02-4d1e-bee4-e2e2bc68fa40"
        },
        "item": {
          "id": "acaf855b-c210-411a-8ba2-5cceaa6c7ca1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f5a8735b-b33a-47c7-b5bb-d560a52dcd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218f493a-03a3-4c0e-af39-05366f6a4f85",
        "cursor": {
          "ref": "256972ab-139d-4ed7-b6db-82097659ce56",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f1884d36-a3a9-49e5-a825-976c22df9d98"
        },
        "item": {
          "id": "218f493a-03a3-4c0e-af39-05366f6a4f85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69cf9f2d-81d4-4ebb-8c0d-b63f2d37aafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1acc0bf-c78b-4c5d-9b2f-63fea2e54f30",
        "cursor": {
          "ref": "ca033707-95bc-48a1-be08-c7f77a0dee8d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9339c656-56eb-4aa0-8730-d3800ef9b411"
        },
        "item": {
          "id": "a1acc0bf-c78b-4c5d-9b2f-63fea2e54f30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "51cf5d3a-3bf2-4767-a9e9-0249611c332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2024f12-0656-49d5-b69d-68c07bd61405",
        "cursor": {
          "ref": "808b592b-6726-46bd-99b9-db36fa08a2d6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "642c20dc-2182-4754-97f0-9cdf93c6c3a7"
        },
        "item": {
          "id": "c2024f12-0656-49d5-b69d-68c07bd61405",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6441386-c37e-439c-9d6d-1e04b8a9faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084b5634-e78a-4d2c-87cf-caa11bdf45a6",
        "cursor": {
          "ref": "0e04411f-cc5b-4d54-b3c7-d7e0bdea149c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7cacfc62-a9dd-44a9-97d8-5d8a34bd752e"
        },
        "item": {
          "id": "084b5634-e78a-4d2c-87cf-caa11bdf45a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "160ee677-831c-4abe-b9ee-0d81aace1ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfcddf4-80e6-4b55-99a4-7ce00d5b27b0",
        "cursor": {
          "ref": "e58c5a05-2118-48f8-b10c-1caaebf135fb",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3f14a35-767d-498d-8e05-d87df314cd83"
        },
        "item": {
          "id": "bbfcddf4-80e6-4b55-99a4-7ce00d5b27b0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7ff80f5-485b-48e4-82cc-9ae248fd421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d44e0b-fed9-4e80-8d9c-fab5d9fb1840",
        "cursor": {
          "ref": "0d77ee04-4cc3-4bb1-beba-04e906b4f944",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4651ee43-c9c8-41fc-bb12-f2378c158c07"
        },
        "item": {
          "id": "03d44e0b-fed9-4e80-8d9c-fab5d9fb1840",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c61bfde3-5266-4bd4-ba94-3e9f20420a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473616d0-6af3-45d0-b1b6-8cb544287afe",
        "cursor": {
          "ref": "b0640eb4-b9f1-4736-8655-be2aea278d80",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a7ca2b7-8e23-4cd7-92a9-20599f639556"
        },
        "item": {
          "id": "473616d0-6af3-45d0-b1b6-8cb544287afe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0bff179c-5304-46b9-b397-bf15df41cefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0429a5-3107-46c9-8acc-ed22dac4f151",
        "cursor": {
          "ref": "be269582-6b41-4754-94b9-0e46fdb67448",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e69d0e6-9c52-400e-80e0-6f5bd70e94d1"
        },
        "item": {
          "id": "4b0429a5-3107-46c9-8acc-ed22dac4f151",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d830bbf5-804b-48fb-9ed6-89253719a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8185e60-602c-4d83-bb64-6c3ac858d15a",
        "cursor": {
          "ref": "528a9dcb-f655-4783-a8d4-3d5e2a43be41",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "24e30ca1-25cc-4b01-84e6-ffec4398a018"
        },
        "item": {
          "id": "c8185e60-602c-4d83-bb64-6c3ac858d15a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d945124f-37fc-49d2-9ba0-bbb8bf5b7c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac338247-2928-4cda-8038-9d7144536492",
        "cursor": {
          "ref": "2d142b9d-b20b-46e6-9b7c-52d3171ba52a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "74b427d5-7c4f-4e68-bf37-a8f216ea57c8"
        },
        "item": {
          "id": "ac338247-2928-4cda-8038-9d7144536492",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e30fc625-3692-46ca-b835-42da8e7eb7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b7dbe-6e1d-49f1-928f-9cd1c98d37e8",
        "cursor": {
          "ref": "54b277f8-900f-43f0-9f41-2885ada274c8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2cb001eb-8518-4dfb-8ebe-cd7dbcb823e6"
        },
        "item": {
          "id": "ff3b7dbe-6e1d-49f1-928f-9cd1c98d37e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d30bc62c-5595-4c85-b7c8-568f8cf35cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc72574-8e6c-4ec6-bf24-d97bfdb8de79",
        "cursor": {
          "ref": "866ae0a7-774d-4870-996f-fd614d616dd4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c6ecc97c-930b-4517-9645-9a3f93336e85"
        },
        "item": {
          "id": "fcc72574-8e6c-4ec6-bf24-d97bfdb8de79",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b92280ed-a202-4382-8155-e88b0225c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93af3fb-79e1-4df8-b4ac-ea5bf5e02359",
        "cursor": {
          "ref": "ec1a8603-be37-4ddf-ab3d-d8d4bc80c830",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4d79064a-53ca-4de9-af55-0e1bfccda7a9"
        },
        "item": {
          "id": "e93af3fb-79e1-4df8-b4ac-ea5bf5e02359",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f283b0eb-1bb1-47dc-95a0-e7d8f5a06b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340c8972-9b1e-4411-aa73-46d245389d81",
        "cursor": {
          "ref": "53d22a7d-dc3a-4592-a325-ee93b38abdac",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1f771e11-6694-4361-a5ca-034731941d6e"
        },
        "item": {
          "id": "340c8972-9b1e-4411-aa73-46d245389d81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "16ec4972-eda5-46e6-aa96-a40ed3d32230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9597867c-4994-4454-a1a3-5c3927ab4554",
        "cursor": {
          "ref": "09f24c24-3376-40a6-a654-1a18c52a6583",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "02c29ab7-60a4-4a06-b7e3-65eb3d79c6cc"
        },
        "item": {
          "id": "9597867c-4994-4454-a1a3-5c3927ab4554",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "27742b1d-6e56-4ebd-9643-7a966d9d024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e168d-c4eb-48ba-b6a4-f83f0ee6a5b3",
        "cursor": {
          "ref": "7ef2d15a-517a-49bc-8a74-de5bf3b6d999",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d4e38e72-4566-4ac0-a1f5-7f4f443c4f96"
        },
        "item": {
          "id": "4d7e168d-c4eb-48ba-b6a4-f83f0ee6a5b3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09edfe64-6a61-4e61-b3e4-82c8cef114e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da66649c-2a07-4479-9c1a-e32292bb6141",
        "cursor": {
          "ref": "d5747cec-562c-4ae7-adca-0b7ce782312c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eddbfa1e-7d3c-443c-9e7a-01c7fda4d93d"
        },
        "item": {
          "id": "da66649c-2a07-4479-9c1a-e32292bb6141",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10d4254a-0d08-4b28-817b-c455079d3018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34996853-741e-4484-9b16-0578f741a2e9",
        "cursor": {
          "ref": "ef851632-6407-4409-b2e6-c08ad31d1414",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e33f500-3deb-44a6-b62d-6365a5ec75ee"
        },
        "item": {
          "id": "34996853-741e-4484-9b16-0578f741a2e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05547477-f8e9-446e-91a1-5b289fd992a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a862ccd-c6cd-4b0b-a661-684fbd29c358",
        "cursor": {
          "ref": "e70cbbf8-a018-43f5-a606-4e23b0c0bbb1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6e7d9ab3-46cf-4032-84c0-a8b08daf3c07"
        },
        "item": {
          "id": "9a862ccd-c6cd-4b0b-a661-684fbd29c358",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebea57ab-90de-4976-bffb-2b1b9953b031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc6e3b4-7815-4d3a-a92e-49ec268c20f1",
        "cursor": {
          "ref": "84b9847d-978a-490e-b19b-72c95a292207",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dde2335a-be86-40e3-a17d-5d3f43ab55c9"
        },
        "item": {
          "id": "fcc6e3b4-7815-4d3a-a92e-49ec268c20f1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3725dd34-96e8-4c74-89a4-76b278df108b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192815ea-96c0-4861-aa2b-a24416e92b86",
        "cursor": {
          "ref": "5d14feae-626d-47b6-bd73-ab320cabf5ac",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8bed654f-87c8-44ff-91a8-a87b3ba900f1"
        },
        "item": {
          "id": "192815ea-96c0-4861-aa2b-a24416e92b86",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3a2510de-0d39-4715-b499-6ab82c89c0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70bfa6-e33b-4328-900a-aeeb1a84b204",
        "cursor": {
          "ref": "72386f91-85c6-4ca0-b068-38a262f32cae",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "490e5f7e-a1d7-47a1-b151-a3936c8bc35b"
        },
        "item": {
          "id": "4a70bfa6-e33b-4328-900a-aeeb1a84b204",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "841fd698-5efa-4522-910b-4650a196657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5616408-6e98-4bb0-94b7-41cf56efd4f2",
        "cursor": {
          "ref": "5852e822-8383-4a02-b66b-ec4cb0669b65",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0e66ccaf-a20d-4797-86e8-9fd19087f00e"
        },
        "item": {
          "id": "b5616408-6e98-4bb0-94b7-41cf56efd4f2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "31b82a91-f440-4e55-a710-6f92be9e546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196449f1-25b7-4171-ae37-197940b75e4d",
        "cursor": {
          "ref": "5effedba-ec16-4579-9c58-b7153944c0ea",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "731a3bed-8be9-42d9-a6cc-7cc467b97360"
        },
        "item": {
          "id": "196449f1-25b7-4171-ae37-197940b75e4d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad1d1db6-b1a3-40ef-b744-574279764287",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fed381-ebf1-4b48-b55c-062e241e351c",
        "cursor": {
          "ref": "fcf52b41-f11a-4564-9f5b-57b8d655ea22",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "05f082f0-c112-4a59-b27d-6a9c5cd88136"
        },
        "item": {
          "id": "83fed381-ebf1-4b48-b55c-062e241e351c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "070702bf-a1c3-4e46-9433-a95127460009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44743e-df38-433f-a075-9c150a4eb4d1",
        "cursor": {
          "ref": "245ea740-5458-4028-9657-f70cccbf6781",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e232c81d-446a-4651-9f8f-53c27c03c0c5"
        },
        "item": {
          "id": "2c44743e-df38-433f-a075-9c150a4eb4d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f1b20c91-636f-43a9-828c-da76816654e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1dea8f-9506-414d-81d1-86f0ee525049",
        "cursor": {
          "ref": "10a44ff5-52e5-4646-873b-b21a05c341dd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "32519c28-f40e-4b16-93bc-1c5f4c902c79"
        },
        "item": {
          "id": "dc1dea8f-9506-414d-81d1-86f0ee525049",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf1a3e39-d052-474f-83c4-8a3d2c4eaac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450dd468-2721-44ee-978a-8ed3845d53f3",
        "cursor": {
          "ref": "618322b3-ec00-4c08-8a4a-1a6f8e0f82b7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39fdd5b6-a7c2-45c3-a654-3f04f4195441"
        },
        "item": {
          "id": "450dd468-2721-44ee-978a-8ed3845d53f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b0a1cc45-d267-4768-8151-999248faca02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c1cdc-0c39-4fef-b3f5-029e2cea952f",
        "cursor": {
          "ref": "b83a55b3-79c7-4a50-93c2-8439c1916a1f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5ba51323-b324-44e7-bc08-138f14359085"
        },
        "item": {
          "id": "697c1cdc-0c39-4fef-b3f5-029e2cea952f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b8f1ea57-c5b2-4497-a051-df38d91fc534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671af7cd-0e6d-4984-a13e-f3cc2de4a8f6",
        "cursor": {
          "ref": "61e8c7a5-8a1e-46b9-a76f-dffd915636f5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e1021ec2-1efa-4a41-8c9d-58607ea6e8c9"
        },
        "item": {
          "id": "671af7cd-0e6d-4984-a13e-f3cc2de4a8f6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd781b32-7455-4702-a0bd-c5c057382a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d301520b-bdfd-428b-b042-3cd6c48ff855",
        "cursor": {
          "ref": "ac1e8fe6-87d1-4f7b-b4ae-eb74c24739ac",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6ff60cee-d3aa-45a0-ae3d-9abb1821bc13"
        },
        "item": {
          "id": "d301520b-bdfd-428b-b042-3cd6c48ff855",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "90368053-5236-4e3e-908c-52f28462015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d8e4d-23ee-4785-8036-fa09d28e8abb",
        "cursor": {
          "ref": "5645e1f9-c4b4-4fd5-988f-0413393d0268",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "764fc689-c8ed-428f-b4d6-173189bf3906"
        },
        "item": {
          "id": "952d8e4d-23ee-4785-8036-fa09d28e8abb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "296d24c0-3bdb-4a56-bad9-b4525875e820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e470eb40-2fbe-42ad-88d8-423afff63712",
        "cursor": {
          "ref": "1f169011-2777-4092-bfd9-64c90fb588a7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f75eb0c2-f607-459b-96f9-fbdcb6aa622d"
        },
        "item": {
          "id": "e470eb40-2fbe-42ad-88d8-423afff63712",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57517b94-671f-49e4-8093-f2d3d414b87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fdf89c-c34a-456a-8c16-f9777204bf4f",
        "cursor": {
          "ref": "0eeba393-44ac-4add-a22a-0acb45c6a4c8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "54c0f979-a9d1-437e-828d-605e3033bbee"
        },
        "item": {
          "id": "26fdf89c-c34a-456a-8c16-f9777204bf4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a7eaff1c-b108-493a-95e8-7f003042c77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f84aa8-705d-4c0b-8f8c-27dee5bda7bf",
        "cursor": {
          "ref": "0178167b-5912-4f0a-af8a-ae769c1de7fd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8d3132ad-180d-479e-a39c-bd6b4245c6e5"
        },
        "item": {
          "id": "15f84aa8-705d-4c0b-8f8c-27dee5bda7bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ba36edc-41cc-45b3-9b29-cd046eeb7415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254679ca-25bb-4656-8c60-b09ffd07c5d7",
        "cursor": {
          "ref": "65268827-5d11-47ea-8548-c77ca90cedb0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "50dbc870-a935-44e8-ad7d-d261fbc5a6d4"
        },
        "item": {
          "id": "254679ca-25bb-4656-8c60-b09ffd07c5d7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "794e1b21-6094-4eae-9361-069d7cb2a869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b88520-65c9-4b94-8758-08d5c0a52497",
        "cursor": {
          "ref": "36ae811f-cbf2-4c7f-a328-03981aff00f5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bc5c6249-0a74-45a4-b0b8-b40e466eeab3"
        },
        "item": {
          "id": "26b88520-65c9-4b94-8758-08d5c0a52497",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3737014-763b-4f65-859c-5990da50ce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f51b619-4f39-4155-9488-75531f2fb29b",
        "cursor": {
          "ref": "b28073f5-bf49-4989-8ac9-2b72f28b8001",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "52630746-edd3-4b71-b3b1-c7c8a7ed1163"
        },
        "item": {
          "id": "6f51b619-4f39-4155-9488-75531f2fb29b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cfee4be3-11b4-4604-b626-3b9299b3e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66acd924-8653-42e2-b3da-2acf80751ccf",
        "cursor": {
          "ref": "46b6b500-7b36-4672-bcba-9f645c634543",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e050d450-3d81-4ba4-8487-0e0b16717c77"
        },
        "item": {
          "id": "66acd924-8653-42e2-b3da-2acf80751ccf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "70c13909-3040-48d4-83a2-70cdc0f4d00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574fdf64-c8aa-47e0-bf55-27bdac11df55",
        "cursor": {
          "ref": "93a73c0a-6b49-490a-b875-5e6dfab7bc8b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2794e849-2215-4c28-bd36-ecf9428d146f"
        },
        "item": {
          "id": "574fdf64-c8aa-47e0-bf55-27bdac11df55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b56b2f8a-7998-4fe7-9bc9-f5a4d68eda71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cf26c4-4847-4b8f-a16b-9af114a3f8c7",
        "cursor": {
          "ref": "ea17eaf6-2c48-4d98-b545-7be8ccbe375b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "200dd0bd-6204-418f-8dfc-b68caea94c50"
        },
        "item": {
          "id": "92cf26c4-4847-4b8f-a16b-9af114a3f8c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d047c921-5263-4c43-9e50-3439b0192588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c48bfcf-1234-41c7-9f43-ccec924da231",
        "cursor": {
          "ref": "b3576344-9951-4ed1-8086-aaa8ce2f1255",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "10545ace-3075-4908-8cbb-6aae7255cc18"
        },
        "item": {
          "id": "0c48bfcf-1234-41c7-9f43-ccec924da231",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ee16d8a-74d3-468e-9b92-2866148174dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce94919a-c8ef-495e-90cc-d442ee986812",
        "cursor": {
          "ref": "375e11ce-ad10-4012-90ea-38f2e463821b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2f17ef3b-b3b4-45fc-b79d-d6a23c27fa7c"
        },
        "item": {
          "id": "ce94919a-c8ef-495e-90cc-d442ee986812",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e4e974a-f921-48bd-adb8-f3e7bf29aa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c68d0b-1e82-4a5b-b1e5-f3d54d336b98",
        "cursor": {
          "ref": "54b33221-a578-4c23-9750-b7e040286b73",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e2f93519-35de-466f-93ba-5daa17abfa1a"
        },
        "item": {
          "id": "19c68d0b-1e82-4a5b-b1e5-f3d54d336b98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f4fafb58-05e7-411f-b2c9-ad3db9b36a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e66d731-a5b9-4305-bef3-a76e4622fed1",
        "cursor": {
          "ref": "6e0f65ee-44a7-4d8e-8879-24768c97875c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "33cdff57-2235-49aa-9d27-2a338c6401e7"
        },
        "item": {
          "id": "7e66d731-a5b9-4305-bef3-a76e4622fed1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd4226b3-7326-4f89-8438-5b4f2e86f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5559a7e3-6560-499a-b26c-da4be13a4dc6",
        "cursor": {
          "ref": "6be53c66-a27d-499d-a97d-35add1dbfe64",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3f24125-01da-45a2-82e9-ad2176851209"
        },
        "item": {
          "id": "5559a7e3-6560-499a-b26c-da4be13a4dc6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb05522c-6417-4806-ba1d-5a9d917d8823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1261ba85-a4a7-4b81-b2a1-c49410e1742e",
        "cursor": {
          "ref": "edbb2edd-4f6c-4b28-a38c-c17217961159",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c3151482-5695-4d9f-984e-ecc40754e068"
        },
        "item": {
          "id": "1261ba85-a4a7-4b81-b2a1-c49410e1742e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e32b6ea-b1d5-486c-be70-b8ed42a9bb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350a1fd2-8690-4f24-b37a-0e19ce9a84c4",
        "cursor": {
          "ref": "dbb52c6e-b1d7-434e-8195-4d0b3a0de22b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dac82412-d8ce-4440-9af3-cf1fc4f3ab88"
        },
        "item": {
          "id": "350a1fd2-8690-4f24-b37a-0e19ce9a84c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7831fbb-2835-4d8b-9b58-3576697997d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdeafe1-02ee-4c44-bb7e-d23e1fee3b1e",
        "cursor": {
          "ref": "d9d4d3bb-e884-4698-ba34-3a5187bc7e70",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "597e562c-5b2a-4d35-b75c-ccc6040288bf"
        },
        "item": {
          "id": "2fdeafe1-02ee-4c44-bb7e-d23e1fee3b1e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bbae80cf-90d2-4083-8555-b9f96140f3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea236d5-7ea9-4f44-8a7e-bc79fd393d22",
        "cursor": {
          "ref": "e5afa37f-d604-48a6-a500-284ffa201fba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d40658b6-73ff-4746-ac86-5dcfabc808dd"
        },
        "item": {
          "id": "9ea236d5-7ea9-4f44-8a7e-bc79fd393d22",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7257b9a3-e115-428d-b47d-d612a705a35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae8ca6-191a-4c4b-bf56-c2343414131c",
        "cursor": {
          "ref": "5c144dc6-53c8-4e17-916c-b554b522d708",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2aa9a5c4-faa8-41c4-9e2b-e609e72ab069"
        },
        "item": {
          "id": "3dae8ca6-191a-4c4b-bf56-c2343414131c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8a261101-4e2d-4e91-ad54-865cca6a818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf8f895-ec17-4d9b-9431-b88ac35463b2",
        "cursor": {
          "ref": "4c4be21d-e597-4cf3-8d7d-604b1a0866df",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3f60c5a3-283d-497e-95f5-a62ce879b32a"
        },
        "item": {
          "id": "7bf8f895-ec17-4d9b-9431-b88ac35463b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b14c4970-a4ba-4394-8f28-5fb219f5d172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15801c3-db7e-4c93-b72b-072d79a4266c",
        "cursor": {
          "ref": "d4e82986-247a-47d5-8245-8d58d1d040fb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bb35d275-881f-4cbc-858e-38986fb0456e"
        },
        "item": {
          "id": "d15801c3-db7e-4c93-b72b-072d79a4266c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4a2e4603-da32-457a-92c4-0951b7c0e5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c222120c-540e-49d2-bbad-a79190a3f097",
        "cursor": {
          "ref": "403a174c-22e1-4c98-a089-70959f8db03f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5023b7ca-bc28-479f-8540-4f481168c5e4"
        },
        "item": {
          "id": "c222120c-540e-49d2-bbad-a79190a3f097",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8217fdcd-cae3-4340-aeb5-66036a5ed076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb2f56-c688-4bea-99c6-1966145f6459",
        "cursor": {
          "ref": "34bf4ab2-2c63-40e8-8ec3-14547fd15808",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b4722c6-39c3-46a1-9fa5-2379e3ee23cd"
        },
        "item": {
          "id": "17bb2f56-c688-4bea-99c6-1966145f6459",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "680ec340-35f4-49c7-b702-d0a707a4d25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7082cf-c2b5-4788-b613-4961928f631e",
        "cursor": {
          "ref": "3636fee2-b311-4451-937a-3e9076b43b0e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c4296a59-dcb1-4060-a789-2ad4996b94a5"
        },
        "item": {
          "id": "0d7082cf-c2b5-4788-b613-4961928f631e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "968ad3c5-cfb5-486d-b010-a96c2073f9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f546c04-f1e0-426b-a263-960b6ad40847",
        "cursor": {
          "ref": "77dad4f9-fbf5-4a6c-9601-441ca0933351",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "45079960-1bbd-444f-b671-b68e05210aa5"
        },
        "item": {
          "id": "6f546c04-f1e0-426b-a263-960b6ad40847",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "49d69707-9b1f-41df-b7fa-06127927f0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8f39c-1978-497c-81e3-de7974c5c12c",
        "cursor": {
          "ref": "c1b571da-55bc-4b65-8e15-7f30f18c9c22",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c5224a25-ea0c-4d1a-b5f6-9a79f609be0b"
        },
        "item": {
          "id": "d8c8f39c-1978-497c-81e3-de7974c5c12c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d43136b1-6073-4461-bb99-65e9c52dad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e189455d-2ccb-42a1-9e0e-d264107146fd",
        "cursor": {
          "ref": "6eea491f-c0e2-437c-b2cb-9bc93a4b681b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "50e01f91-cf35-481b-a55f-7951c91593ee"
        },
        "item": {
          "id": "e189455d-2ccb-42a1-9e0e-d264107146fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6d80013d-0438-4307-9f4f-c652b637d1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c687477-04a3-4603-b2d7-5916e2824733",
        "cursor": {
          "ref": "f1c04d68-c302-4584-8642-4e19fb5b42cf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "169874bc-6458-40fe-89da-aa5e2fef945e"
        },
        "item": {
          "id": "6c687477-04a3-4603-b2d7-5916e2824733",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bb6cc319-a3b5-4648-8391-8f987ae7a725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd06a17-571c-4d4d-b2f7-3985f8b2afc2",
        "cursor": {
          "ref": "4afd81a2-d03f-4509-acb9-9f8d4d845e7d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cc08fa0a-4811-419d-ae62-715db335326d"
        },
        "item": {
          "id": "bfd06a17-571c-4d4d-b2f7-3985f8b2afc2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "41f70742-91ab-419b-9b6d-51836201023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98212928-2394-49e5-97a7-c06912b45c27",
        "cursor": {
          "ref": "9e993f65-3515-4d88-a068-c62eda71109c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9ef2ed5-6873-4ccc-afa1-6dbe6cab9593"
        },
        "item": {
          "id": "98212928-2394-49e5-97a7-c06912b45c27",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "091bcc98-cb82-40ef-b130-dd00fa24f0c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1a4287-97d9-4e1b-b3b7-187eff2050aa",
        "cursor": {
          "ref": "d420b5eb-e65a-4322-8796-ed3256e706a8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2daa615-0b2c-4d6e-85d4-cf7a01d99ff8"
        },
        "item": {
          "id": "3b1a4287-97d9-4e1b-b3b7-187eff2050aa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a04c7e0-edd6-43a8-98e1-921fe6fca5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69edf8b4-1007-4864-adae-55d21a662e5a",
        "cursor": {
          "ref": "cf2f0cae-d1a0-4330-b6b9-a8fa9488fadf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9c975062-4ee6-4f06-83e7-0fe9ef99dfd4"
        },
        "item": {
          "id": "69edf8b4-1007-4864-adae-55d21a662e5a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f0f90db1-c03c-4864-a6e4-f69b69379fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f51ba-b58d-4a01-83be-d1fcba46e08f",
        "cursor": {
          "ref": "c53df439-5a46-4dfe-8ffa-498627714e8a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "55777c91-4bc8-47c4-a546-7e7ca87f5d4f"
        },
        "item": {
          "id": "4d2f51ba-b58d-4a01-83be-d1fcba46e08f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "081f7ff7-82ca-43af-bc21-e5c4239a065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b0858-a9f9-4174-83b1-b9f3858ccee3",
        "cursor": {
          "ref": "4f0ae9c6-8bd0-48d4-a736-7510d40edbe0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "58bd0cfe-9369-4ba1-af74-9c3453f10f7d"
        },
        "item": {
          "id": "364b0858-a9f9-4174-83b1-b9f3858ccee3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "560351ae-042d-4a0e-a3c0-ad13847e1c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e22b5f5-b8ef-4528-bd5a-c3d58b72fb51",
        "cursor": {
          "ref": "fe38b306-2498-47ac-a90a-e17d5604ac4b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2cb8c3a8-745b-4182-bc3a-9c99a2dd2311"
        },
        "item": {
          "id": "9e22b5f5-b8ef-4528-bd5a-c3d58b72fb51",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c001d9d9-c6e7-4fac-b928-3af2c7f3f569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171e7de0-4b2e-44fd-b58a-1bb24c16450c",
        "cursor": {
          "ref": "84042b87-3937-4f73-8f38-a3f944a4c0bc",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bb6f26c8-76f1-40dc-860e-78352c520a45"
        },
        "item": {
          "id": "171e7de0-4b2e-44fd-b58a-1bb24c16450c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "910b6e1d-9abe-423f-8e76-81222ee44f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa5e89-38e6-4297-8e23-41f5475a6902",
        "cursor": {
          "ref": "653d9175-8c46-47c4-8203-312a71e30ab6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ea14af2-2da2-42e9-856e-e256d52a51b6"
        },
        "item": {
          "id": "e2aa5e89-38e6-4297-8e23-41f5475a6902",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "00820292-1989-43cb-b128-c649cd55aaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89b0e40-1379-4dfd-b009-4d3c793a1ec6",
        "cursor": {
          "ref": "22d979f0-723d-4fae-8d83-0904c9d56ecb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f2bed6dc-9c1d-4dda-aab4-b4c6a5aaf59d"
        },
        "item": {
          "id": "b89b0e40-1379-4dfd-b009-4d3c793a1ec6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a59adc60-b3b0-4ba8-82b0-88a09926f233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162d4b3a-c8ea-400e-b163-0e8d6d06e0a4",
        "cursor": {
          "ref": "909829ce-0806-4459-9e7c-44e3e43a06c3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4e66817f-e51f-44fe-aa71-584d6d27e882"
        },
        "item": {
          "id": "162d4b3a-c8ea-400e-b163-0e8d6d06e0a4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1208d111-914f-4078-8418-a4156b39be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e5942a-e792-4028-8a2c-6f55fde05a48",
        "cursor": {
          "ref": "b126eed4-b437-478d-817f-00dae62f02d3",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "294c628c-f63b-4498-bdb9-98e2031894cf"
        },
        "item": {
          "id": "37e5942a-e792-4028-8a2c-6f55fde05a48",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b9db386-8769-4658-957b-30c03c8db4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dac5bc-adc4-418a-9cb3-d42997edb864",
        "cursor": {
          "ref": "406662c0-80be-4b51-a3b9-73de346a728d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c7817ad0-4532-4de7-b772-f09907369bb9"
        },
        "item": {
          "id": "f3dac5bc-adc4-418a-9cb3-d42997edb864",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2de7b8d6-db30-4615-8427-ec51af2eb432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02424d3-d0e3-41f8-9598-4ae103c390c2",
        "cursor": {
          "ref": "f424f4d3-1ee6-4e8e-aab9-c4fd19bf5485",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "673cd4b6-113c-45fa-82a4-9f5061366730"
        },
        "item": {
          "id": "c02424d3-d0e3-41f8-9598-4ae103c390c2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6b31a510-aa49-447b-86bf-e6b8b55c166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc489c2c-5572-42b5-b6bf-65072c99476e",
        "cursor": {
          "ref": "46bc607a-666d-43de-a83d-65982ccca229",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fd23bd9a-e6f2-494c-b5f7-73c405215d4d"
        },
        "item": {
          "id": "fc489c2c-5572-42b5-b6bf-65072c99476e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "246a9e89-55e2-43ea-9eb2-9455578777d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf19c8-d438-4af7-956d-8da634f27b00",
        "cursor": {
          "ref": "65437419-ac8e-462a-af92-27894853fc8d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "373e9e3e-8c50-41a3-84ae-87e1bb1d60e3"
        },
        "item": {
          "id": "5dbf19c8-d438-4af7-956d-8da634f27b00",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f2dc904-2657-4244-a46d-d113d616c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ff0450-af77-42f3-bf10-e162ae80550f",
        "cursor": {
          "ref": "2b2e656a-bc84-4d07-be38-5aa431de4d9a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b2206e0d-3fb8-4127-b269-d277f1efbdbd"
        },
        "item": {
          "id": "58ff0450-af77-42f3-bf10-e162ae80550f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1e6abf22-1f19-4ecf-bdcf-e5f8baaab14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d6b3a0-7381-4785-b205-a5c3354b99c6",
        "cursor": {
          "ref": "6dae9492-6108-49ca-b1db-f139f4d51826",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bfce8dd1-5603-4881-966c-899ad1e83d35"
        },
        "item": {
          "id": "e6d6b3a0-7381-4785-b205-a5c3354b99c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73fa7a47-909a-46c2-9a7f-729095864203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a7252-f028-4c42-b596-9e622a8ba792",
        "cursor": {
          "ref": "f7904978-d46f-4392-91bb-61a5bf0d4dc1",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d635047-c0e6-4bc8-b4f5-636aa7be9751"
        },
        "item": {
          "id": "7c3a7252-f028-4c42-b596-9e622a8ba792",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "27ebf026-8016-442a-9152-bdb7acf4b79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e29ed1-1376-4009-93bd-d4034575bcb7",
        "cursor": {
          "ref": "938f50d2-4969-4bd8-a086-49035eeaa169",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eba709d4-7d5d-44dd-b2b8-a2394a7a2e69"
        },
        "item": {
          "id": "a4e29ed1-1376-4009-93bd-d4034575bcb7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dbe997be-024e-4a4b-a7ed-f0edbf136920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3ccff5-f345-4420-81d9-fc4a942f26b1",
        "cursor": {
          "ref": "cc67a0d2-4b26-4dd9-ad4e-74b70436b2dc",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c725c43-9cd5-4a61-9349-d4d9d1f49382"
        },
        "item": {
          "id": "cb3ccff5-f345-4420-81d9-fc4a942f26b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8ff0a41a-29d7-4344-9083-af574bf8ffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa74a244-849a-4a42-8cc9-1c28d510f2dc",
        "cursor": {
          "ref": "a1d3cf8a-b9b1-4b5b-a920-e8f53756820d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "25922fc0-7306-4cd8-ad2b-7224018b7f9f"
        },
        "item": {
          "id": "aa74a244-849a-4a42-8cc9-1c28d510f2dc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68883f60-33ff-4e33-848f-07b2aeb07f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e8138a-be5c-47ed-9d85-a837d2f90117",
        "cursor": {
          "ref": "2fdafb4d-35b5-4af2-b29b-702790a3f3cb",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27bc6450-4abe-4e66-86bc-1490d769f770"
        },
        "item": {
          "id": "91e8138a-be5c-47ed-9d85-a837d2f90117",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d59ed887-0308-48ec-ae84-7ab12fa7e730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7970f975-4dd3-4ed6-a15c-88bf76dd65b5",
        "cursor": {
          "ref": "3934f38b-8544-4ea9-b543-f6c46dc2c7ae",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7654ce67-cc5c-4798-813c-8808d870ed48"
        },
        "item": {
          "id": "7970f975-4dd3-4ed6-a15c-88bf76dd65b5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d11022f6-03a2-4ce0-97c6-287fbdd34fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccab599a-3dee-4a56-a7a7-b17e40cd9b70",
        "cursor": {
          "ref": "c8a9ae43-103a-4564-ac11-2ce6bfabf02e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6ea7c8bb-3f8d-4fac-b9d0-553b611c2f40"
        },
        "item": {
          "id": "ccab599a-3dee-4a56-a7a7-b17e40cd9b70",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7c05dd08-ae62-43eb-a405-be5f59c6c803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62d7cce-cc47-47b1-8168-b3118bf40cdc",
        "cursor": {
          "ref": "c6c6fc04-2ec8-4d26-b5b9-0beb7d281cd0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bf6abbad-b3a2-4465-9a0f-8e6f539bb5b4"
        },
        "item": {
          "id": "e62d7cce-cc47-47b1-8168-b3118bf40cdc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "04dd1510-a5f2-49b8-af14-db1ea0110fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd826dc-d1ac-4877-a883-290637a0630a",
        "cursor": {
          "ref": "96ae7de6-ffbf-480b-b733-aba4d4299f11",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4ea44862-a367-4014-bef9-a9ad08010b72"
        },
        "item": {
          "id": "efd826dc-d1ac-4877-a883-290637a0630a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5f3b79a6-eb48-48c0-b1f7-4ca37634a723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712075ab-ad48-4968-952a-aa864039cc42",
        "cursor": {
          "ref": "71afa324-1f8f-4d95-97bb-68b0b11d2dc7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8ddb20b9-28c3-4bf6-8f44-b53eb52ac76e"
        },
        "item": {
          "id": "712075ab-ad48-4968-952a-aa864039cc42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "60a3bfad-9c0f-4d81-89f2-f474669ebd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdce7bd4-5ece-4a04-aa86-74710bfe89cb",
        "cursor": {
          "ref": "52171de9-684c-497e-88cd-475297233280",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "92c3b5c2-08fa-4628-90e5-0eadc7d9c8b0"
        },
        "item": {
          "id": "cdce7bd4-5ece-4a04-aa86-74710bfe89cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39bef4fb-38b3-4b2d-8ed1-80d27d85a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082b8788-26b4-4076-9578-359274cde23b",
        "cursor": {
          "ref": "0b157651-f993-45fd-a1f6-ef5e5bf3b63e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8682d222-6f41-41e9-86da-71e48434528a"
        },
        "item": {
          "id": "082b8788-26b4-4076-9578-359274cde23b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8ed33e90-c667-44f9-986d-02b72d21c358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da95cc1d-7813-4bc1-82b6-5008e97fb8df",
        "cursor": {
          "ref": "c98fdc94-f0ba-40a7-8af6-db7a5a3c49bc",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a437606f-3ab9-45d4-b345-cc05d54a43d3"
        },
        "item": {
          "id": "da95cc1d-7813-4bc1-82b6-5008e97fb8df",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "19e935c2-a23e-4f08-98fb-f518182e459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0390d7-4233-45fe-b5e8-3f0fa965df4a",
        "cursor": {
          "ref": "96c9f8c7-6def-4441-a445-b231f57a1e89",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4a428ffb-7c86-4a91-b8b1-cf317a41c650"
        },
        "item": {
          "id": "dc0390d7-4233-45fe-b5e8-3f0fa965df4a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "70c433bb-ccee-4f83-831a-9584a9478db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cdf220-b76d-4607-843d-e762509abe3e",
        "cursor": {
          "ref": "034b9c41-5f8a-4fee-b645-f49d67a05426",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ff9f81d3-66ff-4a8d-9771-bfd6667136ee"
        },
        "item": {
          "id": "11cdf220-b76d-4607-843d-e762509abe3e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bc0e27a1-8d88-4143-a616-9ee4e9448ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9377fcb1-2871-4ede-9a11-009c347b2837",
        "cursor": {
          "ref": "a2aa8566-7259-4bad-a05f-f4c7ef47e220",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8404f343-04c1-41d5-88ee-647e6aa43247"
        },
        "item": {
          "id": "9377fcb1-2871-4ede-9a11-009c347b2837",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f3e4534d-ba19-4cd2-a653-4152a015b404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ef148-a6b2-4038-a3c4-3103c65c81fa",
        "cursor": {
          "ref": "c39b5b55-f58e-456a-b990-f283733aa11a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a25817c9-2d50-4bd5-b974-82a46f86db57"
        },
        "item": {
          "id": "e37ef148-a6b2-4038-a3c4-3103c65c81fa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "94c2b118-4c82-456e-9158-5fcafe1f5d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a261a866-051a-4ac5-a526-3d5c0959833a",
        "cursor": {
          "ref": "28009c92-4cc4-422d-9ef1-e9e9e3223754",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ac088696-4cdf-41a1-96dd-7a64307a8e49"
        },
        "item": {
          "id": "a261a866-051a-4ac5-a526-3d5c0959833a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fc4ab4ed-8abf-437e-be08-16bbdda82a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c5ba5f-4799-4a42-b9aa-5b271ddf98f7",
        "cursor": {
          "ref": "8c46a93f-fd0e-4002-ae7c-841d3c16de1b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2c88e4d0-4dc9-4410-9a4d-033bd8c1f9ce"
        },
        "item": {
          "id": "d5c5ba5f-4799-4a42-b9aa-5b271ddf98f7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2667f4a7-5be5-499a-be64-6224d59c7956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b273b5-3815-4ab8-b2b5-e3cb5aeceaaf",
        "cursor": {
          "ref": "7cef4634-db12-4c50-a959-16fec53f51fa",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42a52650-8130-4f4d-9980-f65ac32b041b"
        },
        "item": {
          "id": "f8b273b5-3815-4ab8-b2b5-e3cb5aeceaaf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aad08826-1600-443d-809d-c8c49837d409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a2a69-4230-4517-b5de-33a2de89dd6e",
        "cursor": {
          "ref": "df15d597-d6d1-405e-8853-6fb18c95b189",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f0aec85c-0824-460e-b103-c946b815185c"
        },
        "item": {
          "id": "324a2a69-4230-4517-b5de-33a2de89dd6e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9ad3eb3a-7171-47a0-bff3-2854e3065ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b7bf3-7f93-4f20-bf5c-e6277db4f60b",
        "cursor": {
          "ref": "74028849-58c2-45e9-841c-db73e6520de7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "efb6f82c-ef8d-4642-b6b4-252cc5c6f351"
        },
        "item": {
          "id": "338b7bf3-7f93-4f20-bf5c-e6277db4f60b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa2c6c8f-30ea-4686-9349-911d76548a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f0a457-7b97-4f2b-8e7f-9393cbb85fdb",
        "cursor": {
          "ref": "afdbe278-3c01-4907-9efe-24dafbd282d1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "03498649-6746-4fdd-9165-02ee3046d51e"
        },
        "item": {
          "id": "19f0a457-7b97-4f2b-8e7f-9393cbb85fdb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4fa3d02e-b584-4721-86d9-ff48f41b73c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c625e088-bc4d-431f-853e-f597b4943963",
        "cursor": {
          "ref": "4a38da49-40e9-4b68-bd07-72fd9df38df0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a318923e-c314-4987-8bf2-cc9f3252577a"
        },
        "item": {
          "id": "c625e088-bc4d-431f-853e-f597b4943963",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e282423-34c0-4dd9-b24d-d5f350a31b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65717f8-cff2-49cd-bc52-126b04ded3dc",
        "cursor": {
          "ref": "7deb1ce6-08ad-4ca2-9ff8-412d54c11910",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1bee26e6-2e9c-44bd-a94f-826fabadc14e"
        },
        "item": {
          "id": "d65717f8-cff2-49cd-bc52-126b04ded3dc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cbc6e549-e60a-46ef-9582-e4ba2d2cbf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cf9e93-fa65-4473-9865-9e8adf465ae1",
        "cursor": {
          "ref": "a64a8668-ba5c-442b-9f6c-df30ea4c2716",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7f49be15-63ec-47b0-b459-d5796207799f"
        },
        "item": {
          "id": "b8cf9e93-fa65-4473-9865-9e8adf465ae1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aaae8f57-16db-4b20-a04a-7305d9dcafe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a78b89f-41f8-4ac0-8baf-687be11f4e7b",
        "cursor": {
          "ref": "d1749743-1083-49fe-b7f5-e5b2ff9ab288",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cfbf197f-6774-49f8-87fd-1d8e07484fbe"
        },
        "item": {
          "id": "0a78b89f-41f8-4ac0-8baf-687be11f4e7b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2eede2a1-eb71-416e-b728-96ee68f06d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e0a07-3e68-4681-8a21-6c72e163151c",
        "cursor": {
          "ref": "1a54d7ba-cf01-4d59-8466-7476265830b2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e34dc67a-004a-49ff-9dbd-cd224a1efeb0"
        },
        "item": {
          "id": "2b8e0a07-3e68-4681-8a21-6c72e163151c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c5ce6f2d-6242-4b0d-833b-d8c16339ef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dffd66-11f1-4322-af52-5c7895911936",
        "cursor": {
          "ref": "75f37b40-4a06-44e5-97a0-cd91a3dd43ec",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cc163c90-3aeb-4c02-8e9e-e83581934e1a"
        },
        "item": {
          "id": "96dffd66-11f1-4322-af52-5c7895911936",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c17156e9-b51f-4e58-b2f2-9a920d195db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c72865-c6e8-4542-a9ae-1fef0dc85649",
        "cursor": {
          "ref": "98b06aa6-ad3a-4ad4-8800-890f908b7fb0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0055fc2-9808-4315-b569-2e402f89df73"
        },
        "item": {
          "id": "d5c72865-c6e8-4542-a9ae-1fef0dc85649",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "78d2a7b1-cff4-4058-8439-0ad8c47d076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcd719b-5cf0-485e-9f22-bce9e4f01077",
        "cursor": {
          "ref": "4647a13b-53cf-436a-a395-367e58a34dd4",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a060f7d-dae5-46fa-9d06-6fedd04c3412"
        },
        "item": {
          "id": "6bcd719b-5cf0-485e-9f22-bce9e4f01077",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6c12a26c-43c8-426d-9eb7-da4fc8388f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bc8f02-1548-4270-957d-fb43089227e5",
        "cursor": {
          "ref": "7311d519-bcae-417c-91b9-fb77df8b5795",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8c300844-5d04-41df-9882-977c7e98a6ab"
        },
        "item": {
          "id": "34bc8f02-1548-4270-957d-fb43089227e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2b4757fd-9edf-4b9a-901e-2d108bd8e29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bb520c-201d-4a63-a930-fbcb0fb75314",
        "cursor": {
          "ref": "0e000c48-cfb8-4dbd-ba0c-a531ed9a2820",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dd24a31-6972-4e73-a5ce-40768e9a173f"
        },
        "item": {
          "id": "c4bb520c-201d-4a63-a930-fbcb0fb75314",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ac3a4ae3-6800-4f1e-be00-275a58ebcb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68867439-6cd8-4c2d-9d5a-1ba4a334ac16",
        "cursor": {
          "ref": "91a23235-248d-43ce-83ab-22b74bddd1f1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bf98de25-ce37-4482-bd91-37e59d0f472c"
        },
        "item": {
          "id": "68867439-6cd8-4c2d-9d5a-1ba4a334ac16",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b97a646-d39f-4301-891b-ab8c8304fa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eac5de-af60-4f43-9a92-a60fc375c19e",
        "cursor": {
          "ref": "1af7aa68-5b27-4613-be0c-6c7139d303b9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "18d27f33-8a67-4449-833f-4a12990522e8"
        },
        "item": {
          "id": "13eac5de-af60-4f43-9a92-a60fc375c19e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5db2d7a6-ada4-4868-9ebe-7d35fe45875b",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "b57c7e3b-646b-4483-b7ba-a924d5d55842",
        "cursor": {
          "ref": "8a361d78-3ba6-459f-82f0-0ac2cce97101",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb6f3458-8780-4804-9bff-cf9f6b4676b2"
        },
        "item": {
          "id": "b57c7e3b-646b-4483-b7ba-a924d5d55842",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b0698db0-defc-492a-8663-e6dea66a6d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d18f5f-c145-46c3-956a-50ae39e6f44e",
        "cursor": {
          "ref": "b3c3279a-664e-4922-80c6-6d959a3b1896",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b3aeb30d-af3a-464b-b4e6-4c7e85ce0178"
        },
        "item": {
          "id": "24d18f5f-c145-46c3-956a-50ae39e6f44e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "29296bd7-3b67-4aa2-833d-88ac42a7dca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504cfa2a-d009-4823-a6c1-abd3ef3808e7",
        "cursor": {
          "ref": "f2171466-09bc-4ed2-9bac-ce0ba5d8ba41",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "087aec47-0910-448d-a0e3-ff2d2002598a"
        },
        "item": {
          "id": "504cfa2a-d009-4823-a6c1-abd3ef3808e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ffd6ad83-dd92-43ad-8bf7-b1a5e3a75070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaac318-b697-4c92-8633-2f2653c237d4",
        "cursor": {
          "ref": "146f7c47-8cc2-4ccd-b9dd-cc9cc96bdd75",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0d242de0-f06e-42cc-9832-ce77a9a51235"
        },
        "item": {
          "id": "bdaac318-b697-4c92-8633-2f2653c237d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b7ee496-a7e3-4f0c-943e-083a83aa97dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00822f08-49d9-4e48-aae9-299ea27dd686",
        "cursor": {
          "ref": "d90a3c76-5389-47da-9ccb-40e370b000fe",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c6321e11-4ca4-4587-872e-7652c48272b4"
        },
        "item": {
          "id": "00822f08-49d9-4e48-aae9-299ea27dd686",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16ba1e98-024b-4506-99b3-6f0ae2b5f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edae18a3-ad82-45fa-a13b-e3f2984800fd",
        "cursor": {
          "ref": "0d601ecb-03fb-4eb2-a94c-381ff210c40d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "deda056e-5955-40be-9992-f638dce31c5c"
        },
        "item": {
          "id": "edae18a3-ad82-45fa-a13b-e3f2984800fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1ce85b6-3694-4b1f-9f82-27088ec7662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c821aecb-523d-4b63-941b-8e3550fb3197",
        "cursor": {
          "ref": "2428df97-202c-4c6f-a664-4023eeb25449",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4f5ca311-f695-43fd-b174-ccaa15201e6b"
        },
        "item": {
          "id": "c821aecb-523d-4b63-941b-8e3550fb3197",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a11ca755-539a-4130-80fc-4498c06aba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b2971c-beb4-4168-9875-15952a076ebe",
        "cursor": {
          "ref": "70efa7c6-ae2d-411f-b3e3-48aa3b50431a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cde901a4-8912-4797-b13b-f12b072dc6f5"
        },
        "item": {
          "id": "54b2971c-beb4-4168-9875-15952a076ebe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b36d64e5-0a2c-483b-8a7f-e9687fed2a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4262f592-0b64-4943-a760-9f5aa191c52b",
        "cursor": {
          "ref": "38c1b751-aee8-4dba-8871-2dba898efcd9",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "421ea0ff-1bed-4f0f-ba3f-0ae5bc5d20e7"
        },
        "item": {
          "id": "4262f592-0b64-4943-a760-9f5aa191c52b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "73e34994-d365-4829-ab2c-1000116b5495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521904de-0a24-4061-8eff-03e78991c90e",
        "cursor": {
          "ref": "38318f60-5154-4bea-bce9-acdf9102b2e0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "998d8e01-ebe4-476f-95a1-41209a59e1b1"
        },
        "item": {
          "id": "521904de-0a24-4061-8eff-03e78991c90e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "41b46f96-f4fc-455c-90f6-90f30451c232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b91fcab-99e5-4637-bc05-9876b7de7501",
        "cursor": {
          "ref": "ffe9ec7c-3a71-4bbb-954b-6d6215c528e3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "744fd30e-a3eb-4b33-a28a-c7efb789f14b"
        },
        "item": {
          "id": "3b91fcab-99e5-4637-bc05-9876b7de7501",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e56d22e2-9cc0-45fb-9883-591442375f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d079b84a-b9ea-435c-8c5d-c4f1693becf9",
        "cursor": {
          "ref": "13c15ffa-f2b1-4442-89ea-f9ea30bb0d2c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c29c7eb1-40d0-4f67-b5c4-cc619f701551"
        },
        "item": {
          "id": "d079b84a-b9ea-435c-8c5d-c4f1693becf9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cd4becf4-af81-497c-8646-fa0173aa7d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5e3a23-1e2a-42b8-8796-72b0e353d1fc",
        "cursor": {
          "ref": "5650751b-5767-4354-bbf8-72134e8c3c8c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61a444dd-df89-4276-bad4-bd311c4dd3b4"
        },
        "item": {
          "id": "ae5e3a23-1e2a-42b8-8796-72b0e353d1fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "edc297d0-cd2c-47a6-be13-cfb3fe689538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d40399-114c-4e10-b555-fdc899ba430f",
        "cursor": {
          "ref": "22c6e1b3-6d2b-4426-b03a-162a87591d0e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "895798a0-6917-4246-a8f0-fd0020c4de6e"
        },
        "item": {
          "id": "87d40399-114c-4e10-b555-fdc899ba430f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a76b624c-5d8b-480b-9bde-49eedaeda194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d25bb9-fbc1-46ae-a63e-d4077cd73f19",
        "cursor": {
          "ref": "c5a0a405-bd25-47a3-9382-3f3328abe61b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b286c65-39bd-4630-ac26-7c7a0b0cf959"
        },
        "item": {
          "id": "64d25bb9-fbc1-46ae-a63e-d4077cd73f19",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aacedf00-36e7-4916-a08e-7334e507ca94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c763b39f-3ec9-4eb9-8976-b9f64532111f",
        "cursor": {
          "ref": "a5b6b3cd-0f57-4855-adfd-7aace7b9d079",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "46d2bfbc-cfce-4817-ba6a-c5fea69b6b96"
        },
        "item": {
          "id": "c763b39f-3ec9-4eb9-8976-b9f64532111f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "acd4431e-cb40-4975-a9b9-6a15148e5605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a502469-1588-48a4-96ef-2baa70ef474e",
        "cursor": {
          "ref": "d506c68d-d16f-4711-a3b3-e7f5fc6f622f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "260cb86a-15f2-46bb-9dbf-df5e79b058f8"
        },
        "item": {
          "id": "4a502469-1588-48a4-96ef-2baa70ef474e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0d55732f-e90d-42c8-9dd2-b2f819627435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b4fe6a-026b-4543-8169-09ddd1e8c68a",
        "cursor": {
          "ref": "47ea22bf-7b71-4125-83b8-a12c0c57601c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a0bc3db-c81d-46d9-90b1-8aef8525d3b3"
        },
        "item": {
          "id": "d8b4fe6a-026b-4543-8169-09ddd1e8c68a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "04adf1ad-08f0-4192-a500-abb4d9ba274c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e6482c-370b-4246-adcf-f9581e07149e",
        "cursor": {
          "ref": "60e99b56-9c9f-4ae5-8a36-decd7f9f7cc8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a2384e78-9875-4e07-99ec-86536e8fa624"
        },
        "item": {
          "id": "21e6482c-370b-4246-adcf-f9581e07149e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "07fd2376-2572-49f3-9ca4-d88ed46841de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e31014-4216-429c-b63e-83c08864f403",
        "cursor": {
          "ref": "d78056fb-ef40-48aa-8ed9-0a1b20f5f6e6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1f0b8a09-50cd-40f7-aad4-ff4991cd1b1c"
        },
        "item": {
          "id": "56e31014-4216-429c-b63e-83c08864f403",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "57245495-c23b-449e-bc7a-56ddd8e2a247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15421306-2080-4044-9039-702c30fc7a95",
        "cursor": {
          "ref": "ece1017a-31e8-4d93-b4da-6a9962365038",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "90696f8a-a322-4066-b9a3-d3ab6ed49e2a"
        },
        "item": {
          "id": "15421306-2080-4044-9039-702c30fc7a95",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f384dc53-a838-4939-9576-0246f13b1450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31903526-470b-4d7d-b781-2843fcac6f3f",
        "cursor": {
          "ref": "1c90c1d1-fd65-4d67-b472-f12529a751da",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2dd4d992-5001-429c-8c51-636288568d4d"
        },
        "item": {
          "id": "31903526-470b-4d7d-b781-2843fcac6f3f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bfdaf31f-57b5-43dd-9981-ce33b6db70d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57019ffa-8633-49d4-a595-ca668440c0e6",
        "cursor": {
          "ref": "92c49617-e92c-4648-bfe9-1f7878f102b2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5e9122c1-a7db-4830-aa84-debb2d014abc"
        },
        "item": {
          "id": "57019ffa-8633-49d4-a595-ca668440c0e6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c269e7f2-2f29-415f-894a-f547c414c3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d230c-8303-4ab4-83be-212c050dea67",
        "cursor": {
          "ref": "a8c79220-b0cd-4e8a-a124-c04d0ccb39fc",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9b10c36e-f5f4-4970-9ec3-152f31f27cfb"
        },
        "item": {
          "id": "271d230c-8303-4ab4-83be-212c050dea67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "45c7f87a-1c8f-496c-b2ff-cdae2a871fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128c25d2-314f-4a61-863c-254bebd9fbf1",
        "cursor": {
          "ref": "1af240c4-2e73-4d27-acf8-03220edcdae8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "40044d32-834c-4f47-829f-3fb752c4d5d2"
        },
        "item": {
          "id": "128c25d2-314f-4a61-863c-254bebd9fbf1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "70be1dfc-7de8-433b-bb56-5c1fdf4da3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dc27fd-fe8d-415a-9bae-ee0b9d555ff8",
        "cursor": {
          "ref": "9fb51e4b-ca97-4da9-ad66-160e1e506592",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "326bfbb2-7feb-4785-889d-26f3a598f420"
        },
        "item": {
          "id": "86dc27fd-fe8d-415a-9bae-ee0b9d555ff8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3a57d210-be12-4046-954b-76e06ac9797b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857e3c0a-3a5c-4f59-95c5-631f050c9a38",
        "cursor": {
          "ref": "64854ea5-4e45-47df-988d-b82e267e7436",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d93313e6-9d93-4afc-a980-3370be3150f0"
        },
        "item": {
          "id": "857e3c0a-3a5c-4f59-95c5-631f050c9a38",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6668f200-8741-4ef7-83c3-95bb499792a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820475f1-98e3-4ddf-a219-c02326719bd0",
        "cursor": {
          "ref": "31985324-b23b-4d40-9b85-316279a12f9e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20ef13de-a151-4349-8285-ec9d34ae4293"
        },
        "item": {
          "id": "820475f1-98e3-4ddf-a219-c02326719bd0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4c7958c0-1029-46c2-9c68-4dac4362646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123b499f-9229-4ffc-8cc1-3ccec36faad7",
        "cursor": {
          "ref": "6c39e5d8-e8e4-4ac8-8b13-72012124c176",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5537fa90-ee4b-429c-9105-281d2f947d47"
        },
        "item": {
          "id": "123b499f-9229-4ffc-8cc1-3ccec36faad7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e7bc059-387a-4b3a-86c8-40d532b0460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e370174-52cb-413a-91f2-919f807274c7",
        "cursor": {
          "ref": "fb31f98e-7d3d-44ea-b2f3-43cb5657ea38",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ae3cff43-130c-4210-a31d-3474a9538f0a"
        },
        "item": {
          "id": "3e370174-52cb-413a-91f2-919f807274c7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "246a6156-358f-418d-a2f4-ebf9cf5b7e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcd8be8-f69f-4f39-a25d-4c0037ce3dcf",
        "cursor": {
          "ref": "35ffa6b7-0818-4aca-847f-25211d74a29f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2d9f77a4-5ffd-4f1b-a628-c759bef9017f"
        },
        "item": {
          "id": "8fcd8be8-f69f-4f39-a25d-4c0037ce3dcf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a721d794-a407-4020-85bc-d4a8623b4acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fc1d3a-449e-4df7-bb8c-ecb7e19ea5b9",
        "cursor": {
          "ref": "ca592261-3d6a-4ddf-8f51-b1cd876efa66",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "93945323-6b88-4962-b39c-de0ab2e47f31"
        },
        "item": {
          "id": "d9fc1d3a-449e-4df7-bb8c-ecb7e19ea5b9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3db75481-0b72-41d7-b505-bd53705efd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a35a8f-6d61-49ab-8d90-813df2854840",
        "cursor": {
          "ref": "b202a70f-8f24-48d3-9ebb-ae19f876c18c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6942cfdc-2319-4017-9f7a-843a8f37286b"
        },
        "item": {
          "id": "c1a35a8f-6d61-49ab-8d90-813df2854840",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eba2d600-c966-4104-8263-2ee28c1337d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa0f763-81db-431b-83e2-8eca690473b2",
        "cursor": {
          "ref": "fbab2d10-d645-4ab9-b4c1-6c8887beb6f3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "05fa6aee-a2b1-4b95-ab67-786486c3ca50"
        },
        "item": {
          "id": "4aa0f763-81db-431b-83e2-8eca690473b2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6e7d4f7f-0612-4c8f-ad47-f589ebdd397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62061466-ea60-4e9f-8778-cd8c54ad573c",
        "cursor": {
          "ref": "7bd55acd-80fc-4fa7-892b-7e8b0c42306f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7b0f061c-90c2-46e6-8a76-45450116429c"
        },
        "item": {
          "id": "62061466-ea60-4e9f-8778-cd8c54ad573c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4314bf7f-9c71-48c9-aa52-2bf71beb5ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311c39d8-e369-4427-aed2-271680b238ac",
        "cursor": {
          "ref": "72e9d0f0-ce6c-4b5d-9f13-3b166b1267ae",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "38578aa1-09bb-415f-9449-2fdfc62abb3a"
        },
        "item": {
          "id": "311c39d8-e369-4427-aed2-271680b238ac",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "672be206-501f-4161-9a0d-f1b444a0564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be59e6-c83b-4fdf-8589-6aa2a33fa228",
        "cursor": {
          "ref": "b2f6f989-780b-45d1-a179-caac120d5e9a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4b6d1940-04c9-4d06-8a46-5f32566d899e"
        },
        "item": {
          "id": "42be59e6-c83b-4fdf-8589-6aa2a33fa228",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1798d384-a784-4811-9ec2-e0fe355e1d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab386418-4d60-429d-b35b-964b08c64fa1",
        "cursor": {
          "ref": "3da77c0e-75c3-4612-aff4-b825c83195f3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ff77948f-e876-450b-b97e-fa488f2c8841"
        },
        "item": {
          "id": "ab386418-4d60-429d-b35b-964b08c64fa1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f55948e6-6742-4470-8ba9-91c81761a9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795c1034-dca7-4848-af47-d57907120287",
        "cursor": {
          "ref": "060ffbd8-2aed-4026-b4ba-d41fd80b48c9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a5049cad-0b66-475c-baa7-0d1a852e314a"
        },
        "item": {
          "id": "795c1034-dca7-4848-af47-d57907120287",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9ab6958-f62b-45b0-a582-3920bdd1e29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfffeedf-e88d-4cfc-8b61-da309db082b4",
        "cursor": {
          "ref": "8c7b1318-9427-442d-8a47-9942f76e0272",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1af81ec6-1efe-49e9-8d79-67472bc74bc3"
        },
        "item": {
          "id": "cfffeedf-e88d-4cfc-8b61-da309db082b4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7d813828-6c35-453b-82a2-05e8123fbe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1556e289-c3a9-482f-97e0-eed300b870e9",
        "cursor": {
          "ref": "2ce97982-0e2a-4b6e-ab96-d0e16341cae2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5e543613-13bb-491c-aedd-ebf6c125d5e7"
        },
        "item": {
          "id": "1556e289-c3a9-482f-97e0-eed300b870e9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f7a1c4bc-7e5e-4652-b568-508932b404d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a0fd25-c3f8-4d1a-9851-8799ad0cb1d5",
        "cursor": {
          "ref": "27abddda-7e8e-4c02-b309-02a00cc7fa0b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f3941434-7f2e-40a9-a11a-70546952099b"
        },
        "item": {
          "id": "40a0fd25-c3f8-4d1a-9851-8799ad0cb1d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f0076b70-e047-4538-8c9c-de9998278290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903baa0a-bf3b-4327-8c74-ed916153acd8",
        "cursor": {
          "ref": "c72edf71-6d67-44d2-ac98-d4c7c651108d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "96fdf65f-9912-4a1c-8ba4-e2276dfe277f"
        },
        "item": {
          "id": "903baa0a-bf3b-4327-8c74-ed916153acd8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fd0bb2ad-9588-44f8-bbdd-478628cfc1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b876598d-cb12-46a0-860c-f950903b8311",
        "cursor": {
          "ref": "ef5c15c0-9ed2-409c-9bbe-4dfe53cc8152",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5a7c8f15-0dc5-4364-8753-1643f1409a7b"
        },
        "item": {
          "id": "b876598d-cb12-46a0-860c-f950903b8311",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "416f3b87-e1f9-4ca9-ac30-716981c1b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dca5b3-0503-451d-8b3e-0bc341f9e807",
        "cursor": {
          "ref": "34a9f6f2-d199-4927-aff7-a46628df1466",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f756239a-b03a-42c3-b779-94d2047cab1b"
        },
        "item": {
          "id": "e6dca5b3-0503-451d-8b3e-0bc341f9e807",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a38da1a8-f215-461a-9934-12a85b86dc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3265c5-3370-48b0-82ca-50a8702a146b",
        "cursor": {
          "ref": "df3d1d80-5abd-4a2b-a697-bf07b7ba8c54",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "430731c1-2f01-416e-9b88-daf2691c164a"
        },
        "item": {
          "id": "2f3265c5-3370-48b0-82ca-50a8702a146b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b1075aa1-1f9d-431d-8c22-323f2bb1ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba4105-ec11-46d8-b104-5868c49f93e8",
        "cursor": {
          "ref": "958498a3-8ccd-405e-8a4f-5ea3e3121990",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0638b225-6089-45e2-8e66-7ca4e6b509ab"
        },
        "item": {
          "id": "cdba4105-ec11-46d8-b104-5868c49f93e8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6a8d009c-3c9e-499d-ad03-aae643e4d37b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d9c0a-15eb-474c-882f-9586a7ffe59e",
        "cursor": {
          "ref": "b16c16d9-858a-459e-8dbe-a64a1e4898d5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "83d3ab63-b0f9-479e-867e-4902e3c22da5"
        },
        "item": {
          "id": "a41d9c0a-15eb-474c-882f-9586a7ffe59e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c6523060-4a28-4b3d-bf21-9deef3c60b8e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e61b532-42be-49c8-b64b-182d1a6df6d4",
        "cursor": {
          "ref": "181dea4d-a5c7-4f8a-b261-dae6ef5081da",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0567e69e-b195-4290-a56c-9f148c8740bd"
        },
        "item": {
          "id": "2e61b532-42be-49c8-b64b-182d1a6df6d4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5c2fdf8-a942-41a2-8442-e49ad26aa641",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf5f9c9-dc6e-42cb-8a5c-8c5a1f698c4d",
        "cursor": {
          "ref": "30589a7c-7774-4fa5-a260-e5b956241117",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6c06782f-7161-4622-b3e8-399b488cd91c"
        },
        "item": {
          "id": "dcf5f9c9-dc6e-42cb-8a5c-8c5a1f698c4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1f476859-2d1f-4be8-a993-fa776216db56",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66daf82-9e2c-4895-9d65-f1dc20fab04c",
        "cursor": {
          "ref": "19a5669e-e158-4159-9ef6-3d3ac4394f96",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "14716899-952a-47c8-940d-a718ca29a233"
        },
        "item": {
          "id": "f66daf82-9e2c-4895-9d65-f1dc20fab04c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7e1c0c2-d9d4-4215-8477-08fc95737683",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66daf82-9e2c-4895-9d65-f1dc20fab04c",
        "cursor": {
          "ref": "19a5669e-e158-4159-9ef6-3d3ac4394f96",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "14716899-952a-47c8-940d-a718ca29a233"
        },
        "item": {
          "id": "f66daf82-9e2c-4895-9d65-f1dc20fab04c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7e1c0c2-d9d4-4215-8477-08fc95737683",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc3e2bf-a5ae-4985-9c8f-2b1fc4a971a5",
        "cursor": {
          "ref": "6ae6a7a4-ee5c-45d8-9f9a-6a47dac29e3c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38e942bd-978e-4ddf-b7d6-f145af3f9630"
        },
        "item": {
          "id": "cdc3e2bf-a5ae-4985-9c8f-2b1fc4a971a5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cc6c513d-4630-4476-8069-27f1c4eb9481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89451a27-577c-4573-b2d3-62ab3bc8c2d1",
        "cursor": {
          "ref": "1d6f4b09-8373-48b1-9429-b0376eccb077",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a040762d-4f21-43a3-b757-cf25f8aa2cf7"
        },
        "item": {
          "id": "89451a27-577c-4573-b2d3-62ab3bc8c2d1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "37a543f7-d265-47b8-b195-fca88fe70d52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}