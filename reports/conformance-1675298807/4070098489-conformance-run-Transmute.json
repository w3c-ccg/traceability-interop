{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9271a286-87fc-442b-9d82-e29d98f09a18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ee7762ac-33b5-419d-84c0-efcb8fef78c3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65529d7b-04e1-4bfd-9deb-e7dc2fcedce3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf0d4851-11ce-4b82-9d56-d94db07eaa85"
                }
              }
            ]
          },
          {
            "id": "89d98fc2-9505-4738-a813-cbb7e1f109d7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17c15b6f-81e2-45ae-8835-873329cf833f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb06ce71-ae95-40d9-854e-13fc37012a12"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6bb623cf-b0ff-433d-bdc1-21e41e68f7a3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "063282a7-d683-41e8-aa6a-3375c35434cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "604f2a5c-e41d-4cce-8f57-ac09aec76e3a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a10cff0-7bba-4160-b40e-0d5da23ee9e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a239ebe8-3db5-4fcc-a784-e853d8c4a302"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e2db6b7-3985-4472-a450-d16bd727b669",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "015cc14a-e2b8-4038-8f24-b99629a3830c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5891b038-665d-4271-9d42-66a95bb3873e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75ebe612-8535-40ab-a272-d319c6a2f296"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2153b9f7-3a83-45de-9cb7-823c06032ab2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "30502b50-f129-4cdd-8d30-8908fbc3a357"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99376bbd-465e-47f1-b3f4-1cbe4602caf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "845c2881-cb15-4215-af5e-ec395a6f1254"
            }
          }
        ]
      },
      {
        "id": "a5049000-f18d-4939-9eda-ea7cc7d8a47c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4fe5881b-7552-4ebe-8994-328d20b41c41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25c2176e-1a84-4046-846a-feee3a7e471a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "732c176a-a294-4ed7-b468-f818e3e7de82",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4ddb00-550f-4b06-8b04-1f259e778590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7ba3af-7463-41a9-9d04-a536650a2676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccc85bd-2ba7-4725-9487-c71a53e83135",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe02f96-e905-4a32-ba6b-147bd0f3b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8da4db10-3d36-40fd-a2ec-f4909ce0251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf34394-054b-4c85-97f2-0622d6d2c2d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c1b4ce-bfbb-48a7-84db-c543abf1ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78a7b261-d354-4c87-b0cf-967698adaa37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04f4ede6-7510-449e-98f6-722722d40537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5d2ec4a-7990-4a3c-90a7-4d62b12f6981",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89b8e13-d43e-47a7-b63a-41ad311830ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b68c273-182c-4c64-bf5a-e18870129620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873e0959-30da-4e26-9ccb-4ce1d50fa4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814bb136-c006-4aff-ae08-a3f0d1d8ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6812bbb4-665e-492b-ab98-44371fc1608d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918fd2f4-3166-4408-9a01-c2663a85a86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "684e0996-c8cc-47cd-9db0-297dad2c41a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d25d71-05cf-47bd-b624-a8e967604aa2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7826add3-ef14-4696-8977-22a51ff6b6c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff218339-31e3-4a6f-8395-0ff17df9fc5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62feaf08-c447-4c42-8c0d-deaf559dc45d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a1db041-b901-463b-9747-c7c92d9d5b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe14005c-1b46-4244-9959-a04847701d02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf120092-e736-4496-825b-4d0bd608263b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ccaafa4b-7ca2-4d83-ab6c-449d79126c9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "187dddee-36d7-4704-aee7-c2fc2e0d67b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "286289a4-d3bc-4c4a-97d5-12f983e21ac9"
            }
          }
        ]
      },
      {
        "id": "c16cc91c-a510-409e-8ec6-d33ab62a4df1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "03394843-3f33-4240-8e38-e4a50b61be88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91d745d2-d505-4d83-9424-95728eb0ae9c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f880f6b-e74f-41ef-80da-ac823260266c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6879b6-cb44-4043-a864-7f9ba4b9986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8ac5f5-32b6-4db7-8482-f6ed745b6a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66825036-2826-45c2-999e-902b8f26155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f196f0f5-f19e-42cd-879d-2bb5b7089052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c59c06a-c7c2-44f9-8390-95572ae10492",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2bdaff-7bb8-480a-bfcb-29143ec53cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62111173-0c20-4eed-9ab8-ac17cf5741ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f793df-c6d7-43d8-9e1f-349bad72e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3164d073-79ae-48d4-9cff-f8de80756ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b91136-02fb-407e-b2db-f121a231da13",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbbe42e-d1c0-4fc9-8892-edbe812fe1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e517484-aedf-4c55-8abe-9fd2d0d50e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b42750-fda2-4ff2-ad7c-6e50a64ac27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3186466-b79f-4d46-82d5-e0122fa5317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54c2f03-548b-4ffe-b023-22af0cda9fc0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f23660-ca83-463d-b081-c6cb7730d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1957146b-8e6a-4925-8465-669d26013c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3501925-f319-4698-bd81-4485e8d47ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a20f10c-9688-487a-9eec-a79c456df2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac155054-ecc1-4406-90fe-99e0963c3229",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d09e381-a78d-46b8-a732-28107c44514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cbe7ff-a607-47fd-aa4e-855212a42270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12c9b7-cfc9-4e32-9d89-470d7b9924c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99cbc2be-a98b-47e7-82f8-dfb225761fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8708e9c5-d12b-467b-93f9-258b77cda688",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3215214b-ef1a-4d2e-91e9-5a92aeb0ba8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7994a6f1-8590-4041-9324-baa3601108f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa378da9-8a12-4b26-a3bf-fd3f89235d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "963d2a57-906e-43d5-89ce-76b5e6003bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5f789d-899b-427e-873f-1e4a50ce6843",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b4f90e-314d-4e35-b041-fa4e00bd634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b35554d-2cd3-45ed-8dfc-4bf50a2a81fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1056e04-ff05-43d6-a79d-bb40f1e3fd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5cc743-fd61-417a-87c8-5950c9027774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cd8f6a-78b3-4c7a-a609-51ad5aaa19f0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676fb7c0-a7ff-47b8-8f6c-ee63486a6359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc246d3-e988-40ee-9583-c30c7b781cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dae29b5-ea48-4277-b127-78983da1d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7db5c4cf-99d6-4849-be63-30f4baaca4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe0afa2-454f-43fa-aa57-b54470e90037",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db566cf-02d1-445f-a874-b1dccc2b4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8505e9be-110f-4503-b6f2-299e8304d3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1fe0ee-e84a-46ed-bbf4-c34e289cf570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c692b4f-957e-40a9-84d2-e37e1b8b8605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3945e17c-8220-4b53-a0a0-576c2e570cc7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ccc02f-cafb-4e62-bc33-898ea7973514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a69223-180a-4f52-ba59-cbe9c8a562f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92695f6-90ab-43e0-9f67-d66a39e99b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa60c89-9d75-47b5-8cb7-999bfe3f65e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474d0fa5-a223-42e3-9c5f-856c929fbab7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d095c0a-585f-462e-8727-bc5cb4a9fc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055e5d8c-22f3-4d5c-8a13-1932f40a21aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b66bd24-47d5-4879-ac34-2b2029f164c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "642c4d6c-3213-4547-82dd-21176e7fb9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e6f20c-d8c0-4adc-abee-9819b6f51059",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d549b9b4-4f3e-47f1-a8c4-143a6745344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931fda6b-cce4-4a5a-a822-37b7305eb56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09577a-44b5-4580-bd9c-100ca1a3852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff2187b-a083-40cd-a674-054c9c7d94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55edf8e9-5af9-4554-896a-f174b157aa5c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09536d27-4695-4e20-a37b-641ee8092b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a483c509-267b-46f9-b0db-7f3d4e8fba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ea4196-113a-4de8-b78b-90b4b43be02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18aa953b-e025-4eda-8ee4-abc6739f8b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7d57c0-84cd-458e-9c2d-5e157f1b9eff",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72887791-001e-479e-b1bc-dd04ed493a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b678e9e9-6408-4577-b16c-f2ef6b269c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f40275-959e-49bc-b287-3c633f684f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20f15f3-7154-49b1-bb54-a191c5b850c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf5b534-f3d9-41e9-8128-1fa57dc79d2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd54fd2d-6c20-4cbd-b504-6aa643fc97bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ef856c-12f1-41b9-bbf2-2e5a4131d95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2136cf-d355-4d65-be12-11a724d07d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946232a9-e454-4fb9-8e99-425395331fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bd64f8-79e5-478c-ae5c-edf235140967",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8d6a60-b21d-40f0-9bfa-2b59bc0523a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cccd495-9461-49d9-b3e8-531b1d2c5c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea6fecc-0643-48fb-9619-3c45509bc355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f10edbbf-374d-475c-b685-df4e14e949bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58185d58-7bbc-4778-bc81-1a2fcb757ae2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417290a-2b13-4883-96fc-dc2856d7aea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fafa94-b084-4263-bd5a-d96d2c47994e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e7b6f2-7eae-4db7-8b47-c4e948e93adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1f077c-a91d-4722-a9af-3a7634cc6603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fba610-d148-42d8-9b5c-e806c98496aa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62781247-10d0-4ea1-8270-a94ec89d1e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8acf1a6-427a-4889-8913-d87be98a820e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e54cc7-0ce7-46c1-9260-4a6c7b04ed69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22acaa4b-a485-4e87-902c-0db739513771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3a8863-eb51-4f6f-bff5-77d187c6bd01",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ac9fcf-3d02-479f-9e07-5c4f4516ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857890bd-7484-4eb9-9f7e-1e683c4a15cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2786a59b-3ad9-41a6-84b5-fd6d5316c90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0fda5d1-a0d5-49e6-8af4-0c3ea611c5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a872aa-8577-4953-a0e4-37a97d658a83",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc05f2e1-c9e4-4c16-b243-07dfc552fb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7af41a6-7886-4d8e-ae31-503bb04d6eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb39d36f-4cf9-4cbd-aa69-ec2a9e9ec6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41f32b0-7646-4479-9417-8e2651e5b745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001f94b4-760e-4096-95eb-aebc5cc8f9b7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c50d5f7-61b3-45f6-b4b7-78a0607b98d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7766726a-a7a5-4a76-9499-2a2bc356d927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e0dd4-33a6-454f-a55a-4b3e8791b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d9b3d8-6979-4715-a356-9e6fd6847cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cad1f6-d4b5-4982-a2bb-efdc61427514",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f21267-8a00-4460-8028-9350ef215e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c7b288-d710-4d81-898d-8382e72eea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0860209b-d97c-47ca-83a7-49353a17618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac13797-5ac6-4a33-af43-45bf9e7b6796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8083836c-523d-4a14-8221-0a1f9c21c4ec",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba23354-e934-498a-b70b-4237fa112302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bd6059-9ae1-42af-964a-dacfd1206b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c6175b-8596-4c8f-a256-e3b4f8d6bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53782252-cb20-4296-aec4-441c3a9ef269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072743e2-fc25-4620-87c5-6f08ce01e78b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8420751-d716-4a81-aad1-d69727c9990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a5d94-e8fa-44df-8e30-8c9f14e056a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b472b4e-95f5-4bad-bf7d-e8264de38630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0def1e-82af-434f-a91f-a2cf0ab2d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6a9a21-4aad-47a2-a463-23fe888b5d18",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb02d8-f889-4bc2-b0b9-21533e16783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78db2dc9-f8f0-4533-8383-bcba1f2e9d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34299180-40cf-4785-b801-ab940da66785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79385755-2c27-45c7-a7eb-296602143393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac40d2ba-798a-494a-8665-da54bb2dd3b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fed87d-8f07-42be-ae5c-c82ec2c4136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab3ee3-052f-4000-afc3-fce5f593b849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d23df5-7b36-49f2-a1d1-eec018292d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af0b0830-0d4d-4a54-9745-11966b0a0545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda02ef-611a-4e4e-8584-0e2dd6e11a28",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be36e806-2d4d-4d65-ab74-e385cf43537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae5d896-f7f7-4d8f-a64f-b88ac332316c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d012e969-4a7f-4fc4-8c8a-f904c58b83d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2de624a5-c512-4a8b-bc1d-7f1f27e74cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d959a8b5-8aa7-485c-9658-1efe0a497705",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d03f74-9027-4539-bd08-17e8de5b43db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ad49dc-c9f5-4ff3-9c80-9a01febc26c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f2b800-f24b-45f6-b66c-49eb157d40ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df22dc5b-34c4-4b38-92f5-04f0b7b644cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e83fdc-11f3-416d-bb5c-7d82f9d70741",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a91e22-771d-40d2-9be8-079ee5f0d783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e67425d-232a-4ffb-94a3-68b86963f4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de8533-a668-46e8-9f3c-d290dd8df5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23dfa588-74b9-4bfa-92d7-0409eb4c1b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502fdd0b-6848-426e-90ac-0e3f6e849c8c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4b61b6-13d7-4e93-8488-5cdf055bb555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bb8237-c3c5-4005-ac65-f0d835458bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cdaaa9-e5de-414e-97dd-8b6aca07dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08222178-aeb2-40c5-8d41-2d104a9cfca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee96df6-35c9-4b5e-a41d-345406466fe7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307ff7a9-7d33-41f1-bb86-3f2cd7ac5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f75aba7-f3f0-4ab5-aa80-46c24ab88b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ac79f1-fbd7-4514-8b6e-98613c5604a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26628171-06c8-47f3-8ffb-ddfdb5617442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37c237c-e3ca-4401-b87e-13fd03c933e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e911f10-529f-43f2-bd80-b53fef13f1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1186993a-8d07-4773-8630-6c2ece8a8666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae996e22-cc1b-484f-b2b9-590c90fe52d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2060263-71ae-4211-bade-703c595a1d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ced069-7c09-4948-99ec-3beb211fd610",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bbab31-53ea-426b-9803-bbadf0567834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bee64e-bc9e-4062-b711-60d583f279b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e604da84-5e0f-4fa1-9a88-e3ee68958e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37cc8ec6-4c31-4526-a998-5a1dd0ad42de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146e8fcb-6723-4660-92d5-2e4d4957d2cb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aa7df5-7d44-4ba9-b439-3f470634efbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21c9ba1-b8c5-42f1-9ef4-c61fc1acfa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2eba0f-613e-493f-be8c-1a460e743873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d031c6-f453-4bd2-83b9-5012f107d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21f392-7239-446c-b1b9-bcf98a20600a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be62b461-3726-488f-aab9-600ba1534af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc18f92-03a7-43ae-a57e-223dca8461c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb28c2-e9fb-4fa9-906a-fc7446b89960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e67dd4-3836-4ab4-9661-43d1e39a028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60c3bc-44a2-46e3-888a-066ca7ff7c75",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf331535-a43f-46d4-b7c7-39ced9d234ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2123205-7eb9-4d6d-a398-e83a6aae3b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082552f3-3953-403e-9236-660bac59cf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ed8cc3-c1bc-42f7-9d30-9ca32b806f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4685adbb-cfc4-447d-a2be-b17400426759",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450e4188-9c64-4061-b40e-903a0b52a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355bb0c3-c025-4eb3-9501-fb86db14a4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffad65d-b8c2-4b5f-981b-1ede8067f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "090ed2e7-0fc1-4321-b3d7-f7fc0bcae729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd622fc0-59d3-4ba1-a160-fa4a30e4b84c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274e4a02-2745-4852-9f45-fe7fbe3c7de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a43833c3-cdf5-45f3-8b89-6b58065ecb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca71578-dc4e-4480-9d11-9f51966194fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69b9c23e-b645-44ec-afb9-93b27e8c4048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d298472e-5490-4864-bf13-26c95feb6e3a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efaf60-b83e-461e-9160-cab8674bc03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0df0f9-511d-44c9-a006-9969392843dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bfad6c-731b-43f3-9ac7-8b984893e97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7574fc06-6865-45af-99f5-a0cf46309455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5846ef24-6722-4872-90cb-f41c2037716b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3285bf-433f-4f78-aacc-8376440e76ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314969c0-a23f-42de-b5a1-dd25c9e851e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f3e627-d14b-4f06-abd1-fae61e701ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd307387-9145-49b6-ba89-3553a7e628a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f572701-072f-40ce-acbc-e69495427bd4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7c0765-f457-48e5-ad52-dec02763f9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e793828-9ae5-4774-a22a-fcf7a0b57986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac12b701-7339-4b2b-88a9-e7e4bfe256e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0745dcf0-5332-4140-84f1-b8217dc0b6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaca912-9067-45e9-841e-495c135c5603",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722465bd-23fb-44ed-a3aa-57029c3c45a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3136f559-734a-49be-8b0f-b49e19237e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209aab7-4be5-4b50-8c12-de5947ba8681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12590439-8e0c-41f7-9a9f-501815c3b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da14d82-6432-4c41-8e1a-c55f334b2c8d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbed016-6ebd-4b5b-9ca1-2759fe976812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0746274-f883-42e3-8c68-2f3dda8d97fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d52fae-fe5b-4e67-a022-76f840e92669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02954cbb-47c3-46bb-ac13-3e09c23df0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e8ad45-0b77-4db1-8ef5-8b213b42ce85",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97864cd-ff82-4841-be11-f79b5ec57c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c678b2d-9955-4d84-8e06-aa11ba5470f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331f540b-2b81-415c-9338-6ed62d4dfee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0f53f46b-7f8d-4908-9155-182b99062dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a29b1c-5333-40f7-a88e-098df478e1ba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f6083-6d81-48ac-9030-14297b63132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba6c8bb-fc11-42bf-b294-1bea051de9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ae4c78-c0dd-4c84-9b78-d3260bd68f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4605ab69-890e-4314-aded-af18cc3f42b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07be2cb7-941b-412b-b28e-0a91016149f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa22439-bbc5-40eb-ab91-6fc1a26e4c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8958f6-c2bc-44bb-ab3d-ad775512ddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbac44c-c801-4fc1-b2a1-a7aa313265cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b143a204-af2d-4f71-a3a7-6773e5ab5cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd95a03-2a62-472d-b6ac-05f8a33c43ed",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0a50e-9b08-4da1-9136-5db86d13732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87914446-5a99-4a45-ab71-2e7397b86259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35222fc-8d45-4876-9acc-4dd8fe8a4e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f75580-9f12-4aee-be9c-829148287dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e06d9b-b576-402d-86f7-59d757df0940",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef010ea-f997-4773-96b4-ceb6123a2b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9280e3b-18ec-4753-8eda-ddf733d66ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9f66aa-1864-451d-aa0c-9ede1ad2374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2fcb1c-59f1-4110-967a-740e722f53cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19064c6-4375-4242-99a1-5fec403060c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13753321-2570-4d40-b347-603da7acc6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54ce839-710d-49b1-9d2a-d3920a0049e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ca9f3-499a-4509-8afd-f2c9b8ceb0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2e28d7-ff77-442b-bc88-c261410b7b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c2363-ccdf-40d2-9e88-85bd026f4994",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4afbcc2-0d6c-4a19-8221-004ff603d41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02584c5e-08ca-4d41-bc62-c5f64fd8a38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9305d94-81b3-4640-9fb1-973924e4294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e8f6a6-fa90-4d8c-865f-41267fe5c3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54a8568-bc7d-4051-82e9-ceed6e03ee41",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb43c0e8-d9da-48fe-bd4d-597a9121bb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d749a0b7-3ed8-455c-94d8-bfc74461b286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5a8b1f-cdcf-492b-bf6b-61d01ce632df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25c2f122-a751-4f6c-940a-9d87e9b93be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d8c022-9f1c-44ba-8a31-a417f80e74a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f5cc9-46ae-42e6-b9a5-0c242bffe0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5eb635-3815-4d4c-b9c5-6ca5b1a38868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719c79d8-9c78-48c1-ba1b-064ded47fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3560cf4-47e5-4380-b0fd-73bd08630355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f10132-73cb-4058-ae64-2443a3c38f70",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091374f7-2798-4a80-9f90-5a5538898309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cad729-15aa-4f50-849b-b0b22ef5a3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b3aeb-f324-402b-beba-c9cc15a4d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba08932-952b-4b06-a366-1cceba3eda71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf0f416-7397-43b1-b0a4-9cc64cc754a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e3db36-a875-4c0d-b4a1-bb3e283b7b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5de417a-901c-4c91-b035-0de29adf1365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d8e624-eb02-4a53-88db-834ae3f29a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74d853f-5440-43b9-876f-f1ac12521015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f84e5e9-9e99-4914-ab70-8d9f7bca954f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310ba5f0-05e1-4d5c-822d-94a51817fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e81982-bb5a-427c-90cb-2d9f5bd1fb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce08b6e2-a2d0-45c3-9d03-d7a1d915a31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b397f932-bb1b-4476-980a-b9be4b7b2d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c33288-a166-4244-80fd-0e2b94a61e73",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b46b577-e727-4b95-bd62-e40f72e0ae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13b0131-6de7-40e6-8ff4-ac572a7d3743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb15c53-bd9d-4733-b9ea-8909c321c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad70e8d-6463-4f3e-8541-d0a33dc733bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8526dd21-d5c1-4a2b-87e2-6a533706ed44",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d54a02-d059-4f98-9eb3-97610aeb7091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13f91ce-09ca-411f-b060-288fccb1ffc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d889339-f51f-4f69-b337-6ce922c23eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b550a275-7da8-401a-8874-9556cf899ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a762e26-114e-494a-9de1-9e6ff5567eda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b77a15-8ae4-4775-ae00-7cc0dd21c265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcb4e24-727b-4cb0-a78b-1a656d3be6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1317703a-148b-4975-ac95-446c997b9693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1abb0f-0347-4e52-82cd-3217befe0177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b097b-0788-4a2d-a6de-c26e24355101",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f7a093-5406-43a2-ac19-1df22be15a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e7776a-a260-419d-ae32-fa2d7312e999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac31afd-8484-403f-bc20-f9554b935710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d97eaf-96cc-4e43-bd5f-d49611369af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4c0364-4d3b-4162-a8fd-9277197f38ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aace87-21ed-4cd2-9d3d-61790482fea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db8dcb0-1e3f-439a-849b-6d1a4fadd555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68be6d63-7e26-4400-867f-fd2119a01686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7069d536-1daa-4970-8266-8e4844680083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a578dfe2-dba9-4066-afaa-e9ded31b8570",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0350d8de-d9ca-41f8-a5b0-bad85e23f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d57265f-0129-4fcf-a53b-247d6f0bdc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beca22e-583b-4c70-8113-f7afab6564d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb7dab7-feb0-4580-b937-cd1b24b21a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef51e640-68f3-44e7-b2c9-e24ee7e160cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20548381-fe6f-4d7e-bcdd-21983162c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485c6ad7-e950-47cb-a645-4aabbdd8feb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139110a5-047a-42e6-a8d6-c7a79d0d4b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8877e6-4743-4c26-8f86-91224b2ce64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e04fbc6-fe6f-4c34-80e2-6f4c2761b22a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c8622b-8e28-4ad7-b590-f30a3653e335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb4571f-7ddc-4e9b-b99d-2696ca1d3008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba94273-aeb4-4ddd-a457-b68efde5e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "daa95522-fab4-4568-b0b9-be0031058a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6509e76f-486b-41b7-8ad2-b74c4e062006",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725e656a-62ec-4eb5-9849-81e4301dc320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ca8d29-81d6-462a-b612-a3b0cc65b45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec499b6-823e-431b-926b-81bad46999a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fe3773-0a8f-4d75-a1b3-30bfd865145d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a765b7c-99df-4132-826f-05edcf669f77",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d9d5c0-2967-415c-a4ce-c0b4ceff388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1e77fa-f3fd-40a6-acac-36874401b3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f7d4ce-38ca-4f8f-8c5c-ac96a6c171a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bc36e8-4751-4b1f-b8bc-ced3e28dbff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66b6783-0ad2-4955-81b1-d06d3c94b92e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8737bbe-8175-4f1d-a188-541ee77bc748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d2b717-cf19-402c-acc9-0a4fe267f532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea1e263-e58e-4b0d-a7f4-4549266b7e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a889c01-c7e2-4221-aa8e-58ea9d9536f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f13a6c9-3211-4411-aa09-a6b27e010e32",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6231c5b-f8ce-4928-a29b-de465bb396ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f625dbe-51f5-4048-a0c0-8c60ccc8ee0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f84b52c-54c5-4d61-bb5d-14a059683df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "515a5d38-8334-417b-bd7c-74529ecb03f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e127038-9d49-4970-a1fd-425585776fe3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49031f4d-70c5-46f3-9739-1542de847bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea687d-3afc-47e2-8f41-218d7054c288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f43c337-bdd0-465c-9661-2a79010d9ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9acc1719-38ab-4475-8840-e9666f1948b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072221b6-7945-492b-aa4c-b82580074866",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4019e438-cc57-4cd3-a342-1cb861b27b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b638fb6-d817-4593-abc0-5c2631a5f2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412ed949-2f32-40d5-bd11-af6e2f347909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a8b691-c3da-4fc5-ac74-4857f35dc17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4e7874-8a05-4964-973c-f04ab45bb5ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fa3857-c124-4e96-9701-53e76c235b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbb48a4-4a78-4d37-b19f-4bc3a18ecfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfd9986-adc3-42c6-a078-d3c8900e6aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1705a143-93a9-47f4-a62e-649118bcf259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ee5799-1473-4ba2-8bae-b885329a4312",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55180ff-2222-46c1-8e66-e5e4ee4eb06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89c517f-81d7-45eb-8c1c-fe278aaa7579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed8baff-0ffd-48cb-9da3-cfd5c6b91318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1767bbcb-c75d-4e1f-8160-f3a199159687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f7bc7b-b03f-4be5-90dc-a780e2a299f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d5b095-6236-4c9b-84ae-01b3f18bb370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb8afeb-9e86-41d1-a6aa-69083fea20d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c00463-91d4-454a-92a2-7f5a90a39ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7f7770-7c5f-4792-9c69-21a1961914ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e31e62-2bb3-497c-8fe2-9c232b1a39ec",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da172cb-0a30-4f5f-8e07-4ac3599c4042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1263aa-cfa7-4bbe-aed5-1417a476ac9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08ec77e-b234-4beb-814c-ca18b6f64716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84396e3e-64b1-4fda-93bf-cc023451da14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c02e55-388b-4592-8c6f-b2f44a914833",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087d45be-1edb-4b34-8479-a5e609d20783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de40cd60-9193-4a32-9294-01ae8cb6537c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96982a1f-84f8-4d86-b619-fde6731379a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3472760c-2338-4787-865c-4026258d93ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8154305-ca54-45d4-92ba-c721f25dd183",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9186bd95-0d63-44c5-95c7-8fb72532d335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a26eb5-6294-4ebc-b661-ae6959b0fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362613e9-d343-4b88-8cb0-68af4b7d7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e533a0d4-6293-4a40-bbb9-645f94eed7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964f591c-5efc-4723-b753-6522330f61a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b907311e-5a3a-40bb-9b01-91170da1aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d4f525-6fcf-4376-8699-8af994ea7dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f743d76-5705-4d17-b413-e0758bfa976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1dd401-86ed-4d07-afb7-f05a45ecd067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14a8f23-fdf5-4cab-a7e2-2749ed9292c8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1131f9eb-4dbe-40b5-8c39-b4b1893e026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1444a01d-ca3b-43d4-a9b9-4065d20def98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b927343-4292-4e4d-8bc0-5a01cab991bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe20b6fc-cb3e-4d7b-918e-68bb8d6900d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b863f2-99ca-414c-95b3-7f1cefec4442",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4999b466-c06c-423e-ad5d-50a4f776ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd65c80d-724b-4cdc-8744-9a525e6de8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8d775c-8f18-4bf6-9993-026dcfa23304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c91090-f45e-4ca7-b1f3-08035aea35d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d22f0-9063-485e-80a0-ccdf2cdab17f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23402c79-8f90-4598-972a-dafc5c715507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e09b5c-0752-4f66-80d1-d7c50e0ee498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e4874-2261-499b-a8b8-ce712651d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4957dcc3-04fc-46a8-a8cf-73348f7f76ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611e178d-9108-4fe4-a05c-8750603a2cd3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fc5036-2e57-4882-9c9f-892a69eedda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd05a29-f734-4082-b4db-97acac1c0587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6bbad-9acd-4d99-9ee1-88e3ab397091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d874be46-e012-4264-8511-d4f90b3a8efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d9ac0b-62f4-48b4-9473-d295894e0312",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c45cb6-2786-42b5-9fc5-d55e2e0e44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea165c5-3fbc-433c-9c3e-91a0f84299dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec2626-5e45-4069-9c06-7e528d1523bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9398ade7-41d9-4418-ad9d-34e1a4bd1b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edba73f5-c082-4cf7-8485-2b573f0d3ca5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16742a9c-3c94-457b-bd38-ce106a5546de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac32e19d-8c16-4c5d-943f-d5971647a6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1996d688-af80-4750-aae0-5e24ca5db1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ebf839-812c-4291-8155-ed722a2b4470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3190dd8e-b738-4c68-b653-e2c498ce9814",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666e4c8d-7098-4837-ba29-19f8cee2310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9f5567-aa7d-47a5-8e8d-b66be076c919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b365b5-57f8-4fe5-bc1a-45a82d1804e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7ea6bc-4617-4996-9a53-e4eb13ab0eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d572110e-7a04-4371-9c08-e35ee2a96659",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f3421-4397-459d-941c-04fc3c07a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bf6367-3fe3-4a9e-93b2-251b6f9b881f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5ebf17-13c9-4819-99ca-aa4b02e25754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f22c0c-a5e5-4e7a-92aa-b4943a240312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb24c5a8-a167-48fe-b5bb-26b45a945f33",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506a2835-ef6d-47f6-8612-eeadec6963d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b21411f-902c-4b2b-8397-f4330b24543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8202da-9bb9-42ec-9483-2efc957aff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9ac1d9-7e90-4e84-b5ab-7a071eecad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dcd8de-6521-4495-a45e-d7bd9a48eb50",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a79e42-3263-44ea-88de-f50bc1cf42b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bef330a-4da5-4f9e-b55b-cf46fea10aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee42c5e0-8f4f-439b-8cfc-a793c4e86a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd36e72-790d-42f5-9432-63d05e44c451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4120f0d5-a665-46c0-963a-c092c6a4273b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38870e03-4a5b-4ad6-bff9-b2a54a3c718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48de658f-5486-4b5f-bf29-261837167067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a362586-d186-4f67-ac17-9f862039692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1c8670-9159-490a-92d3-ebcece54cfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db043c3-aaa5-4980-91fb-e4d41c2f8a75",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72fb2a1-99ae-4ea9-977e-748ac71c209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0860368f-6c29-4238-949e-fdf56f65cd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0f8a07-1af7-4470-8f99-a6227e9cd738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "030bd37a-2200-4a2e-a915-9b0733dfc5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633f60b9-10ef-4ab6-b693-9984ec0f2ef7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77647fa6-6c03-4bdf-a2db-91ba80f90002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9201156b-e228-4b47-b3fc-2cb6bebc2ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6214bf-0e89-4aa9-a5f9-1e047c3622c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de9a5c35-b268-4636-8900-597967fb67d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ad25b-1df6-42ad-b81b-f05fd81d667c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8fb46c-5fe3-40f2-8044-945ce4741d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc45c559-9d56-4213-8a92-1b4f04936315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2411d3-506d-4b1c-86a3-837c3201c2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e489a3-566e-4375-b244-53c58de068b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf58415-6699-4ef4-bda0-8d4fdb4e29ca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8dc068-507a-4e22-a1a8-de635723eda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7938f183-b944-429c-a9f8-7cfea7c49420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dcdfeb-76d9-4451-9f3e-abe3d7f7d198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db4c55cf-75c3-4c7b-ab59-f33c9405cab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3518a-d66f-4236-a943-7e93189baec9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1fc4e4-cd64-45f3-9ab1-c2c0910c2ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb94aed4-ecab-4aca-acfe-8ad8d337a7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f744b18-5ea7-4c9d-bbab-c7f06b427ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e15460-038e-4979-b803-034dce023aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655d480-f0e1-453b-88c3-67191f56e2d1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb33983-8629-497b-9a8b-c711bee14136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391617b5-975c-4e3c-b687-944465eb3bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28843c1-135d-4dda-b9f2-7ccfd14c9364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e121b3-161d-4f1c-bbc7-e860b5a47dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1974158-7010-439a-8a4a-651b95210a0a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fbed6e-afaf-4a13-860c-92c180db9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d9e7305-56ea-4f35-8745-db90d3219357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdbb869-8053-4fd9-8e74-e255592b698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ef95b2-67e5-4066-be25-7bc5882ad623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a2e8beb-9189-47b7-8f11-2dcdff68758c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "830ca336-a076-4283-ae08-740402d12010",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbee218-731c-4f20-9bba-40e7d2e252b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b5bf2e3-05cf-4240-8cfc-cdf2614c9b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4690765c-c1e1-4c5e-8c0e-4918aad1ee31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "06284b94-9bf5-43ef-b160-4fe7294f4757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba933b33-d3b5-4ac1-ae91-f14e96013765",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0f6371-1bf0-43f5-9b9c-ff0f2b1181c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d7ba76f-c862-4077-9c53-d3d453bc71de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02129b7e-f673-4b5d-8b8b-4c0d9059c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1f129625-bdaf-49b9-b4be-47877592f8a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288dab0c-4edf-4ad6-a364-a6e8faa6bc13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be8a7421-4bb7-4d38-a9eb-26151f4fc367"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4d92f3f-4753-4773-bfc4-8e8f04158a27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f93cca-7182-4dd9-abed-7d3ecfa021f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "589f11ef-ee4e-4b86-9743-3e64d95ecf56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dffe6120-8b9d-4a6d-bf96-8cd650e5c0b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a3c14ff-9cbb-4395-9146-4e8f1901d521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1012ac69-484b-445c-a028-ac91c2096ebe"
                }
              }
            ]
          },
          {
            "id": "cdafc68b-4dad-47e4-9eed-9140c435f550",
            "name": "Positive Testing",
            "item": [
              {
                "id": "651700b9-774b-4a47-9f0c-be59bfc6ec63",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e065747-d920-456f-8309-2c2ffa7a4755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e052ffb-a318-4608-96e6-e638563fe8e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3edfa36c-e280-424d-a2cf-5fcc6a187bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e435e1c6-9773-49a6-9a01-6b92dad0c20b"
                    }
                  }
                ]
              },
              {
                "id": "602f200c-297f-4ec3-ad66-af754e48503d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d788713-9c5c-4b07-b60b-d9465f17ccf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a721957-a5ad-4849-89b3-67b60947592f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee85b0a-70d1-4099-aca8-4994752d8748",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0d3afaa-9589-465b-8c3a-885403602ff2"
                    }
                  }
                ]
              },
              {
                "id": "5a63660d-f2c6-49c6-9b19-1103cb25e9fb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb56c76-45ba-46d0-95ad-714e76601afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab016877-c513-46bd-8fde-d8cb6505413c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa67f630-1d09-488e-8113-5c3799fd49aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "70c8fb01-4965-4e5f-aecf-07cf0be1d59e"
                    }
                  }
                ]
              },
              {
                "id": "3869c06d-a226-4f5d-a7a2-73e5e4b45629",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "402a9994-3948-4d57-8c96-3b426a3d9236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df880069-f40c-4789-b63b-11c87398106e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad6ec92c-463e-4523-90f8-88b688d5b9be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c24235b6-0f95-45f1-8fd5-b8418992c27d"
                    }
                  }
                ]
              },
              {
                "id": "4172ffaa-793e-49e2-bfbe-35a2d91169f6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "140d125c-77d4-4138-987f-55fd8a4d3bbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76462f05-c888-4753-bf65-6c0c303a5ddb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d846094f-9cb1-4053-a5c1-954bf341e645",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6c275b0-c9a5-462d-8d7e-048e0d10d9d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "172b5cdf-294e-412b-8b3a-6a2b062cd5eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1262a26d-4fbc-4a26-a1a3-d60be32001fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1e4a92c8-6089-4fbd-a397-319e1bfa0d7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99122d0e-4f3d-458c-9ff8-59e949ee517e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba7681ac-4dbf-43f6-af01-bc073c98529d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32823d7e-4c08-4d9c-9344-153db3dc6d0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "680e6b2e-fa57-40f5-a624-33be359009cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "402e3554-211d-4505-acab-8c38ed9a5a5f"
            }
          }
        ]
      },
      {
        "id": "a7c00546-4e47-475b-b5c6-02d1ea9d2fcf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d337ff1-6e08-47e1-aa6a-47133f54961c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f535331a-8752-4a8d-9455-e9a3f82c45c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9b2cc02-9aee-4ceb-ba54-8f92ebffd0fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67496ca0-8106-4f06-9ebf-199e274d4cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e15c1b9-2f03-4953-92a0-87e677317176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340091d6-f68c-4028-8dd6-6f52a156e52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b96863b-3926-4d7e-bcc1-a09376ce21c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78805707-4094-4806-a356-7084f2b7c5db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dde815-ffe3-472c-b767-fffdcfcfcd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5676c1-adee-4a0b-9119-5969dcd948b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a464b-d45f-40e9-aed4-8ce32b06d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b12f701-60dd-4554-adda-bb1bf8c35273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490b63fa-617c-4bcb-87f5-67574b45cdf6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c3550a-12b1-4893-a0e2-7adc664970ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9be1f4d-5f99-4b71-aa13-d1f8a329fefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6419d9ee-9055-4712-b98c-aaf472389782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc7da29-9381-424a-bfe4-686ba5710d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b519d4-d8cc-4379-bf8a-9d4016306e37",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0dbd6-9433-4f63-8dcd-4076cd35e7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f83d019-5e36-4e84-b3a3-3746d2d1d4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97980afb-2080-425e-b243-f993bef9a602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86522c06-b9ba-417c-ade2-d27a832b35b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfb59b4-ddb8-479a-8e30-8804d8ed4edb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78febd10-5f4c-4cbe-93fc-8e7800cfa66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1f4973-13a0-4aa3-bd48-780f72bee2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03298492-b18f-460d-8844-94e7fa050697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8b0ab-52a4-4bf7-83e2-66fd5a3282bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26caf23c-d147-4b2d-bc6c-352e856c0579",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575f62a3-21e9-44aa-a8c6-ba21ce37c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be33ed9f-3956-4038-aa6c-e027fa974cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9137b60-4779-48f1-9464-4232c37df330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3c37bc-ec90-4aac-99bf-16f98ae525f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8904731f-36d8-4b6d-8429-ae28f6539518",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dad9f9f-d6da-4b6e-9aed-88b80c889db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c631e1e-2d9d-472e-9eed-2c3703e3d375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5155a1-af9c-43eb-b220-df5f93273291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "730164da-44aa-434d-81c2-763509f1b03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92db473-eace-4548-b5b0-efe04eec918a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be188ae-e35e-44ec-9127-c0b4baa74f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48625436-5438-477e-a02a-6f4f44979913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0c1900-fea3-404f-b862-84d581fb40b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cb372e-62e5-445a-8950-9e254b71fc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce924ad-c21a-4ea3-8720-0be7d06f83c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc82e4f-096c-4709-b31c-03a9615bd723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d3e550-f93d-4ecd-90b1-f9d20c1029f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1435a-007c-4225-9c8c-babaeebc0118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5a3215-e36b-4e0a-8504-db27f759b817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84daca21-1a0a-4a92-bd4b-71c07c02c91b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f7a40-a154-45de-a55c-5c2f4a0eaddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e54129-c02c-4ce4-baad-0a9240259f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ae25b0-dcd9-4182-a5e9-f125913b395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1dacab-a2cb-480c-b5b7-604484c2e0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a066072-7f6c-4a74-b001-ae13342eaf68",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d35f68-0ff1-4f1c-a294-c365580cdcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fcf853-f6f6-44f3-95b1-244c41e04193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f7c4b8-da1c-4ffb-87d8-0785fd77a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "60214945-7dc5-4022-b586-012a1c51eb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5986d5e6-3aec-470f-a318-6e43e5ac3e02",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6bf11d-d9c9-47e8-ae65-827fcf72c80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09ff202-07d1-40e5-a2ba-496910621dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a3a6fe-d57e-46e2-b2f5-536cb61809d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6a4a74-0204-4154-a08c-f64a3479748e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3600d90b-87a7-4b9e-b8aa-d11e885f4adb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad012c28-b58b-4e85-bfb7-3f51844c375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c455198-6328-488d-be95-fdbfcc678a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c2734-f02b-4208-bfd8-fc09f7375895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f7b8e2-fbe1-4bd2-8d21-3d7a59e2720d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69e77dc-67d2-4832-8506-3a5a6e21e796",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd4bd82-f934-4154-ab67-44d48f8b91ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03dd26c-ce55-4bb0-937f-929e1f20e701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533f80a6-d453-4100-a7b2-3e71df931d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92adc02e-ab35-430e-b3da-eabe83de9666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3877a2-6b76-4a34-bfdb-72693de5eacc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9b4e2f-5a5c-4b31-b11f-e9c56fefd9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5bb19f-aad5-464d-b1b7-aeab0877c113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337d8c2-f867-475b-8482-8b48328e5ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3430ba-7ea8-4e17-8bbe-f51618c59d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142a8da9-dc98-4791-88cc-3e9131e5aef8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88b5098-7526-4f19-8926-f405cf8bb609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ad1232-33b3-4ae9-ac3e-dd98ebec4933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e570c9b5-3465-400c-acb3-1f91739a1c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "030fbbe7-a996-49f2-9c9c-2fd1aa8c6bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7b4ca8-5a86-41c3-b2d4-cf82014770fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59341711-848d-4cc9-8c0f-79fb95d3236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8828cc25-e96d-48d7-978d-435b08864c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c4773-9329-4219-ae7e-d75072e57b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae90864c-13da-4ade-a68e-53c43a366e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab4a6ac-309b-408c-8a1d-1ab21d3d0d1f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a64ca0-a1c4-4490-b10b-85556f4e02a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba551def-6b4e-4a69-a935-a1313d700c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd8521d-d71b-4cd4-b775-1a7ad0810e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b262fb26-4816-4154-84f6-7f2f471008a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb39b57-859a-4ff7-9e6e-03898bb1e993",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9961cf5c-07bc-4c55-ad87-60509efa4ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad8549f-f388-4b29-a5ea-c4679401d031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e9a12d-2da2-439c-a2fc-1b55977bd823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "674d4cd6-d322-45f1-a5f2-47885f1d1cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ccbea1-be1d-412f-b18d-f4742e1f8068",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a88285-e33b-4193-b7a7-58b78dce6566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a4160-5b03-4dd3-9b67-930fd744ee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cfc19a-0298-42f0-b7ef-e9ef4d57b51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769f484e-7835-4870-a9f0-0af1401c525f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41fecca-c5df-4d5c-8a50-5ebbc6643a34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d465734-53c8-4860-953a-c7e1d2cfe1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7e7c37-cf15-48a2-a0d7-cd23d15298ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c575e0c-de8a-466a-8520-1b3aaa1ae990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b21f85-b7e7-4357-bdcb-9bbf51920563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e256583-9739-4f62-8ae9-a1bee82cae0b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7b95c-c6a3-4894-9169-0ef474f0c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9ad5d3-4aad-48e5-9377-5ff9ac7a2328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4582ce0-a6d4-46ac-9753-ce9f70c791bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35cfedb-215c-47d9-ab7a-ac1a8b6fe695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f27da39-3ec4-4a64-a676-1cff60d05a07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a78878-e326-4cca-a936-3b99d6a2c6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f526c4-1ee3-4639-a29c-5399ae9242b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db12e67-e629-445c-ab13-0d20be4d0fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e72d2a7-1890-4914-8696-31969c92528d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e17c8a-470d-4f50-80d2-03186c2cecba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739c1609-f96c-4bd2-8970-e90961ceb669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba93c19-1d9c-4dd7-8869-9b57e70cced7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee06495-d5c9-47f4-9d35-8084c3bc8ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcca7ecd-5f82-4019-ae15-369e7a2eb837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199bcdc-e17e-410d-a6af-8879f79a552a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868a390e-8e15-451c-a73c-0fac4665e065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81effd74-60da-4072-b129-4ad73f41cf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f08b51c-eb4b-46bb-9115-d2c85b1a5756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cabb7d4-8782-4ad6-bb0a-cca5c388b8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ffcb0-5ebd-4db0-923d-84042c1ab62d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63585942-1789-4833-b13e-8f853778f294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88f0883-c1d4-4e8c-ac0a-ab15f04dc125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adccda2e-840c-4577-a9e3-b8db215d11ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b622fb-32e4-4ca6-abca-e474bc907e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85783b95-d963-494f-9044-aa2b9a6fad5c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448f1016-a091-48cd-b6fd-f4198e21305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71450a6-a3d9-47e1-ba04-94729c967dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d87851b-870d-4337-845d-2b14fef1aefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b3f240-9839-4897-b2b1-d53fb133e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c41808-ab0a-4d18-b9d9-3cce8f176ace",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7212d345-4d13-494b-9966-4f5bf08c0bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5681c85d-af37-44e4-affa-6bd181282d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a491c5fd-3fc9-4d46-83ab-ca02b4b4860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b9b3a7-16ed-4d7b-9d0a-ca8c4ee3e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c859ce8-62dc-497a-b16d-2df590832e5d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d900b9-3619-49f8-8c08-57c7c45fa14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46d2bf7-6530-440b-89d6-9dc44bda7ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c76b95-011c-4194-a70e-52f657897835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b2bc42-b144-49e6-9f4d-68a50639074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a176d5-9a42-4a97-a297-2d43c1a87e2e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c94e8b7-25c2-479b-bd0a-1f09ca8405a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed6c10b-0afa-41d3-a206-87b181d0bf4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674938ec-543a-4954-8e37-65e3dbf4110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d278e0-bb98-4474-b38d-a51b7046e985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e044e1-392d-44e5-8d8a-290f8f2bc8b5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187b51f9-af8c-4ba4-9b50-0321b5e7932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b36c69e-612b-4f6d-83d8-7c998927ba21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603123cf-8c4e-42ee-ba7a-a0ef61ee6d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3792f5-a114-41f4-b2c7-5e12664f7af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bf49c-ffd1-4df5-a871-4f19e4569554",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2031bf9-89c0-4d0a-bcba-e51873a13734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc179e7-3603-4214-b8ff-12b2df2461cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690028ec-f037-4d9a-941a-743d4ae9d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4c164c-b40e-461d-9e8d-12a891152f36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50c9f3fc-8e49-46df-bb9e-2c5ca8cb10d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95369709-1ca5-4279-97d4-d9033b0dd527",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2363c598-2fb1-4340-b61b-14491e315d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5f348b-1813-4fb0-a16b-0c841aeb5661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f8f370-abf1-4f25-b095-5cf2b9b37e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c223e42-ccb2-436c-bdd9-728ad10e0948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f330a40-6165-4fad-b7e3-63f97eaced0c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe30b3d-7fc4-4f6f-879d-cf785961c393",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1d1f79aa-acee-4784-ac34-86bdbd83ed96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4639012e-9ab1-4ef1-8407-5d649a794f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09b11058-77cd-49ca-acdf-51e15ac54e5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41a028d8-019b-4670-9e75-541b64856a76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c529c149-0d86-4179-b14b-9d669c65d2bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e8c637c-4859-405f-90ac-6b8da71c6f34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17b499a9-4e29-4fb1-85b7-2df25af5a5f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "438deb5d-ad4b-4b48-9739-5ff91ab61493",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75515fb8-7098-4417-93cf-04f9c9dea6fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07797106-4735-4ae4-ac85-b24acf11281c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e521f5ba-a137-4222-a2f1-eafb6bb61321"
            }
          }
        ]
      },
      {
        "id": "04314eb5-9759-4a00-9510-b0ac2b8fa887",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e7c0d89c-3e73-48fb-8eb8-abed2c077b19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92c1c70b-8a6e-48e9-a2d9-6817b384fe7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01214a84-71f0-42fa-b30a-281d15ff8acb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7f8e3d-3187-46a4-b481-bd1156c094c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779228c3-ed80-4810-b04f-81df288804cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adf9e07-f0b7-40ef-a047-5d5ad4889f33",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d087338d-6d19-4361-ac52-31c14389b3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2596f4-b44f-4433-89e1-fb9521268fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b8389a-5a32-413b-9d7b-82db30a1cf15",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfbbcd3-0605-4af7-a075-388bbae86a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fc244f-f807-452a-8399-7a870f307baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4433e744-afa5-4368-9b84-318ebe914717",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cb7d67-6999-46da-b741-f3d8ef6d562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2193343a-254b-463a-95a7-a6224f47ebb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2293d4-fa4d-4092-a973-299d6a9b7cd8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79aca84-65bc-44cc-a332-6d43e82ebe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae43a2ff-6a9a-426f-a4f6-ccfc49f2286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca963f1-eb08-4ea7-beb9-18c3202db64a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a587c-68db-46cd-9f60-e46f363787e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e991d421-3ada-4b4d-af00-5bd7ac486715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5411cd-eea0-4b86-834f-9c8040a3a27a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b7dcaa-19e8-4131-8a68-b029de823d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df68217-82f5-4452-a9ab-289d6b6ee1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff1f8e7-50ae-4619-97ba-44f3706ed4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40953778-00d3-4465-8441-d575564b1da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ecc7e4-e266-4600-bc62-c7ae6dfbf496",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f60ae47-44b8-4e30-8bcc-75e301fea5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b767495c-53b8-4564-bf1d-dad9ee889086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149caa9d-36fd-4014-9cfe-072546d7c24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647eb3ed-1e0d-4024-b148-21e37b9df630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a178f7fe-10c1-4c4d-b31f-a9762b6e87ee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38138ad-bb33-4344-acbb-7fd4964c53f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fddc33d4-df46-45cc-a0ac-54d316f06645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5704746b-ca8c-4e98-b579-0a39eb3ec451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ef864e-5792-48fc-8e60-83c2fb403e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3bd939-eb7a-4d18-b112-a0a0ed85acce",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d4a941-d9fc-4560-a8ac-347b9b57ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ef7f4b-119b-4a0d-aeeb-57715b2b4810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f744cce5-175d-413a-aa3b-49fea82422b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b93a4-64ed-405f-9ea6-85a3d42475b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00525341-b635-456a-97d7-4018e6d3259e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68173f26-e246-4ccd-9c16-6cdd6641ddb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0363d2-53bc-4899-a663-07b56463a2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2012048-0fce-4bfe-8e34-8616b7e89e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350064a6-3e3e-43c1-8045-342b487e091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94078a4-0ab5-421d-88ac-1e5d1382ac45",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd1b906-fde1-4233-bb2f-45d2961d8395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9a5c8c-e483-4b15-af50-8b5145df5a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7657e5de-76e3-448c-8fb6-9efede9c5eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce83c1d-3fd1-476b-95f5-db9698178e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e41d25-b7fa-41d2-af3e-e71aaea7e5b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484a3bea-240d-48dd-8a93-3b0863f51608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62ddec2-107d-4432-a357-53773215267f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d190fb-c53b-4f72-844d-6377adf7c612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17faa0d-0910-4cf1-9ac5-b03c70c68904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c956623-9979-4282-8869-7c2c0ce0dc46",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531beb9-723d-4e2a-a137-8411d2b7b604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fb1a05-acab-4b57-83d2-47991d864817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19592f9b-a529-4210-8b5a-f7e86f848c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19fe84d-4b7a-422c-bee2-a0e282bec8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c6637b-a431-401f-8b5c-ed6c5ea4d7b6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6eeef8-3e70-44ac-add1-abf63e6b2710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b134886d-4fa1-4151-848e-424c54c95847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819654a0-d901-4d03-9593-085ab8b46dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ad162c-6770-4cbd-a455-88ce3b2a276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883502ec-1b5d-47e7-b21b-18446d9ab5b4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa02e4-cf0e-469d-92a1-7a55e3df6241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f521e8cf-2e46-4f6e-9420-0b06946f24b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245f3955-6eb2-4cd4-90ae-1cb336fff8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c33bbc6-f996-4ea9-a489-4a372121af6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8d7a46-f1c3-441a-9362-e9ccec8816e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fea388-e46d-420b-9e78-222f0485ff95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c1f1b6-4fb6-4f25-874c-12f56496bfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc133c8-4c82-44dc-8e05-15e4a045adef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ad099-782d-4587-8052-199abad3f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed4ef09-cd60-45a9-b4ea-b29b8f55fb39",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11677db8-a932-451e-9f1b-50c79701ad5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9759f91-d437-400c-bffe-b94043b1bf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73447ca-9db9-424d-98c1-e6f0f4f9fffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee2868b-c159-45f0-ad21-76dc96a5707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a1200c-69c3-4583-880e-eb6ea28704ee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ddd7d-a7fa-4ba6-a6a6-7a2becc93225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507ba968-fc2e-445b-9c19-c0f7e3a11f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95196779-e9c3-4f7b-9299-33efacc9cd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f219f4c3-62c4-45ab-b432-53fb7b399199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a6b34-d5e5-4066-a0f9-3be13183d724",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119e093-7468-4941-8f37-6e162a6b72d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6583a8e7-9374-425e-8084-cce203f6b46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfa87cf-967d-4afe-b965-a61489d8f006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b82c5d-6c98-4f85-a5cf-d4587f6bc8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb51081-fe47-49e0-8e1c-248a5b0a4471",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d04cf-ef4e-489a-87cc-9e08c1a9f9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc12fa8b-68a1-434c-987a-2de20da7f551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726014c8-1e35-487f-8b6a-b7645612b4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde9f78-ecdf-40a5-9dfb-a1cd95bd1b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b799cb95-a16f-407e-8a1a-1b3457d9680b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fc7e9e-bfbf-4753-9cbc-3deee78bf558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f885b4d-562e-4d4f-8d35-f9502f03b51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f736dcf0-80d2-4893-861b-70e4a3f1d017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a370b65a-4089-4f55-8b4b-2e8aacf5c55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30583cce-234d-4cad-87d9-4bfaa2a7b28e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9b1ed5-46bf-465e-9e78-f06b97d717a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1acb3f5-a740-45bd-834a-c8d40a02e6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe68831-185b-488d-a32a-749dbd36b68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18512308-75cf-45c3-969d-31dd7fecbe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201f301d-e8d4-4ce9-b8fa-d11a1cf7d1c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df96b53-1e92-4576-b707-afb811752d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c2ff21-bc9f-41e3-8195-e27e25c043fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4be148-77e9-46a9-a7d1-9ab7c050bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb14b696-95bc-4add-afa1-8db3074eef9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1daf39-17fb-480e-879a-536af85653c4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc83ee59-7c91-435d-9422-312e3e946785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b81f9f-0273-41fb-8a40-5a2ad7d392c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2e111-9254-4d6c-b610-8e6f1fabe78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7795bd-00ed-452a-937d-400ed6283efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5037f0bc-7454-42f0-9318-59bdc17c1588",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1315e49f-0073-4cbb-b301-e1d19450fb61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd00086-dc94-4dab-a868-f50c02896851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ab7e8-e209-4ab7-8b98-ef2cb76624fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b442ed-0e92-4e7d-86d7-b1a69e4b53a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa169f1-6c2d-4e50-81ec-68c61238c134",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddda897-0268-4d64-9fb0-acf8d5528c31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32b0b2e-5a4b-4471-b221-71bd0f7d6734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006ba31e-9e37-46ef-9ed9-11176a4e5ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337b4698-ed4c-49e2-ab03-4cb78f58c34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a63ef74-75e6-48c6-a7be-07156c3aa97d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf30dcc-a6c0-47c9-8e16-a675faf8b9f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1682e10-c658-40e6-891b-a318a64208ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cee934d-ab59-4c11-b4d1-1c32f2d9ecf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd55c7a8-a4eb-4d60-96c3-12d1ac5bf1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa1c70b-1e1f-4619-b78c-c22ff85d9566",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d15aba-090b-4af4-a6cd-2de1c3c64950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582e6991-f02f-4d53-8d69-c90de1f47a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82badec5-2c67-47f3-8635-a7ed2123c68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eec9af5-758f-4a73-93a5-1dec6b1809c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18436fd1-cb83-4f0b-b7d7-72cd5227fbde",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9603f749-3b62-45e8-8894-7e59e5c2513b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b41b41-09ca-4f26-a14c-5b1572c9b36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc365aec-f2da-4f0e-867e-a935b96c4f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026e45d9-7c88-406b-a137-8d6b71b7490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10245a-d277-4aef-b2fa-54fee2fe86f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d600a35f-de18-4081-8e10-6ed438e494a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4e4cdf-4a37-4b33-9e2d-be91f713503c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60df6ff-ac46-4f27-acc8-580d91dc92e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d8ccfa-5e45-474e-bc80-29d20287af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17298959-1db8-4c9c-8b93-7f9c35b7055d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb278d8-805c-48c7-b85b-9e498ccd36fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6b5658-3158-4f34-a561-d926198312bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4f1f87-6983-4092-9247-128053610145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b895df5-f017-450e-b181-8be7db394717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6cf3c5-8121-42b1-a81f-562ed7b9071e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f00657-f443-42b4-9204-85efd589695d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06e79bb-a250-445c-8226-0583c2c4e515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe7c21a-c3f0-440b-9f18-bea9733b3b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1449ec49-afaa-4794-8b3c-c505b59077f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd33db-4dab-429a-9f03-94b3c00b3a25",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09baef62-e57a-43cc-bac1-eba0fce8d186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05faa642-578f-4d53-b830-f750b7c33f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5257395-c3f4-4cc3-9fd8-c97600b17586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e9dfb8-d296-43de-9a4d-856850a81f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab5f3ce-08dc-4c7d-9c10-50a699a5ace0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43901edc-e6ce-4058-9a02-0922095d0d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d427e89f-483b-4165-9e3d-09900e129f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4109f5-a0f0-44a1-84cb-10deb634eb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0616ebc6-84b9-421d-8899-075d5fb58763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2b0c79-6e8d-4d0b-9dd0-119968943765",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd4d6a6-7d8a-40d9-9d89-d443be7a569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d997fb6-836a-42d1-9a4d-812bd16cd3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b52b5d1-2578-4c63-8b40-65cd143322f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe27b8e-b465-4973-9e94-f5d4273d051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31965b5b-2e3a-4a12-a552-62787689dc32",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b7f7bb-adac-4c92-9108-adfdc7ed150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676df20f-a67b-4ab7-a794-028c457203e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94720ce6-e217-4fe6-a57f-f75d6572545e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed8a9aa-cb6e-4697-b0a4-b790f756f9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a93167f-17ad-47df-8f62-da335a6aaec2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b11624-adaa-4a08-a93f-bba4a7f86b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7953d8c7-80d4-4819-8246-9a6a42f40dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5496dddc-4cbb-4dc8-b9ef-91610158508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b982d431-07f2-47fb-b7a5-93765d7fbe85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758aff52-4eba-4af6-8788-6a92490a5dcf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8ab406-8cc9-4a4c-ae33-d54bfaa7706c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490f4d29-1578-49e6-b21a-69e6669eb49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b99ec7c-8c38-4df7-9099-a89bf6255650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428a922a-f0d3-4f28-a292-500cc71c4783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58973797-504b-493f-b38d-944d66265a87",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e94418-1ce8-4d99-b93e-f12bb8448291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0256512e-06a2-415f-861c-c1450b91ea96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8625ab61-3fcd-4eb1-a887-22086bec32da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04fe1dc-3904-4a61-8c34-fad6c0cc9b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f890865c-bfef-4d5f-af3a-9a29275796ff",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297e720b-1a11-4056-94b4-a2dcb56bc958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf2a7b3-34fd-4ee5-a768-817c7d413325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09a3f2d-3c99-4b6e-8aee-638ebef5824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b82118-20f4-432f-90e9-db98eab9dd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be31c7-2b0e-4e96-970c-1428d53674b7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0413899-c504-49b8-b8e6-bcf05b7fefa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4003b38-70ed-4199-b9df-c81536c90edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0781ddd-8706-48e6-b150-aa9a02b76906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e26d9c-7498-4d6d-9946-82b62c409b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040b9ffa-9c9a-443a-9088-cafd95c8596b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2a447b-1a06-4117-be39-8a01150b5dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3ee17c-ebb9-4502-a922-76895a2b4422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab51c6d-bfce-432c-81a7-edef5d168204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ce66d9-c1c8-45d8-a547-b33a5df51ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78d9302-bba7-45cd-9885-8d353469727d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d86ac8a-1be7-4dca-9a09-ca4554cab325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6da693-0928-426d-a1b4-9bec90cbdc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821914d6-5bde-48c1-9e17-afa06d99e5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62e554e-8fbf-4954-9332-750275e05e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a026db-b11a-4fac-bc84-f406b879a5bc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec18b076-b3bb-4200-9f13-fb410c5c7d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c317cb4-630b-4337-a26b-f4792d56a960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddbaed3-6cf9-4ed2-8920-cdc05b1b0c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2a48f9-c36f-4d8c-9908-cee05df0616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f4b1e-5e2a-4dba-a900-fc0e87dc670c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e8b72f-1ed0-46da-8c5c-5d8fe7de2258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68ffbe3-d06f-4f83-b606-c0df9dfe594a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8284baa-67c2-4dca-969f-f7e950e75092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e141764a-929c-4847-b004-7e1e6571fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87e5c0c-3c6b-4b2d-84b6-d5627b015600",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f81dc2f-5c95-44e0-8003-a0dc7a4dd506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58beabd-4ca6-48ab-af7d-0fd7c2dd2fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ec5b42-0481-42d6-a1f3-341927fe1862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791f3d3e-d4d9-4d2b-9069-dccb84b6d057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe038eb2-666f-40b1-be1e-8ba2d4630401",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7abf2-06a1-45d7-ad77-c63f314cd5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108a2bf2-6784-439d-9ed0-64efb9b6e6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2634fd7-ce82-4fe8-aabc-7c6aa0f80299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95497aad-eb9a-4ecc-bf83-0b38ef23aebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8048a8-18a1-42b2-94c8-091ccec3595b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f48c8-dca4-4e59-992b-e2ab38847890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6046258b-18c3-46d9-af26-99670c6e8769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc65ba4-82af-4830-8e45-7f3e667c32ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f42c07-dd7c-4f02-b6ac-e22a147f292d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cc7f91-e75a-416e-a188-9c22f8cc3acf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77368f-7910-4542-bd12-74899cefc602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d1e24a-e4df-4cd7-8ddf-404adcb1bbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855bb5d7-137c-423a-a321-b4b83cd372ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4abb2f-8462-45a5-a98c-22e4380053a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef75a372-6f2b-41cb-8a77-02f116a740f4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29d859c-c13e-4e73-b0fd-77db8e9cf9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cca189-2aac-4791-bce3-f71618348a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251e50af-8de8-454f-b22d-661e48830027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216c84cf-153f-4e83-a538-7f7735d9c7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5533a022-c8fc-4c06-8d95-822452fc0acd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cac4ec-eaf0-4e8c-b2af-e5209f89d273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e63031f-45b9-4adc-9700-aacb8b7293df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ab776d-2a56-4610-9445-e73aa295575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7648d6b4-2a2d-4a3c-a074-1cac8ea4dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5442637b-5fa6-46f9-aa71-f1e5e35d435c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d66120d-d7ce-4f59-aa44-dfc1b5b0f4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9da1fb9-6e42-4a56-9fd1-002db2397544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b12555-0398-4a57-83f9-957982d8de37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d73d06-3e94-44fe-bf35-8d6fa9de5069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b5053f-a314-4f73-890a-7c4d0e44447d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff72e5-aa38-4e1b-a067-26a927c70102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfcec6f-b20c-4f4e-9e62-4752a228944d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6400ce5-cb5b-4a75-a694-d13b241ea902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec65a7c7-ee9a-4891-8bc5-f1dd842a2cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c93337-c5e1-407f-aa04-b9258b019128",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce000500-3a20-4bc0-9be7-ca5bd9233f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6e8832-c1e7-420b-a3ba-2bec9088e8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0045b6-91f3-4653-8db5-ab8403a46fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576b2260-44c8-4180-8316-a96ab0ac8f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836197d7-56dd-4e48-836f-94fc69d7cad0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269d03f7-b73f-40b7-a32a-558c4f5b6a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b420fa82-d42b-4cac-9747-66a736dbd50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f74df-2390-45c4-a19f-399dd859baa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdcfe4b-e082-4f6b-ab6c-d37230f73517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3981158f-9193-4beb-8378-1a04d0571d7d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1567248f-d5ed-4ce0-8a26-dab8832bb05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ece3d9-4ad2-4fac-aff2-54fad4d4d7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cccc4b-36ba-44e7-8a8a-34f09bbdbf3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3515980c-96fb-4a6e-88ef-a4c6241a8b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d45735-fd0d-4848-93bb-d3b462c353b9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd8b52-9724-4abc-b450-cb7de4f4a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6449bcf1-979e-40b5-999d-f785d6ede309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d714b5-82f2-4cda-af95-72c16b4b1a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900dce16-c19d-420b-a6cd-7142fb5df0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f3ead-294a-4dad-8fd6-2639f637e26d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8b713e-ec75-486c-96fc-65706afdebed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2f82ae-1469-43c8-ae22-9940a1141549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f72f16-c44e-4fa0-879a-75897125b790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd344b1-06b5-475e-ace8-bb0a45f3b929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999aac8a-8374-4f43-ac07-512e55a7063e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae415c24-e0a9-42c9-8d64-cd881b57fdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bda17a6-78f6-4fd7-946b-41edeceb015f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf1b827-f364-4205-bb15-4770bb725593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1c0eb6-cd00-46a4-ab6e-1c9a75a5be71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf00d6e-59ef-408f-8bcb-c6a713d8026f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b858c4-a02b-48a4-adbe-accf4bb5b51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58637dc-56b8-441a-b533-38a3a3fac08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ce09f0-2222-484e-bc0a-ee8ca74c4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb9a776-f95e-4c51-bda7-6e6e365fb41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2130e637-979f-4a50-ac73-de411459af23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ea830f-48ca-4830-a172-17a7bcb79fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f8b97e-fb2d-4bcc-ad2d-fab876574687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1fa45e-4950-465a-ae67-f2ce4a26d49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21d5a70-0f66-4c31-9311-cd512f53261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69667abe-1131-4770-a4e7-5d33a4eccb9f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ef28e-3335-4449-be5f-f1bff0fc87d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21a0ea4-ebd6-4d3f-908f-4d6d72406292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffcae08-990e-4b85-8b6f-b5a6db164476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e2845b-64b0-421b-8457-0b211d51ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedf2a29-7458-468a-abd7-5ee7d2105609",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e48c54-821f-4a8c-af13-13f04a8534e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f681393f-cc04-4d52-8034-416b8aa931ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49dabf-23ce-4895-8976-e6236b7c2357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ea632d-85f2-4796-ab4d-9ba80de2e376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d852f11-10f4-4aa7-b78d-2a43b7668ac1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769eb1ad-c754-4900-8201-7a16a451d34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a3b52d-1a62-4787-a1f1-94bfd1982768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece35453-ec3e-49c5-b9b5-bc100de917dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97781b35-7f21-45d0-acfc-1d4476ac5d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528c1f19-7ac2-46d0-a232-4b858fcde66e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d292d31c-4174-4aed-9aa2-a2b5585e5b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fea5aa3-8c21-4ae4-8c65-a2b67be9c61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9aeae8-b682-4ce2-a5d8-a95212591353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a90662c-71af-4c4b-b17e-f880e390457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc5f1be-0b16-41d0-a6f1-e48a68beb0e3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa4fa17-786a-4c42-be56-5b9aa9eaae26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a999d669-cf22-4247-898d-f884399dd820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea6d6f2-ee6a-4058-886e-b05aced28c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2661687a-2329-4383-8a61-c7fc6031bb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0422c4fd-a2cc-41d4-a852-ed57c4502090",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a29e09-eb50-4c9e-a598-6e51d0d36525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1927b5e7-fca8-4455-9415-3e9f8709e36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f28396c-eead-4374-a516-523893212dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2ab096-77e7-426f-94ae-23d771281730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781d119-139f-4023-9bc3-efe2b2939d96",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3e2cce-5f7f-40c1-839e-fd78b6ff8b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcee1533-fdf2-48a4-95ad-de8bb25f162a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d6a85b-ebfc-40b6-943a-b7105b214ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dc0e76-0fb8-4f96-9a57-fb4a7deeac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe9ef1d-0481-45e5-8525-f27370adbcc7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c810b12b-c9fe-43a1-98af-33b434d01131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba329f69-b1b4-4fb6-bcaa-df3bee7be8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e724ac5-e41a-4ce6-a063-aab9d6a3f8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42294018-0391-4bdc-8ce9-2de8b91025af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5855ecb2-056e-4db5-960e-1e8b33d1faf0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eace99-3041-42cb-b6be-b2491d25af5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e96364a-191a-4d95-8420-7fa371a78399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea60abe-0679-45da-a4a8-3c3f57028f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f908999e-ddf4-4a93-8bf7-15ca9e118bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7858e8ce-5a57-484d-9dcf-ed01d81e3a6f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a6427a-6b38-48f4-b07a-4a5a2d916277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329ab0d5-a88b-44e7-bb50-1b5bdcf1d45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cb14bb-1c99-4612-b556-474f861137be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80ca401-e3cc-4761-9717-557eacc647ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49dcc88-78af-4d13-87f3-9d646b6daa48",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dad04b-7a88-4dc2-9fb8-e041098da5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ef6676-5ee0-4095-8e23-517395b429bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784cd6f2-a4ed-4c02-80f1-3ab164481413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c55278-a7e1-454f-8067-1493a7e2c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df02511c-cf9b-47dc-81f6-df67ddaa3075",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e11b76-c90c-4195-badb-53c7eb0012d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c217749a-eb36-48f0-8c08-ee0d3c3400fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e91010-894b-4926-bbd3-d0dd918c526e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda66612-4132-46d4-a28f-dcf6bdad969c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2eabe2-bc03-43d4-b74e-0a0b8957dc16",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0013073-5d33-48a9-af8e-09324f6bbefc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2250b67-ecb5-4a89-8f88-80fca5e6d7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb38a60-9c62-4c13-bed6-aed79fc4598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185491a0-e4a2-43ec-9bd2-bf601f7d5ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfef3925-e9f8-4665-8125-d1617e837ca8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a07b81-7492-4f23-a3a0-62a7977384f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5df9bbb-b1d0-4a6d-ba23-c55ce06dbfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313b80cf-09a0-45ac-bc98-26700facfa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc90c19b-6c29-4713-b4e3-a4a3da1a5c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a85ef58-c6b3-4292-bd12-7f63e7561f3c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b40e7a-1d25-4459-9c74-5085b353ea31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75b168c-5698-463d-a234-23556e535396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21906f6c-5089-4b3d-8f9a-c8b86ebd35c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024a98e7-a76d-4b64-9f91-33338c01399c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fca6641-68c2-4541-8513-6622798e97f1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a0daf9-fd11-4aaf-a06f-e678b3991365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ff7417-2225-4f68-809b-9a85bf2e78cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d07a90-8f98-4849-993a-e5761b2236e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31ea0f0-a0fe-469c-a026-0d4927c722e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f736b224-6acf-4f94-86a1-02b889a7878b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8841a3ab-f4b0-4238-8fc8-a8afaaff761c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea28ccad-73ca-4b43-b756-be6fdfd4de20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f8d27a-282b-45bf-95ab-117959658b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3911dcf-37a9-4a90-80e5-379a0b43967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bb9b28-8588-45a0-af3f-ebbac4ad7f3f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03f4bb-aad6-4e01-86fd-96ee4cda6d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79accf2-8807-41e2-93b2-bca34d8f5788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b512d63-4ebd-4efd-9fc4-e765aeb10cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd17d0d8-537f-4829-83e4-b3391428382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2516800-a3c7-41fe-a440-102faca2a904",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb711e5a-1d44-4bc7-ac53-25087c56d15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed56d286-0bf1-4b73-955d-12c2b9b1583e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e273b6-23a4-473b-bd49-a43d79f10198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949a6047-ad22-420c-9388-9d9a781c665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a9baab-d7af-4cf9-873f-f53e7cfe0663",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b3e00-b699-4758-a442-4d288625dbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "637c5a4b-3be9-4115-81cb-7593ea3914a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e4cf1-eaf7-446a-a560-57a406f9f136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3156478e-f0e0-4214-8c89-0cf53bfe3c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3a85ff-7cac-4707-b1c4-6490b78738b2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db86fb-b466-4053-b296-16f1447f3922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdc3488-2705-48e4-81aa-a0b4b414a9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aada3e0f-fa4c-4f37-9e39-698076e08220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a3aa6c-69b5-4134-b238-53977018138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5d03de-9e9f-4936-af10-d43d6fe9fc62",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b451a197-2f9b-4300-8951-f962abeb9810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4670e991-88f5-41ef-a7bb-c9c437034103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38844b86-db17-4d04-bd9b-fbde5a92096f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a550bb1-7b0a-4282-beae-44fd10f4fa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3742196-ed34-4ea3-b55e-c2a76c43f948",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3274f31c-beec-4288-87f8-ca0fcbab95e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b579a3-4cb7-4865-bfc3-b63213cffa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c99bb-d0dc-4c85-bb58-eb23d6a593ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5344bee5-a6f5-4031-9cb5-4435b4bc9182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf178d-5e49-4d50-860e-4b8f778aa190",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5f7b1c-abde-45b6-b2cf-abe3319cf682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1194bd-0fb9-4a90-a07b-96b0e4a6ebd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dae48c8-a19b-44ed-814f-1c8b0d494581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9de9ee7-a46b-400f-94e0-ef09783188ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762cc147-f408-4715-b712-4ebf1c32db8b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5aaf7f-f856-41e5-86e2-d6e393102ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ae194f-63ef-4263-a67e-22fa4c23c438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945999f6-9d07-48d9-bc39-60305087cfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f29ecb6-58f5-41f0-ac91-2e5bf9a82243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d69fb-0323-42b5-887e-c0f4ba75eb9d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d97464-37bb-4ae6-b7f0-830c90435f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bb5d94-cfca-4120-8acd-ccbbba8de218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e3ac91-1146-42be-90df-66207983145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73316e4-9ebb-45de-a921-b666a8270de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23825110-ec4f-43e9-b7be-621ee4f5718f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e42ea-e133-4ecd-976c-95272f16f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df44977-1a70-4757-b6b2-4f6a3e1bac88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62daa4ec-2aeb-4902-b885-c52062208657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc9b2da-353a-4f93-b513-9288f1c654c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec917f2-515d-4a0f-ac97-9ca337045e82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df54a52a-1887-4472-9ead-eb2bc99c75d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b05d1a-b60b-422c-9887-2094183a633a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c925455-b217-4554-8ed6-f6db0305a5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa9b8fb-0a65-443e-b5c8-6c9fbe08cfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ef494c-f39d-4393-84c3-a6810c8af7ff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c87cdd-df64-42b1-a2df-34cc1ab0de9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd20992-61a1-4655-ad1f-b52ddd3def7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a515add-0d6e-4540-8152-2b32830637c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc7782b-59df-434b-9da2-be2a444d1073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4bbd09-8c90-487a-8139-685ffc4a85d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27143e5a-c316-46a9-a2bb-95b5b7df126c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4245c0da-dc33-414d-8c48-d91886aad9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6c809e-615f-4289-9cd2-c60e011c285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8731570c-3049-4abb-9806-d1ff3642922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7129d926-2121-402d-ba5e-2c7b55a1460d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7134ed-37f8-40e1-b3b4-c5ba72df74e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02413eb3-7b68-40e1-a428-345678b1c9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e731af-d2b0-45a2-8d22-a9b63061e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52926de8-fd4b-4797-a4ac-976fed23e629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2cfbb-a814-47ed-a2cd-42aad9b09791",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b649ba0c-cbc0-4af2-a67e-9552f3f5f36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fbeea10-01d7-424d-b4c1-010dda5cf1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebfe9d-ac31-4da3-9823-905f7f66b3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ef81f2-e344-4d26-9dd2-2c5a7de2b830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0af38f-5ac0-4849-8734-a739502e5e03",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac8c5db-5915-401f-aeed-839bd27a35d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd45cd6-708e-4ea4-8cec-2e20fa7df753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e14c6e-efec-4456-a148-6bfb9d3a9124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de74f115-1b04-4c02-8447-3b9f4c0a8354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737803f1-7eb1-4f3c-985c-745fe1e04ce6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccf4592-1751-45ad-a66b-1ba577d8f6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176872e2-d6f9-48d4-8ccc-ad26a6245343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9baca2-bbe3-404b-9e78-77000f987565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63736441-6141-4144-98e2-ccaec92d9beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be3968-3f66-42db-9e76-725ad43584aa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a567a3a1-cd6e-4e20-8417-d67a846b9a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806266a9-6373-4673-bf85-dd06d9a76ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b59fcf-5426-4ac8-ab6c-b24bbef6e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3b84cd-e572-4c43-8834-5e5f96a49aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdce322-7a8d-43f9-846f-d204ae732cdf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a8d92-1975-4940-92f7-d80063f2f88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb029ef-75e2-47a1-bfce-1ddd30b33c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24101bb6-2d82-4188-aa5b-6a7073f235cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc715e-86ff-4906-9a4c-5aa34773c5af"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1187b86-ec79-44ac-8c88-1bb410314a1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9e13387-e652-4951-9d40-827904afca81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf265c5-4b71-4a9c-8fd5-7b4bd5f1b19c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c89c5c2-9ff8-4f3d-ba4c-4d1c67b0856b"
                    }
                  }
                ]
              },
              {
                "id": "5f8416af-133f-406a-b13c-5041ac055792",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df1deb5b-dd11-4b2e-ae08-0146510f5693",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab4f7d-ab61-4a65-947b-18fbd24a5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5063a78d-99ff-4d6b-b1b6-7e05c6ecc909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb4d48e-9791-4b60-8d70-260c1a442252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e2f8d18-fd29-4f9d-a410-16274e82c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97de06ef-c85e-451b-b5bd-c23d01dcc5e5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12baed5-3e13-4eab-9a92-b39fbbe9cb11",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f9a74366-98a3-450d-88c2-4c2170e6b2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4973f1d3-ce06-47ef-afcb-9450d58a6587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5316b551-0655-4f82-bc96-56b781ed1e90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5326178-7bed-4d68-beb7-31d6c90d4adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2b724b1-0a9b-45a5-8f31-f667d75606af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb06dcc4-a566-472e-afba-2d07b136fcba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d609b63-9b0c-4d72-bb16-24c1f8a1926f"
                    }
                  }
                ]
              },
              {
                "id": "7d83678c-fcf1-4cf8-ac89-e8160741a657",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "258da2e8-23ce-40b4-bb62-1b06a2e822dd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef2886e-8766-4dbd-8584-90d0ff07cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "462b8400-da73-43ee-954d-409978111ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8305528f-83c0-4a8d-9149-01ded61a383a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c63a00-73ba-42aa-bec6-e7124b04bf5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e2e61e6e-12c0-4da5-a763-6bc579ede731",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d80a4ecd-4fc9-4943-a693-b3ac1fd41998",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a44f0d1-60f3-441c-af25-d0c244b1703b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd1eeadb-3426-4b4c-a230-de8f9ea2e750"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36add590-ea23-4f0d-bba8-0ca53e39ce10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "071b9b08-8fa8-4716-94b7-f0e2b946af48"
                    }
                  }
                ]
              },
              {
                "id": "86c6fff9-b1af-4a2f-a33f-014a6bfe6537",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c1b5129-2a02-4542-af54-0b1c9bcb7a9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0ce04a9-7066-4945-a8ab-21203e5028a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbe15579-c00f-4545-a92e-22e6bdcc90b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9e35e65-435d-401e-9325-521412762f24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77f0e2b7-bbe1-4f31-9a60-87bdc854e502",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e0ed7506-de5c-41b9-9faa-197289a0bd17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "399307e2-c4f5-44b6-a487-de5df553c894",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58f1899b-57bb-4a73-a2dc-0798f80bf734"
            }
          }
        ]
      },
      {
        "id": "4d15e923-ca14-4fc2-81ad-68235ff12b59",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a5cc4dc-a6c0-4dda-9af6-33f6c0a2c09f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4743b613-c0ee-435a-88a8-94f36037d25a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ae97e-3bff-44b1-9981-0b29bedbc80b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c225d62-4498-4b31-ae45-0987d8197605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110482e4-742e-4982-9e4d-9cbf1f67721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b0d5be6-368c-4883-b3dd-d7fec054ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef5e16-b7eb-4270-9916-6a5e96abadab",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d180dc9f-cf8b-4af6-8ba9-cb2296ec0a6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aef04093-0238-41f4-8ae3-005c879ddd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db36643d-c20e-4054-99ce-d90308605065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01025bfe-7b86-41f0-953d-c631ae81999f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "836cc25f-2f31-47b2-8043-6a461b9fdec8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02bae8db-b6ac-4b7a-8831-e1f6a9d06615"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c9ae14c-3a4d-4695-8139-9b3d7c91cf44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa0d91ec-f917-4b25-b529-ab7086d2df03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13d1c7c3-426e-455c-862f-ad82c390d965",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9145eb2-19b2-47b5-9742-161ab941f0bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d13b4bd-9bd4-4163-9e14-4a8f161226ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82bd1d23-7063-410c-982b-a6e0ce01106b"
            }
          }
        ]
      },
      {
        "id": "52a87697-7159-42e3-ba08-341651ad652d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6ecf4f27-a791-4492-9ad4-b989605686a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ec34a3b-5b2b-4a5b-9f71-d350b73e1ccf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aab85548-d63f-407d-bbae-bc33e55e0728",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b72357-4cad-4ddf-934c-5e8068468c39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cefaea5c-10c7-4ee6-911b-ef2a9f975903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd19c87-3782-4f47-9912-509bb4a15c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b05605f8-7eb0-4b83-b28e-b367357f586d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3b8385-aef4-4791-901f-1d5cca27a858",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe67468-4e35-4912-b6ba-e5bba40f8a66",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "feb92b10-3539-4009-b1f0-756e4e772936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bc1198-ba2a-4a1d-8cbd-986926082aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b426a84-33c5-4dc9-ae93-8a3ae55a3d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c03b677e-6211-4814-954c-cc764e1af457",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d38cb06-c63d-4d56-aa55-e2991de89184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97211ce4-687b-4b19-a7dd-1d11a2fad3be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "290f3e1a-6f5e-44c2-bf3b-9a7e4193ce71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b07597b6-feef-4f19-8086-68c8733c4d18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3296102c-2bac-4f76-acdb-2f00106d7eb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136755ae-88cc-45ca-b1a2-73901ea1388e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8d6f2c1-634a-430e-b4bd-3bf94300488d"
            }
          }
        ]
      },
      {
        "id": "259c8326-ac21-4d3d-9882-141ad13d7939",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b800b98d-0705-44a7-956f-61496dc353a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37a7331e-0c0a-49d2-ad4c-871b7fb37a42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32e8e1ff-ce0a-4f41-9619-673810030ed1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68736e9-b6e3-4918-8602-694f4c84a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "333eee8e-3ad5-4682-a1a1-69a3e5ff4642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e99438f-f413-4da8-9d7b-2a4a87d34d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6170d387-47bd-4de3-a508-28360574d182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2c04df-b0b4-479e-a188-36a79db794bb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489f3a06-5167-4ebb-b9fb-bda6da35f459",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5447877b-0a7b-4e5e-a612-9cf4644a6ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba07872-6d6d-44eb-92d9-811a6b1fc551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05818438-7344-48ef-9a1c-4d993b90684b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c0d34e-05f7-4196-bd48-08e3177e20d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee8bd278-5491-4128-b87b-e66099ba0d60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ab2b013-d6b6-4402-b0ff-743ef9fa477e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e33da79-e7f0-40c5-8f2d-f5f21ef74b2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c44c5cd3-a8fe-465e-a9fd-81107ec8b893",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11c7e8ec-9d3f-4b06-8605-c2d700e14a1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc84ac85-7f72-418d-937d-52371db8c558",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4a9348b-a9d3-4cad-b8f7-4502e974263e"
            }
          }
        ]
      },
      {
        "id": "95c21046-a1eb-45aa-a7c6-c5d44eff0521",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9703447d-c9bd-40c8-bf76-83200b5ad03e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6dacc40-af71-4638-827e-70c58069489f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7174c38f-eb2b-4875-ba8b-a89453627192",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f221e8eb-62d1-434c-bd65-7d82b7b4fb1e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fa28d69-c3d1-411f-bc4b-49e04f119b8b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.2595419847328,
      "responseMin": 12,
      "responseMax": 7768,
      "responseSd": 839.3910014103353,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675298445056,
      "completed": 1675298627328
    },
    "executions": [
      {
        "id": "ee7762ac-33b5-419d-84c0-efcb8fef78c3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "710deb95-4c24-4b92-b353-508ba92b3b2d",
          "httpRequestId": "782cd903-6955-4061-86af-8b4624f09d89"
        },
        "item": {
          "id": "ee7762ac-33b5-419d-84c0-efcb8fef78c3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a88ea465-84e0-411f-8587-4b729c1987e9",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "89d98fc2-9505-4738-a813-cbb7e1f109d7",
        "cursor": {
          "ref": "48a41afc-0cd4-4761-b610-a16d318f88ae",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "33cdae4b-bb16-4011-8a26-3fb5e706112a"
        },
        "item": {
          "id": "89d98fc2-9505-4738-a813-cbb7e1f109d7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ebd83c51-97d7-4283-b809-93d82ee9c81a",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "604f2a5c-e41d-4cce-8f57-ac09aec76e3a",
        "cursor": {
          "ref": "170a4d56-a44e-4e54-a362-8d544e806dad",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "28adedbe-1542-46e4-b94a-794de409467a"
        },
        "item": {
          "id": "604f2a5c-e41d-4cce-8f57-ac09aec76e3a",
          "name": "did_json"
        },
        "response": {
          "id": "bd53dc85-0042-4f11-9e94-c0f1b232fbba",
          "status": "OK",
          "code": 200,
          "responseTime": 957,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c176a-a294-4ed7-b468-f818e3e7de82",
        "cursor": {
          "ref": "5818410b-92ae-4a44-9e50-4ed2d3925f56",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8240453-b4bf-4342-9d67-230ecdb1effa"
        },
        "item": {
          "id": "732c176a-a294-4ed7-b468-f818e3e7de82",
          "name": "did:invalid"
        },
        "response": {
          "id": "5938432d-8674-4ba7-b65c-25a97f839638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1288,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c176a-a294-4ed7-b468-f818e3e7de82",
        "cursor": {
          "ref": "5818410b-92ae-4a44-9e50-4ed2d3925f56",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8240453-b4bf-4342-9d67-230ecdb1effa"
        },
        "item": {
          "id": "732c176a-a294-4ed7-b468-f818e3e7de82",
          "name": "did:invalid"
        },
        "response": {
          "id": "5938432d-8674-4ba7-b65c-25a97f839638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1288,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc85bd-2ba7-4725-9487-c71a53e83135",
        "cursor": {
          "ref": "71c9ce81-63a4-4b1c-b54d-69abb6b43e3a",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "57ad1ce9-41f9-4ae3-9b62-53113121a348"
        },
        "item": {
          "id": "bccc85bd-2ba7-4725-9487-c71a53e83135",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "842a51bc-f564-460c-9d3b-5abe61ded366",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1146,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf34394-054b-4c85-97f2-0622d6d2c2d8",
        "cursor": {
          "ref": "57475051-5709-4531-9ff4-09d41308200e",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dbc06918-ad55-49ce-95af-eaf70cf3540d"
        },
        "item": {
          "id": "bcf34394-054b-4c85-97f2-0622d6d2c2d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "77e48192-8af5-487d-995e-9d166c236866",
          "status": "Not Found",
          "code": 404,
          "responseTime": 532,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d2ec4a-7990-4a3c-90a7-4d62b12f6981",
        "cursor": {
          "ref": "5f4f673d-74bf-45e9-ae35-5b6cad779e73",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "be69d2c3-50d2-4978-b4ec-f6676b5ef619"
        },
        "item": {
          "id": "a5d2ec4a-7990-4a3c-90a7-4d62b12f6981",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "325ab5db-a0fa-428c-9f8b-4eab2a876849",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6812bbb4-665e-492b-ab98-44371fc1608d",
        "cursor": {
          "ref": "e53a88ca-3472-44f4-804f-40daef98a7b1",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3abb3785-10da-47e9-be86-4eab595b515b"
        },
        "item": {
          "id": "6812bbb4-665e-492b-ab98-44371fc1608d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3847f581-32f0-44b2-87b3-fa5029987d2d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6812bbb4-665e-492b-ab98-44371fc1608d",
        "cursor": {
          "ref": "e53a88ca-3472-44f4-804f-40daef98a7b1",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3abb3785-10da-47e9-be86-4eab595b515b"
        },
        "item": {
          "id": "6812bbb4-665e-492b-ab98-44371fc1608d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3847f581-32f0-44b2-87b3-fa5029987d2d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62feaf08-c447-4c42-8c0d-deaf559dc45d",
        "cursor": {
          "ref": "0b0510f7-81c2-48ff-95e2-046f92c70ec7",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1856ad08-1511-4fc7-b322-39a77072ec25"
        },
        "item": {
          "id": "62feaf08-c447-4c42-8c0d-deaf559dc45d",
          "name": "identifiers"
        },
        "response": {
          "id": "7b30cc4c-b97c-48b5-b6d7-ed004eb0636b",
          "status": "OK",
          "code": 200,
          "responseTime": 881,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f880f6b-e74f-41ef-80da-ac823260266c",
        "cursor": {
          "ref": "966c7a39-030c-4f24-9e04-067fa4bf3849",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b49cf83-56c5-48dd-a9f7-21c93df1d3de"
        },
        "item": {
          "id": "6f880f6b-e74f-41ef-80da-ac823260266c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "52cf7f85-fe81-44f9-bc48-e13605f2c48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f880f6b-e74f-41ef-80da-ac823260266c",
        "cursor": {
          "ref": "966c7a39-030c-4f24-9e04-067fa4bf3849",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b49cf83-56c5-48dd-a9f7-21c93df1d3de"
        },
        "item": {
          "id": "6f880f6b-e74f-41ef-80da-ac823260266c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "52cf7f85-fe81-44f9-bc48-e13605f2c48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c59c06a-c7c2-44f9-8390-95572ae10492",
        "cursor": {
          "ref": "36a4675f-d4db-4e9a-9f79-a24d24288895",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9e18d4fb-7fa8-46f4-b2fc-b879a63b189c"
        },
        "item": {
          "id": "4c59c06a-c7c2-44f9-8390-95572ae10492",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "74c37b19-a0d3-4db4-964a-1fdff07a7362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b91136-02fb-407e-b2db-f121a231da13",
        "cursor": {
          "ref": "f0af0a0d-27f8-4856-b7bd-dfa0181d3ab7",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e79efdc1-1a5c-44c1-9b34-20904855f66a"
        },
        "item": {
          "id": "d4b91136-02fb-407e-b2db-f121a231da13",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "31ccf4db-a318-4165-a277-ecc5a1d19f89",
          "status": "Created",
          "code": 201,
          "responseTime": 2657,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "b54c2f03-548b-4ffe-b023-22af0cda9fc0",
        "cursor": {
          "ref": "631a9e67-e1db-4197-b5c8-05130712871a",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5bf80a51-de2c-4dfa-9b16-b528d7a5b324"
        },
        "item": {
          "id": "b54c2f03-548b-4ffe-b023-22af0cda9fc0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5236b71b-742e-4507-94c0-9836084104fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac155054-ecc1-4406-90fe-99e0963c3229",
        "cursor": {
          "ref": "43922a7d-6cbb-4ad7-91f5-acc256826ee9",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8f837853-7083-4bad-b75f-7c89f05d3f2e"
        },
        "item": {
          "id": "ac155054-ecc1-4406-90fe-99e0963c3229",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2fe224a8-bf33-421e-ae62-463384b13731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8708e9c5-d12b-467b-93f9-258b77cda688",
        "cursor": {
          "ref": "2c0f1fed-e466-48ea-9675-c60f5426030f",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6ba20b30-f1cd-4866-b4ed-a8e7a2f322d1"
        },
        "item": {
          "id": "8708e9c5-d12b-467b-93f9-258b77cda688",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "06777356-4d24-4766-8c64-adc9850f05ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5f789d-899b-427e-873f-1e4a50ce6843",
        "cursor": {
          "ref": "890799a7-68d3-40a3-abe3-30249d1f69c0",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9bcc7b1b-388a-491c-9737-fc9971c3a6df"
        },
        "item": {
          "id": "bb5f789d-899b-427e-873f-1e4a50ce6843",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "140793cb-8e2c-4866-b116-634f07c57c47",
          "status": "Created",
          "code": 201,
          "responseTime": 3235,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "f4cd8f6a-78b3-4c7a-a609-51ad5aaa19f0",
        "cursor": {
          "ref": "562e6dc7-4efc-4958-99f1-09f03e8696bf",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "92ab6414-4de2-4c94-aa5a-da914abd092b"
        },
        "item": {
          "id": "f4cd8f6a-78b3-4c7a-a609-51ad5aaa19f0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97824508-4f21-44cb-a323-ef31e3b02158",
          "status": "Created",
          "code": 201,
          "responseTime": 4147,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "bbe0afa2-454f-43fa-aa57-b54470e90037",
        "cursor": {
          "ref": "4f397467-3d8c-46b2-8977-7202a4c328d8",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6c5892ae-41ab-4f6a-8e22-9b5ed0fb549d"
        },
        "item": {
          "id": "bbe0afa2-454f-43fa-aa57-b54470e90037",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6baac34a-c8c3-45ea-8f40-62294b97ccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3945e17c-8220-4b53-a0a0-576c2e570cc7",
        "cursor": {
          "ref": "31efcc4b-1286-481b-980e-02a6583b49da",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "379954cb-f441-4104-94b0-5a8a3f7a7ed1"
        },
        "item": {
          "id": "3945e17c-8220-4b53-a0a0-576c2e570cc7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ec1196d6-fbea-4f7f-961e-4b96b01312f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474d0fa5-a223-42e3-9c5f-856c929fbab7",
        "cursor": {
          "ref": "e866ab5d-89d6-47ab-9273-2b48b037fcd9",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "374c5522-2af9-4909-8013-cd503e9cd885"
        },
        "item": {
          "id": "474d0fa5-a223-42e3-9c5f-856c929fbab7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9364ae5c-8d3c-400e-a07e-8e8e6278b3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e6f20c-d8c0-4adc-abee-9819b6f51059",
        "cursor": {
          "ref": "5a0a48ca-bafd-41fe-8ce8-52d1f8802e8b",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "274d50e2-6e50-494b-83bb-f5ae9240e64e"
        },
        "item": {
          "id": "21e6f20c-d8c0-4adc-abee-9819b6f51059",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8b2202c2-e57d-43a5-967d-0601cfb47676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55edf8e9-5af9-4554-896a-f174b157aa5c",
        "cursor": {
          "ref": "47d32683-7bcd-476d-8dd3-96641a60e581",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8be477e9-201d-47ee-80d5-e1a254ce2c76"
        },
        "item": {
          "id": "55edf8e9-5af9-4554-896a-f174b157aa5c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "412026e1-1a97-49c1-802d-2d60b857db41",
          "status": "Created",
          "code": 201,
          "responseTime": 3649,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "3f7d57c0-84cd-458e-9c2d-5e157f1b9eff",
        "cursor": {
          "ref": "207d5c2a-e11b-4def-8d65-82f4b60457e8",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e59eea4e-a8c7-4360-b7cf-4003dc964a8f"
        },
        "item": {
          "id": "3f7d57c0-84cd-458e-9c2d-5e157f1b9eff",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "7526a3ce-a598-4d4e-87dd-8bb49f8eb46c",
          "status": "Created",
          "code": 201,
          "responseTime": 4997,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "0bf5b534-f3d9-41e9-8128-1fa57dc79d2f",
        "cursor": {
          "ref": "69166e89-e77d-409f-be1d-5f7da38f8e01",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6d22d6f-a4b1-4a36-a39c-7dea3d692509"
        },
        "item": {
          "id": "0bf5b534-f3d9-41e9-8128-1fa57dc79d2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "abf262e7-4a5a-4dc9-9587-090c3e14da56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bd64f8-79e5-478c-ae5c-edf235140967",
        "cursor": {
          "ref": "3f980930-9d25-4970-9e0b-ef3c2aa7ad59",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9cf2ab76-d165-49bd-86d8-061a9f6220fb"
        },
        "item": {
          "id": "25bd64f8-79e5-478c-ae5c-edf235140967",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "66a20fe3-d365-4913-9386-f5554da2d671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58185d58-7bbc-4778-bc81-1a2fcb757ae2",
        "cursor": {
          "ref": "13db909f-8e59-41b1-a966-8cf266fafecb",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aa18603b-35f3-4db5-bc37-acf4783f4f46"
        },
        "item": {
          "id": "58185d58-7bbc-4778-bc81-1a2fcb757ae2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a6a97cdd-a103-4513-9b17-9ecf77a8a983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fba610-d148-42d8-9b5c-e806c98496aa",
        "cursor": {
          "ref": "50c3f3c2-2729-432b-b269-a98c8677d231",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88cc28d6-24c0-4f73-bf29-bed8fed3c67a"
        },
        "item": {
          "id": "02fba610-d148-42d8-9b5c-e806c98496aa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "69856dc8-3b02-4e6c-b346-51cea5f87d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3a8863-eb51-4f6f-bff5-77d187c6bd01",
        "cursor": {
          "ref": "a2e52161-5e90-4a1f-b80d-fc960146c3eb",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9e6bc64e-a350-419b-b51f-4351fea1eab0"
        },
        "item": {
          "id": "4e3a8863-eb51-4f6f-bff5-77d187c6bd01",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b1bd4308-8c83-464e-949d-94683f5d56b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a872aa-8577-4953-a0e4-37a97d658a83",
        "cursor": {
          "ref": "08a16869-542b-4f94-b645-67c52a84e791",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3bdf5596-d437-4ffa-b220-55bb8ebfe24e"
        },
        "item": {
          "id": "03a872aa-8577-4953-a0e4-37a97d658a83",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "70496484-35ea-409a-a4a4-85f07eda45df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001f94b4-760e-4096-95eb-aebc5cc8f9b7",
        "cursor": {
          "ref": "1d436d2c-f1f6-47bf-a8e4-da15419cc581",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1ef7997-cd33-4098-9042-09fde8ef1f18"
        },
        "item": {
          "id": "001f94b4-760e-4096-95eb-aebc5cc8f9b7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "37730992-6216-417c-960d-9342466ff684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cad1f6-d4b5-4982-a2bb-efdc61427514",
        "cursor": {
          "ref": "a03da2e5-9888-40b3-8226-8c80311b0115",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "48a98046-1072-4242-ab73-1c363cae51b1"
        },
        "item": {
          "id": "c3cad1f6-d4b5-4982-a2bb-efdc61427514",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7f3fe118-993c-4a19-b061-b8505893d51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8083836c-523d-4a14-8221-0a1f9c21c4ec",
        "cursor": {
          "ref": "16f8b693-b332-4500-bcb0-ef8e611ef72f",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e32b508a-5260-4ed8-b1a2-7fbf44be895f"
        },
        "item": {
          "id": "8083836c-523d-4a14-8221-0a1f9c21c4ec",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f216f62-7bcc-48b6-9dbf-0e34d15a6810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072743e2-fc25-4620-87c5-6f08ce01e78b",
        "cursor": {
          "ref": "cc002e98-28f1-44a9-9d82-5282634be6a7",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a3b3f476-2f82-47b8-96e4-abdb8fe4e7eb"
        },
        "item": {
          "id": "072743e2-fc25-4620-87c5-6f08ce01e78b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "07167554-7575-435b-82db-464358e7813c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6a9a21-4aad-47a2-a463-23fe888b5d18",
        "cursor": {
          "ref": "462f3823-1f1d-4c1f-ae3e-431cb1120e9b",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f44b9c0d-affe-4aae-be88-7f086bbef3bb"
        },
        "item": {
          "id": "fa6a9a21-4aad-47a2-a463-23fe888b5d18",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8b922224-6400-4f56-9dce-efd1fd03d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40d2ba-798a-494a-8665-da54bb2dd3b1",
        "cursor": {
          "ref": "81bee083-87a4-4b7d-ae9f-335bb79ae664",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8f5fc922-c71a-4e1b-b098-b0f2f70fb119"
        },
        "item": {
          "id": "ac40d2ba-798a-494a-8665-da54bb2dd3b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b3309ce4-b7ea-48b7-87f6-27f9521276b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1713,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "ddda02ef-611a-4e4e-8584-0e2dd6e11a28",
        "cursor": {
          "ref": "107287fd-b4c9-4d9c-8622-49eeed869bc7",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5e689b8-16c6-4ce4-b832-280c7e72352b"
        },
        "item": {
          "id": "ddda02ef-611a-4e4e-8584-0e2dd6e11a28",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2eb1870-491e-4522-bf99-d1462e22fdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d959a8b5-8aa7-485c-9658-1efe0a497705",
        "cursor": {
          "ref": "1e9132a0-2778-47fa-8445-6aa927c48cba",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b8d69efb-cbc6-49e7-8653-7c0102ede6aa"
        },
        "item": {
          "id": "d959a8b5-8aa7-485c-9658-1efe0a497705",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a75e275-14b9-4f4e-a15d-d06c02125fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e83fdc-11f3-416d-bb5c-7d82f9d70741",
        "cursor": {
          "ref": "a64d5cae-d060-4f01-b376-e170299ccea8",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2200ac7b-affe-4980-863f-6593f0280bf5"
        },
        "item": {
          "id": "05e83fdc-11f3-416d-bb5c-7d82f9d70741",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2f068ab5-d533-4d1a-a7db-e399009bb642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502fdd0b-6848-426e-90ac-0e3f6e849c8c",
        "cursor": {
          "ref": "1fa7fcec-7cbc-4b70-998d-7abe2ccd28c3",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2fa06da6-ae7f-4b87-a692-73978229d182"
        },
        "item": {
          "id": "502fdd0b-6848-426e-90ac-0e3f6e849c8c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "edc85db2-9ba0-4b42-8a5e-58da2e1483a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee96df6-35c9-4b5e-a41d-345406466fe7",
        "cursor": {
          "ref": "2aa6de24-e3f3-474d-9b58-3f6d5527e78f",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fc2f3df0-5018-4996-9b3a-c87124544d34"
        },
        "item": {
          "id": "5ee96df6-35c9-4b5e-a41d-345406466fe7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9e5d58d-ca5b-4d29-b421-1ae283ade0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37c237c-e3ca-4401-b87e-13fd03c933e0",
        "cursor": {
          "ref": "8be3f02a-02ef-4094-aab4-6cd6c0dcef2d",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "205005a3-63cf-48ef-a40b-168dee87d1f6"
        },
        "item": {
          "id": "f37c237c-e3ca-4401-b87e-13fd03c933e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d1c1498-dbfe-4019-9b3e-c02b8d4e19b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ced069-7c09-4948-99ec-3beb211fd610",
        "cursor": {
          "ref": "7cb67450-6cad-4f30-a4fc-5465588b319e",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "449e76a9-664c-4dc1-81bf-6fd88d489b63"
        },
        "item": {
          "id": "56ced069-7c09-4948-99ec-3beb211fd610",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a5fe0458-1261-4d7d-9d13-3b35befc953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146e8fcb-6723-4660-92d5-2e4d4957d2cb",
        "cursor": {
          "ref": "b34c189b-ac10-44cc-aad8-eb0b0a741dd7",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b39719d3-1538-4cc4-8e9e-d1c565c188b5"
        },
        "item": {
          "id": "146e8fcb-6723-4660-92d5-2e4d4957d2cb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0dca628d-eeb4-460a-9a29-f6f5ff56f400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21f392-7239-446c-b1b9-bcf98a20600a",
        "cursor": {
          "ref": "46c83a00-96ea-44d4-90bc-13db62388792",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e7a6882f-ac44-43d8-933e-d3e4cbe0521f"
        },
        "item": {
          "id": "bc21f392-7239-446c-b1b9-bcf98a20600a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c1f63213-fd48-4090-9bb6-9663de42de1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60c3bc-44a2-46e3-888a-066ca7ff7c75",
        "cursor": {
          "ref": "6dd33c44-7988-4f92-abcd-fba9373d1f91",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ff01ae4d-8688-4977-8396-85559aff376b"
        },
        "item": {
          "id": "0c60c3bc-44a2-46e3-888a-066ca7ff7c75",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c2606544-da2b-4b2c-983c-03e0c6ee7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4685adbb-cfc4-447d-a2be-b17400426759",
        "cursor": {
          "ref": "569b998b-7bfa-438b-9850-fc435fe3e3ac",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "47ecfa16-5899-49a0-abc5-fb7125cd13b5"
        },
        "item": {
          "id": "4685adbb-cfc4-447d-a2be-b17400426759",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7179d8f2-8fe4-4793-9856-34e8a5f4237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd622fc0-59d3-4ba1-a160-fa4a30e4b84c",
        "cursor": {
          "ref": "961bddbf-6e58-4a3b-8465-b4cb41a03bce",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b97a943d-eb15-44ab-aaaa-1bd875be3b83"
        },
        "item": {
          "id": "bd622fc0-59d3-4ba1-a160-fa4a30e4b84c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c371c77e-60d2-4622-a79d-f8a896935ad5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 600,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d298472e-5490-4864-bf13-26c95feb6e3a",
        "cursor": {
          "ref": "7776a191-fc60-49ba-91d1-07a63365bdea",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96989add-db34-4bfc-bd1e-cdfc7840777b"
        },
        "item": {
          "id": "d298472e-5490-4864-bf13-26c95feb6e3a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c677c80a-5f85-4c9d-88fc-603864613d49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 547,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "5846ef24-6722-4872-90cb-f41c2037716b",
        "cursor": {
          "ref": "2a22b89c-009e-4071-894f-28fd0567cb1a",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "075ed698-6bc3-4016-b9a0-44c7f9cf2a13"
        },
        "item": {
          "id": "5846ef24-6722-4872-90cb-f41c2037716b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8249ce0b-d798-4b91-bbf2-041687bc5af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f572701-072f-40ce-acbc-e69495427bd4",
        "cursor": {
          "ref": "3df64b47-506c-45ac-a6dc-36574c8f6fa4",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "60df95be-18df-4d19-9c92-49c3643e772c"
        },
        "item": {
          "id": "9f572701-072f-40ce-acbc-e69495427bd4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bcac5fdb-6d13-4511-b182-ebd12f99c40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaca912-9067-45e9-841e-495c135c5603",
        "cursor": {
          "ref": "549d1518-5772-4e37-9479-fb463db46dc8",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "46c180f5-e5a1-460b-9299-f4e3db03b4f3"
        },
        "item": {
          "id": "daaca912-9067-45e9-841e-495c135c5603",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7868ff1d-b3ce-47a6-8d77-85c52a20c943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da14d82-6432-4c41-8e1a-c55f334b2c8d",
        "cursor": {
          "ref": "e7b928be-d726-4e92-84ce-27749a17c846",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f8ff003d-df5e-40d8-9fb5-13ef0e79e07e"
        },
        "item": {
          "id": "3da14d82-6432-4c41-8e1a-c55f334b2c8d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a423c37c-1dcc-42f5-8b18-418edac10413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e8ad45-0b77-4db1-8ef5-8b213b42ce85",
        "cursor": {
          "ref": "1d64a4a3-8c77-4d00-8239-0f8e11491ce2",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "693f48b6-d81c-407d-83d7-5c8a7368a073"
        },
        "item": {
          "id": "c0e8ad45-0b77-4db1-8ef5-8b213b42ce85",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3539c2bb-f83f-49d9-aaab-1a858e252322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a29b1c-5333-40f7-a88e-098df478e1ba",
        "cursor": {
          "ref": "34bf7c4f-193c-4fba-80c6-9f2b4ed3025a",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b5d899e6-d872-4b93-a4ad-e68676ed411f"
        },
        "item": {
          "id": "60a29b1c-5333-40f7-a88e-098df478e1ba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "96778f66-1782-43fe-b52e-856ddccc4a14",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 581,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07be2cb7-941b-412b-b28e-0a91016149f9",
        "cursor": {
          "ref": "4d177310-d800-4b2a-ac96-d892ef952c56",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b8c8535-afb4-473c-9ed5-4226893b5f96"
        },
        "item": {
          "id": "07be2cb7-941b-412b-b28e-0a91016149f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d57c1b83-507f-4031-9515-146c662bb3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd95a03-2a62-472d-b6ac-05f8a33c43ed",
        "cursor": {
          "ref": "d64826ff-5014-448e-8144-5973e602d2fd",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a4d84bf5-1301-401a-9018-2dc44ec3bf43"
        },
        "item": {
          "id": "efd95a03-2a62-472d-b6ac-05f8a33c43ed",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9fcc7640-f787-4980-9740-09db1e7c5e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e06d9b-b576-402d-86f7-59d757df0940",
        "cursor": {
          "ref": "a25c16ae-3203-43eb-a97c-b3ccc230e32d",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a1cb63bf-418b-4522-b394-7e73c4896860"
        },
        "item": {
          "id": "d5e06d9b-b576-402d-86f7-59d757df0940",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "42d0dafb-b08e-462f-9b94-488714bddc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19064c6-4375-4242-99a1-5fec403060c9",
        "cursor": {
          "ref": "3ff210dc-7513-4dde-96f0-aff4d324dcba",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0883b560-b097-469c-af81-26c308c9a641"
        },
        "item": {
          "id": "f19064c6-4375-4242-99a1-5fec403060c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1460559e-7ba8-4449-93a7-75ebb7207013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c2363-ccdf-40d2-9e88-85bd026f4994",
        "cursor": {
          "ref": "2c4c7888-f0b5-467f-987d-96c9bd568dd6",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe2ec77c-885f-4a4e-84dd-75523f3dcfb7"
        },
        "item": {
          "id": "f15c2363-ccdf-40d2-9e88-85bd026f4994",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5314bc1a-d403-4d15-8527-26865942cbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54a8568-bc7d-4051-82e9-ceed6e03ee41",
        "cursor": {
          "ref": "717b8cfa-08cf-4657-95ab-56a085782c00",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ae233a6d-48f6-4f8c-9f70-0313157627ff"
        },
        "item": {
          "id": "b54a8568-bc7d-4051-82e9-ceed6e03ee41",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9338a658-e10f-4ae2-b065-cce3d10a7800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d8c022-9f1c-44ba-8a31-a417f80e74a6",
        "cursor": {
          "ref": "44f2dc90-a64d-4f53-b9ea-50d308da97c1",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f71af1a-5ced-4044-bf1e-0005efd4e012"
        },
        "item": {
          "id": "47d8c022-9f1c-44ba-8a31-a417f80e74a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "80f850f7-9e11-4b11-8828-4813e3214299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f10132-73cb-4058-ae64-2443a3c38f70",
        "cursor": {
          "ref": "d1f2623e-abc0-498f-847e-36f0ba902324",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f42f24f6-5ce2-41c6-a8a5-cf2b4d9312ad"
        },
        "item": {
          "id": "48f10132-73cb-4058-ae64-2443a3c38f70",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f1dccd2f-db4a-4b7e-b0c1-d8a74a94ce54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf0f416-7397-43b1-b0a4-9cc64cc754a2",
        "cursor": {
          "ref": "2a92cd7c-35f1-43b8-b1c5-8e19747189d4",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "43ae28c2-96e3-41a8-a648-02b957768d35"
        },
        "item": {
          "id": "faf0f416-7397-43b1-b0a4-9cc64cc754a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "400243a7-ba30-4129-98fe-779e9c433675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f84e5e9-9e99-4914-ab70-8d9f7bca954f",
        "cursor": {
          "ref": "b7d4108f-f055-4297-845d-655ed7918797",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f63bca36-8e71-48b3-a06d-d313fe8863dd"
        },
        "item": {
          "id": "7f84e5e9-9e99-4914-ab70-8d9f7bca954f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f855debd-81f1-48dd-9b1c-e6d57aec4f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c33288-a166-4244-80fd-0e2b94a61e73",
        "cursor": {
          "ref": "d22c7ce1-3586-40a9-8a92-b30aa2e40b59",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "796c1cf6-cb58-49ac-a626-a3fb7b129e3b"
        },
        "item": {
          "id": "c7c33288-a166-4244-80fd-0e2b94a61e73",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cccb87f7-7971-4e53-9bcb-12c1be05cd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8526dd21-d5c1-4a2b-87e2-6a533706ed44",
        "cursor": {
          "ref": "7bb0373c-292a-4936-9b9c-5e2cccc198cd",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "086ad37b-8657-4958-bc80-bb4bf02c7baf"
        },
        "item": {
          "id": "8526dd21-d5c1-4a2b-87e2-6a533706ed44",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eaddb6e2-ea52-478a-9165-d46fc2a2ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a762e26-114e-494a-9de1-9e6ff5567eda",
        "cursor": {
          "ref": "858a6f91-966e-4969-b7ff-9bab4b6aedf5",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8a313d0e-5f2f-4320-ae0f-295ef04b94c5"
        },
        "item": {
          "id": "4a762e26-114e-494a-9de1-9e6ff5567eda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a183600f-4eac-42bc-9137-56aab281ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b097b-0788-4a2d-a6de-c26e24355101",
        "cursor": {
          "ref": "70ead637-286d-4ad9-9d85-eb93e8e5b81a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3ef1d2a2-11bd-4269-9412-0672661ce687"
        },
        "item": {
          "id": "565b097b-0788-4a2d-a6de-c26e24355101",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a31121f2-5d4b-4d7b-97e6-b41eb2eedabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4c0364-4d3b-4162-a8fd-9277197f38ce",
        "cursor": {
          "ref": "668f706e-091a-41c0-8d53-1cf2203df0fc",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06cb57b5-1553-4f22-a059-2555b438b3a2"
        },
        "item": {
          "id": "6c4c0364-4d3b-4162-a8fd-9277197f38ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "31ef60ab-a459-4b29-aad8-6b4ce90f0ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a578dfe2-dba9-4066-afaa-e9ded31b8570",
        "cursor": {
          "ref": "fa613f27-bfb1-419f-9aa5-83404cd33c8b",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fc44320e-f20d-4804-b53f-01e290c73419"
        },
        "item": {
          "id": "a578dfe2-dba9-4066-afaa-e9ded31b8570",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "70627c2b-233d-49b8-8f97-c74964c69aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef51e640-68f3-44e7-b2c9-e24ee7e160cb",
        "cursor": {
          "ref": "87458417-9397-4f26-b65b-2aaf361aeacf",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "707aa9fd-c25c-4b10-817b-fb9fa0cbb888"
        },
        "item": {
          "id": "ef51e640-68f3-44e7-b2c9-e24ee7e160cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e72cb75-98be-46ff-89dc-ca2480021abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e04fbc6-fe6f-4c34-80e2-6f4c2761b22a",
        "cursor": {
          "ref": "808a5af3-7dcb-4420-b9e6-dd4bb6f49942",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a6b6836-4d5b-428b-ac14-edfb0a242045"
        },
        "item": {
          "id": "5e04fbc6-fe6f-4c34-80e2-6f4c2761b22a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3aea1c8-91cc-4ff8-a554-f3f6f7980730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6509e76f-486b-41b7-8ad2-b74c4e062006",
        "cursor": {
          "ref": "c1307c7d-c76a-4983-8cc8-095401fca61e",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "73a1e98f-1ca0-4d39-adb2-3325287ca3d8"
        },
        "item": {
          "id": "6509e76f-486b-41b7-8ad2-b74c4e062006",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c972ee3d-917f-42e0-863b-4867c4654307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a765b7c-99df-4132-826f-05edcf669f77",
        "cursor": {
          "ref": "119740aa-cf2c-45cd-9712-1c1418beef54",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "19222a74-c541-4d72-9a63-aedb682c66a8"
        },
        "item": {
          "id": "8a765b7c-99df-4132-826f-05edcf669f77",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1b1ab280-a6a3-44d7-9863-c36e3ddb3244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66b6783-0ad2-4955-81b1-d06d3c94b92e",
        "cursor": {
          "ref": "946cd20d-13fd-44a3-b7a7-68376b79fa4c",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7f9c117a-f43d-4cbf-9e6b-9e84d4eaa1ac"
        },
        "item": {
          "id": "a66b6783-0ad2-4955-81b1-d06d3c94b92e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "15a9c5ac-8289-4a90-87ab-f1bd03ab801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f13a6c9-3211-4411-aa09-a6b27e010e32",
        "cursor": {
          "ref": "023068be-ee51-4974-b160-90922e7839fd",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f42783eb-aa3b-4c49-9d80-b3e1709b3d97"
        },
        "item": {
          "id": "4f13a6c9-3211-4411-aa09-a6b27e010e32",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4ec02bd9-6656-445f-b5ee-6d38890c512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e127038-9d49-4970-a1fd-425585776fe3",
        "cursor": {
          "ref": "e052183a-fc80-4c2b-95c8-1a06fd2148a9",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8ed02171-f55b-4037-a479-75667373f990"
        },
        "item": {
          "id": "0e127038-9d49-4970-a1fd-425585776fe3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a5477ff3-df16-400a-8530-7c9b85d814fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072221b6-7945-492b-aa4c-b82580074866",
        "cursor": {
          "ref": "5bf81c28-2d0c-40ec-8773-dc688f0087a5",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "acc293f7-26c5-4b44-b318-2b97321006ba"
        },
        "item": {
          "id": "072221b6-7945-492b-aa4c-b82580074866",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ca6eb51-306a-4f37-a808-7fab9e2dbbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4e7874-8a05-4964-973c-f04ab45bb5ed",
        "cursor": {
          "ref": "42350c66-a80c-4b7c-bf50-b2297ecef7ca",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ffcd2add-b0c4-4c6b-84ae-7704d2258a71"
        },
        "item": {
          "id": "1d4e7874-8a05-4964-973c-f04ab45bb5ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1df0e155-b2ba-4343-938f-16349948ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ee5799-1473-4ba2-8bae-b885329a4312",
        "cursor": {
          "ref": "7778272d-6cbe-4cd9-8e24-29889e088cda",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a3182bc-b346-4f5d-bd30-ba85c7a85433"
        },
        "item": {
          "id": "52ee5799-1473-4ba2-8bae-b885329a4312",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a752c8fc-bea7-4462-a824-dc0f87cf0b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f7bc7b-b03f-4be5-90dc-a780e2a299f9",
        "cursor": {
          "ref": "214979e1-2940-4b27-a006-afe6f548098b",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "470c04ca-c1d6-48e2-b0f8-a27f612d774d"
        },
        "item": {
          "id": "25f7bc7b-b03f-4be5-90dc-a780e2a299f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c7327865-7c7a-4ff7-af27-9a1b602bcc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e31e62-2bb3-497c-8fe2-9c232b1a39ec",
        "cursor": {
          "ref": "9d9e6e08-42ce-48f1-b155-ddfef55f39ba",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f2f6ae0e-22e6-46a6-bf40-57328de52b84"
        },
        "item": {
          "id": "40e31e62-2bb3-497c-8fe2-9c232b1a39ec",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3b95e08a-0442-4442-96f8-a98817173144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c02e55-388b-4592-8c6f-b2f44a914833",
        "cursor": {
          "ref": "cc065d94-4c67-4dd3-816e-d01a18ea3fcd",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c55bc308-af40-487d-9c7c-2ec88f2a45fa"
        },
        "item": {
          "id": "82c02e55-388b-4592-8c6f-b2f44a914833",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "346f0c74-bfa5-42be-96d5-4ab891a05c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8154305-ca54-45d4-92ba-c721f25dd183",
        "cursor": {
          "ref": "e47c0eb5-c851-4b11-aa2f-db574fd25880",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b8b4e31-11b8-4715-9033-55cb8993918a"
        },
        "item": {
          "id": "a8154305-ca54-45d4-92ba-c721f25dd183",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "71717936-d910-420d-b3d2-a87a4ac7e9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964f591c-5efc-4723-b753-6522330f61a4",
        "cursor": {
          "ref": "095189e9-9438-40bd-b47b-4e78cc0dc7c0",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8c7a1af4-4dd9-459b-8d23-34e2de00d680"
        },
        "item": {
          "id": "964f591c-5efc-4723-b753-6522330f61a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8d33ba0e-528d-4c33-9602-084455cefb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14a8f23-fdf5-4cab-a7e2-2749ed9292c8",
        "cursor": {
          "ref": "7e94b367-386d-4485-929a-412d40240cd7",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d826f52-0e18-40d2-bf23-6fed337cdf64"
        },
        "item": {
          "id": "f14a8f23-fdf5-4cab-a7e2-2749ed9292c8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3553be17-720c-4507-adb3-ebf02b1acb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b863f2-99ca-414c-95b3-7f1cefec4442",
        "cursor": {
          "ref": "ad4e15aa-0902-4edf-8552-053b61c630f2",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3fb281d6-7793-4abb-a8f2-d4e34637f142"
        },
        "item": {
          "id": "c6b863f2-99ca-414c-95b3-7f1cefec4442",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ea36bdda-68d8-4f5c-90b9-79a95f4400d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d22f0-9063-485e-80a0-ccdf2cdab17f",
        "cursor": {
          "ref": "d5caaf97-679a-4b75-9472-4679036d9939",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54a55768-72de-46f8-8e2b-696c24b5c370"
        },
        "item": {
          "id": "195d22f0-9063-485e-80a0-ccdf2cdab17f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "faabc9a3-2e93-4960-875e-9497872be1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e178d-9108-4fe4-a05c-8750603a2cd3",
        "cursor": {
          "ref": "86ff1f4e-01ac-404e-bd5e-ceab4f1bd232",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b82d8148-4bd0-4b92-93fd-ed775f085d6e"
        },
        "item": {
          "id": "611e178d-9108-4fe4-a05c-8750603a2cd3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2e465e16-5404-43f8-99ff-1b481b69601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d9ac0b-62f4-48b4-9473-d295894e0312",
        "cursor": {
          "ref": "21ff272b-8e80-4bf5-bec0-f8af935d3323",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c1ccc4d-39d7-4eb3-85a3-cd0841d10004"
        },
        "item": {
          "id": "32d9ac0b-62f4-48b4-9473-d295894e0312",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22303839-7c0f-4693-9376-3ad8a722e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba73f5-c082-4cf7-8485-2b573f0d3ca5",
        "cursor": {
          "ref": "22a41f3f-e220-4079-852e-d50301cb1fa9",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a7472cc6-0116-41b5-9fa4-15d6d3b1ea1a"
        },
        "item": {
          "id": "edba73f5-c082-4cf7-8485-2b573f0d3ca5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00fe3ef8-fdbc-49a8-9cb9-4087e0c355aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3190dd8e-b738-4c68-b653-e2c498ce9814",
        "cursor": {
          "ref": "d6f32212-d5f6-47e0-9f10-1fbffc073687",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "26b55e28-dfeb-4559-902b-b578c44dc376"
        },
        "item": {
          "id": "3190dd8e-b738-4c68-b653-e2c498ce9814",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0d0f2968-0688-41ed-9e74-3aa2c7bd10e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d572110e-7a04-4371-9c08-e35ee2a96659",
        "cursor": {
          "ref": "8260889b-e9b0-44c6-804c-65932d68e0d2",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "606bcde7-d019-432e-8857-0119d0273115"
        },
        "item": {
          "id": "d572110e-7a04-4371-9c08-e35ee2a96659",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fdff741d-7e51-48f7-b70f-190a3f47af56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1305,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb24c5a8-a167-48fe-b5bb-26b45a945f33",
        "cursor": {
          "ref": "1572d427-837a-41b6-af52-6e0f078ed4f5",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9470d4bb-aaf7-4c22-9c40-8c3171818a6b"
        },
        "item": {
          "id": "eb24c5a8-a167-48fe-b5bb-26b45a945f33",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d151b5b0-724d-44f0-a9d5-1db57e7c821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dcd8de-6521-4495-a45e-d7bd9a48eb50",
        "cursor": {
          "ref": "9b10e8d7-4467-492d-bb61-c28328c2bb7e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "011acc6e-68be-4abc-855b-eabb6b3ba2e4"
        },
        "item": {
          "id": "c8dcd8de-6521-4495-a45e-d7bd9a48eb50",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f9c0f9df-c900-4ea9-a89b-d16192ffa509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4120f0d5-a665-46c0-963a-c092c6a4273b",
        "cursor": {
          "ref": "a8095b09-49dc-485f-bf9f-6a81d84ae5f1",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bdb911c5-7daa-47fe-89b4-85b55e286094"
        },
        "item": {
          "id": "4120f0d5-a665-46c0-963a-c092c6a4273b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3f141a61-5aa7-432e-9f71-57a9d298c177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db043c3-aaa5-4980-91fb-e4d41c2f8a75",
        "cursor": {
          "ref": "17642500-e22f-415b-aba8-19796aadd370",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e3c377bb-2294-49a9-a839-0a32136d3072"
        },
        "item": {
          "id": "3db043c3-aaa5-4980-91fb-e4d41c2f8a75",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27a7f1e6-0d19-456b-878b-3fc9d8f5687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633f60b9-10ef-4ab6-b693-9984ec0f2ef7",
        "cursor": {
          "ref": "ba6c3e38-7aa2-4601-9b33-9953a8d1e222",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f9f09144-063c-400a-9d64-b855132bab7d"
        },
        "item": {
          "id": "633f60b9-10ef-4ab6-b693-9984ec0f2ef7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c3dfe471-904c-498e-befe-071d48bc80c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ad25b-1df6-42ad-b81b-f05fd81d667c",
        "cursor": {
          "ref": "c9b5f830-c3c0-4db5-bee6-99ba26c2de8a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "59f51c3c-c2cb-4071-8964-4ad4694c6b5f"
        },
        "item": {
          "id": "568ad25b-1df6-42ad-b81b-f05fd81d667c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1eaba28b-e2b9-46ab-9d31-965380405be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf58415-6699-4ef4-bda0-8d4fdb4e29ca",
        "cursor": {
          "ref": "b636f3ec-76ed-4740-8aba-b78849d98297",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7649a7e2-abc0-43b2-ac91-ca3bdc9a2578"
        },
        "item": {
          "id": "5bf58415-6699-4ef4-bda0-8d4fdb4e29ca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "83decde0-0aee-45b1-a57d-b2851e394478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3518a-d66f-4236-a943-7e93189baec9",
        "cursor": {
          "ref": "55b3640c-5163-4180-8b0e-45ded2b7e229",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "de6a6103-0f14-4975-8a5e-96e7da0df51e"
        },
        "item": {
          "id": "7ed3518a-d66f-4236-a943-7e93189baec9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15c891e9-f73c-4d5b-89dd-7a50059ca8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655d480-f0e1-453b-88c3-67191f56e2d1",
        "cursor": {
          "ref": "0e08c84f-0c4f-4596-82c8-06653ade1f7c",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59cf83b7-3012-4fcb-acd1-d9cb58617b86"
        },
        "item": {
          "id": "4655d480-f0e1-453b-88c3-67191f56e2d1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68247f04-ac66-4dda-a1ee-e0d3802e42e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1974158-7010-439a-8a4a-651b95210a0a",
        "cursor": {
          "ref": "a2ba4100-b00c-454d-9155-fa411417cbef",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ac671dbd-1eeb-4eb8-ba65-f0f5c06bb69d"
        },
        "item": {
          "id": "f1974158-7010-439a-8a4a-651b95210a0a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "05c9c6f9-d207-45d3-927a-312652657540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830ca336-a076-4283-ae08-740402d12010",
        "cursor": {
          "ref": "e6c9fc49-d3c1-4d7c-9b4d-568d44dd8008",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6d7c34bf-e9c9-4403-bc30-f9147d902c0c"
        },
        "item": {
          "id": "830ca336-a076-4283-ae08-740402d12010",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "440a9f3c-1b0c-4abd-99e4-e1263e96004b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba933b33-d3b5-4ac1-ae91-f14e96013765",
        "cursor": {
          "ref": "a8b02b96-649d-48c9-abb2-0a5f1e8cf114",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8e6beaaf-93a9-4d64-bae6-796c6016b4b6"
        },
        "item": {
          "id": "ba933b33-d3b5-4ac1-ae91-f14e96013765",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7e38d405-a716-4300-8c90-08df925311cd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 837,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651700b9-774b-4a47-9f0c-be59bfc6ec63",
        "cursor": {
          "ref": "65cdcbd5-05eb-4c32-83d2-9366546b560e",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "73a352e8-9859-429b-9598-b04dcaccdeaa"
        },
        "item": {
          "id": "651700b9-774b-4a47-9f0c-be59bfc6ec63",
          "name": "credentials_issue"
        },
        "response": {
          "id": "30f5a4ba-4a34-4bf2-98b9-34dadf238db6",
          "status": "Created",
          "code": 201,
          "responseTime": 7768,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f200c-297f-4ec3-ad66-af754e48503d",
        "cursor": {
          "ref": "23bea4c0-9546-4716-b872-e1a26a56e4b8",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d336afb2-8434-4928-ace7-74542cfbc04e"
        },
        "item": {
          "id": "602f200c-297f-4ec3-ad66-af754e48503d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8baec6a7-822d-48e3-ab32-e4116a31461e",
          "status": "Created",
          "code": 201,
          "responseTime": 3863,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a63660d-f2c6-49c6-9b19-1103cb25e9fb",
        "cursor": {
          "ref": "fa31e74c-cfe8-48ed-9316-e90a6705b42b",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3d28f53-4ea4-447d-95c2-9a3d217f08b7"
        },
        "item": {
          "id": "5a63660d-f2c6-49c6-9b19-1103cb25e9fb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1e02a56e-c68a-4d97-bf3e-556eba05eb8e",
          "status": "Created",
          "code": 201,
          "responseTime": 4476,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3869c06d-a226-4f5d-a7a2-73e5e4b45629",
        "cursor": {
          "ref": "b2a0cc18-492c-42b8-a77c-06ad8e6ba711",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "251b1e05-e44c-40cb-9015-e827451f9856"
        },
        "item": {
          "id": "3869c06d-a226-4f5d-a7a2-73e5e4b45629",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e721450f-7ef7-4c10-be52-3d9f07953960",
          "status": "Created",
          "code": 201,
          "responseTime": 3467,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172ffaa-793e-49e2-bfbe-35a2d91169f6",
        "cursor": {
          "ref": "caac6b70-faf2-4772-abca-af880521b898",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6270cd98-93fa-4d8f-aaaa-514199273c75"
        },
        "item": {
          "id": "4172ffaa-793e-49e2-bfbe-35a2d91169f6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "15903558-b766-4dad-8ca7-08b2b50ecbc6",
          "status": "Created",
          "code": 201,
          "responseTime": 6070,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b2cc02-9aee-4ceb-ba54-8f92ebffd0fb",
        "cursor": {
          "ref": "aefc56aa-a390-4e29-9ef5-9434c0686649",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2677e9de-e889-480a-a633-d603cfd30861"
        },
        "item": {
          "id": "b9b2cc02-9aee-4ceb-ba54-8f92ebffd0fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "700a82b0-7b9f-4b68-9e05-91b8da52ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b2cc02-9aee-4ceb-ba54-8f92ebffd0fb",
        "cursor": {
          "ref": "aefc56aa-a390-4e29-9ef5-9434c0686649",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2677e9de-e889-480a-a633-d603cfd30861"
        },
        "item": {
          "id": "b9b2cc02-9aee-4ceb-ba54-8f92ebffd0fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "700a82b0-7b9f-4b68-9e05-91b8da52ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78805707-4094-4806-a356-7084f2b7c5db",
        "cursor": {
          "ref": "a8ba6546-e695-4a50-8abb-5763d63b5a87",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e3e4bc5b-e528-4769-aabb-0e7a196924b3"
        },
        "item": {
          "id": "78805707-4094-4806-a356-7084f2b7c5db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a1689041-8000-4929-87b4-ec4282bb1094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490b63fa-617c-4bcb-87f5-67574b45cdf6",
        "cursor": {
          "ref": "7d6d2f6a-446d-4ebd-b2e7-31b5964c223a",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b0f850f-9f6a-4dad-b681-f4a72a800913"
        },
        "item": {
          "id": "490b63fa-617c-4bcb-87f5-67574b45cdf6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0afab69c-3369-444c-ab02-1882804d0f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b519d4-d8cc-4379-bf8a-9d4016306e37",
        "cursor": {
          "ref": "795f8e0e-2032-402f-9faa-967260dbfdf2",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cc1c1402-66f5-4809-bc77-d9f2b89d8f36"
        },
        "item": {
          "id": "40b519d4-d8cc-4379-bf8a-9d4016306e37",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "52a953f8-3d28-485d-8816-86cd04d5af35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfb59b4-ddb8-479a-8e30-8804d8ed4edb",
        "cursor": {
          "ref": "b26adf00-e05f-4913-82da-f6185003ff21",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e7cf9f75-d121-483c-8169-1e40aecaf0a0"
        },
        "item": {
          "id": "fdfb59b4-ddb8-479a-8e30-8804d8ed4edb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f683cefa-1a42-4520-9624-8eafffce7f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26caf23c-d147-4b2d-bc6c-352e856c0579",
        "cursor": {
          "ref": "74e2a824-beb9-4f7e-8029-c5604caa18b5",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "432a4f23-a158-4963-9444-cf1568190756"
        },
        "item": {
          "id": "26caf23c-d147-4b2d-bc6c-352e856c0579",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bffb5fa8-fa47-4af5-96d6-45619dc725be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8904731f-36d8-4b6d-8429-ae28f6539518",
        "cursor": {
          "ref": "933dcf68-b94a-490e-a09c-1c8bb862f98c",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee13b80c-1147-49ca-8691-dc7e99419c60"
        },
        "item": {
          "id": "8904731f-36d8-4b6d-8429-ae28f6539518",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7c03c11-cf40-40e7-b46e-098bf19bf495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92db473-eace-4548-b5b0-efe04eec918a",
        "cursor": {
          "ref": "e29e0e5a-5641-4575-8280-21c1535f3152",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5a28ac47-37e7-4b80-8ab2-aa7c506381fb"
        },
        "item": {
          "id": "f92db473-eace-4548-b5b0-efe04eec918a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d67b683f-664c-41fd-80ad-065cbeb14fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce924ad-c21a-4ea3-8720-0be7d06f83c6",
        "cursor": {
          "ref": "6dcb0a23-db6d-4d4a-8e15-353e429f5579",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a917b42-f94f-4e77-8736-3c4e934bb6f0"
        },
        "item": {
          "id": "8ce924ad-c21a-4ea3-8720-0be7d06f83c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7e10c16e-9675-492a-a146-a39b214ce627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84daca21-1a0a-4a92-bd4b-71c07c02c91b",
        "cursor": {
          "ref": "219f61aa-d741-40bd-9e46-b65f92b2edee",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0c7649cd-bff1-40f9-874b-df790f06c68a"
        },
        "item": {
          "id": "84daca21-1a0a-4a92-bd4b-71c07c02c91b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7aaecbc7-e6d1-4255-92a2-704f93499ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a066072-7f6c-4a74-b001-ae13342eaf68",
        "cursor": {
          "ref": "8b9f4cab-eb19-4317-90a0-4df291ba215c",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "404206ec-198f-4e95-b4db-f81e5e2e5a06"
        },
        "item": {
          "id": "4a066072-7f6c-4a74-b001-ae13342eaf68",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "112ab3a5-76c0-4389-a73e-d77aaab22058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5986d5e6-3aec-470f-a318-6e43e5ac3e02",
        "cursor": {
          "ref": "c7bd2684-59bc-47f2-ba07-c0ce62d6c4f9",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "07c0f0e5-5d2c-4fd6-98ef-be0880d67eeb"
        },
        "item": {
          "id": "5986d5e6-3aec-470f-a318-6e43e5ac3e02",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4e80d969-39d9-4f7e-a07f-f9bacfd2c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3600d90b-87a7-4b9e-b8aa-d11e885f4adb",
        "cursor": {
          "ref": "cb09e402-4a54-4a1b-914f-ac3659eac7af",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8fe61935-86fb-4135-82cc-9e2f3f7f99ca"
        },
        "item": {
          "id": "3600d90b-87a7-4b9e-b8aa-d11e885f4adb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "63363760-069e-4f5c-b9e5-1385106c03c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69e77dc-67d2-4832-8506-3a5a6e21e796",
        "cursor": {
          "ref": "c3168f05-0d51-4507-b946-b31da60057de",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bebceb3e-7e80-4bd8-b5cc-7e8a6b0ba764"
        },
        "item": {
          "id": "a69e77dc-67d2-4832-8506-3a5a6e21e796",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "705b5f9b-27ec-4bef-a4db-29cb96e2ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3877a2-6b76-4a34-bfdb-72693de5eacc",
        "cursor": {
          "ref": "af932505-c9cd-4086-a300-28314ecd0394",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57763d8d-79f6-40d2-8aeb-9060ba18fcba"
        },
        "item": {
          "id": "fe3877a2-6b76-4a34-bfdb-72693de5eacc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1f1ff06b-9d91-4f44-84a1-16ceb141ac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142a8da9-dc98-4791-88cc-3e9131e5aef8",
        "cursor": {
          "ref": "70b80941-89b5-4e14-a6e4-bbfafcf156e5",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2faa00c-fcf0-4c3b-89aa-1a8ded101132"
        },
        "item": {
          "id": "142a8da9-dc98-4791-88cc-3e9131e5aef8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e3053bfd-9fb4-4d02-b812-08f8796b34f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7b4ca8-5a86-41c3-b2d4-cf82014770fa",
        "cursor": {
          "ref": "249ad709-103e-43b4-b214-c3b5f06f1a8c",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "64342cd9-be72-4424-b613-99bff9eeb221"
        },
        "item": {
          "id": "cf7b4ca8-5a86-41c3-b2d4-cf82014770fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "44da16ab-13eb-429c-957e-f94783f109ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab4a6ac-309b-408c-8a1d-1ab21d3d0d1f",
        "cursor": {
          "ref": "c7edb792-244e-4e64-b5ff-49a26f66f106",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e6673843-b8c7-497e-b42a-1c74836b93a8"
        },
        "item": {
          "id": "8ab4a6ac-309b-408c-8a1d-1ab21d3d0d1f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2caffd15-8d85-4b6a-a4aa-92a7c59950e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb39b57-859a-4ff7-9e6e-03898bb1e993",
        "cursor": {
          "ref": "68175665-6573-42fd-ae76-fbfa68777d46",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4747adbf-bdc6-43ad-912b-fe2e11bb2abd"
        },
        "item": {
          "id": "5fb39b57-859a-4ff7-9e6e-03898bb1e993",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "411f5b6d-3a35-4887-9d3f-8d46bdf5938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ccbea1-be1d-412f-b18d-f4742e1f8068",
        "cursor": {
          "ref": "c22dfb37-7d57-461c-901c-4a5793920278",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37dd7794-51e8-4ebd-8c7f-feb9acd67592"
        },
        "item": {
          "id": "20ccbea1-be1d-412f-b18d-f4742e1f8068",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "99abe037-d9fc-42ea-b125-8592c41f4f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41fecca-c5df-4d5c-8a50-5ebbc6643a34",
        "cursor": {
          "ref": "2367d8b3-6c00-4354-8479-25bdea0171ca",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5bbda536-85d0-45a9-9e27-cdd899279cf5"
        },
        "item": {
          "id": "e41fecca-c5df-4d5c-8a50-5ebbc6643a34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "66cff20a-5ce9-4b15-9b1b-a66d33d2e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e256583-9739-4f62-8ae9-a1bee82cae0b",
        "cursor": {
          "ref": "314c67b4-8007-4a94-bea8-0502021d5752",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "48cb0a39-cbcf-423c-95f4-5f93edf4bb6b"
        },
        "item": {
          "id": "9e256583-9739-4f62-8ae9-a1bee82cae0b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "62599689-4da7-43c7-8ba8-a307901369ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f27da39-3ec4-4a64-a676-1cff60d05a07",
        "cursor": {
          "ref": "59eed48b-3103-4c6f-b0a4-b35b7a962077",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "abeee993-c5d9-4f43-a188-bc33096817fa"
        },
        "item": {
          "id": "8f27da39-3ec4-4a64-a676-1cff60d05a07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "622363c9-3935-4395-8d46-71508dff1389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e17c8a-470d-4f50-80d2-03186c2cecba",
        "cursor": {
          "ref": "bb5ee772-f80c-43e8-8ba3-b08750b300c2",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca24f116-b96c-4746-b75c-b87159596c48"
        },
        "item": {
          "id": "e3e17c8a-470d-4f50-80d2-03186c2cecba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "53c1b65f-b04a-4705-8a08-312c988aa8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199bcdc-e17e-410d-a6af-8879f79a552a",
        "cursor": {
          "ref": "9ee9d9a5-258a-45e3-86d0-023d627b662a",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "833b7f89-8129-4702-a7cc-8dd5c10eb8d1"
        },
        "item": {
          "id": "4199bcdc-e17e-410d-a6af-8879f79a552a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7cab514d-b130-4a39-bc71-093b5fb278b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ffcb0-5ebd-4db0-923d-84042c1ab62d",
        "cursor": {
          "ref": "81f1592b-87cd-4a5a-86f0-936dc649269c",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4e68fd26-94cb-45d2-a765-111e07c6b10b"
        },
        "item": {
          "id": "6d1ffcb0-5ebd-4db0-923d-84042c1ab62d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb891990-cf58-4e8d-842d-80c00db392f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85783b95-d963-494f-9044-aa2b9a6fad5c",
        "cursor": {
          "ref": "4b0bceb6-40e9-4918-b17a-71f0ca188108",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ca625e7-dafe-4db4-b065-7626cd13cbef"
        },
        "item": {
          "id": "85783b95-d963-494f-9044-aa2b9a6fad5c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9dfdb2ba-bf97-4a16-8e33-f551a5300e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c41808-ab0a-4d18-b9d9-3cce8f176ace",
        "cursor": {
          "ref": "3b80f40f-1c37-4490-9dff-7fe250c81170",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0a725e8b-95e8-49c1-b9d8-e850f3e9107a"
        },
        "item": {
          "id": "56c41808-ab0a-4d18-b9d9-3cce8f176ace",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9fbd5c0d-f601-460d-b2a5-2eca9d5d7eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c859ce8-62dc-497a-b16d-2df590832e5d",
        "cursor": {
          "ref": "a7f6f57c-8591-4b09-87d1-e99a0f8e1017",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "df180490-a9a4-4f74-98f9-317c07e81d8b"
        },
        "item": {
          "id": "4c859ce8-62dc-497a-b16d-2df590832e5d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cbba2208-193d-4fe3-9a81-97e0564f791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a176d5-9a42-4a97-a297-2d43c1a87e2e",
        "cursor": {
          "ref": "5c50cc8d-98c3-4971-b0de-6bc0c3196adc",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36855f26-01ac-4a47-b351-2582ee7cfb6a"
        },
        "item": {
          "id": "27a176d5-9a42-4a97-a297-2d43c1a87e2e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bbc8684c-a603-470b-a40f-72954cf6d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e044e1-392d-44e5-8d8a-290f8f2bc8b5",
        "cursor": {
          "ref": "b89e4e0b-0a5d-4265-94ff-0daac45e5b7f",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0cdb6089-255f-41a5-8dd5-4d8dbe816fb4"
        },
        "item": {
          "id": "86e044e1-392d-44e5-8d8a-290f8f2bc8b5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eecd43d0-b787-4f79-9776-02ae91e36ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bf49c-ffd1-4df5-a871-4f19e4569554",
        "cursor": {
          "ref": "48f7539b-2ec1-478b-a304-ff1dd93aba5a",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9a47aa93-9d5f-4ed1-b5be-90076fe9a002"
        },
        "item": {
          "id": "ea8bf49c-ffd1-4df5-a871-4f19e4569554",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "849deecc-19a6-4402-8cc4-d80b3da49906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95369709-1ca5-4279-97d4-d9033b0dd527",
        "cursor": {
          "ref": "48c43ed1-8bfa-4ad4-ac7a-7fffc4ce4b43",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "94d503ae-1501-47bd-ad4b-810db240b1fc"
        },
        "item": {
          "id": "95369709-1ca5-4279-97d4-d9033b0dd527",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f008e8a-e8c3-4c57-b4d4-6d1e50ef94a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f330a40-6165-4fad-b7e3-63f97eaced0c",
        "cursor": {
          "ref": "4104e5d7-6405-424d-98ff-e35c4e600827",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "451b8679-d7be-492a-9371-e47986242354"
        },
        "item": {
          "id": "9f330a40-6165-4fad-b7e3-63f97eaced0c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7071e515-2dd1-4fa0-ab0a-26466216827e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 487,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01214a84-71f0-42fa-b30a-281d15ff8acb",
        "cursor": {
          "ref": "accb4c6f-90e0-458b-8e42-33f2710f1f36",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d9ecaaae-5d66-4c12-9e96-5842f1e86123"
        },
        "item": {
          "id": "01214a84-71f0-42fa-b30a-281d15ff8acb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ba4bc20-54f8-4591-86b0-e1fc01e5a275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01214a84-71f0-42fa-b30a-281d15ff8acb",
        "cursor": {
          "ref": "accb4c6f-90e0-458b-8e42-33f2710f1f36",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d9ecaaae-5d66-4c12-9e96-5842f1e86123"
        },
        "item": {
          "id": "01214a84-71f0-42fa-b30a-281d15ff8acb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ba4bc20-54f8-4591-86b0-e1fc01e5a275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adf9e07-f0b7-40ef-a047-5d5ad4889f33",
        "cursor": {
          "ref": "514c0b85-8fdf-40ed-b3a7-e2d47cc1efa0",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d8079f03-c4ce-46ae-ac30-b8cd7154b18c"
        },
        "item": {
          "id": "8adf9e07-f0b7-40ef-a047-5d5ad4889f33",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d7f4c4e0-4b44-44d3-9a70-64a0105fc474",
          "status": "OK",
          "code": 200,
          "responseTime": 654,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "29b8389a-5a32-413b-9d7b-82db30a1cf15",
        "cursor": {
          "ref": "32435b9f-28e3-4807-aa5f-cbb49b0510c6",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cee13fcb-9844-4795-a7dc-0dd1612b84a8"
        },
        "item": {
          "id": "29b8389a-5a32-413b-9d7b-82db30a1cf15",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc52e355-0a72-4dec-878f-76333b49b6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4433e744-afa5-4368-9b84-318ebe914717",
        "cursor": {
          "ref": "de96782f-93a6-42c0-bc2a-2664480bfad2",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e68af661-25e4-47c4-95c1-e639cc0719e8"
        },
        "item": {
          "id": "4433e744-afa5-4368-9b84-318ebe914717",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "294a4417-b02f-4679-a4dd-c6010bb458d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2293d4-fa4d-4092-a973-299d6a9b7cd8",
        "cursor": {
          "ref": "b05d62b5-6ad1-4c48-be49-3b3efc1d3078",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "84df794f-4fa0-4840-bcdb-db248d0d7776"
        },
        "item": {
          "id": "dd2293d4-fa4d-4092-a973-299d6a9b7cd8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fcdb92fc-c507-4003-b4eb-8e1ef6db0944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca963f1-eb08-4ea7-beb9-18c3202db64a",
        "cursor": {
          "ref": "ba1c06cd-df91-4c3b-b36d-ecd8e3eb9d76",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c4482c3-13c6-438d-b61b-c0130bd19a2f"
        },
        "item": {
          "id": "9ca963f1-eb08-4ea7-beb9-18c3202db64a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "432baa61-9544-4a54-92cb-d4d0ff550c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5411cd-eea0-4b86-834f-9c8040a3a27a",
        "cursor": {
          "ref": "86fef54d-563b-44c9-8b41-3754c88773f9",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b8a18e17-1aba-450f-a20d-1c3ba5351445"
        },
        "item": {
          "id": "aa5411cd-eea0-4b86-834f-9c8040a3a27a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3ed56bd4-495c-43d7-99d2-3ddca60c0d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ecc7e4-e266-4600-bc62-c7ae6dfbf496",
        "cursor": {
          "ref": "7832da84-041c-403e-91c5-e335238876da",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "00b67b08-50ed-45c7-a351-404819d7e15e"
        },
        "item": {
          "id": "76ecc7e4-e266-4600-bc62-c7ae6dfbf496",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b4c1486b-b7fe-4342-8f9d-72b929858086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a178f7fe-10c1-4c4d-b31f-a9762b6e87ee",
        "cursor": {
          "ref": "627b3420-61c9-4a18-938c-6df24b4245a7",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3396a5db-4554-42dd-a671-b8d42ce96be1"
        },
        "item": {
          "id": "a178f7fe-10c1-4c4d-b31f-a9762b6e87ee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d1c14cbd-a0f3-4508-905b-0f44898fca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3bd939-eb7a-4d18-b112-a0a0ed85acce",
        "cursor": {
          "ref": "eacfbfed-f32d-43e4-80d9-715e16985243",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e706ccd9-6326-4020-95d8-bb000c3121df"
        },
        "item": {
          "id": "2b3bd939-eb7a-4d18-b112-a0a0ed85acce",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "77f41c82-7b82-4d05-abd8-0ca76c93ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00525341-b635-456a-97d7-4018e6d3259e",
        "cursor": {
          "ref": "8431d10a-7769-4e6e-afb2-3a90bfadde11",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ede71bf2-db0f-4dba-9632-e5ff015f63d7"
        },
        "item": {
          "id": "00525341-b635-456a-97d7-4018e6d3259e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f715969f-1208-4c67-a209-9c57254bba50",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "a94078a4-0ab5-421d-88ac-1e5d1382ac45",
        "cursor": {
          "ref": "3fdbd867-7cdc-490f-a5d7-447393e60380",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "efa3aa6d-04a3-4ba1-b91a-3ae1b59768e9"
        },
        "item": {
          "id": "a94078a4-0ab5-421d-88ac-1e5d1382ac45",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "25a7f41a-4240-47f7-9367-2b003bc2e83c",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "20e41d25-b7fa-41d2-af3e-e71aaea7e5b0",
        "cursor": {
          "ref": "69839dd6-35f5-49fb-b6b4-75f505ea632b",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67d255b5-7d4d-45e2-ba7b-ea88297b4ef7"
        },
        "item": {
          "id": "20e41d25-b7fa-41d2-af3e-e71aaea7e5b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b81031f2-46c9-49ac-bc8f-d6202d0bebb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c956623-9979-4282-8869-7c2c0ce0dc46",
        "cursor": {
          "ref": "e09d93f2-4b08-4649-ae3d-3fac9cd47e00",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "69e2a84a-b205-496e-a093-115d4d375e90"
        },
        "item": {
          "id": "7c956623-9979-4282-8869-7c2c0ce0dc46",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2c264ac4-7ea3-4a0f-b865-033965091eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c6637b-a431-401f-8b5c-ed6c5ea4d7b6",
        "cursor": {
          "ref": "6ccbfb4a-7bac-4c9c-a7e6-6b7e682e338f",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cdd61bb8-b22e-46bd-bc93-18f554551ccd"
        },
        "item": {
          "id": "f7c6637b-a431-401f-8b5c-ed6c5ea4d7b6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a7e94a6-9ab6-475c-b363-2040f38922e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883502ec-1b5d-47e7-b21b-18446d9ab5b4",
        "cursor": {
          "ref": "23cb5401-b0e7-43bb-8584-e35e80184b45",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b1faba25-6764-47b4-980f-7a70f7002f77"
        },
        "item": {
          "id": "883502ec-1b5d-47e7-b21b-18446d9ab5b4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "de36fea1-57b0-4d5a-8162-d5a13be2a24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8d7a46-f1c3-441a-9362-e9ccec8816e4",
        "cursor": {
          "ref": "4fa1ef2a-5045-4f46-a929-4080b7dbe403",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "af1288f1-b90c-480f-9aff-00be85eff6dd"
        },
        "item": {
          "id": "8e8d7a46-f1c3-441a-9362-e9ccec8816e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "41c783c9-6217-4490-9a7e-e31bf36215df",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "fed4ef09-cd60-45a9-b4ea-b29b8f55fb39",
        "cursor": {
          "ref": "bf29041d-5001-4ef1-882d-940a2d5ff72d",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "866e85e6-aed3-4341-ba33-c7521aa1f05f"
        },
        "item": {
          "id": "fed4ef09-cd60-45a9-b4ea-b29b8f55fb39",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "726f0d85-5f62-42aa-b23b-01cc8e0f4136",
          "status": "OK",
          "code": 200,
          "responseTime": 1654,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "92a1200c-69c3-4583-880e-eb6ea28704ee",
        "cursor": {
          "ref": "3e0e296e-8b63-4e07-9d71-094fd70283ad",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef3f61db-d38b-42bb-a40c-939fe04cd003"
        },
        "item": {
          "id": "92a1200c-69c3-4583-880e-eb6ea28704ee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "49dcfb56-ef7c-405d-ad3a-b0b158c9c388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a6b34-d5e5-4066-a0f9-3be13183d724",
        "cursor": {
          "ref": "56484d13-ed45-4150-ac9e-bd0ea80ab7eb",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "44a63b6c-d4ca-4e00-a4a5-b0f89d6e1605"
        },
        "item": {
          "id": "e68a6b34-d5e5-4066-a0f9-3be13183d724",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f285d4d8-2d1c-4e5b-b5be-68f070a4e9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb51081-fe47-49e0-8e1c-248a5b0a4471",
        "cursor": {
          "ref": "ab29beda-209c-498b-9fc0-f01e4a800a69",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5da1f0a-7655-418d-bb68-74de1e6467b4"
        },
        "item": {
          "id": "beb51081-fe47-49e0-8e1c-248a5b0a4471",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "934f5175-4a6f-44e8-822c-319b65158e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799cb95-a16f-407e-8a1a-1b3457d9680b",
        "cursor": {
          "ref": "11493a12-4056-44d7-8df7-6f5b6f4e1e28",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "61fd933e-9cb8-43d9-b031-dd4848e8c51b"
        },
        "item": {
          "id": "b799cb95-a16f-407e-8a1a-1b3457d9680b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "76316065-dd9f-4952-baeb-63d3ba165bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30583cce-234d-4cad-87d9-4bfaa2a7b28e",
        "cursor": {
          "ref": "55e142e6-ae96-4dd9-8f9e-de47dd3ca5f8",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "44869d0a-9778-46cf-8c6d-0d6d4ef317bf"
        },
        "item": {
          "id": "30583cce-234d-4cad-87d9-4bfaa2a7b28e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1cdba20f-45a6-4d75-8596-8d33a9d5638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201f301d-e8d4-4ce9-b8fa-d11a1cf7d1c5",
        "cursor": {
          "ref": "337ac106-8427-49e1-96e9-394f2a4584fd",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aceb7e50-4718-4325-97bc-f2585a7e1edb"
        },
        "item": {
          "id": "201f301d-e8d4-4ce9-b8fa-d11a1cf7d1c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c3c768f6-6e2c-4e28-af7b-6151e92ba6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1daf39-17fb-480e-879a-536af85653c4",
        "cursor": {
          "ref": "5fcc1171-4e25-4cb1-b109-63b0cc93836d",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1e4d2a87-4514-4852-8f16-279620d64a26"
        },
        "item": {
          "id": "ac1daf39-17fb-480e-879a-536af85653c4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1efee00-3619-4975-8ce1-94ed08a0ed72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5037f0bc-7454-42f0-9318-59bdc17c1588",
        "cursor": {
          "ref": "b2729da2-ec97-46af-9166-436afa958ad0",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b11eccfa-ff6c-4146-8663-7f7e4c90db26"
        },
        "item": {
          "id": "5037f0bc-7454-42f0-9318-59bdc17c1588",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "66bc4733-045e-4635-b643-e1d06e1a7803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa169f1-6c2d-4e50-81ec-68c61238c134",
        "cursor": {
          "ref": "113c6449-7c85-44c9-854a-49829774ee4e",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7453ab71-72d2-43b1-9cbe-63f7dceb8fb1"
        },
        "item": {
          "id": "9fa169f1-6c2d-4e50-81ec-68c61238c134",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b4f1d278-1631-4505-8b07-c16339b3306c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a63ef74-75e6-48c6-a7be-07156c3aa97d",
        "cursor": {
          "ref": "92ac89f1-7351-452c-8772-ded1afabdaf0",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0d19cdf0-7235-42ca-81f3-f9ed94b7a656"
        },
        "item": {
          "id": "0a63ef74-75e6-48c6-a7be-07156c3aa97d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6476b9fa-d9db-4c4f-9325-3a7fe2885f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa1c70b-1e1f-4619-b78c-c22ff85d9566",
        "cursor": {
          "ref": "d8193a48-04c8-4f43-8505-1e8e01b71434",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7dd5b54c-62eb-4d1d-94e7-110065032399"
        },
        "item": {
          "id": "aaa1c70b-1e1f-4619-b78c-c22ff85d9566",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c0bb1d2-007e-40f7-8458-be7a6b6befe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18436fd1-cb83-4f0b-b7d7-72cd5227fbde",
        "cursor": {
          "ref": "dd21f2d9-5fff-4b77-bddf-cda6ac43184f",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "efebb45c-7bcf-452b-afdf-19b59f84ce2d"
        },
        "item": {
          "id": "18436fd1-cb83-4f0b-b7d7-72cd5227fbde",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "97523ccf-4fac-494a-b2a5-dc7f06a1275a",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "0b10245a-d277-4aef-b2fa-54fee2fe86f0",
        "cursor": {
          "ref": "abbbecdb-8fe9-4c60-ba8a-45c8b87fd30e",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "74df5c3f-6858-41cc-9729-d81efcc2cc4a"
        },
        "item": {
          "id": "0b10245a-d277-4aef-b2fa-54fee2fe86f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1569a9f3-e19c-4ef6-8dc0-9dba9799565a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17298959-1db8-4c9c-8b93-7f9c35b7055d",
        "cursor": {
          "ref": "e52877c6-5b54-435d-920b-69b400012281",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f1a4d42a-6786-4810-b301-7e6c643fff00"
        },
        "item": {
          "id": "17298959-1db8-4c9c-8b93-7f9c35b7055d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "385351cb-d22e-4584-a9d1-d72618f7a54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6cf3c5-8121-42b1-a81f-562ed7b9071e",
        "cursor": {
          "ref": "68f8e67b-da4c-437a-ad5c-454f4524c848",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4165ede1-1207-4716-bb35-babed90a39f3"
        },
        "item": {
          "id": "cf6cf3c5-8121-42b1-a81f-562ed7b9071e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "78183b19-c000-466a-b20f-e1e483ff355b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd33db-4dab-429a-9f03-94b3c00b3a25",
        "cursor": {
          "ref": "5a342d72-3966-45cd-9079-ceefa813f875",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ebcc13c-5e5e-448d-a5bd-b0b50fd0caf7"
        },
        "item": {
          "id": "dfbd33db-4dab-429a-9f03-94b3c00b3a25",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9eee39fa-5d6e-4c03-aa88-9bb8230d11bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab5f3ce-08dc-4c7d-9c10-50a699a5ace0",
        "cursor": {
          "ref": "fe2e2736-8378-41e1-a3d5-f3f95e8dca89",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "526e724c-bd0d-4aba-a196-51a344685c9a"
        },
        "item": {
          "id": "cab5f3ce-08dc-4c7d-9c10-50a699a5ace0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "161a636c-b2f1-4bb3-a764-889ad8271c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2b0c79-6e8d-4d0b-9dd0-119968943765",
        "cursor": {
          "ref": "57edc3ab-91e1-4cef-b6ae-499a8cfca43b",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6fc63dec-84eb-430c-aa82-937e58c3ef06"
        },
        "item": {
          "id": "7a2b0c79-6e8d-4d0b-9dd0-119968943765",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd6888ce-caee-42e2-944d-fb6165976d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31965b5b-2e3a-4a12-a552-62787689dc32",
        "cursor": {
          "ref": "fa446c63-f4c5-4728-92f3-43ebe04cb555",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "455a0c65-5bea-41e3-8b17-83238fa6d336"
        },
        "item": {
          "id": "31965b5b-2e3a-4a12-a552-62787689dc32",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "95997bd1-a10a-45fe-94ae-4356c684d41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a93167f-17ad-47df-8f62-da335a6aaec2",
        "cursor": {
          "ref": "ebcc37d0-4700-47dc-a2ab-b11f5d021eea",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e828a6b5-4fa2-4b7d-9415-bda00938bc3b"
        },
        "item": {
          "id": "4a93167f-17ad-47df-8f62-da335a6aaec2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a5cb178-1048-4a05-bfad-6854b9fe4a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758aff52-4eba-4af6-8788-6a92490a5dcf",
        "cursor": {
          "ref": "35bdb36a-94dc-47d6-86f0-d715f93ebe04",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "de54311c-e691-4336-af4a-651dad5e374f"
        },
        "item": {
          "id": "758aff52-4eba-4af6-8788-6a92490a5dcf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2fbb0da1-4a34-47d2-8b79-081246c9fc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58973797-504b-493f-b38d-944d66265a87",
        "cursor": {
          "ref": "da5191fa-1b5e-4cc2-bbbf-6bd75968ea3a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "375bf5ed-3b9d-47bb-917c-16f0f4e72bb4"
        },
        "item": {
          "id": "58973797-504b-493f-b38d-944d66265a87",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a1ee345a-14e0-4fd0-bb1b-0c475e941241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f890865c-bfef-4d5f-af3a-9a29275796ff",
        "cursor": {
          "ref": "6ec5965a-db58-4e1a-88e6-2550d87af66e",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "906659db-10e5-41f8-a1c4-ca2bdcea0bb9"
        },
        "item": {
          "id": "f890865c-bfef-4d5f-af3a-9a29275796ff",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "80df94df-8e91-4a76-bf9e-657cb08fa10c",
          "status": "OK",
          "code": 200,
          "responseTime": 286,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "69be31c7-2b0e-4e96-970c-1428d53674b7",
        "cursor": {
          "ref": "5238d0a7-80e6-4ed3-b59f-081e552b7b4a",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b677da5e-a7a3-4d3e-b671-6ee6c94400bf"
        },
        "item": {
          "id": "69be31c7-2b0e-4e96-970c-1428d53674b7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6d13f87d-0458-402b-8331-aa74f5b12a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040b9ffa-9c9a-443a-9088-cafd95c8596b",
        "cursor": {
          "ref": "9289bb55-9977-47aa-92fe-6119b3d14d50",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bfd84c21-e215-4ca3-8de0-887aabb8d440"
        },
        "item": {
          "id": "040b9ffa-9c9a-443a-9088-cafd95c8596b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6ba89897-5c61-4955-900f-e35bf1a6426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78d9302-bba7-45cd-9885-8d353469727d",
        "cursor": {
          "ref": "3a7fd1b5-2d27-4a09-8fea-6348ab3e06b7",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1643b89f-37ac-47ca-8e0d-459833b0dd9a"
        },
        "item": {
          "id": "a78d9302-bba7-45cd-9885-8d353469727d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bfe38447-0291-40ab-96be-729533a88acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a026db-b11a-4fac-bc84-f406b879a5bc",
        "cursor": {
          "ref": "98ffd935-917e-4c9f-b70d-0d96ef39c815",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "26ec66b5-3164-41be-9bba-36c3efbe9d92"
        },
        "item": {
          "id": "f2a026db-b11a-4fac-bc84-f406b879a5bc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "35722c22-6739-4556-832e-64e801c838ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f4b1e-5e2a-4dba-a900-fc0e87dc670c",
        "cursor": {
          "ref": "f83caf06-21d5-4012-abea-fc5209db3d6d",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33e054a6-46c5-4fdb-8f31-00ff29788c55"
        },
        "item": {
          "id": "4f0f4b1e-5e2a-4dba-a900-fc0e87dc670c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1e10b7a1-95a6-4e77-95a6-18215a794767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87e5c0c-3c6b-4b2d-84b6-d5627b015600",
        "cursor": {
          "ref": "9958153f-5b48-42fc-93c5-9187488a6e7e",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "03dffe8f-1552-4e59-b4fd-6a1975923fc2"
        },
        "item": {
          "id": "a87e5c0c-3c6b-4b2d-84b6-d5627b015600",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ec4baf4-2701-4680-a4b4-01ba278b2a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe038eb2-666f-40b1-be1e-8ba2d4630401",
        "cursor": {
          "ref": "9a907896-34df-4142-a275-b80671f868fc",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0394599f-3e27-4f69-98d5-bf4de93c7ca7"
        },
        "item": {
          "id": "fe038eb2-666f-40b1-be1e-8ba2d4630401",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f5f52ae-baf4-4779-8ae2-16a50364940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8048a8-18a1-42b2-94c8-091ccec3595b",
        "cursor": {
          "ref": "066769ff-9be5-4329-a740-b2850934adec",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d244e3dd-2475-4b8c-b5d4-eaf00617f392"
        },
        "item": {
          "id": "8c8048a8-18a1-42b2-94c8-091ccec3595b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "78440bef-b331-483c-8250-5b7d669a6a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cc7f91-e75a-416e-a188-9c22f8cc3acf",
        "cursor": {
          "ref": "1e79bd14-f1de-4a08-9ba3-92b905a6927c",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eaaa055c-b5cb-4933-88bc-9124ca4ee39d"
        },
        "item": {
          "id": "84cc7f91-e75a-416e-a188-9c22f8cc3acf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cc96ffb6-a909-4982-99f2-7394d9eba514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef75a372-6f2b-41cb-8a77-02f116a740f4",
        "cursor": {
          "ref": "59566821-527b-421c-9f4f-97206f238ea7",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aa038985-b9b7-4550-8000-d850ef33e3be"
        },
        "item": {
          "id": "ef75a372-6f2b-41cb-8a77-02f116a740f4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54842c86-87ab-4f45-bb3f-45d8b9f079f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5533a022-c8fc-4c06-8d95-822452fc0acd",
        "cursor": {
          "ref": "6683828f-9071-4bc8-9227-79898a6b06c2",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3a0d43aa-9799-49c2-ad4b-257382785c64"
        },
        "item": {
          "id": "5533a022-c8fc-4c06-8d95-822452fc0acd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "83310218-02cd-4f95-9873-c652acd8b394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5442637b-5fa6-46f9-aa71-f1e5e35d435c",
        "cursor": {
          "ref": "c41fd31f-f032-4291-b88c-af1e78b73953",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb301a25-4f0d-4a48-a24c-93c87bd7e078"
        },
        "item": {
          "id": "5442637b-5fa6-46f9-aa71-f1e5e35d435c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "347a491a-2ec3-4e04-a083-f6dd3aa2d90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b5053f-a314-4f73-890a-7c4d0e44447d",
        "cursor": {
          "ref": "9efe1cd0-1a1e-49af-916c-26bff1c40f72",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "038465b1-66aa-46cd-9e38-98d717674350"
        },
        "item": {
          "id": "e8b5053f-a314-4f73-890a-7c4d0e44447d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4cbe7650-a622-46b5-a5d1-6e887fa67f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c93337-c5e1-407f-aa04-b9258b019128",
        "cursor": {
          "ref": "39afe62c-4983-4277-887c-574a133eee67",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "98b786f5-c82c-4fef-be23-89c758850e5e"
        },
        "item": {
          "id": "f0c93337-c5e1-407f-aa04-b9258b019128",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4ff77de7-a3f6-4626-bb6a-12be913f0441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836197d7-56dd-4e48-836f-94fc69d7cad0",
        "cursor": {
          "ref": "5beea0ae-4602-405f-ab72-f542e14bbf72",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a1d6c422-e4ce-484d-b931-e3069b1994a5"
        },
        "item": {
          "id": "836197d7-56dd-4e48-836f-94fc69d7cad0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b7ddb63-ab4e-4de4-961b-4478d32278df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3981158f-9193-4beb-8378-1a04d0571d7d",
        "cursor": {
          "ref": "deea9ffa-8723-488c-817d-10dc93b769ae",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5d161c45-26da-4078-8494-5f655c975ab4"
        },
        "item": {
          "id": "3981158f-9193-4beb-8378-1a04d0571d7d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f1e2083-a424-4594-be20-62f6da5f8982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d45735-fd0d-4848-93bb-d3b462c353b9",
        "cursor": {
          "ref": "c14651c2-87ef-4423-9829-2de5e9c66323",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6d2f7820-2b74-47d5-812e-ff7c0f6526db"
        },
        "item": {
          "id": "00d45735-fd0d-4848-93bb-d3b462c353b9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "53a408f8-60f5-4130-8c8f-e220e8e3e4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f3ead-294a-4dad-8fd6-2639f637e26d",
        "cursor": {
          "ref": "22ac67ea-4f0e-47b7-93c5-01109b6fae33",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0b79fa57-6fc8-42a0-9887-993c8c798864"
        },
        "item": {
          "id": "eb0f3ead-294a-4dad-8fd6-2639f637e26d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c4c1a2b4-a617-4c18-9c60-9d697f3cda2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999aac8a-8374-4f43-ac07-512e55a7063e",
        "cursor": {
          "ref": "31cd50e7-7938-497b-bc1b-3c5d75059845",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9075c49-95b6-4f0b-ae61-9d05699497f7"
        },
        "item": {
          "id": "999aac8a-8374-4f43-ac07-512e55a7063e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "099d6303-1dbb-441d-8ecd-cd29dc6ca73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf00d6e-59ef-408f-8bcb-c6a713d8026f",
        "cursor": {
          "ref": "591b9e2b-6a63-4312-9c3c-7ecb48274e07",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "96b9504e-fae3-4482-85be-9900c0f966d9"
        },
        "item": {
          "id": "caf00d6e-59ef-408f-8bcb-c6a713d8026f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ffb1c159-de17-4bdc-b50c-9d47e2d29b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2130e637-979f-4a50-ac73-de411459af23",
        "cursor": {
          "ref": "bc4187b0-6d81-460d-92f6-560ce3da588b",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2b9edd3d-8078-4390-a959-adb89efc7bb2"
        },
        "item": {
          "id": "2130e637-979f-4a50-ac73-de411459af23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "024e4b4d-d8cc-4300-9ee2-21972b6d94c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69667abe-1131-4770-a4e7-5d33a4eccb9f",
        "cursor": {
          "ref": "f6d7af36-b170-45ef-8d03-c36d3baff3c6",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1fe5624f-88fc-4ac7-9f61-3fdc8545cc21"
        },
        "item": {
          "id": "69667abe-1131-4770-a4e7-5d33a4eccb9f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45f964af-5a2f-45a0-beb9-8e3a6fc95ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf2a29-7458-468a-abd7-5ee7d2105609",
        "cursor": {
          "ref": "0866f1a8-663d-48b6-86ac-97567c88305e",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9992da45-f607-45b2-9aa5-e505151204e7"
        },
        "item": {
          "id": "aedf2a29-7458-468a-abd7-5ee7d2105609",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0829fa1d-93ff-49cf-b715-87fecfb4b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d852f11-10f4-4aa7-b78d-2a43b7668ac1",
        "cursor": {
          "ref": "3ef2239c-cae5-4e00-9206-60b9d864e438",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f04b5c0e-a44d-4a9d-ac7f-88eb80e62970"
        },
        "item": {
          "id": "2d852f11-10f4-4aa7-b78d-2a43b7668ac1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f600fb44-c772-459d-8556-b108c1b6302b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528c1f19-7ac2-46d0-a232-4b858fcde66e",
        "cursor": {
          "ref": "5a3b4444-d099-4873-ba69-1fc83f59deda",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "99122be0-760e-4b1d-a9a7-c3d88c569236"
        },
        "item": {
          "id": "528c1f19-7ac2-46d0-a232-4b858fcde66e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "95cb40bb-fa67-49d7-aa78-bdd97697bef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc5f1be-0b16-41d0-a6f1-e48a68beb0e3",
        "cursor": {
          "ref": "3a376ed4-6587-4a89-b708-e94b117cade3",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ce6d6c9b-430b-443b-b911-49fe597acd35"
        },
        "item": {
          "id": "fbc5f1be-0b16-41d0-a6f1-e48a68beb0e3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d28ba8a5-29dc-49f9-a68f-34094c6a7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0422c4fd-a2cc-41d4-a852-ed57c4502090",
        "cursor": {
          "ref": "5e8156b2-9524-43b7-a189-c584eb7f1736",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "21759e27-fe76-495b-a43d-c1e40ec043ba"
        },
        "item": {
          "id": "0422c4fd-a2cc-41d4-a852-ed57c4502090",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d2b9eddd-6da2-45f8-becd-adff241626f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781d119-139f-4023-9bc3-efe2b2939d96",
        "cursor": {
          "ref": "add4def6-7e28-42ef-8db0-0aa2258e96be",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd4fd71f-2321-4a6f-8a05-31ad2f8df8bd"
        },
        "item": {
          "id": "a781d119-139f-4023-9bc3-efe2b2939d96",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e364c78e-b63a-4de5-97fd-31facec1466b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe9ef1d-0481-45e5-8525-f27370adbcc7",
        "cursor": {
          "ref": "ffd09d9a-8482-433d-b8a8-dd44fbf21ff3",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "529267c6-28b7-4e1e-8f8f-25bc3d91eb7c"
        },
        "item": {
          "id": "afe9ef1d-0481-45e5-8525-f27370adbcc7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3d5e5fa5-8e83-4bcb-92e8-89575e0c8f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855ecb2-056e-4db5-960e-1e8b33d1faf0",
        "cursor": {
          "ref": "725316cb-8906-4eed-9e33-cf6522c0cfd8",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d9ec83a1-c9f3-4126-b923-4421019b937a"
        },
        "item": {
          "id": "5855ecb2-056e-4db5-960e-1e8b33d1faf0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3feba1a5-369f-48b4-a5c9-cb4642c7b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7858e8ce-5a57-484d-9dcf-ed01d81e3a6f",
        "cursor": {
          "ref": "7e78cb0e-e77b-49bf-a0af-2455a4bf491f",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f39e3cae-dda8-4b5a-a9b7-ce6c09a84e3a"
        },
        "item": {
          "id": "7858e8ce-5a57-484d-9dcf-ed01d81e3a6f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "99c23ee3-ea74-4b10-9dfa-127dc1b4ecf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49dcc88-78af-4d13-87f3-9d646b6daa48",
        "cursor": {
          "ref": "a8601a95-3f94-4bb6-b78b-464bbe69e19c",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c2fa8ef1-2a9e-4487-9ee1-fbfd35d73016"
        },
        "item": {
          "id": "a49dcc88-78af-4d13-87f3-9d646b6daa48",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cad4a8b3-de50-4d7f-ad13-85d4ece91528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df02511c-cf9b-47dc-81f6-df67ddaa3075",
        "cursor": {
          "ref": "b2fe36bd-6ddc-4201-8da5-df4f66890190",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "511a177b-c330-4859-a9f3-503e0f1e69ae"
        },
        "item": {
          "id": "df02511c-cf9b-47dc-81f6-df67ddaa3075",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51f3fc18-da7b-4ca6-a039-118b223033f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2eabe2-bc03-43d4-b74e-0a0b8957dc16",
        "cursor": {
          "ref": "955c67aa-bda1-4a62-abe1-4bee2c341a17",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "29a936e5-1d3c-4f5f-a853-7e3092ffec68"
        },
        "item": {
          "id": "ba2eabe2-bc03-43d4-b74e-0a0b8957dc16",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0f53cb02-3121-4a8a-b647-404c3dc97caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef3925-e9f8-4665-8125-d1617e837ca8",
        "cursor": {
          "ref": "1e16ff3e-d168-465e-9019-4154db593aa3",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "59c1479f-a864-472d-b37d-7a896e00518e"
        },
        "item": {
          "id": "cfef3925-e9f8-4665-8125-d1617e837ca8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "64f642a9-2c1d-418b-b5ab-14ec3b58c070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a85ef58-c6b3-4292-bd12-7f63e7561f3c",
        "cursor": {
          "ref": "5e7af248-2820-49ae-b6c0-dd1d5599029c",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "04c02de6-e628-4a2f-88f5-fe638464396a"
        },
        "item": {
          "id": "0a85ef58-c6b3-4292-bd12-7f63e7561f3c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7ec725ec-d328-4e6c-9cf0-6e05a667a1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fca6641-68c2-4541-8513-6622798e97f1",
        "cursor": {
          "ref": "c84dbab8-72e4-44dd-8f36-e383a3836c74",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2b422f9f-c51d-45e3-8491-30d8a083276f"
        },
        "item": {
          "id": "0fca6641-68c2-4541-8513-6622798e97f1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0b79b9e8-a43d-4d35-a104-c986041ee736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f736b224-6acf-4f94-86a1-02b889a7878b",
        "cursor": {
          "ref": "6f17ed60-a275-46de-8f35-2155a43cefd2",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "93080297-7214-45c1-9c8f-da893e8f63d6"
        },
        "item": {
          "id": "f736b224-6acf-4f94-86a1-02b889a7878b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e411b6aa-33fc-428d-a26f-80b4f265ae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bb9b28-8588-45a0-af3f-ebbac4ad7f3f",
        "cursor": {
          "ref": "7542df03-7912-4539-9cc2-0482d6024190",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "05fe8a32-f84d-4a79-ac89-bbdc91d111ff"
        },
        "item": {
          "id": "18bb9b28-8588-45a0-af3f-ebbac4ad7f3f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6defe4e5-6bab-4167-9e07-7c99b88b820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2516800-a3c7-41fe-a440-102faca2a904",
        "cursor": {
          "ref": "ed1723cf-470d-44c2-ad17-a250c0c5817b",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dd2c6ef2-c637-4e6c-8ceb-fa3ad9c4c36f"
        },
        "item": {
          "id": "f2516800-a3c7-41fe-a440-102faca2a904",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24873cdd-cee6-4d64-9b79-65366cb29740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a9baab-d7af-4cf9-873f-f53e7cfe0663",
        "cursor": {
          "ref": "31718f3c-6ffc-4bb5-a060-8c61a7f9b856",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1483c0c7-4d90-49a1-8388-c55dfe1ab215"
        },
        "item": {
          "id": "d9a9baab-d7af-4cf9-873f-f53e7cfe0663",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "37b780a7-80ee-49d4-affb-e0ac31e070d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3a85ff-7cac-4707-b1c4-6490b78738b2",
        "cursor": {
          "ref": "dc1d693d-82cd-4e7a-9b8f-bd0e3c89611c",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e0df17a-bfdd-455f-bb88-4ddfe94fef6f"
        },
        "item": {
          "id": "1f3a85ff-7cac-4707-b1c4-6490b78738b2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "40e442a1-432c-4352-90e0-a5e642a64f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5d03de-9e9f-4936-af10-d43d6fe9fc62",
        "cursor": {
          "ref": "56fedef5-3dc9-41cd-a9e4-5916b679b996",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1a5735ab-7023-43c1-8511-1e83f4bac3d4"
        },
        "item": {
          "id": "ad5d03de-9e9f-4936-af10-d43d6fe9fc62",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "258eef18-3c94-4a97-9dcd-983fc22bb1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3742196-ed34-4ea3-b55e-c2a76c43f948",
        "cursor": {
          "ref": "93768d5c-9df0-4b50-bcde-15d2a398cc23",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd970084-1bee-4a8d-b134-d9bd56370c12"
        },
        "item": {
          "id": "c3742196-ed34-4ea3-b55e-c2a76c43f948",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd8a7344-ad98-455c-9080-752151e0baab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf178d-5e49-4d50-860e-4b8f778aa190",
        "cursor": {
          "ref": "6c2f24c0-4d4d-471c-92cb-f157594384f9",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "abd9eae6-94f8-43c7-ba77-ada7471d3fd2"
        },
        "item": {
          "id": "1bcf178d-5e49-4d50-860e-4b8f778aa190",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0a419f1a-3fef-40d1-943a-4816061e1884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762cc147-f408-4715-b712-4ebf1c32db8b",
        "cursor": {
          "ref": "422d3f48-cb9c-49cb-95b5-12a2ebe44a91",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "52b22df6-00dd-4c2e-aa66-52eaf2fbfde9"
        },
        "item": {
          "id": "762cc147-f408-4715-b712-4ebf1c32db8b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "94d0d4bd-8191-4686-9176-d261786d151b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d69fb-0323-42b5-887e-c0f4ba75eb9d",
        "cursor": {
          "ref": "a53bcd6e-dd38-498d-af64-bb16196862c4",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5d5e63e5-a1cf-4426-85de-7e65fe95d68c"
        },
        "item": {
          "id": "9a5d69fb-0323-42b5-887e-c0f4ba75eb9d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c57fa07d-4407-44fa-92c0-075eafccddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23825110-ec4f-43e9-b7be-621ee4f5718f",
        "cursor": {
          "ref": "6b8d65f9-60c9-49cd-91f5-528c05567767",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0b3b8d43-fabc-405f-9d95-659a1dd60631"
        },
        "item": {
          "id": "23825110-ec4f-43e9-b7be-621ee4f5718f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "13c1e57e-2f2b-4ddf-a767-536ff79f129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec917f2-515d-4a0f-ac97-9ca337045e82",
        "cursor": {
          "ref": "3703a150-08d3-4d37-850d-9f7c7debd091",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a59d814d-ea7d-48f5-9f80-dff7c10864cb"
        },
        "item": {
          "id": "5ec917f2-515d-4a0f-ac97-9ca337045e82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b41e16d7-9dd4-49f3-ad13-80d384ce988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ef494c-f39d-4393-84c3-a6810c8af7ff",
        "cursor": {
          "ref": "3b32d515-1f66-4490-aa9d-76027b0d0414",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8682aedc-f0d6-485c-bdab-7abb700b0c6f"
        },
        "item": {
          "id": "17ef494c-f39d-4393-84c3-a6810c8af7ff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "60b119da-007c-451e-8e79-52c153a00ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4bbd09-8c90-487a-8139-685ffc4a85d2",
        "cursor": {
          "ref": "f67ca28e-c569-4011-bf0d-21228524b1f8",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f81e2425-275b-4ec5-ad15-65896f8d29b5"
        },
        "item": {
          "id": "3f4bbd09-8c90-487a-8139-685ffc4a85d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12420ff6-e6d2-430f-86a6-52a4aad1004a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7129d926-2121-402d-ba5e-2c7b55a1460d",
        "cursor": {
          "ref": "843ee167-5d71-4b8f-aa58-b24bde776f5a",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3f266e69-c5ba-4639-aab6-ba751c7e0cc9"
        },
        "item": {
          "id": "7129d926-2121-402d-ba5e-2c7b55a1460d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "628e690f-86a6-4ea7-b173-12f6ed868444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2cfbb-a814-47ed-a2cd-42aad9b09791",
        "cursor": {
          "ref": "f2abe83b-1972-4982-a80c-f642a19f7b1e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d2c57074-399b-43c2-9b74-efd7a0a72716"
        },
        "item": {
          "id": "8aa2cfbb-a814-47ed-a2cd-42aad9b09791",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3e992e07-5c5b-409b-85a7-de199f33c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0af38f-5ac0-4849-8734-a739502e5e03",
        "cursor": {
          "ref": "93e29635-9e4c-4352-b7a8-77483bddf627",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1e7e218b-7c79-43fa-8e77-366b52234f7c"
        },
        "item": {
          "id": "2c0af38f-5ac0-4849-8734-a739502e5e03",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f8884d74-1994-40d7-8fd6-a46e128b9716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737803f1-7eb1-4f3c-985c-745fe1e04ce6",
        "cursor": {
          "ref": "203e99de-e667-4495-8748-f853d77da547",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40cfc5a2-df7a-4f13-b0ec-f2c17495ba9b"
        },
        "item": {
          "id": "737803f1-7eb1-4f3c-985c-745fe1e04ce6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a892f06-5c4e-4655-bc2c-94af27b71a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be3968-3f66-42db-9e76-725ad43584aa",
        "cursor": {
          "ref": "79b6ff22-5d5f-41a2-a727-6d7a40a50c6e",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1f4cf664-ff48-40af-840e-0149c9951096"
        },
        "item": {
          "id": "46be3968-3f66-42db-9e76-725ad43584aa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b41d4ad8-415e-4bbb-aa30-87338c2cfee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdce322-7a8d-43f9-846f-d204ae732cdf",
        "cursor": {
          "ref": "7b0e33b9-efe0-40ab-84a1-3c7638bf9085",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2a4eda9e-e490-4d08-b8df-230e94e37043"
        },
        "item": {
          "id": "ffdce322-7a8d-43f9-846f-d204ae732cdf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db076486-e3eb-4e27-9df3-708925063d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1deb5b-dd11-4b2e-ae08-0146510f5693",
        "cursor": {
          "ref": "b9290253-d171-40f4-99cf-b0ba3fdbf044",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "97b52c4b-f703-44fa-bd95-43330cd1b70a"
        },
        "item": {
          "id": "df1deb5b-dd11-4b2e-ae08-0146510f5693",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ccc00f45-4b25-4277-a5ec-0f3c7c559d04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97de06ef-c85e-451b-b5bd-c23d01dcc5e5",
        "cursor": {
          "ref": "1b38a933-fa5c-428a-84f7-97f5f56eea0c",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ca611e70-d973-45a4-ac2b-4853132c0fe9"
        },
        "item": {
          "id": "97de06ef-c85e-451b-b5bd-c23d01dcc5e5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d746ff7e-d556-4fdc-ae04-8d57ab8bf9f3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 280,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258da2e8-23ce-40b4-bb62-1b06a2e822dd",
        "cursor": {
          "ref": "7c6a05a6-6e27-4333-b264-252faeed6049",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8144e383-dae8-4107-86e9-9bb6924b112e"
        },
        "item": {
          "id": "258da2e8-23ce-40b4-bb62-1b06a2e822dd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e8089788-56ec-46a4-b035-da7969202ddc",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80a4ecd-4fc9-4943-a693-b3ac1fd41998",
        "cursor": {
          "ref": "4b072586-17d0-49a4-9aad-e92a24fbc6d4",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b12b28a5-4e8d-40fc-ae2e-10fb15f7b040"
        },
        "item": {
          "id": "d80a4ecd-4fc9-4943-a693-b3ac1fd41998",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d590505c-a95c-4fbc-85a2-1f4ce0e1c3c6",
          "status": "OK",
          "code": 200,
          "responseTime": 1766,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c6fff9-b1af-4a2f-a33f-014a6bfe6537",
        "cursor": {
          "ref": "030ac518-3c0d-4d07-a871-73262b64208f",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0c0960f9-25da-4234-aa90-fc1f03b537e6"
        },
        "item": {
          "id": "86c6fff9-b1af-4a2f-a33f-014a6bfe6537",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f8c3e582-48f8-40bf-9d82-62306cf5c08e",
          "status": "OK",
          "code": 200,
          "responseTime": 1538,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
        "cursor": {
          "ref": "f15e06fb-4fe3-4199-8baf-75abee1d5a41",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01756a46-3a64-4d4d-b0c8-e68082dafdb6"
        },
        "item": {
          "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d64c8ef-efdd-4a83-b239-6511940ffd49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
        "cursor": {
          "ref": "f15e06fb-4fe3-4199-8baf-75abee1d5a41",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01756a46-3a64-4d4d-b0c8-e68082dafdb6"
        },
        "item": {
          "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d64c8ef-efdd-4a83-b239-6511940ffd49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
        "cursor": {
          "ref": "f15e06fb-4fe3-4199-8baf-75abee1d5a41",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01756a46-3a64-4d4d-b0c8-e68082dafdb6"
        },
        "item": {
          "id": "f5409f9b-c65f-4a9d-bce4-306d0eb6cb7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d64c8ef-efdd-4a83-b239-6511940ffd49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef5e16-b7eb-4270-9916-6a5e96abadab",
        "cursor": {
          "ref": "72588c54-4af8-4146-adf7-a4590af52de5",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a742c9fe-86c0-4110-a3df-3c59f1db3b99"
        },
        "item": {
          "id": "20ef5e16-b7eb-4270-9916-6a5e96abadab",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3ab1b0a3-2f09-4650-9a49-5a54955b8759",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 289,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab85548-d63f-407d-bbae-bc33e55e0728",
        "cursor": {
          "ref": "2ff5cc02-28ee-4787-ba18-75117971ef8a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3def563b-c059-49d3-9186-adeef6ab2abc"
        },
        "item": {
          "id": "aab85548-d63f-407d-bbae-bc33e55e0728",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34da37e5-8d9f-4952-85ef-f321fcbd77d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab85548-d63f-407d-bbae-bc33e55e0728",
        "cursor": {
          "ref": "2ff5cc02-28ee-4787-ba18-75117971ef8a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3def563b-c059-49d3-9186-adeef6ab2abc"
        },
        "item": {
          "id": "aab85548-d63f-407d-bbae-bc33e55e0728",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34da37e5-8d9f-4952-85ef-f321fcbd77d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3b8385-aef4-4791-901f-1d5cca27a858",
        "cursor": {
          "ref": "0db3b484-6074-45bf-b71e-794cf64f3085",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1a0b759f-ceb3-4806-bfd4-082629814da0"
        },
        "item": {
          "id": "8f3b8385-aef4-4791-901f-1d5cca27a858",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ddca5a43-ceeb-4afe-a4aa-78340867876f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 501,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e8e1ff-ce0a-4f41-9619-673810030ed1",
        "cursor": {
          "ref": "eec1784a-b598-4457-9c29-0886f12d406c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "68870bb0-d4ec-4ff2-b813-5aa5892bc648"
        },
        "item": {
          "id": "32e8e1ff-ce0a-4f41-9619-673810030ed1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "412c2f76-f741-4269-bf43-e47ab178506c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e8e1ff-ce0a-4f41-9619-673810030ed1",
        "cursor": {
          "ref": "eec1784a-b598-4457-9c29-0886f12d406c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "68870bb0-d4ec-4ff2-b813-5aa5892bc648"
        },
        "item": {
          "id": "32e8e1ff-ce0a-4f41-9619-673810030ed1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "412c2f76-f741-4269-bf43-e47ab178506c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c04df-b0b4-479e-a188-36a79db794bb",
        "cursor": {
          "ref": "dda0e590-978c-42f7-8e33-b48536049d3f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "79f03c1a-663f-4378-bc99-9353297570aa"
        },
        "item": {
          "id": "ab2c04df-b0b4-479e-a188-36a79db794bb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "217e3a5b-20a9-4aa2-bd7d-fff4b664bb26",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}