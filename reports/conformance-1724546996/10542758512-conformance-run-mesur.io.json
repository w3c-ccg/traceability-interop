{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "31e52138-4253-4b89-858d-cb01b56a1655",
        "name": "Clear Cache",
        "item": [
          {
            "id": "568e7ac2-c242-4460-b5bd-ead5f232985a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "961d8e4d-22d4-4b55-a12b-064ea1096347",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "df1ae5d7-6987-44c3-a4f2-268ee0e6c945"
                }
              }
            ]
          },
          {
            "id": "68c2822e-a0bf-4fbf-a09f-f629a7fdfe69",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98ed8195-09ac-4ae4-a8c3-2321db397352",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff9b4eb1-ace6-4bed-8a44-fa4131c92f07"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "213a04ff-b4a0-400c-a372-72bc759d9a3d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b05ed014-4350-4fb6-8aff-fc5dc0a5cc50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5a75ff9-bbc7-4158-9df7-ae862dd522d0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "819fce6f-ca77-4592-8581-8bf3fb3ddaf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a13e2d8c-b170-4945-8599-88f8848ca990"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbb4b624-07a3-4465-9ced-0f4e734ee370",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfc44d54-d0cf-42bc-a84d-fec82cb58dd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f731265a-6c3b-4246-a418-50a66f6909e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3764a328-47a6-4d7b-beb2-2de270ba4355"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df684dd6-2528-4ded-aa10-0f9103acd226",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "63f2d1fc-e4a4-4ef4-9eb0-f81c8b311d14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dc746f7-fd32-4542-92fd-200196c0dffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74d91475-8961-41f5-929a-f719763b63d6"
            }
          }
        ]
      },
      {
        "id": "9d83ed23-3577-433a-aa77-d24b72a0e5ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "48e98a02-36b7-4365-9ea7-242182e18fce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37a4c2a8-3b55-4774-b16b-a0310f300d60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6f5524d-f456-4e71-9a11-233eb4993c66",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877526b2-ab18-4108-98c1-c5a8d86d7519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ff74710-cfc0-4346-ab68-65694edc3a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8782a774-a4d1-4f2f-a792-8da1f43a7889",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22852a46-ea5c-45d0-aaf4-a9c13f375bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da700e6e-3470-46fa-9bc9-130df60bd652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede5f0e0-6f57-49ce-be83-3acf1b74b367",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594135ab-8822-439b-9cec-c30bd10b7b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01046bd8-e25e-4a54-a83e-04a3024e6eb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b10024bb-3a84-4563-839f-23a48094ad5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce715e05-118e-4778-a723-c38a3ccf8456",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e340aa1-6014-43bb-9539-bba2c89a94f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c0394df-720a-4ba8-a55c-ac3764984ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e621f1f0-fbff-4086-8ba9-425f02a3940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94469c54-fcfb-4169-af97-85de97d98d37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d38dc586-f64e-4798-969b-407b7729020d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52090c3c-b7cb-49f0-90c3-deb2b5fd4573",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09bec71d-4046-48b7-845b-7319ed60c567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "82baf55d-6e6e-4823-a403-4acdd1edbc12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "131b0ca9-b52b-4477-8ea0-5848600689d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "89415ecd-2b36-45c2-9272-34c87554c73a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f298f049-7ea4-49f8-9e33-3a70829d8ac9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c20a86dd-7547-4e22-88ce-3661f87dfa0d"
            }
          }
        ]
      },
      {
        "id": "391d3749-eaab-4beb-9ac7-054507439d7b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e77921c6-808c-426a-9a1e-1e1c75cf5ad0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcff104d-7547-450c-930a-a273df6d81d2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4ddd0356-9f6c-475a-bfa3-062846d4ec91",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ccc3d6-9abe-4595-a552-3117006f635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61e5d32-0076-4ac7-988e-91df3282a808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc66f49a-cf0b-40e0-9b71-5c70b73f28df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa281c24-49d5-4fe1-9b6e-d36553533e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1aaa511-a24b-4d41-99b8-1b201cc1849c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61481af6-95a4-4913-bf2d-4ed5a455d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e870b4d-4b07-4ba3-b223-03fa5a761548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b529129c-2a0c-447e-8588-02bd552de722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93c03111-3edf-4243-9ef3-a7a6a3d24a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ff1a5-9746-45cd-b31d-7a7156329c36",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa92708-1dee-4aa3-86d9-78a52c5b29a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52615c5a-8390-4035-82b6-b4a801721ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912597c-d349-462e-ba50-09f42deeaa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca2cae12-d303-4b1a-a8a4-91d8cbeb67ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cdfafb-37fd-4c97-b568-50dfacefe8e0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba319159-812c-44ef-9cd3-de8382909bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4b218d-cb47-464b-8210-82a485a6e72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632f4e8-7029-4b4c-91da-365e6c39411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52e6b7e4-b9f1-4dca-b127-991a91c3de67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f4cb57-dda4-43ef-94bc-6f0e350d76b9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ee960a-895e-4f2e-8e54-2d669a90b40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ceb2a16-139c-41df-a336-0a9d1b1c1a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab4982a-fe25-4cff-a5be-233447df5fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4d6211-605e-4467-acf4-c70e55423932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e45656-730d-43bf-a141-2d81dee28e8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcca80b-04a2-4026-a649-c64abbe81e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aeebb1-e0fd-4392-8049-88204a87658c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1df8e06-0590-48e3-b364-5a6b34808032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe0a133-7eeb-4197-9723-eb381c4eb772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f9a65e-f903-42a5-9a6e-cba734507bd4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df28594-44d5-4095-8a6d-0f0a53baff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b564d6-90c6-47cd-8fc0-8d25280795f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2249a8-f131-4b3f-b6a2-0892dca1dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba738fb0-fdf6-4788-bab9-c39f79d7d4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ff5ac5-b08b-4df4-927c-f3b39047c827",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f784f9-8320-4054-b88e-9a46569a6709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb16a684-be8f-4860-b849-d98038d0a597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991d7dd1-3347-4f13-beb2-db85588e225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f1ca6d-a334-4fdd-bb2c-724c4d6220c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ca04f5-37d7-430a-931d-2e5df29ded44",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69f109d-cf02-4ba2-b0cb-c2518d26072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3fc933-511d-4d32-ac83-be29e421155d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b5eb8-2956-41e7-9af5-6071458b71b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c8e6c4-18f4-403a-bbd8-de9f818aadb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28a750-f2e0-4442-af19-1b8523fbc451",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b524a45-9c2f-48fb-aaa5-5dad180f2be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746d5b08-558b-4eab-8364-6b93fb113173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe883d9-bbfb-4cba-aec3-dff3b0f60acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6645b7af-0042-4169-bfd0-cfce1107f387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c92994-5f76-426a-885c-4432bd60f0cb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648f600-7828-4d19-999a-031aac00f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51356e38-76eb-46b8-952c-68c4eb37a756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d884a836-e4cf-40c6-b876-bdcb1c8cf137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c8b89c-118b-4c61-bca2-b246e3ba616b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeea6b2-a576-41e9-bfe0-0c3dc08b9811",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522aa19e-ed08-4739-bdbe-add8eac1df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aef7fd-8654-4155-b6f7-1ec659e77543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209b577c-3298-46b0-a9f9-738d66c4664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53e76658-8621-41b2-8318-82fa362e92ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6777a34b-b28f-4ac4-920a-e5b0957504d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e92d12-9e6c-4bb8-b986-0949d910623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344c9866-cec2-48bc-b01c-b9d8152a0281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d12000-e27b-4a22-a200-4c02804b40f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c59c71d-e1a4-43bc-bfbb-9c0a0335f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5e7562-3afe-439d-bf83-9f4cdeed1727",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b1c52-9f4d-43ec-96dd-5b4e4c51b846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8e104e-0e5e-4abc-8240-ef10fc32ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12690b5-1833-4139-91ef-de3e18410ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "786e678d-e091-4ee2-8ce5-7368d7b50f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b81ea-fd4f-45de-9ce6-ad22d857bd78",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a57bab-c3f0-4e85-9c92-83d6a589e924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b55c8e6-2a94-4b65-8c71-e16a30c5360c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468abfc-a6de-41c3-b888-0aa47fd418ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1921207-ec72-46b7-b87a-00147438b652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b205e88-7e17-4439-b8f2-baaf52d5c94a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba8be7d-4485-4346-ae8a-497bd97701f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d5e6f5-3da4-4b8c-8f0c-a3842902baf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dafc51-568b-467c-a9ac-1ee6b416dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f7de4f-dea8-448b-8f39-8b5bc6a08c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971777de-0318-4133-bf86-b64d7f02f2af",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8d0e3-77fa-4839-82c1-abaaae7bbefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb4d7be-27f2-429c-9300-2fd35b7d6ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554857ac-1ad7-4182-b625-0a103c6f3102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f819b7-3263-49cd-9921-9fc9d6de2036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e0280-8b88-4e79-bf3f-230cd4012f73",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb7236d-32c1-4716-b242-ae68d73604f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa1b4da-1c8a-4dec-82f7-c2f979476d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d302f34-ea88-4b9d-90c1-ff4bd8ec758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1cee34-1e00-460e-ad8d-73540190cc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37d66be-09ec-448d-8913-8f7495e66187",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c254232-37de-44ce-8189-22ae43dd7b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df55190d-cf5f-478a-ad3b-3c843d8c38ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad76ce40-28de-4d0a-ae5e-7614b6be4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd972d19-e288-4336-b43d-4bc27296fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9761087-14d8-4982-8abc-42986d3792fc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb1613c-586e-4a25-9df2-d6f719e46297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02dface-a540-477d-9083-51065a380ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0244780b-fa0b-4176-bdd7-2d3c6e3411b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b60c40-afc2-45eb-a166-368a92e57dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fbd28a-4b64-4cde-a82d-f9121dd9e788",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3036528a-9027-4bdf-96b0-d7d3889b9ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f27382-6776-4918-b619-3da0850a0d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d676284-3ba3-4eb4-887e-3a8403b7fed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff7bbec-f0c3-4053-b87d-e9e63b2cbc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4202daa9-9d27-487e-95a9-b83e8e150553",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed83463-d380-4102-9d17-0e5fab1413ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd97e8c-febe-498f-8c70-5f58ff244347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272d6686-68cf-4296-9d6b-a94cc12753af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d39615f-281c-4046-996e-4302e9f8f8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda9fa7d-58ca-4a08-9b0a-6c5be730099a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6055f28-23c0-4536-b2f9-43ec13a23e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa29e2-8e4f-4dab-84cf-4d2078b7515d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09d7048-c74d-497e-ab8b-b10d8b77406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b86fb06a-8568-4500-b11c-7799eaba6e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d2717f-bb1c-4cb0-a70d-ffe726d14d82",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0489a89d-5452-4446-8dcd-f0d6809237f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd47bb6d-90de-4537-9f5a-122e96b673b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc93bd7b-1313-49e7-86c9-15f125cc3a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14b895a-dfd5-460c-9953-a261720b4a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ab8a44-a073-44a2-a7a2-d9e7b25d685b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e45fad-e458-4f65-b8d7-6721f9399eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b384c348-2a9d-49a2-a5ce-926afc0cf36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ecd01f-ed44-4756-9007-ea9b957c641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f521e6-4f4b-469b-a92b-10d9b0e9a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f90522-2fc9-404d-913f-c91b3faf2d63",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86037d7f-a7cf-483b-8500-4eaa13c61a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6581d267-89a0-4f51-bcba-5826c1dcc83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df58487e-6f25-4bb7-9342-67766d3f5f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68515838-7279-48de-8a22-3a091f9ef387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab621413-9fe1-4704-b3f9-09f4a2e94ce4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d0f898-905c-4b7b-a389-2f0c2a453ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77a66fc-a669-45db-89ff-18030ba99513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a28d430-5f08-48ed-a12c-e4a5642fab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99268c3-3dcb-4ad7-aa07-e67f411b90c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2ee1eb-7ac0-4689-b918-010adf40a1c7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671f479-81e6-4f34-b918-3ef9d5d318a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781cc42d-79ac-4e39-8fa4-bbe8109df901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76613be7-63b2-46e8-a292-3b2f19303198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "801fc15e-b0d7-4705-8964-17f1975c72f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aee866-81b5-465f-8c72-edcc7cbf500e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eb93a0-38e7-44e4-a64b-b2bd845fa5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349ac0d3-fe61-4e64-830d-0a0c64ff66da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10f46bb-ad7b-4a80-b72f-84ffc4fb208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6433719-7678-406b-a5fc-34d59704937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2199ebe-5fef-4358-9c90-4da6ea45ba00",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf8110e-1a97-4c18-ad92-3f943dfab565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7740c49d-c7cc-4865-a6e4-5fbbcd4c1bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1138ec-b36d-41e1-aa9f-eeea88f9374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fa4ae4-7d87-4d3d-aa13-8201a8b22d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c30ad0-1f5f-4ffe-9f0e-dfbdacf39565",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6cb0c4-5657-41d9-a73f-f6a420aa2780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f387310d-cac6-42ff-9b34-69622f81d9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07a2ce8-286f-4255-be62-38a0964f829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6da7d8-54c5-4ea0-841c-221b604722d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa24afe-e754-42d4-a203-f642dce0fa0f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd6211-89f5-4af1-98ae-e081c9556140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c8ffb8-fbe2-40d8-871d-e2682a372632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4535141-4d74-4cb0-a299-f6634050ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe7e67f-0bf7-427b-9f73-26b1889553e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed28dc6-2b9a-48b3-85ef-a4148f761193",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efeb4004-b1d8-46f9-8cc3-096ab1d52c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a765ccb-37db-4577-98c0-0fef27b0f507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd6f8b-1f5e-4208-b2d4-03394764ae3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d2cfcd-6936-4f0a-baab-aeced12fa663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5802526-f5a4-4e7d-8c46-95d59b6c4689",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9dee33-e628-4481-8da2-1126d5ec2653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f82c036-2222-457b-ae88-df049c95d8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879d452e-f728-499f-90ac-dae4cf8a0101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b172b10-2bc3-46c6-95ab-2f616a735d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd59da-6a00-4139-8593-cbdc8e41c891",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06182a0-4ec3-4089-98c2-df894e36a5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4570db97-b09c-4f7f-aae1-257d44875486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677470c1-7fef-4c90-ae10-9bf841dc8dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "375612be-c889-41cb-8847-5be9241f662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb44a16-dedf-47ca-9652-470d9940ea40",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab99f431-9848-41d8-b116-31d21bff5aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65fb423d-a6f5-4c74-84d6-7f1922435020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fff75fa-cbcc-4bd1-b72f-b40f12e1be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9058963-0afa-4f25-bf06-584666e452b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc1b4f2-ce0b-4462-8067-55a7b221531f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce3bd26-f30b-49b0-a3c6-9ad613328aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcd67b2-d5a9-4e8b-bc5e-f3b1be350562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b4c574-7957-4eb6-8167-1dedbc7f9003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e843d-ea87-4d26-97cf-a2bdcf0fc173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371696a-f176-41ae-9188-0fc34d6ec862",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526c53a2-bc91-4658-8259-be7b94800e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aa3b8e-860c-48ef-9680-5e1451042ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19e8a6c-620b-48fa-9604-7d7134e67787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af322003-3f92-4c8b-9c6d-1824d0a7f6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d40a27-ef07-4553-919a-9c1fa9f00ce0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88fdeeb-5a32-4959-a1da-61f0ac568e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a410d8c-af8f-4719-b35e-b9329109e649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d881bab-9d91-4195-b5a2-e757eb0ca14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "953f21c1-3e4d-45b2-94ac-41c7d3c179c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d6647-3082-4c8f-b8b8-fc4f495799da",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fd87e8-0934-4566-9f3b-a2bd0f60abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953fdbaf-9566-4f55-bda0-9c202a280f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75f2575-544f-44bd-b296-c732d0ec008e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf71e839-3d14-4682-b881-3e06b70073ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ca75f7-b14a-420d-8a6a-fc4037e75005",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cedc2f8-974c-4a28-addb-b6ddfc2c9c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78c7f7a-4444-40d0-8684-b3d25a0abda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9437a8-c825-4821-a504-2770c050c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a8a7ea-4237-4604-b34b-4d34ca7bc6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5427c9aa-9af2-4fc7-8e31-e115319ef7ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9b0204-9940-4b47-8ea5-aac58f35073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d623bc-4af6-4094-bc23-0ccdfa940e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a729d3-276d-4993-a469-9e0806556352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddbe259-6c98-408f-b438-4f7eff21353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53409b84-de98-40cf-a0ad-86558ab3029d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff83881-ce94-44bc-aac8-c08682cb8149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04dd127-34d8-420a-b1b7-53fa444b8564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bec69e-759f-4f95-9095-653cae3a8720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a215b3f-6315-40f6-9248-52f3b8e9d5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bd9bdd-48f5-4eb6-b56f-54ba44381b24",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ee8b17-a1cb-4913-b979-d80d59e38611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde9d168-c446-4303-a7e4-33e46e14df65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b38fca9-24d9-4295-9d8f-3467ac260479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f69ed9-0e43-4754-bf0e-1b8accb2c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b153272f-0a01-4a0c-9a1d-05948d5fead5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93780c-738d-4cc9-a5a4-13d40221774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7322c565-fe18-4e74-b071-27cbf321b4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d967b735-f4db-4403-a450-8766aabd6eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "388c70fb-ce6a-4049-acbb-059e648e690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a62215-c5e4-4ec6-aa13-926c761c34cc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7375ac4-ed92-49eb-b0fb-9ebd77a9fba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3c4b12-7feb-4b3c-a0c1-bec5f8feb946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ee090-4a44-4dcb-b775-872beeab65d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4a7679-4e99-40a0-91d3-32a205f39444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ca41ae-2fd2-43d9-8be3-04490a8434b2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2115214d-19a4-4e68-b746-8e3826c97694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2456bef9-c82b-4ab6-9621-cd4b56848356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd71c7-2260-41fe-8087-bad438b029d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6baf2f70-15a0-498e-9b3b-7dec3c1dffa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e518100-81a6-4477-b36d-da1deadd9e0a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a74d6-6d48-4b4b-b8b8-3ca81a07aea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb066271-0488-47f6-a1df-1e0d4e483a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f012369-7747-4f5c-bea7-d52e292af964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3085a051-88a4-4ada-8f80-e3fd29012470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41564246-937c-4804-89ed-f835ed871193",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb1d867-db72-4088-997c-1dfcfe82c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a91962d-00c5-4541-a5db-ad65e3cbcffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccd1834-27d6-4516-a9ea-d68be6e5e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3ec9be-628b-4595-993f-9c2115abde68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83270e0-f2d0-4b7d-9858-891753697f67",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f397f783-1738-4946-8dcf-c3d652e62e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9840416e-2e5c-4676-b9ea-6ac7eda1f052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a05c712-1111-44b0-8da0-16c274ad654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb1b1da-9d4c-445e-8675-ba5de614fa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3404bd6-47eb-488d-8b9d-13a771104ad4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30319fb9-5c71-4b79-bd05-6b6886673e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932f7686-03ba-4c61-acee-f94a6bb4ee04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351825fb-16ad-4086-be48-02fc491182c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa942b9-745d-4bbd-92cd-069efbe03f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d49f4c-50b2-44a6-8677-ca46f80b3220",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd89636-129b-452d-8974-46028378db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048d5285-fcdb-4284-8da0-db12bb1fa1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b9ed56-c0ce-4817-878e-8ceda4a1cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4471e70e-7b1e-4983-add6-ae5bfe4642c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b16ff9-b8da-457a-9e0d-42648a27dc97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d142c16-a1c4-47e0-9259-630ab54920cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7e5dbc-84e7-4528-b3b7-11998dbcf8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d5e238-5e2c-41d4-b236-89565ff84429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06533f40-5d2a-4a15-a586-9d7444223136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe85f3-2682-4f46-be65-85a6f8012279",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ed5bef-1437-4579-bc42-95b66648624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c95a363-9bc2-4900-8e83-95658a275ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c116c3f0-b8e1-4070-906a-26643ce013cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "563825a1-1b62-47d7-a093-4af592890a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea7bebd-3046-469c-a353-bcb276206654",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c271a32-7397-4aad-8ebd-bd32f181d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59abf4f8-d054-48b5-9f66-8e13bea9166b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafc427c-432e-4525-97c5-345e8b8970aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea52985-4b8d-4191-97c2-53b1f0b6f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f0b37-202e-4da7-82dc-74a31ccc6a23",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27fe34a-ea28-461b-9796-5d604e354485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1813d0b7-f166-4ab4-a92e-8fda19421f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9675cc-d902-4274-ab97-f00cefc88d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99127650-2644-4cfd-8e1f-ed4996670c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92e8e0-a3b3-4cf0-b9d5-89a11f8e6ab4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccd06c0-66d1-4bf7-b383-028ea45875fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dca42c5-fed9-42df-9aa1-133562ad3eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef814b-a073-49fe-8d1e-2c6c8111690a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c424366-7ace-486c-8fc7-cfd49e9ae45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89655a7c-3f87-498c-b632-7a019386f475",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef9e39c-22cd-40e6-8c5e-4298c8fa59d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf18a07-1f6f-4d9a-9d95-7c6d78272b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e693c2-cf95-4d0d-a0cf-cfe2c157340e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb6d78a-4e1a-469d-a850-2868916d7a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90b5330-739c-4294-bb00-3c2b6cb0fd53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db365997-5f22-4d6f-93d0-bf8d371ce9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf295b79-eff9-4adc-97d5-c4bad31c8beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deec4ece-27f6-4a1b-a343-d6a9880d6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d5e1b4-fea0-473b-8539-49f786e2c4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c30f5c3-f02f-45a8-897e-d76888880781",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956698a4-21a7-4e2e-bc65-557b146a277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4743aadc-a905-44fb-a717-723f700a2fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9325e677-17ba-481b-80df-596715ddc3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de9c0e06-38d7-429a-953e-f850d199dbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0723120-0f0a-4b67-a831-7a23ae161c42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5353bb-3f08-4242-af44-0be7d80dfe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be96626d-12c1-4c05-9a14-0655487060e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04494185-bacc-4a20-9833-ae1a74926eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96c1fa3-da97-4042-9eff-a5b3c53d1e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9f22e9-87d7-485d-9eca-804baa38f73e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2bc71-84c3-47ef-bfd9-c3dc4935344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca5ba26-5046-4bda-81be-5a118eda589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb068688-ce7f-4044-bf99-43fb299b0e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1316207-f55b-4883-95a8-2eb1a1a31da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0f09ae-1c96-41d2-885c-961c639f088e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5b85ce-d113-4336-88fd-ede21d6e4e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9812a3-9ae3-41d5-97bf-ecae0354b3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded6bbec-7fd9-4def-be1e-4b301cec143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d64f3263-8e32-426d-a3f8-0be47d09358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbc60c2-3099-4328-8f15-72edb8dca426",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b426f02-a97a-45b0-896c-7d1a9aad2d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fec336-9d6e-4d13-945d-ca6ec88e977e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7309e0-80ad-4895-8d97-c3f48313bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "732070e9-5d10-4dab-bc52-c3ff5699371d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92c4f17-ede1-4547-8258-4b16dc99cacc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582af9fa-6ecb-4cc4-a0dd-b9a1e4163000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24674703-f6eb-4ccd-9f07-35108532d04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad196ce5-d4a9-4517-ab9b-d3d7676361e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71e92db-0e10-4725-be55-fec36ae31e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e24205-becf-444d-9483-e14682a47212",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95741d78-194c-44bb-b8ed-64ab83e25570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1e0804-8dfd-46b0-b423-b7b78c927088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eddeea-5db9-40a9-856e-47a5bf9d0707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a130e2a2-afe8-4736-8177-c00cab7d6efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4346079-acbe-455f-b737-64c848f208ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5028869c-90b6-4990-984a-a54097aa6fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a134ef-1542-4d47-bc9c-5fb7b8a986ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de9b6f3-f366-4850-b178-8833aa49c35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26c3e82e-4a17-4a6e-a06e-6192e3541e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae8c503-0627-41b0-9355-4247e8158880",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281dc3bc-48a6-4b31-9b98-12a120850e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5498d6ed-0c9f-42c6-8090-5ce1776f7d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c790f5d-bc8c-40c4-b190-20571d07721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcfb95b-daf8-4ddd-aef8-b087c852a799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75623e84-f6ba-46a4-a1cc-df381d629db4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45e5a74-22ce-428b-908c-30b7466648dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2258ed68-a9b9-48b1-9c33-e99a548d8a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fdd18b-ce04-4741-8ea1-7531b826064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50fbf9fc-382c-4ad3-b6b2-21aa46585235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05979548-84ae-4947-ad8b-e2ce7ad943f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afecd465-72f1-47a2-a93c-d2f1bc0515f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4296e60c-25b2-40de-8a98-762ab7e7d16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68748f91-e9be-4681-8fc0-3310d9bf7da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6d8983-145b-411c-8333-81fc728f213f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1560aa1-3eb8-4785-93ef-ac359491162d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e47328-d3c2-4f31-8734-6d9fc0c62e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a4a92c-09ab-4b42-ab9f-f95e51f160cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89f380-1fb5-4f50-8d4d-d6c610c2ac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1902a2-ad61-43a1-8689-33ebe4c871a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce898d46-52eb-4942-b6fe-0e3c8a9aa04a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e50960-2e40-4029-840c-2b4e6e8cd358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65d934d-9761-4fe4-b368-7e86aa7dd3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3789a8c-daad-4ce4-ba4b-fbffcb9c6011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0913ecda-c193-46ad-a22f-9230a36f8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552a520-7223-4e03-a3e2-262ec0bc5b9f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4509961-694f-49c2-bac8-6f77e30782a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59ef1c4-b68b-45c7-833f-f8800e667347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21b5ef0-f6c0-4423-82c8-df4dfea9a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0583656-31ab-4c56-acfb-6d2f93ef1711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690c4060-eabb-410f-84e3-067675435184",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5865b935-14e5-46fd-a81b-d08b43b05412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c69bc1-7fc3-4e3d-bbec-5f41f96a68bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe53a4e-66c3-40c2-afd4-903f1ddfb6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbf18ad-e55c-4ee1-adf4-95a17d3ea75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd7271-a773-4fce-93f2-8005be39fa86",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a771e04-15f8-4521-8097-251b6f34cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20d4d1b-2f0f-41d7-85b9-11abc9520c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea78d0c-1313-4757-9160-1512af337c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c35ae8-4e48-4988-8da1-2d1bf687b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445266d-2526-4921-b3d8-3ca15f1fadfb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9574841-1d04-4e72-9778-d236f0a2f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3b5e2b-4ab1-4c88-93f2-169cecb406ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fd4b27-3293-470c-9eac-c217ac7d6042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3c1570-d8eb-4c52-be78-3b71523cf497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0dd99f-013f-4ecd-bacd-4d8473af3279",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7ddbcc-8180-44d9-8819-ebb77937ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804e3fec-5f70-4720-adc2-d7df6690ab4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ef1edd-b6cb-461f-ac52-49e744a0c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b555dac6-4c3c-4ca9-94c7-3a6c32f19440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb865e-4867-46b6-a39f-c1c04da502ef",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86738272-4756-420b-98eb-87a1084a0686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c10a07-a33d-4132-9937-42a36040e8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f7bac4-7065-4b1e-9010-ef1d82cf70ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af870ad3-bd5a-46a0-9722-9838c058f546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359ab9a4-05e4-4141-8f5e-e452338a53c5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191ec3b4-2f1c-44a3-b892-0f017265b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fad83c-cb11-4e58-8a4d-25b581f0f4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd4642-791f-4c16-b071-e79f96b492d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb0f6e-0603-4033-8cbb-69f056169b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad965564-5c09-4977-b998-78e806380c69",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f4953d-575d-4394-8500-3e6557a619a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe28ab5a-630d-4be0-be0d-0d9380b1eee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c7aac-c8c2-406b-95a6-3a92ac0788e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d33484ca-b89b-43a6-8faa-9ce41a727c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c80975-1399-4248-a185-7c1176c15087",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62e1f27-63c2-4ea6-9d5c-c8c20fdbe242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9380329e-56e7-4a30-8349-62b2e8ec3399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eabe522-cff7-4f8c-9be8-5f4dbf95fd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8f911b-919b-485d-a5d0-63c2ab0c6593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3000b1ff-aa80-46c9-b203-3e81be84bc30",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a409cf55-eb06-46f2-9235-241c00fa8897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db83ce3-818a-4a47-a568-ce6410d8b347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721faad1-ee56-411a-9d84-8f9af3b8b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98085b9b-0a50-4e05-ad0e-f0774cabf9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08b0743-6bc4-46db-a843-84b302348fcc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9415dc64-2fbc-49d8-bccf-793a8f17c076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a28e680-4d8c-417c-9cc7-7c81510522f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb7677-8112-4ac4-8ff3-c908cbc5f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2784c837-662b-4b18-b38c-fe9bdd4826f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1562731b-e386-4873-a2f3-902a310b0f99",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5179ef3a-6969-4b1d-a003-90ae6241fd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94252503-fd75-47db-ad74-13527765cc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ae5168-6285-46fc-bf6e-d511f0c09f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33f46f4d-177e-4a20-becf-9c32764513e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2691a2-5bdf-4867-a449-bd575b8b996a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bebe27-436f-4da9-b2d7-daf65e42678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ba3836-c2a3-4c71-88f2-90d33fa36aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a383dd59-444c-4a0b-b61c-4d1b4081572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21c19ff7-6c8f-44cb-8ea7-2d644b5bfa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0623d4bc-604d-4372-9065-82937f95e9c9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f9a50-e162-4216-b474-1186b46912c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79eb530e-de68-42b9-bb40-38ae73dbe09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418aaff4-d049-4460-9144-38be069ea907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df1dbdf5-a52b-464a-9f2c-62a58b4e8e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397fa96f-a653-4a76-a287-6ad2a8768fee",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1c735f-ca0b-4370-abcb-67988ce95f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48c0df9-f38d-450b-80a8-633d84534ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5417078-b899-4428-8ab1-c814c1ae5168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1689df7-fe54-4048-ba91-084a84247d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25df4a97-b159-46ce-b245-9c9dd6e385c6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6db0848-7144-423a-bc67-858d595bb966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc9512d-4ee7-4887-a6fc-80a5162706d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820cd0bd-7ae2-447b-99fa-50a4967d4d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df87339-888e-4a89-ba1f-2ccb5b0f2228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eb9c7c-d22b-40ce-95ba-095b9d4502ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78471c-59d6-4e46-ac3d-90f011f80029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aef50d-0604-4250-9c39-5114c88745ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4cfe84-d36c-4236-98b7-11cadcbab7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50fccc81-0d8f-42a4-a6fd-4fecde06c658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fc6688-da61-4c28-af35-e8d5ab823b75",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801ab93-7462-40ad-ad8d-33ae57374c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced698cb-1da6-48cd-be13-4d85a4b9b10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184efade-8b24-45c6-831a-767515f1ac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "732a3421-a2f0-431b-8215-d765d3bb37b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7820751f-cfcf-4ff9-b990-1a5b53249d25",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3153869c-11e1-49a5-a5e6-0cc4f2fcf328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086910f7-28e2-4e62-95cd-f5373fe6a081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6430f6-8ce8-48cc-92bb-9923676298ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53dea5e8-c857-4f8d-bb4b-615a105d4195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecade49b-62e0-4bc1-bc6a-2ae676990947",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489938a7-e44c-4105-8c6f-89be0840b84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "710eae04-030d-4738-a13c-7f012f8f8de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebb9030-46dd-495e-bca9-28237017c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "684dfdf6-7618-4e8a-855f-e0f83b86d06e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e8c6bdd-7a2b-481c-91c6-cbe74269bc5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cdcbb9b-a58b-4bc2-bd5d-04b033259538",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccb8ea9-80cb-4e76-9e92-77afe5147b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5185498-0125-47a7-a18f-be4b9d7a324c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb6f5ff-7369-4ab4-aba7-27486b684dd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fd45839-a0b7-4149-8a6c-3f5396e7688d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7823dc48-db38-4ac3-be00-489d952dee11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c34a3514-eb60-4a83-800a-92e4503bd248"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "263a9d59-2d3e-40a4-b00d-8eeb9de0927f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f03e5222-eceb-4087-b311-532a19f3f19c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf3a8b82-50d1-43ea-84bb-a8f2a34f742d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "203851bd-cc3a-4bfa-82ef-8401b7827370"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8d4e418-0d51-4b12-8b2a-39e79614dfe7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10e46921-d9ab-49c9-950f-d4a189c73a87"
                }
              }
            ]
          },
          {
            "id": "dadf9d04-80be-4780-b4ce-3ba5fab81f4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "393f0989-8992-4cce-9b5c-1743d9dafeb6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a75bf038-3fd2-429b-9b87-aceca97186e3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432d5556-fcca-41d2-8d92-071155cd6776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cf80bdd-8d64-4a10-97de-b114f00985e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42e494-28c2-484c-8d8a-3dc721337e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79d3c9b-edbb-4072-9c38-583ca4d4ab8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72cc525a-ccf2-4123-b904-5096f9fe138c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9182eab6-f3d8-40ea-92dd-ca233ce5623c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffa316ee-a7b5-4e7c-9fd1-52d688f04424"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c00bf30-c01e-43f4-a89e-4bd932ff860b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "488c77d5-f0fb-4d45-b69b-6bd2dba220e8"
                    }
                  }
                ]
              },
              {
                "id": "ce01aaf6-d3e2-456a-9ae1-6fb379869370",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b83750c-97e7-49ea-8c75-437cd9aaa808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93676096-e1a5-4681-b634-3fe85ac883f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83cf0705-eb38-4c41-9114-78fd7209710d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f313dfd-ed73-4a45-85ae-b960815ba115"
                    }
                  }
                ]
              },
              {
                "id": "8e7fcaa5-f83f-4001-97a5-c18340868ff0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3a5f4d-0d29-48f8-86fb-0431c3a2f045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5f7115c-b868-4c6a-80a2-72640ac9029e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1de02f30-3af9-42ce-a598-d91e6a5da5ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "970ef9d9-fd6c-4b2b-bd75-7aea4100edab"
                    }
                  }
                ]
              },
              {
                "id": "d03d01ce-ffd2-4714-84ae-169ebd179605",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f280e8d9-99de-4f4a-a302-2b30fb92d506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6249d6b-838b-4294-b3f5-0a0807cdfcb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6fae185-23eb-4d12-a7cb-ddfc416d2d93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3292ac34-e572-472a-ba3e-706d34df5bde"
                    }
                  }
                ]
              },
              {
                "id": "fb2d06a4-483f-4143-823c-36ab90d07aad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbe65c88-9727-415b-a9d7-ccb59ada1205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a1cceba-bff2-4910-9740-88626616974c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8e75bf-6302-4398-bdfc-3714578002af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89e05c76-e5ad-4708-af2d-0e40882d1f57"
                    }
                  }
                ]
              },
              {
                "id": "a79b0423-dd96-48d5-a85e-d9192fce4462",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e9e300d-1405-4939-988e-4d0db9bea655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cd56b74-0161-4283-8cc9-17ee921bf531"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a8bc2e-1855-4dad-a86c-03c0ec7acbfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ef49228-7721-4931-870d-86161137123d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a5ed1df-5810-4b57-9e58-474b51e150b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c2d7ece-5145-4ed0-943c-eb51d9806c52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e06bba77-3c7a-460e-a645-7d72f07ffdee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09436861-1396-4562-a870-f63dfa8425fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5be5c076-96a7-4483-81ea-2f09d93036f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd1e9598-e008-4bc8-b50e-d5a17b48229d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bfa0dc5-26e3-4d24-9c22-7f22b7c05cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9aeb88e-0d8a-4025-a9bf-589a2b522824"
            }
          }
        ]
      },
      {
        "id": "91d23951-4ab0-40e4-b181-befe8c4c7fad",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a36c8126-b9a4-4c7a-937e-e96f3b527b0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c10e10f9-0619-4e87-8990-a4554093abcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ba0a1a1-f123-46d0-827d-0ac06d16b1d4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a60025-128a-42a5-a22a-6457de407042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18651f7f-6b37-481a-a2a7-5ce7dbf9e78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2d2c3f-fdbe-43d2-a86c-2007b3ccf420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2a4243-2bc2-4017-be46-e4aa94b8ee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c97671d-b0c6-4901-94be-c2918183ef86",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853424a6-0b03-4a97-9cdb-ffa6803838f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96048bf-981d-4764-8b2f-f3c16511bff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae084181-9c7f-417d-a153-9e4a44cc9650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a63728-6ee4-4e10-97c4-033c42173c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc21cae-b012-4d41-a8bd-d142adcea827",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95974498-1b07-4db3-8375-c6f7d7fca402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ca6be2-6083-4f2f-960e-3ad077300df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb859e8-a259-40e9-828c-e00111c0dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a28e68-f51e-44f3-8609-9136b400b392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72347ae9-ab09-47a6-b371-e2d233372f27",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4087f008-7157-4492-bd89-a22d97816284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675ed39d-b666-48f9-90a2-1660259c147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cfbe96-6234-4c44-a1e7-09507ac04459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42188d07-c3a4-4e98-a2d4-70c8cbaaf8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739786d-d132-4c1f-aa10-0da77ed7ed62",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f75cf-300a-4d25-9452-cfdbf7146b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd8e739-525e-4569-b302-453e2229ed14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d3fbcc-5844-412e-bfb2-d772c62351d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d65ec9b9-7fbd-475d-8fd9-6555917a0fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5fafb-dfa3-4085-b234-af5f0dce1620",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34823e-c495-48a1-9e34-d7dd8104b117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19977be8-a613-479f-aadf-1f6b9fef24ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c8065e-bfd1-42f8-8356-829b4a0c79e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eb5e32-41a0-4881-8219-a95279ac4c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a15a595-eb89-4435-8bdd-bf9572aeb66a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f84644-6f0d-4cba-a694-447d3a027ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5497f1ed-2623-4b92-8599-bcde2477b2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02617dad-a398-4e8b-8e70-950650c66508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "febcaa59-181d-4131-91a1-3fda7c209347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9db177-b1d8-4625-a8d2-2dd29b4d0fb2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58236eb-6e97-44da-bb51-26d164d7e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d62b50-04df-45b9-af9e-10199720f578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813ba698-eeae-453a-9ec9-cc9c773414ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37534de-9957-4fcb-aba4-1d04fdb2e021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45e32f1-45d9-445e-9f6f-1fa5074ff235",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e0e2e7-2b30-41f3-a030-398d0e99f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b35aee5-8a11-4b0d-9a15-6ee47d1ca2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23080f1f-7fac-4b7f-a0fe-68ba7723fe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcaf42ed-c0c9-419b-89b1-423920fa42f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3a61c-de69-4efa-9f37-b9f4452e6cba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389982d9-b90c-45b5-b9d5-23016b85651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffb6537-a919-42ea-87fd-13512423c051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe15726-5c2f-4e9b-8a5d-d20dc590012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ea748f-ffe5-4c4f-92e0-a6ce46846b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4359107-635f-4c31-953d-b7349990b627",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e543551-5efe-4034-a3d8-c2fb33e201d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f53c20f-3a16-4951-bc95-3b8d8fd4998d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67040587-9d49-4a55-923e-1fe058ebadf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a9218b2e-6759-4c9a-8c3a-5c45c3cc1d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac1dff6-3a56-41ed-aa52-debaa750809e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926c58a9-d009-4ced-9963-a7342b1bf2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1645b929-8ebf-4b12-bbff-235f12832dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e53f83-4f1b-46ee-ac14-fd8c58a4b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f080fa27-abe3-4ff4-8500-323e9ac97fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aecc90-45d7-4efe-87c1-1e4549a0f02a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdace933-ffa3-4b4c-a8c9-0ffb68df9f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966e789f-6ada-4c75-b405-aa388073e8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dcdb4a-db1f-4447-a993-612f3872295e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b168ce2-422b-441b-b0b8-a52dd60ea003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbcdadc-ff9e-40c6-9cb9-3d0a0234c02c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318440b4-afb6-49a0-a491-1f56d193be72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9a1bcf-ff8b-4115-b3af-9b7fb70a8e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39a137c-68d9-47e5-b435-091eb7f7dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2808fddd-228e-4f63-a6c8-84825380ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee96ba-d2d8-46af-b05a-c113a55bb78b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dc1941-5f22-43ad-b9d9-f25ed1210613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87b687d-d3a9-4d25-8574-c204f5491d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b857fad-fc55-4ab9-bdd9-698ecbff305d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c98c14-45e2-43ef-8610-7487ec304ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c95e82-5ff6-4672-8a4d-b1e9b02f458e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f31ede-a277-4f3f-ae2d-d990756597d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd21c31-4a72-4c9a-9b68-b5433065d029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73778333-f438-49f4-ac26-c61e33f6c128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "736818cd-36af-4d29-a44f-8cf11694c7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfdd103-fe06-4838-a98e-412c4246c800",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c3259b-0743-4931-a243-67c831a44a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4d8635-5606-4cb6-8812-f058859547ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802611fe-07e1-42d0-8ccf-85511da59591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f04e9b4-b4f5-4339-8e2c-03b1b00ddae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a628e5d4-8913-4d4e-b3ef-249739c7434d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8809a7-a81c-4796-a961-06e42bb62248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfe6f5e-acb3-44a4-9b9f-5956a48ed224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543d13ca-828b-4066-ae6b-b246dac0fbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd2b1be-87ee-4e79-8772-db4c979caa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb2f46c-8bd2-4194-a9cd-a0db972fc903",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a0b91-9109-48b2-9163-2d9084ea3c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bdc640-bb6b-4826-a76c-0a426e0c8fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb967e8-c24c-40f2-908f-7358e8ad6181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a9a089-57df-4e38-9892-863d9b325ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df245b2-5a64-45c7-938c-bc9855182e78",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a2e0ba-79fa-48bc-8a02-5f49af096c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91a858f-a849-41de-bec6-278870bf32c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d6d3ce-443e-4988-9353-a4ca7efcc5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f5339c-c194-4661-a13b-f070bc87b3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061db0f3-8435-4828-92d9-fddf7798b092",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e4a602-eab8-40ab-90af-ec81cd8ae9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fedb5f-5a64-4ad0-8835-700c5e8cda01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaf497c-5a40-4218-8e48-0fa2999fd909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8244637e-28fd-4b6f-aaec-5cff54461dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e6c01-3e8b-418f-977c-2d6fbc287caf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7957a206-2aa8-4479-8a31-88555744fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37064916-f0fe-4cb8-8785-6b2675776550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91474176-b800-43d0-a972-4910852c7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "085c186a-a166-48a0-a584-402b48db161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490e76d4-ea6f-4914-b47b-c80ec90252d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a6288-2f73-43d4-8483-efa033a64b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497dd284-0183-4e30-ac08-efdeba8d9897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11327008-4234-41c4-8b5b-e2771e64683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5da4783-620f-4125-bb0b-18d8c1b6c86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba5192-0b44-4f39-a8ab-70aafd134c70",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65881eb1-62ff-411a-8a09-5d3644250e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087ed83f-e570-46b4-9b9d-48b869ee7585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341fc312-400e-434a-916e-53b7cadf428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9a76ea-f1ff-44f6-9529-5ec66313ece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1999ef4-32a7-42fc-b877-3e3aa59812b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1bd128-4391-42a5-a408-f805ae3fa214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c4e557-7fdf-4843-8866-7dc74b1ee3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f647b9-8ae0-4c70-b236-2eb250334c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddca28b8-8e8f-48f8-8dee-f0b8d3389f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5f87f0-396b-45f0-b689-b7c9e19626c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3acb30b-df52-4e0f-8d5f-7325eaedc293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661790a3-1876-4a67-ac84-6513c98a6a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a5cb46-183f-4dba-b93b-171ae76e3850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dbd8d5-d410-4a33-987f-5c5af844ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d3a7de-94cf-4505-a3d9-9a1d5498fa45",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ae449-be86-48bc-83dd-ec9cb97edf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc0c53c-9d66-4e8b-ae94-e6c060c99c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e07a1c-8019-4a57-87ae-412ad0ea0e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059c05e0-16a7-499e-ada5-ef239dc7a619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9038988e-22e1-41f6-9aab-2f26df55b563",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1d8bf-4e87-4dd2-af99-23c70113eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a113fa-8372-4415-8a1a-a22e71873b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b061548-8285-48b0-a9c6-c37a7579bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf4a117-45ee-496f-9326-c765620b7b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8dec73-130e-4585-a541-0f829c97c8a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80902678-953e-4a3f-8d3a-6d4c17061c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fed1e66-38ef-4126-9da2-20cbe74ad19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b05b98-85e9-4520-93f1-89dffcfe17a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59599d47-df02-4336-9b38-6d077f1078e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29150b-aed0-4322-91a7-6c0699de0d7c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2a9261-f5d1-4194-987b-b6aa18fc0713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db15480-5927-4fe2-be96-8d70861721e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5576c936-425f-4c08-98dc-410a7e8c1e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1ec596-cb29-4021-80ca-66e9ecb3f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b61a88f-1c69-4044-95fa-87bf6c9aca61",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df98d45-4eb2-47e0-8bcc-9fd1672dc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e31b00-1b40-4e85-86b8-7765bbb59c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa3abc-a430-4d30-98ee-c10259e0a272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d18a78c-de08-4767-b25f-268a22cbe36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff6d4c6-975c-44cb-b3de-47fff30ea2d3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc3f3a8-64dd-4896-ac09-8265f6dabd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f3698f-389b-43a6-919b-fd5057b2b991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6c13fe-4153-43a2-9a6e-c47760b99d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce98a1f-0ca7-4b7b-9bb6-6f85d9bb17bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e634c95-30c2-4e36-a76b-106555f26625",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb30bc8-5011-4655-99c1-26008b60aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88371c8-7159-4e99-8b2b-b11c86fbe2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf1824-ee94-41bc-8b5b-84c9f20d1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea80334e-f338-4c06-a548-e75fff4d5e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f358074-eefe-489b-a8e6-aec3ffaba1fe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f6826b-021a-4692-9c48-0aefc9b19d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4261112-0cc5-4fa5-9903-84b1e179c6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5c1594-a56f-451c-89a4-e6f76e141648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a53fcd-0d8c-4002-878b-81a53999a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2acf9c-19f6-4f9d-9103-6a32227cf4e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e6cb0b-98cd-4682-9d6d-8de9d53e54ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc25feec-4783-469a-bb54-793d3d3e4d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97081a14-f2ae-4960-a3f5-097815da2459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "149e8fee-6bb3-4ab9-b9c8-46c8d59f8d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9b78b2-41ac-4883-9784-756c0112e619",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a7e27c-9f23-41ca-9872-b76948901bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cf80fb-b8bf-4494-869c-4894e3fae1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b62ea50-6d24-435c-9569-2374b15d6b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b6c2b5-65fd-4bd2-a5d5-2e049ce4d846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a16e14-73c5-431e-b926-54bcf0fc2040",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c10289-e6f4-4bd7-8fbc-619c8e5e3c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629e5140-44d0-48a8-b75a-31bb22b014ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23748e1-99b7-40a5-8d3d-3af3ce5a7921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "956377d7-84e8-4330-9034-07472903f54f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc701bb2-569a-46f6-8f2b-23a309b3fd99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9acfab35-8aed-40fc-9915-bcb39a1ecdd4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7ac170-9ee3-4290-b06b-e2c18309a420",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fecb9540-3159-411c-896c-7d4c88fd4754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb99b1f-84a9-4de5-80a6-5780ee7ef1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4b3e135-63b2-48ea-9bdf-4807d85492e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29e0ecb-c5de-44c4-b2ed-f820e5dd0705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e8d4dac-ee52-44e5-8920-a80a98ab8994"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa4ffd1-8f09-4b8a-92c6-341e512708a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65a06fb7-60de-47a8-bd98-b1f26bf456bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fc3cc36-a13e-4db1-97b6-ffab61b5214a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6f16a8c-0078-4adf-bfe5-f47ad36d01f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0af40c0-0e98-401e-bbb9-413e64fcf61b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c98e6bb-1ac6-4690-9a5f-51daa2652c56"
            }
          }
        ]
      },
      {
        "id": "495749ba-badd-4565-92e1-6850f69774ca",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "15e3add2-a2cf-4e92-b0ba-03a8193733b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cb2eec1-0edb-4c06-ab88-34361ecdf61d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ec7c797-b73a-4e03-bd9e-319ddb47aeef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b68a6-153d-4311-bd49-21aafb0b249f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59da7a80-f784-4b43-b2f6-5ed52f51b0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa40a4a9-c0a2-4622-81ba-8127fc969299",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85620302-8dc9-4ce6-a2c9-b871cb214977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6bbbec-9891-4762-8c9b-959bf8dfa66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0cdbe0-0edc-4ef4-8150-79e4f8f614de",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dac5e28-77c9-4c27-938e-5a84d9ccd64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecef034-443a-497f-a048-05fd1efca358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51bf64a-334c-4e5a-a688-2059166ffc78",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22db92e8-467a-4395-ae54-16af33fe9d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2b84f6-e05b-4326-93cc-ffdc94aa1ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e228d22c-ef5e-448f-bf66-030c8dd5d5c2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956b636-eeac-4e52-b3af-5747b5592a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caad04c-b47b-4d2a-a88d-b60390b14004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba83f89a-923c-4ce8-a30c-3f877999dbca",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb8f652-e7bc-4e86-9f70-8374220ce02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c2d3d7-a1b0-4897-a514-549d63ccbe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0752b145-8bd0-407b-9bbd-5554c8bc8f6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53367500-5da9-4712-add1-eb2657de94c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a584b9f6-bb0a-416c-94c7-d0fcacdc0e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f893318c-b91f-4e1b-ad99-a6ed5934bb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0677f4-d227-41e4-a833-e6e3a2064992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8c9654-a749-43e7-9d84-cf2701008770",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a10f36-46dc-4f0f-b5f4-1bf7aed978d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30f9278-fa50-4acf-afe1-e1a0bc4f9d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27365d74-b2fe-42ad-ab0f-9de9c7f170ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6c9936-fea4-4d2e-aeaa-29cfee01f183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de55982-fa86-48d5-9371-27095a0a45ba",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ca041a-63e9-4e1f-94f5-88d9cda4f561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d5e688-f7c6-4be7-8bdc-467f6031ae82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d90e72-4264-47a3-a145-3cdf277f9593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fa6f6f-60a2-4332-a155-4da9eef719be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5af79d-bea5-4397-b2a2-8816c7f4fdbd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfe903b-0bb4-474b-b1c3-b3199c3f717f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbe9b11-d295-41e0-9275-750cf11a83f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04954afb-5325-493b-9aa6-bde5e9b33b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92327b34-61c5-4124-85bf-9a1a337097b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2148e-c828-44b9-8e31-94703ff71be2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59974eb1-989c-4dea-afe5-7e117e2b4ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dc95a5-0f5c-4ecc-9cab-f49bfe721977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11f8397-c36d-461b-819e-09de5ade60a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe24025f-7871-47a3-865f-c6facc1840a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1bdbce-5df2-4344-acf4-9a5f956d2a1a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4a77ef-5bf8-483a-9072-e9ce596777d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcc6e1a-3c67-43e4-93bb-02373e670798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73bfc76-d019-4b8d-9062-ebdfcb4d4ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ea88d2-c2f3-4f8b-bc27-ac32825756ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa1ec0-8efa-44b1-8601-5056ef2ba2a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d2a6f-4d07-460d-ac25-52583a281fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a263ac-ea35-458a-a72e-9c955c7f8b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15fcc0-c4ee-4201-9cdd-33775ba6546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97998684-ae07-4860-a7bc-60f478ba18b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298e98e1-9cd9-488f-afca-847d2181b441",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1891eac1-97e0-4597-8395-d6862faa3ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5807655e-b856-4630-8f51-97a8de312f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f50ade-d427-4a92-b326-199d3f3b8d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b353a5-52cb-4c16-b702-b3a8aa5b4f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47332819-0b16-4a4b-9d3f-cb2a8c68c4bc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a45c3d-74f9-4420-b821-5ebc0a2e3366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6104cb-dbc8-4bf1-a19b-b6e30acb93a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d7b32f-c30e-434c-8ba6-2fb5f55a847a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1281f0b6-f3da-40ba-9c3e-390025199f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c9918-dd97-49a6-b9c2-37a490bb87ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113f2e33-d18f-4a16-be58-f06cd132618c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71871091-cfc1-45cd-88ab-27d0663d1ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e7f5a-bc52-4fa2-bc5b-693b34022a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a52040f-321b-40dd-b71d-974946cde4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5305584-80fe-46b2-b5d6-03ddee0baf22",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6566387a-b86a-4cd1-9e61-e0f6c75b00be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2950d66-d64d-4d99-9b2d-aa041c893bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7d74b3-8335-4bef-98f6-08a6e0228a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be03a3e-89ed-41de-a206-c3d5629e7e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd06e456-cc15-4e65-a0a6-5fa4f7032994",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7b1695-0e1a-4dab-b99f-33eebd7cc500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03af57a6-8ab2-4050-b6d8-66e31885d9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea022cc-0c6b-4ccb-9478-445d8b47f06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb9352d-7f19-46aa-bea3-fe2130a43fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786e83fd-bebd-49c6-aa05-ba49118bbd55",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53901358-d403-4584-ab0e-a7cd712d9c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eab56ea-0702-49b8-bbb4-a2dd935616db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6081de6-0dad-4b57-902e-768de556453f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5441e5-5485-4d9d-a1c6-fc568e53c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ad7ed-fcb5-4211-acf7-96c1852c2663",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bea09f-4fca-4e72-ae79-08b72319cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad932a7a-fcc0-4211-a0a5-aaa850db403f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1274090-c3b6-4233-b9c3-0cb05cc7c382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30742cbd-daf9-4037-a210-3a1d1da6a4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c0093d-5d8a-43cc-9c24-a11a59abf7a2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0265455-e57a-41dc-8db5-8f2d352c5e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dba3bbb-2a4e-457a-8434-794596ef1baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12863e0c-79ba-447b-b8ec-5080afc0897a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8e904d-5b7f-4a9b-873a-f56784df68ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca836dee-4dc7-4865-a3b4-5aa0083b215a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6932b550-27e8-4edd-b60d-200f79817556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fe41fa-f99f-4e22-ab4d-2bfca71f556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fc44e2-50a6-4e15-a0da-b267a34df068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9336e116-707a-4eb4-9458-458db036aeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1724180-3a0b-48b7-98b0-3addc33cbece",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118ba032-d46b-4d10-8dcd-b486951b6e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a490c02-1018-4983-af2d-fef4a8daf98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63cc9cb-5419-483b-8097-2a1dca9c84d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d460de4c-5589-42a6-9a6d-f63bb0cf7dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081a61e8-36f9-4c9a-8345-1276878f95ff",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fd413-103d-451e-b360-eee8d7236284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2933dc80-4704-4455-949b-9d3586829f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee9e2b-ce47-4ab7-a034-c7292de5ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3d6233-b728-4b71-9988-dd36da87f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eef37f4-b823-49b8-b54b-8e8ca9ed0b62",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8a4c8e-a349-4048-9c74-5a4728a7c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8106fc60-a3ef-494f-acc6-3d169a8e09c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae973d0a-e09a-4b5d-93d9-c10674d06eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f1a56c-6996-407d-ab2f-d909156ad668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75facd80-bdbc-424e-8794-866d329def55",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c1dab0-3f4a-46fe-8e4e-005ceecb57d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6253e4b3-e577-4a12-949a-6492beda223d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18c1ed3-4da2-454e-813b-3644b809dac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf0ba9f-c900-4c6d-a6a9-6e503cd33ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe9a5d9-4948-46a4-b703-c65cb6cdb732",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1395c44-5e59-4f2a-9dd6-84ac604c0413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af407b57-2f3b-4be5-ae74-3f92cceeb4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5f6c18-f8fd-4d6c-8188-5eb939294b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb881d2a-ccce-416c-ba00-ac5a122fdb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfa23ee-bb7f-4935-a4b7-fa926c041d5d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b30cda4-28a8-4fe8-b63f-d15bc74f910a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae07f23e-7ac8-40f6-803d-1d3fa30f4370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f264335-3efc-46b6-9248-dbb4413ab47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba29a70c-b93b-42dc-bbb4-547d9c668479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd92a947-5903-47c6-a85a-28c484356541",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d290d26c-455f-4108-ae79-c91b1e878255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcf31a7-5b95-450f-b434-a41e838682b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a299e-6952-4e9d-a21c-e7cfef00f76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb77b617-f821-4d40-9ce0-ae88005b67d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae400628-7239-41d4-8863-169d5564a384",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc28077-b4e7-4bda-bcaf-c7c1d39973c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fc2587-285c-4f12-bea7-a87d398035ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b66294-7e7e-4eb2-884e-783b2c3072b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026ea2fd-3f28-4ac0-9e9a-4d08cea4724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d56ab8-a729-4631-a4a0-2e7afce16aff",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d102edd-8dc4-4afc-b16a-8ba1a9dcf35c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87950b08-74f0-4898-83a2-680cce3acbef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8794c30-846f-4540-829c-1bfce5136b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcb41ef-35d5-48d4-8838-2b09f4ddb4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14472ba3-4069-4864-8e1c-fb3bbe75c6d4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b76f4f-c45c-4c0c-8464-52b4834cabe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83932c3c-d8b9-4757-8147-372eeb84c660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1b5b3-6ea1-4448-a4db-ce252c9eb189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fa3c33-b197-45d1-a6f8-a9599c306cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b047f-160a-4dbb-8580-b0868bcab910",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b3ac29-8672-4ec4-9dc6-cd892318cc30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109fe8f8-1072-4d53-807c-5bd9016c0566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a502b26c-8945-4b6a-abde-ab9fdd1cd703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6744a60-4c4f-4798-9d6e-c22f45fd6619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f037b88f-7bb8-417c-8647-89e0cdea491e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396eb238-32ef-434d-8ea7-8dd6bc174c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a285af-f0dd-47be-9b53-f8f128c43c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db902ccf-2384-46e3-9a34-ce3c773f1af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881dae1d-49e0-4f1f-98c7-0cccba77b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c451d2c6-77c5-485c-8f8b-e15e044892fd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35b48f1-d2b9-4aa4-9021-70f6ef352751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef7cafc-a4e4-4231-92ed-a7507e801590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ca063a-0912-4bd5-a927-eaa531e75ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6e9753-0c28-4537-a430-e76f13d14614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cbb5ec-e910-4ea1-819b-04ea5d30dacb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4092cf44-9818-4319-89d4-5bc75baf85f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f827ec-99de-4a63-9f9e-7198547aa79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b22dbb-e020-493b-acfa-fc95ec3b542f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3e974d-baf2-4a38-82dc-5f573cdb17f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2303430-9247-4ae3-bd4c-32717869cbcf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b9282f-5356-489e-a9d5-a2657bbb5988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980759d9-6c4d-4491-a5af-af0c9e18079e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f467c8-ffed-4ab6-b309-97d8109d726e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b09113d-e87f-4a1f-967f-66873e846cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a5e6ac-9c12-4101-9a71-6a802bd27b31",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761545f7-7f8d-40c7-9b50-e6f4c02e617a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711ae107-06b7-4a10-80a4-da8681f9bb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b155659e-83a6-4366-bf68-be9cecb54b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ed945-0076-4f88-b1b7-64d8321dad45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1794f20d-a53b-4f55-a67e-09c9a944aa7a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292475d3-e047-4e00-b5ee-469b22128079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5fd632-52c9-4092-a25c-9563bbe4dd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef36e6d7-64f3-4aeb-bb95-87bb10bff3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedacef4-e21f-4c74-bfae-ff982cc7c34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b500de-6c1e-47cc-a4a7-695a6be80a71",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b615d18f-c77c-4e89-8d96-8676bb367291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7f7f16-607d-43f8-a3fb-0a1e8c377203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5e7b12-95a8-4bb1-a121-c21b2bd85e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb109bc-f24d-427a-88cd-1c4409055026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e5c60b-b5ac-4256-b861-e6de71f1d779",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68fc80-7f52-4e3f-a403-53b882d82693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20906d3-758d-46f1-adc2-48e584c5215a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02538891-01bc-48d5-9654-98995f1e2cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c67bf0b-c09d-4ea9-8f89-7cf5d80381d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec8e93a-6c9f-4520-b0c1-3367fc6f51b0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5332bc05-6c67-46e6-853b-018c94eaa5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129b1630-eb92-4bc1-bec7-5e4d9d749cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa00409-0670-4844-858f-9cad54b02cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c985c0-70d3-44bf-818e-3ea7d5a2e505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd11d2c-dd5b-4975-a6fd-a49cbfc15ce6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5744c077-3c3d-4f8e-aa50-bc70982fd74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68a26dc-db75-4ad1-94e2-cdd9f29f9683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c102245c-dc8c-4498-958b-7676dba2baa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbc0fae-c5e4-4032-b8cd-cd0841a673d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1c5fc-6b0e-447a-90e3-cd4c08dc4c4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd221e7-4a9e-4344-a827-90c09c394a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ea2b47-216a-4226-998e-2b8fcd419eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c7cf87-42e4-46ef-9761-8cb115d53410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa250d4-51dc-4322-90f8-757b3222704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539ae00e-07e9-4a18-b3ca-b0155ee6d89f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2778fd5e-70de-4565-8100-d27de77097b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12975f88-1fee-4fcb-8228-326482cca22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5366a-5d2e-4b2a-9f28-29a951730f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444c48b9-dc88-469f-a6bf-f9a1ddc012fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d682fd-b582-4cad-ba64-8f9db9859e1a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9340599a-65f1-4d52-b1af-f5dd591f2fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90ed981-a0ad-4ec6-8746-e7c74f052faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aaef86-4090-453f-ac2e-666f743c2493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d414b9d0-4907-426d-b93b-cb289b5b800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aabf941-d1b3-4241-85bc-6201f3094908",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f174c23e-e8d8-48c5-84e2-5e535a3ac6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0858fb8-2e88-4cd6-9c34-b71ce4822656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676ce78c-f8b5-472e-94f1-f3509ec2e4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a08f64b-4420-4e9b-acfa-c90232ba36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a2aded-a0db-49c1-b5e4-6c1caa50921c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1822684b-ce9e-497d-8976-149b4e06cbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275554ee-fd96-43bc-98e7-5f49c9a43d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ddb351-22ca-495e-91ca-eb520900d24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98e8899-01ae-453d-bbb2-b83609917193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8f15f0-27a1-4301-9c82-4902e565c71f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1045dc-0b98-4afc-8128-68a92ecd1db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841b12f-6fa1-4fd3-b9b3-8214e458732c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a0b655-f143-4d1f-9eae-942891373082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932873e9-f545-487e-8abb-4b72081cad7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ece5b1-9aae-4f17-87dd-ef9ccd44e48a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a2a60e-2ef3-484b-9370-6cd6a6d10dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c122db-1eeb-4fc8-b909-86059364d99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175c48f-4330-4d36-bfcb-c4a85037e83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348d0ad6-6f65-4fa4-bcd1-b5e9f9b92787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1d1f7e-cf79-47f7-823b-4c35eeade10c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f9e986-bf00-4713-aa76-d2d118d74185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd544ab5-4481-4039-8f15-a4dee0810a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8445ef45-e999-467b-b95d-6c30c7b90353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1745745-bbad-419b-b33d-5ab58e8890d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b058f6-8d9f-44b6-8933-501426407b55",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef363454-e252-4cf9-a8cc-f58407c46041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdca9d4e-33b4-4748-8a04-4e4ecdced278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ab939c-fa9a-4f51-83b3-32bb8cfb9d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168f7c96-1709-4d83-bf45-e5229c65e940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac833981-ad3a-4ff0-83e3-76485f5b8209",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd56029-6be0-4991-b7fd-94b33b8334b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec944318-fe33-447d-ba83-2b2fadf6247f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a5c43b-c4b3-4626-8e0e-ad0ef0883dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b33eb1-324a-452f-9709-a44b6b2f2027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d9ca2-efff-4683-9a61-f750895e21c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b73b57-3e0b-4610-ba18-c870168e44e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cdbe64-6a0b-4080-b2b2-f59c201c3b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56570d0c-b788-4e55-884b-cb234445e65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcda36b8-f818-4d06-804b-3548fb95e924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b25050-8cba-4ec0-a3f2-ee93e194edb1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be3686-3630-4acc-b562-1a168551242d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496bf274-827c-48cf-a890-f75d1036054b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df39ba2-c465-4570-8592-7ed426765294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b5cbd6-75f1-4e13-b2dd-f2a2701bed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93225f26-1ea8-4841-a77f-7405f614ad00",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd89ea1c-1902-4b77-8c2e-fb823bcf7770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03da467f-d924-4a76-b2ec-19832547d808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1dc990-b0b7-42ce-b0e4-21fa531d4408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a39e503-add3-4b6f-9d09-559ec9829f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde98d60-912b-4004-be9c-cc29d0e1f6e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af0dfe-9800-43a1-8cc4-ca98850c6cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47f097c-6baa-4715-a220-50b75ff18440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162356c0-3e35-4a17-95bd-ab3cf1432afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac2c4f3-dca6-40f6-98b4-7c9baaf043c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f6591-ee96-4ca9-94d9-47e484ac61f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27b3a12-6873-441a-81ba-13c20e652d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585c3c56-8a94-4bc0-8f60-c2bdd7097823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed49e86-f2b8-4d59-a847-5a51379264bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2452b4c-07e7-4c19-a59b-2123f3e14beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7da4a1-96aa-4c68-bf6b-5208a36ccc1f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7808fdfa-1b85-46d5-b87d-fbc2a413e1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f605d8-ba0e-466f-ba6c-0bae6a08a2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6608572-7975-4688-902f-7a3e05f3816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afed4552-dd58-409c-bf4b-b7067ba87756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe327dc-4526-4b7c-abbf-5bb440c79cd0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98574bfa-4fc8-4595-b2a6-5c53b3f934e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac269b1b-e025-4716-863c-64022a9a5e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45f9edc-8525-4540-b5a9-3a89b2961a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dd1c8a-881a-43d6-8ca7-d413431b5ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9337a99-e47c-4f69-b815-c1133350aee5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9f42ef-a7c8-409e-9795-d41122cb2ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc64c5c-4881-4b88-805b-de6c8613f0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e930512-2491-462b-a61a-33ed24c5ffc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262f3fa8-ab9e-4f28-9ad0-1803b0e5f9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f05f88-d62c-44c9-ad5f-630b5c25d83c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd11ddfd-f626-4a6b-80c7-0d00d539b088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c316b5ae-610b-4822-bc1c-19c58fc1b014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13978b42-129b-40e9-b679-be5dda8765b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613f3318-4a79-480a-8d86-5e0e3ff62f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c34a105-aac2-4d73-8361-f91cd3a56bde",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e170b5cf-b0c4-4b1a-9673-f1419064a470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebd78ea-dc52-42bf-9a18-efb8c49bfc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3498b86-32cc-421d-89e2-67e18aece448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daa252c-3983-4505-b5bf-503e01c83ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d271db8f-420d-4954-8f3b-20c3cec847f9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6674a-6fc0-481c-9ebf-222d0b17c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13925ce0-8843-4e71-957f-5feeb215f72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b464d-0751-444f-8019-50a44fcd03ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90ae21d-de13-4e07-a6e5-0587cd6ba08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a9bb89-b8cf-49f1-83e7-46d0e9f83ace",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc008ba-03b2-4594-85bd-fd77fb14802b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e90622b-b0d6-4644-bb9e-703d22945232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bdf951-31ec-4d4b-abe2-ce1262c54443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00faa219-98a4-43cf-b21f-cb5fcc80a011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1eea9b-bec8-484d-a481-f39faafba926",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b00a25-edd0-4989-bd35-8d177f830f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd81a1ea-6b2e-45fc-903d-09b28b3977cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32781c5a-721d-484f-85c9-4ec231e027d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf4ef95-7edb-4686-98eb-15b8065fadf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f95205-e680-4d15-8159-2384e31f6478",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5b14b9-e53d-438b-a8c5-9dfbd7887291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da15cf4-7a7d-49f0-8078-8919fc79255f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2c3fab-acef-4d54-a3e2-25f006371372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2204a246-7d91-41e2-9d80-85228985653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace0a4a1-39f2-4d63-bc96-50f1b600e6f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f97a6-7013-4c9e-8132-23f5b8011c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe359bb4-9240-4f7f-9241-26854503ca4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f7f27-0ae4-44e0-b954-78914a281f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268b19e-dc13-4e9b-bc23-1733dd9acc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0051b2a7-43f1-4276-82c1-a78c4422b673",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f614788-993b-4e06-8c2b-6f5d05ad0f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28df2a45-9438-43a7-abea-c71f9fdaf55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0efcf00-cfb7-4fcc-89b7-9762cf649694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dba8067-3320-4643-b489-9ecafeca2219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750fcacc-831c-486c-8e95-bc669f1ec2bc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3046fe86-7b65-4ef1-a63c-a9f1d071658b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "261952c1-1a9a-4eff-9628-ffa2ee81197f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd2fb69-5eed-4d78-8bfd-2bcc16b7798b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344fd0d5-6f5c-4dc6-a663-4bab9032d93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4493082e-586f-42f9-8066-6bf715b80886",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc305eb6-ad95-4008-a6a6-7f4866b04464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faaaaabb-6fe5-45d8-a0a9-4202ecb2bbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e597a303-5adb-4cec-a43a-e33de14ef45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d66f259-a67d-4045-88ab-8170bea9015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5318512c-8fc2-4d9a-bfbd-7b08c3956c8e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68236668-663f-4465-90f1-24419d193539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e469dcd0-18c0-4aff-b23b-2d684b57458f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd03ca9-446d-4125-be0f-57426d21cea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed45acc5-0b45-4118-8508-7d063fd8bbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3511cbc2-6856-4ac5-ad16-274987ccfb07",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0fb273-549b-4add-8604-66bfd23ccd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f53329-cc2d-4859-8ba4-ee75e7465774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e016386-abcc-41a5-8a40-5d4beaa2c848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa4544c-e88b-4afb-b616-2e57624a5449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cc6b20-3661-40ad-a425-cd9048c26ba7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab41f9fd-75b5-4ada-b597-2ee3c270f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb8ab5f-28ea-4dbb-9611-bf08643436c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb07568-d050-4cf3-a298-ef786bb34370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56ec8a7-d943-4370-b816-3225af707e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad75f60-2a09-46ea-b14c-0a395bdc0ea9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c6b63a-e684-4697-a642-293d267b69b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f705ada0-d446-4e7d-958e-3359850223eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2279f8b9-e08d-4954-a015-bea81a0071bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee6e6bd-0186-4ebc-8038-8744297ec086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c695b581-53f0-456c-a979-f3272cc2343c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b179e54-5f06-4a61-8a53-d0e6318c4137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82913a4-32be-4d02-ab3c-ed7687aa39b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1796c38-e4e8-4cec-868a-144d4787a54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7faf44a1-16f3-461a-8ff9-141b17c0a6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb19285-0d01-4f22-bcd3-9461f194e44a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac96fb93-620e-414a-b28d-dd495e8b740a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a09795-544e-4f72-98d6-e093ee8d21fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de2b81f-092c-4fbe-b70a-76e00ccd2ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352dbb4c-188b-4daf-bd5d-6fe593f616ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5b25ad-416a-4871-9126-986097bf623d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a2eaa0-47bd-4daa-80b0-fb486fef2f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ba39f0-d505-46e7-9e1b-5c25734f1a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea98a5b-13b6-46aa-accf-08e501f0ed19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973811b4-0b79-4ff5-bdad-6cd97fe335fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ac6bc2-70b9-407e-bd38-3ca0a89c3add",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a7d60d-3ff0-4ead-8c5e-509245973304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf84a8f0-2885-4d22-b8e6-bdbd1342fc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc3ed0-0714-4259-aeb6-db28f3844580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c7ef7-69c3-499f-8303-5470df97c0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f35e6d7-6f3f-44c8-a266-62e1b81685e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c66a4cf-92c7-4a4a-82da-709d1cff2fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31555aa7-4ebc-4119-aac8-0807957c285e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23589007-ddb8-46c0-870d-d4fc67d7b0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7a2b4e-5392-4a17-990f-76369b1811e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c86113-ab2c-4e9e-b570-c7353bac19aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b207f-9d21-41a0-8c7b-262d216b9c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6ae2c9-0d41-4626-98ac-533cba9fa561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aa3269-5ba8-4097-96ac-b5f9a5bc1b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3480683c-cf50-4e16-85ed-ce04e8fb3019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e9b761-b706-4bbc-96af-f580f5429b21",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3838a8c5-07e4-4e5c-a5a4-43f9e1097c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5ab793-cce7-4409-8092-13eab53b6227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eab38d6-eb35-42f0-bd59-59d7945dc83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c588407-d9cb-42ae-99d8-320b19a4b0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9976ef8-2b01-44a1-874a-1ad5800be672",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681faf77-c630-4cfd-a6eb-c82b82addac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aef1566-6651-47ad-803e-1f77b446de71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92965709-5c2b-46f3-8542-7502ac1e9a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0a573a-bd49-4fb1-a731-e0cf8255d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ffd034-ec32-45d9-a4b0-6445b4d729ee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20c6415-37eb-4c31-9c8a-b2f8c5674f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1d4e0d-59ff-481e-a1a7-57739f48bb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef4c19-c7fa-4b57-bd98-ef917e9a09b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d0f05d-08e7-4ee6-aec5-098755a7754f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5906be61-bcfa-49b1-bafc-a10d5ba1a940",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c23924-548c-4d19-aa38-5b3d1f183c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda679be-313e-485d-a8d0-19386cbe539e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac64960e-5e9c-4d39-af74-a4f78f2ddc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e2c3c5-bc64-45a9-a096-4204bde01d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d0c4b2-4e28-48fb-a023-0d97a2b15bb8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aec63e0-83d8-405e-93eb-2fc00d40c010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f680940-2c50-4912-bbf5-aaff64ce5629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e9e5d-871b-4795-bcff-f2e43e0224e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210a2da-a093-4786-83a0-3abc3f7ace08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450ca29c-84bd-429b-88b5-744c5a5fdea1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd10fb16-ee35-48f1-94ec-7b9886d85412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12360d9-83a7-46b4-adee-6ff106b8b15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320aeb35-411d-4c3e-8afb-e63f36df9038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3d1435-a358-4496-8b9a-af3c499099f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d1ca69-926b-4008-86ad-d0da00655a23",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd15910-7c7e-4c91-a3a3-43325a04742b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82fb7f8c-bd18-442a-b3c3-8811b8f6291a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be05084b-b1bd-4225-9a6d-a2ad424d4718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d287ca40-9ab4-4d7d-abee-d2df5bf6d903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf3585-dd9d-45eb-a9f2-f4d4db178881",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e986dda4-04cd-43c0-b460-865b445a81a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369ef2fe-acc7-4bb2-98a0-4d0b0dcbdcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b550e93d-fcff-469b-8d8d-f5ed0028225b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b048e03e-c223-4f39-b593-13e612a33e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efeac6b-b4e2-432d-bdf1-961b6862f4b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dface52-6dd5-4942-80da-f070e4d72e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8d8fac-dcbe-4588-acb8-6d2a6a6dcc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157cccde-8d14-4c5d-8db1-e95d01d40375",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efa0971-97ae-4e91-9111-f5d1ab457cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55fde5f-5808-4eec-9f38-7d969d0d62fb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137d63a3-fd2c-4dfe-ba6b-c59ee5d7e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4222a49-4cfb-413d-ae3f-f222c87a6424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc17115f-3525-4b6a-b04c-1ed26fee4297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38804cbd-4cb0-44ac-bd4a-6995515f64c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d320e70a-c8f6-4269-949c-1677727b5935",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84940b6b-d6f7-4664-912f-bb8b9117b11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd585ed5-4da6-4acf-be73-5d8b2699b3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b555592c-77b0-46e9-bbdd-5cffbe6b974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8041b8fb-ef98-4a59-89f4-4b591a3c6374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ac66fd-4e0c-4ccf-8f68-a0fe23bdd869",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71674e19-95e0-4351-aa49-840742a293e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f46d3d4-c924-48d1-9a73-2c1bba90459a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb33678-eea2-4eea-bbea-54c3c2fa06db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bd6beb-322a-4a95-8cbf-52caff61d3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640d245b-302a-4a82-ab3f-d0ff0289a044",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb78401-a7c5-4937-a608-5719704a3c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "becaee62-c9cf-44a6-82bc-c0c0fdcfe010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bd1938-bc36-473e-a17e-b8e9adb151fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2480a9b2-b106-48bc-8127-c6bd0c6d4bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d35ff2b-e5c4-4767-8e09-4cd7a97ee852",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0f1e9b-fd9b-4fa1-95ab-10738d77cad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876409d6-ee2e-475a-83aa-9f081348b9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f60f944-1c3b-48cf-b727-0df5ac6980e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d276259c-0415-4ab4-ab85-a3c0e3ad6d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9380e3a9-a310-4868-aad6-feda36cc0f9a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b33764a-5818-4997-8f08-b0a4dda2dfb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9443c8-edf9-4691-89ec-f018a7712a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb3938b-70d9-4682-ae72-b74a2b13531e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29f784a-8f19-4fc4-894d-bddaca407925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed3f35-7d2b-4ad5-881b-338cc0736619",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dba4c7-8926-4f55-821b-c75ec928f961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5192928-c7a0-49da-9e2c-21913d3a106d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ce8ee9-86e6-4a95-821a-060740aab8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1f5217-0d94-42c5-8002-7d236a6122b3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5333020-e94d-42f3-a776-585c38a9b409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d44b8893-4cda-4868-b270-376fad967188"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea2f02cb-b2e4-41b6-8b5c-c415568ab61f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff747fea-bbf5-4b50-85d7-e18022fc8bc8"
                    }
                  }
                ]
              },
              {
                "id": "f898b88b-cffb-43a9-810e-b99dc34a8e0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "359bc384-c442-4341-bf5a-c8dcad4c25c0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8767fd5-cd3c-451b-8551-e89101caf6d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "78771370-8aa1-45f7-ae45-eb79c83f4884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaf2df6-6865-4b7f-b30e-fa3fbc099130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4709779-ae6a-4b4e-afb0-00eed8fc958c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11c99bc7-35bc-4b65-b180-072b1d0487ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5c32fad-2837-49a9-815c-42c87482c856"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bf1f322-492c-41e8-a4c8-89d97eb94f15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9d0b964-90c9-4ea4-b436-3051020264e0"
                    }
                  }
                ]
              },
              {
                "id": "649e5a5f-632b-41fd-bd03-8e51a6dd040e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9d1a904-0db1-48cc-ba3e-eda443868626",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a354eace-0a95-43d4-a791-b0fa55ce3cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09c7ca4f-b04f-4e07-a27d-923cc0176b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ba4c73-ee29-4111-a16c-d3c0d54f9eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9a70be-46da-4676-9c0d-3b6cc7ae2bf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ad8943d-e385-4f4a-a8ea-873dbdb72b2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e784b657-a78b-4242-8b7b-7505ab8ba158",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4deac13-8b9c-4275-bd4c-2edac8285997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70f5b9f9-3978-4179-9b2d-c2d4228d0918"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ba5ccc5-fb3f-4bbb-b60d-a387471fdaed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4adab7a-4603-44b5-bc00-46e4d5902670"
                    }
                  }
                ]
              },
              {
                "id": "3da25761-e341-4e4a-b380-33831dcd6bef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9a5edc-c9b1-4340-a863-25ba515f5095",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5024591a-2f4d-4abc-bbda-8a1d9155b2cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dae6bed7-dc3a-4d06-9508-635c05213edd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c047530-0d73-43ee-9ee6-9beee56c9c2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e96e34aa-d354-4c4e-b96e-8cb8a1c1a18b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6b5c43f7-b202-453d-9ee4-f65d22102190"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0de2cae-0b77-4ee0-ab24-42e6cf330ed5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "496349f2-8dfa-4fa3-aafa-870f448bd8e6"
            }
          }
        ]
      },
      {
        "id": "307a0071-2350-4d3f-80c4-bc653970d37f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9bc485c-4007-4eb8-8ef5-b2ca680efbf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90d6bf35-ae5a-4dc8-9b27-39c6648f9be3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f0dafce-5177-4b50-bc3d-a06eda68d559",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6517ac94-2106-4a5f-940b-aa2beb38b4f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3fd9567e-0f41-4418-9e7d-3e3bb05d9b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afda326-2819-4ad2-95bc-b0dde34d5388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe33576-df58-47e2-b6d4-f723dfd18f8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47c4c472-a107-43a4-84b5-3d9e9851973a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e56395a3-fa32-491f-8728-4a329a589959"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b74cc67-6139-4f88-8da3-31935b248c9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31a9e4f7-7b01-4902-aee4-2254a9a46b51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b16de2e-107a-4f13-b233-4426057c2fb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7effd3ca-50d2-4fad-adde-a05a8d4b33fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d202ac8-c03d-4422-b832-b21c2b00af49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4252ddf-4d12-402b-a0ae-dd9a7e00aaa4"
            }
          }
        ]
      },
      {
        "id": "7c1f8c1d-0a45-4d70-b6e8-37b91144499a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a55da6f0-4127-46d1-b38e-6fa4883fc607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc632540-43d5-46f2-860b-5eb70dd3cfc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55b6845b-ddb6-4f1a-9e22-46e26c2a5c14",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c8cf3-4709-4d8f-ae2a-61f3645ee6bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c68129cf-6086-41ed-b519-0a398f4a0e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b5a0b9-e555-48cd-b37c-b27e97264258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed616926-8db4-4e2c-a654-e5fbbab8e135"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a89c2ff6-ccd1-4d2d-8d09-263febfd03d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b130f6e-e096-4eb8-967f-6942fcea8ba6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e380e184-5500-4c2e-b778-89e21a808ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cfdc375-0906-430b-8758-b527237d464c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa46cf3b-8330-407c-a476-32f0c85e46a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67cf6fdf-1f55-460b-8287-d4272723c976"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de45e14f-ea73-4fcb-97e8-2af4d21681a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8c218dd-ab20-482e-9297-66bce453b283"
            }
          }
        ]
      },
      {
        "id": "d3ac137e-50a1-4c5a-a7fd-6d7112a5dd6d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "40b25cac-6431-4a8e-9e9c-51c866e5893b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "645adf78-83f4-44df-a3ce-50a7681a406c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2cb33c4-7472-49b4-a59d-3176b6e7ab76",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c6a58b-77d2-40aa-9021-df9318175218",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "849934c0-59b6-42a7-9fb1-bd90e1aadb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aea81f-43ca-4612-8b42-bcd7116302c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71f37b64-6ec2-47e5-b94e-9d1438dea35f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7dab33-e7cf-4c72-a011-f12db4827af7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8cb77b3-7275-4e5a-a342-a66e47f55f28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca1be24e-7779-4837-932b-57be2faf095e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ef0e313-487c-4746-a6a2-3a141cebcf95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3b2e2f8-ae8f-4e08-bbc5-d5d474dfdad9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73c84166-6407-4bab-a521-bb52d7432640"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8ad1a78-d0c7-45af-ac0f-00c83082ee70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c97ce37-7f36-46d2-aa96-f2513d0c864f"
            }
          }
        ]
      },
      {
        "id": "9331ef66-088f-4e3b-92af-03f7829ea89d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "837d10d1-b944-45b2-b962-47b7ae5831bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1987b26-4f77-4035-8d48-7307f11812b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7041d734-a753-4ce6-8f85-a198aad9c1ac",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ca7a985-0202-4832-98f3-6cc22b8bae64",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2b93732-fbe0-461b-8aba-0961b19e5b32",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.027777777777779,
      "responseMin": 6,
      "responseMax": 272,
      "responseSd": 23.5303591095341,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724546683040,
      "completed": 1724546694351
    },
    "executions": [
      {
        "id": "568e7ac2-c242-4460-b5bd-ead5f232985a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79e83b95-9910-4b3d-a7e7-43103d32b618",
          "httpRequestId": "5d7fc4e7-148a-45c3-9bc5-fb2dc456e016"
        },
        "item": {
          "id": "568e7ac2-c242-4460-b5bd-ead5f232985a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a1864685-9bb3-404b-804a-dd5e4fb19fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "68c2822e-a0bf-4fbf-a09f-f629a7fdfe69",
        "cursor": {
          "ref": "41e40ff3-2c9e-4aea-a1cc-91f949115f9c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "61cf1ad1-8737-46a0-9172-2195308f7066"
        },
        "item": {
          "id": "68c2822e-a0bf-4fbf-a09f-f629a7fdfe69",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "73cae92b-6cdc-4917-813f-97ef4ab487db",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b5a75ff9-bbc7-4158-9df7-ae862dd522d0",
        "cursor": {
          "ref": "b31bbfab-738d-46ac-9b7f-e70f29de7256",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "96446cee-84dd-4453-8aa5-f15df5fc96fa"
        },
        "item": {
          "id": "b5a75ff9-bbc7-4158-9df7-ae862dd522d0",
          "name": "did_json"
        },
        "response": {
          "id": "29884c47-c575-4d9e-9cc4-b0fcfdb5724c",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f5524d-f456-4e71-9a11-233eb4993c66",
        "cursor": {
          "ref": "660f614b-e4b6-4ef3-9e15-3a34a969c4b3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c01a5259-dd80-4cfc-8d62-5e6f2e84b879"
        },
        "item": {
          "id": "c6f5524d-f456-4e71-9a11-233eb4993c66",
          "name": "did:invalid"
        },
        "response": {
          "id": "59124375-89cf-480e-8e9d-4e579b54ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f5524d-f456-4e71-9a11-233eb4993c66",
        "cursor": {
          "ref": "660f614b-e4b6-4ef3-9e15-3a34a969c4b3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c01a5259-dd80-4cfc-8d62-5e6f2e84b879"
        },
        "item": {
          "id": "c6f5524d-f456-4e71-9a11-233eb4993c66",
          "name": "did:invalid"
        },
        "response": {
          "id": "59124375-89cf-480e-8e9d-4e579b54ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8782a774-a4d1-4f2f-a792-8da1f43a7889",
        "cursor": {
          "ref": "0f24dffd-0acc-4dff-a201-54fe23721e19",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6cc57ac-2e4b-4cb5-a8f5-bb06a21ea80d"
        },
        "item": {
          "id": "8782a774-a4d1-4f2f-a792-8da1f43a7889",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5ce36feb-e4f9-4ff9-856d-40cd9723f1c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede5f0e0-6f57-49ce-be83-3acf1b74b367",
        "cursor": {
          "ref": "e6a2f662-7a13-4dbd-840e-383f0a6924ad",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ad5ae28-32f6-4c8f-86bf-158b03380c18"
        },
        "item": {
          "id": "ede5f0e0-6f57-49ce-be83-3acf1b74b367",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e0de5b43-89ab-40c7-ba3f-ecb8b5972596",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce715e05-118e-4778-a723-c38a3ccf8456",
        "cursor": {
          "ref": "0f0db2ce-8449-46f6-8ff9-231c08a2d17b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f32b76ed-6cd0-4759-990b-72821c74d8ff"
        },
        "item": {
          "id": "ce715e05-118e-4778-a723-c38a3ccf8456",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4a12fb02-9437-4e5e-ab76-41c3cfc39baf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52090c3c-b7cb-49f0-90c3-deb2b5fd4573",
        "cursor": {
          "ref": "5c3dab72-a0de-4dcb-aafb-cabbda54942e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c69e24c5-3d4a-4e4f-ba33-141e33ca1cc7"
        },
        "item": {
          "id": "52090c3c-b7cb-49f0-90c3-deb2b5fd4573",
          "name": "identifiers"
        },
        "response": {
          "id": "0e7e058a-06f9-48e4-865c-75961ba5a059",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd0356-9f6c-475a-bfa3-062846d4ec91",
        "cursor": {
          "ref": "cdf2a676-9f1c-4ced-83a4-a821bbde04d2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8e03135a-f486-459f-bad3-869242ff355b"
        },
        "item": {
          "id": "4ddd0356-9f6c-475a-bfa3-062846d4ec91",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "20ecfdd2-c2e8-4830-b590-214006af21b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1aaa511-a24b-4d41-99b8-1b201cc1849c",
        "cursor": {
          "ref": "1ed63b10-a6c8-4070-afb2-f3a97e806027",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a6505010-37c3-4378-a050-5c0e770c4a94"
        },
        "item": {
          "id": "c1aaa511-a24b-4d41-99b8-1b201cc1849c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23b3e31c-1cba-4e74-86d4-3a55fb585c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ff1a5-9746-45cd-b31d-7a7156329c36",
        "cursor": {
          "ref": "7964b4c3-f668-4f0e-a1ef-28acae11d34e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "125843ef-5cdd-4388-abcf-b2cc627cb38c"
        },
        "item": {
          "id": "727ff1a5-9746-45cd-b31d-7a7156329c36",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cad4ddec-f82f-4a32-9252-6f7bcf5e4fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cdfafb-37fd-4c97-b568-50dfacefe8e0",
        "cursor": {
          "ref": "eb03d680-7b78-45a4-855e-0317f0c24e74",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5a06885-cfb7-4dd6-835c-42003b50e8d9"
        },
        "item": {
          "id": "88cdfafb-37fd-4c97-b568-50dfacefe8e0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1c501053-36f1-4bab-b543-d4b2f1b25e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f4cb57-dda4-43ef-94bc-6f0e350d76b9",
        "cursor": {
          "ref": "d77baa7b-7432-43cd-a904-7ac894b79ad2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b2d99cf7-5318-4e78-8a5c-9e958089d2d4"
        },
        "item": {
          "id": "f3f4cb57-dda4-43ef-94bc-6f0e350d76b9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "31d16d98-146e-4afd-9814-a64d4b5202b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e45656-730d-43bf-a141-2d81dee28e8f",
        "cursor": {
          "ref": "0fc060c6-27e4-41f1-87ed-9c8e57c49b5f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "94a36b18-a609-46c0-b573-8de27fa4f8b5"
        },
        "item": {
          "id": "79e45656-730d-43bf-a141-2d81dee28e8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "07d16eea-f887-463e-b63f-f5b62eba50c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f9a65e-f903-42a5-9a6e-cba734507bd4",
        "cursor": {
          "ref": "b6fc4a15-2c1e-408e-a957-4df0097ba0ac",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54c23dba-ebe7-4094-91c4-539319d0e3fb"
        },
        "item": {
          "id": "b7f9a65e-f903-42a5-9a6e-cba734507bd4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30583d51-6631-4e5a-8ae1-2e955d2d6515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ff5ac5-b08b-4df4-927c-f3b39047c827",
        "cursor": {
          "ref": "2e38ee92-d875-4c4f-b9a5-d853b480bf6d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ea20e0b9-2473-4213-b17d-5a275d825c5f"
        },
        "item": {
          "id": "a6ff5ac5-b08b-4df4-927c-f3b39047c827",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1867d788-4cd1-4a99-842b-b80233f74f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ca04f5-37d7-430a-931d-2e5df29ded44",
        "cursor": {
          "ref": "d4a41b15-825d-47ef-a8f3-ca03d4bbc24f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1966f080-8c5b-40d2-97e6-66d2891b0dad"
        },
        "item": {
          "id": "60ca04f5-37d7-430a-931d-2e5df29ded44",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "00dbcd5b-f0aa-4812-8997-17122c2a1607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28a750-f2e0-4442-af19-1b8523fbc451",
        "cursor": {
          "ref": "0f974e15-8e3f-40a5-af89-50e3258d21af",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d559913a-e551-4660-ab1c-c091038e8368"
        },
        "item": {
          "id": "7c28a750-f2e0-4442-af19-1b8523fbc451",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2c678342-c484-4155-81db-c5a0a7ae9279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c92994-5f76-426a-885c-4432bd60f0cb",
        "cursor": {
          "ref": "ed897ace-42bf-4c9e-ad3f-fd533a959251",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b9b699ce-c2e0-40ba-bce1-dd3d7792c3b5"
        },
        "item": {
          "id": "92c92994-5f76-426a-885c-4432bd60f0cb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "642e0378-37dd-46ab-bee1-24d9b29b8b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeea6b2-a576-41e9-bfe0-0c3dc08b9811",
        "cursor": {
          "ref": "0377a7d4-939a-4b72-b874-4e9c28227389",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "21d60dff-a5ce-4e21-9a1e-ed09a22ecf3a"
        },
        "item": {
          "id": "4aeea6b2-a576-41e9-bfe0-0c3dc08b9811",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a52fe28a-0052-44c3-a22f-31d0470dcee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6777a34b-b28f-4ac4-920a-e5b0957504d0",
        "cursor": {
          "ref": "c9e6cfe4-fc63-4bcd-97af-63e276e21ce7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "122bf8af-3b0a-4366-b913-4a67d71196f4"
        },
        "item": {
          "id": "6777a34b-b28f-4ac4-920a-e5b0957504d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0b8fb91d-6631-46ee-8c17-5853c91b1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5e7562-3afe-439d-bf83-9f4cdeed1727",
        "cursor": {
          "ref": "f92d09ce-0cb3-483e-baaf-a6d89fe29559",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "20e9bcb3-915a-4a70-a4a6-6e89d7b97631"
        },
        "item": {
          "id": "df5e7562-3afe-439d-bf83-9f4cdeed1727",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "717e6939-5dd8-45ae-82e2-a40aafc80213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b81ea-fd4f-45de-9ce6-ad22d857bd78",
        "cursor": {
          "ref": "9be13adc-b0e0-4fe7-a6bd-705293405280",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "94f84c59-4e1a-414c-9f71-f24fb548645f"
        },
        "item": {
          "id": "c33b81ea-fd4f-45de-9ce6-ad22d857bd78",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bdfd33d2-f2f5-457d-bfe9-7313e6fd270e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b205e88-7e17-4439-b8f2-baaf52d5c94a",
        "cursor": {
          "ref": "11776958-fece-46e0-b084-f07b95998006",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d2e0feb-63af-49a5-8254-1793fe5ddf01"
        },
        "item": {
          "id": "4b205e88-7e17-4439-b8f2-baaf52d5c94a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "29500591-a3d5-417d-8a16-9c7d5fee949e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971777de-0318-4133-bf86-b64d7f02f2af",
        "cursor": {
          "ref": "3ac370cf-5a31-4fca-924e-7d25576566d2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "38b23327-c681-41ea-8dc9-40d32c783c73"
        },
        "item": {
          "id": "971777de-0318-4133-bf86-b64d7f02f2af",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a7c93d6-15dc-41fa-9bbf-63d1298130ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e0280-8b88-4e79-bf3f-230cd4012f73",
        "cursor": {
          "ref": "a9ac29bf-1141-4635-bc7d-4f8272006b3b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f482563-db5f-48f3-849d-18e10c6e3fac"
        },
        "item": {
          "id": "085e0280-8b88-4e79-bf3f-230cd4012f73",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e3f6a905-8f8d-4bbd-b9b2-2d7973d3cc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d66be-09ec-448d-8913-8f7495e66187",
        "cursor": {
          "ref": "9f5c7666-d8b3-400a-baac-038a56b915df",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "01af883b-f0ec-457c-9073-0180ace9413d"
        },
        "item": {
          "id": "d37d66be-09ec-448d-8913-8f7495e66187",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d2b3f2c8-670e-49c2-b184-57f8f97cc947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9761087-14d8-4982-8abc-42986d3792fc",
        "cursor": {
          "ref": "d95e9060-a852-4043-b9af-6c3e3761e01b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5eb0ea56-c562-4752-bdf8-ffaaec9b8750"
        },
        "item": {
          "id": "f9761087-14d8-4982-8abc-42986d3792fc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "617ab0e1-4dd7-4242-a4f6-05ea8e60acaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fbd28a-4b64-4cde-a82d-f9121dd9e788",
        "cursor": {
          "ref": "15fc2ade-5be6-4c8c-bc0f-8b66e038cc9b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a06c65cc-cc82-4258-a25d-94e83e32bc1e"
        },
        "item": {
          "id": "a2fbd28a-4b64-4cde-a82d-f9121dd9e788",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3b92100c-87e0-48da-b99f-cd4079c35c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4202daa9-9d27-487e-95a9-b83e8e150553",
        "cursor": {
          "ref": "3f707458-8a75-4994-b4fc-427b4ad78854",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4f46ddb2-e218-4ce4-98ce-568d2c452416"
        },
        "item": {
          "id": "4202daa9-9d27-487e-95a9-b83e8e150553",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "61776267-8827-4597-a2ce-6a369a43ee52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda9fa7d-58ca-4a08-9b0a-6c5be730099a",
        "cursor": {
          "ref": "f3df13f0-0c59-4e8a-bca3-2b20c884b930",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4917a446-2578-4a4d-88dc-03e78df4379b"
        },
        "item": {
          "id": "cda9fa7d-58ca-4a08-9b0a-6c5be730099a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d3d00ff-c248-4a8e-9cbc-1fda105970c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d2717f-bb1c-4cb0-a70d-ffe726d14d82",
        "cursor": {
          "ref": "623094c0-94c9-4da5-9f46-58666c940bfc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5748a308-8b77-4a3a-bff1-389bde67fb00"
        },
        "item": {
          "id": "c1d2717f-bb1c-4cb0-a70d-ffe726d14d82",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c4591178-d345-4055-a8d6-34455a5fcc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ab8a44-a073-44a2-a7a2-d9e7b25d685b",
        "cursor": {
          "ref": "47adf358-f834-4f92-98ba-b68a2fba0255",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "65aa4874-96c5-4848-846b-0979eb9cae14"
        },
        "item": {
          "id": "86ab8a44-a073-44a2-a7a2-d9e7b25d685b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16569e75-2969-433c-b3dd-9a77e62dbae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f90522-2fc9-404d-913f-c91b3faf2d63",
        "cursor": {
          "ref": "d8f13f2e-4960-44aa-ad04-4596369ad2ee",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "55e3b900-faa3-45cf-9c4e-28ff9a8ef666"
        },
        "item": {
          "id": "d9f90522-2fc9-404d-913f-c91b3faf2d63",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7256f58e-c228-4e1e-9a47-709f5b999de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab621413-9fe1-4704-b3f9-09f4a2e94ce4",
        "cursor": {
          "ref": "c981d565-6ec6-4fed-9d6a-93411438e8b9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0bd19d2e-ce4a-44d3-ae65-b75e7ad00adc"
        },
        "item": {
          "id": "ab621413-9fe1-4704-b3f9-09f4a2e94ce4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ec00b483-9f29-485a-bcdb-fd531fab47d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2ee1eb-7ac0-4689-b918-010adf40a1c7",
        "cursor": {
          "ref": "19651556-97de-4814-8259-4a9f466fd102",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "58cd7a68-7b0b-4450-98c5-00c89d9806c3"
        },
        "item": {
          "id": "4d2ee1eb-7ac0-4689-b918-010adf40a1c7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e5abe1de-36bf-4ecf-b91d-3293342c3ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aee866-81b5-465f-8c72-edcc7cbf500e",
        "cursor": {
          "ref": "b28cea79-e6ad-4f70-b5b4-ed07b3f22215",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6d24f340-29e9-4cc0-893c-a9c812017977"
        },
        "item": {
          "id": "f6aee866-81b5-465f-8c72-edcc7cbf500e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6e5c8b6f-c6c8-406c-a04d-2792b7306854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2199ebe-5fef-4358-9c90-4da6ea45ba00",
        "cursor": {
          "ref": "a5147c2d-64ef-48f7-bd9a-47795fb5bbfd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "698b15e9-6790-4222-9c22-8353fb9bed6a"
        },
        "item": {
          "id": "d2199ebe-5fef-4358-9c90-4da6ea45ba00",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f45270f8-6479-400e-9129-70d5dc025d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c30ad0-1f5f-4ffe-9f0e-dfbdacf39565",
        "cursor": {
          "ref": "139962a8-a646-4e2d-b8bd-b8fa45dbd00c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8a3e5af8-acd3-47eb-9778-872c0fd513e0"
        },
        "item": {
          "id": "54c30ad0-1f5f-4ffe-9f0e-dfbdacf39565",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "78995518-3aba-45c6-b513-c2848540abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa24afe-e754-42d4-a203-f642dce0fa0f",
        "cursor": {
          "ref": "7845a641-062b-431c-b770-acadf097936f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0fce35f6-c005-4750-9956-750ba159d644"
        },
        "item": {
          "id": "efa24afe-e754-42d4-a203-f642dce0fa0f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6b65ac1e-41d7-4d54-873d-885ab17bb641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed28dc6-2b9a-48b3-85ef-a4148f761193",
        "cursor": {
          "ref": "826018a5-5636-4230-97a1-bbba3a2e0d9d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ea4755d-0a38-4040-b522-ab8ee353a1cf"
        },
        "item": {
          "id": "6ed28dc6-2b9a-48b3-85ef-a4148f761193",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "28aae76e-3827-4e7f-8a76-93573d437fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5802526-f5a4-4e7d-8c46-95d59b6c4689",
        "cursor": {
          "ref": "dc6cf685-bf9e-4613-b5f2-b7a02e0928bb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f8523170-8e42-4a2d-92f2-2e0496d33f7e"
        },
        "item": {
          "id": "e5802526-f5a4-4e7d-8c46-95d59b6c4689",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "255435a9-dfd4-4ae4-9049-a3f28ba07c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd59da-6a00-4139-8593-cbdc8e41c891",
        "cursor": {
          "ref": "69875a91-46eb-4826-b701-4cbef41e854b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d6da3f59-d24d-4b22-8528-a190b9b62f74"
        },
        "item": {
          "id": "c5fd59da-6a00-4139-8593-cbdc8e41c891",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a864ef02-a8ba-4eb1-ad86-a3c7cb44cb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb44a16-dedf-47ca-9652-470d9940ea40",
        "cursor": {
          "ref": "71cdfcd7-810a-4adb-aced-feb05561ecbb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ab993955-3c42-4ceb-a3be-5d06159d58c2"
        },
        "item": {
          "id": "bcb44a16-dedf-47ca-9652-470d9940ea40",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5fdecde8-4a6d-4322-b14c-fa7d97af5112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc1b4f2-ce0b-4462-8067-55a7b221531f",
        "cursor": {
          "ref": "8ceef306-d0cc-4515-a5bc-e6234ecfee77",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8631279b-c165-41ad-9177-dde44d41a491"
        },
        "item": {
          "id": "7cc1b4f2-ce0b-4462-8067-55a7b221531f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f153aee6-7671-496c-83bc-1ad3685fb2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371696a-f176-41ae-9188-0fc34d6ec862",
        "cursor": {
          "ref": "4f0e4638-9b32-4c39-95f7-edf145bfe86e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4c5d885d-0aa9-4e80-8e83-e6aabe4d3814"
        },
        "item": {
          "id": "5371696a-f176-41ae-9188-0fc34d6ec862",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "493288a0-a505-460e-a454-9e9bd3ee0c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d40a27-ef07-4553-919a-9c1fa9f00ce0",
        "cursor": {
          "ref": "2b52d41e-e575-4b3b-8279-cfc4d1d5a888",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4359ff23-97ce-46a6-bced-b15d126a42ee"
        },
        "item": {
          "id": "34d40a27-ef07-4553-919a-9c1fa9f00ce0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8214fd88-3420-432c-a0e0-a879a306e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d6647-3082-4c8f-b8b8-fc4f495799da",
        "cursor": {
          "ref": "f11f6f96-07e6-4bf2-ab15-919d88d128d2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "842e50bf-efb4-4d4f-8258-d01e04a9a50e"
        },
        "item": {
          "id": "175d6647-3082-4c8f-b8b8-fc4f495799da",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a8ddebef-b23b-4caf-9902-cdf962d43312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ca75f7-b14a-420d-8a6a-fc4037e75005",
        "cursor": {
          "ref": "0f806391-af0d-48b8-bdb7-bb28411069ac",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "78d6e3fb-bb59-4205-be82-8b756aaa9c04"
        },
        "item": {
          "id": "29ca75f7-b14a-420d-8a6a-fc4037e75005",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "801f1b9f-2dc4-4bdb-b942-efc4643a0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5427c9aa-9af2-4fc7-8e31-e115319ef7ec",
        "cursor": {
          "ref": "5d617389-5c30-4812-91f4-d406d51c682d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "24ce546e-4e34-4ac2-9c88-165ddf5e749d"
        },
        "item": {
          "id": "5427c9aa-9af2-4fc7-8e31-e115319ef7ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a6150f0a-8bde-44e2-bf4a-9e52fb9b2eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53409b84-de98-40cf-a0ad-86558ab3029d",
        "cursor": {
          "ref": "e159e05b-c12c-493c-8160-f0f75c28cc9b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f5fafd96-a7d1-4f83-a0cd-a85250521765"
        },
        "item": {
          "id": "53409b84-de98-40cf-a0ad-86558ab3029d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c1b8dd5-89ee-499f-b28c-4f16df3e8323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bd9bdd-48f5-4eb6-b56f-54ba44381b24",
        "cursor": {
          "ref": "036e9e32-41f6-48f5-8813-be0d875a7de6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "771f7edc-5fd6-49f3-98a0-b1bbbfdeb6c1"
        },
        "item": {
          "id": "38bd9bdd-48f5-4eb6-b56f-54ba44381b24",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "74c3d5b3-72c2-4a28-99ce-37a999c6beba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b153272f-0a01-4a0c-9a1d-05948d5fead5",
        "cursor": {
          "ref": "2c7000f1-d6bb-49f4-ab3f-cf67b42df4d6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "175dd91b-e9a1-41ee-ae35-cba529e85bf3"
        },
        "item": {
          "id": "b153272f-0a01-4a0c-9a1d-05948d5fead5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "76ce3ff6-ac2e-41e5-b257-a06242f59421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a62215-c5e4-4ec6-aa13-926c761c34cc",
        "cursor": {
          "ref": "59ca844a-ed4d-4395-8da0-d9b3e266578a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "044085ee-ba8e-4b2e-8581-688206499145"
        },
        "item": {
          "id": "d0a62215-c5e4-4ec6-aa13-926c761c34cc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c99b6be-5969-46f8-8a6f-6409a64b371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ca41ae-2fd2-43d9-8be3-04490a8434b2",
        "cursor": {
          "ref": "c9bef96d-5901-48ec-a1a9-a6e67d556fe8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4d97332-a186-425f-b77f-c978bf734344"
        },
        "item": {
          "id": "b3ca41ae-2fd2-43d9-8be3-04490a8434b2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bb18fe14-c92b-4f7c-aa69-5693ab2989ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e518100-81a6-4477-b36d-da1deadd9e0a",
        "cursor": {
          "ref": "6a73ffc2-d6cf-434d-bcf7-4a3a4dcfca6c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5459105-9fb1-4ca5-8a5e-f52fe85f8456"
        },
        "item": {
          "id": "8e518100-81a6-4477-b36d-da1deadd9e0a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0192ddcf-9662-482c-b5cc-b8e8149b6366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41564246-937c-4804-89ed-f835ed871193",
        "cursor": {
          "ref": "0ec2720a-97a8-438b-9363-6dde29221060",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1aab200a-5b19-406d-88a9-975ab96119f5"
        },
        "item": {
          "id": "41564246-937c-4804-89ed-f835ed871193",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "00844439-370f-411d-bb0c-2ac153f7729e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83270e0-f2d0-4b7d-9858-891753697f67",
        "cursor": {
          "ref": "f0bcdbd7-8fc2-46f9-a1ef-b9101bf359be",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e9b6374f-5caa-450a-8db9-d8d1931ff3d7"
        },
        "item": {
          "id": "e83270e0-f2d0-4b7d-9858-891753697f67",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "861421ef-e4b0-4ac1-bfd5-585a131849eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3404bd6-47eb-488d-8b9d-13a771104ad4",
        "cursor": {
          "ref": "43572e56-8aec-44b2-aa57-bc39c8d9c627",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2a8ed4de-d153-4115-bba1-5d06f06ccd8b"
        },
        "item": {
          "id": "b3404bd6-47eb-488d-8b9d-13a771104ad4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9fa7f47e-f642-4b19-85fd-f5542f189505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d49f4c-50b2-44a6-8677-ca46f80b3220",
        "cursor": {
          "ref": "8c2dadcc-02fa-4d6f-b7c7-a57997cdb72d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5dcad46c-226a-4340-a2d2-cda18582eddb"
        },
        "item": {
          "id": "07d49f4c-50b2-44a6-8677-ca46f80b3220",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "534c92de-91f2-4811-bbb6-fe27f726f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b16ff9-b8da-457a-9e0d-42648a27dc97",
        "cursor": {
          "ref": "7a485f5a-5618-4843-a456-b73002945020",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e22a57fb-ff55-40bf-ada0-654f989e9f97"
        },
        "item": {
          "id": "98b16ff9-b8da-457a-9e0d-42648a27dc97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cdd73e3d-7032-4f63-a911-15a9ced512d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe85f3-2682-4f46-be65-85a6f8012279",
        "cursor": {
          "ref": "29ebfeeb-cf4e-4bf7-9732-6709a854661f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6535412e-7b51-49f3-ae6c-371f3dc38659"
        },
        "item": {
          "id": "67fe85f3-2682-4f46-be65-85a6f8012279",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "39a91048-ad94-40e2-86ff-908c66832bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea7bebd-3046-469c-a353-bcb276206654",
        "cursor": {
          "ref": "b5a7d418-36c4-410e-883b-6e42bf1e11a0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b74a835a-e655-49f4-99f2-ede07aeeb58f"
        },
        "item": {
          "id": "6ea7bebd-3046-469c-a353-bcb276206654",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2caa6063-abba-4fd4-9c57-4aab3a31f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f0b37-202e-4da7-82dc-74a31ccc6a23",
        "cursor": {
          "ref": "310d1ba8-77f7-44fb-9316-717859f8a066",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "109e6a60-5ebd-4458-8895-8c13a66752d3"
        },
        "item": {
          "id": "4d2f0b37-202e-4da7-82dc-74a31ccc6a23",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "17a91f17-b2ea-4a17-a6a4-f2407d965e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92e8e0-a3b3-4cf0-b9d5-89a11f8e6ab4",
        "cursor": {
          "ref": "69f2d865-9d0a-4ea5-abd9-bad1f9513d74",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "985cf511-3271-45a0-a88d-6709aac4a729"
        },
        "item": {
          "id": "3a92e8e0-a3b3-4cf0-b9d5-89a11f8e6ab4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ae7637e1-0d89-4ad0-99a4-002747e14803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89655a7c-3f87-498c-b632-7a019386f475",
        "cursor": {
          "ref": "c1dfede8-10f9-4d2e-a2ad-bc4bdb4e9e5a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17506806-9c89-4e8f-b984-cf194ee4d6c9"
        },
        "item": {
          "id": "89655a7c-3f87-498c-b632-7a019386f475",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0707e294-0e39-473d-8566-a341acc69fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b5330-739c-4294-bb00-3c2b6cb0fd53",
        "cursor": {
          "ref": "4cdcf4d7-92c9-47e5-a9cf-8401eb1b3774",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4556ed2b-9a80-43c4-b3ac-c5311ba16fd2"
        },
        "item": {
          "id": "d90b5330-739c-4294-bb00-3c2b6cb0fd53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c8318930-015b-4239-83f4-1ffaabcc318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c30f5c3-f02f-45a8-897e-d76888880781",
        "cursor": {
          "ref": "ba231c41-a72c-48cc-afec-44465317a6ad",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "93f34e05-72dd-484b-bde6-528e9193d97d"
        },
        "item": {
          "id": "4c30f5c3-f02f-45a8-897e-d76888880781",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8219a354-8874-44f4-ae22-d13d7e967028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0723120-0f0a-4b67-a831-7a23ae161c42",
        "cursor": {
          "ref": "71634532-0ba3-48d2-8d83-88e3cad6eb22",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1dd6288f-41c4-4df3-88b8-cda7511b6c64"
        },
        "item": {
          "id": "d0723120-0f0a-4b67-a831-7a23ae161c42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c330c2ab-73f7-4a78-ae71-2e45a1495a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9f22e9-87d7-485d-9eca-804baa38f73e",
        "cursor": {
          "ref": "4660fad1-6749-48a1-8b3f-047e4c2f254b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b2de3c0-00ca-4dcc-be1a-d6ae023751fc"
        },
        "item": {
          "id": "bc9f22e9-87d7-485d-9eca-804baa38f73e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a5208fe7-472f-405d-bd8c-eae9bf17268c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0f09ae-1c96-41d2-885c-961c639f088e",
        "cursor": {
          "ref": "2e56074a-93e4-45c3-806a-6b58a1be8db2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a5ad2f53-c29e-48d9-9bd7-3872032b1f85"
        },
        "item": {
          "id": "9d0f09ae-1c96-41d2-885c-961c639f088e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d4cc785-435a-46b3-8977-d516c7abc2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbc60c2-3099-4328-8f15-72edb8dca426",
        "cursor": {
          "ref": "1d755057-50f8-4e7b-b6d0-9bb9f25c2a18",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9f6cd8ba-5295-42a8-a72e-e56f8f0cb6e2"
        },
        "item": {
          "id": "0dbc60c2-3099-4328-8f15-72edb8dca426",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "061f7820-f8b3-42cd-aad0-078b12d61b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c4f17-ede1-4547-8258-4b16dc99cacc",
        "cursor": {
          "ref": "7cc70ce9-8789-466c-b9c2-75f7c2272480",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "621c759c-7983-446d-b4c8-3d1d31366bd0"
        },
        "item": {
          "id": "c92c4f17-ede1-4547-8258-4b16dc99cacc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "23434dfe-31f7-41d1-8e5c-a4f753cc8745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e24205-becf-444d-9483-e14682a47212",
        "cursor": {
          "ref": "98612264-a65c-4156-942b-48c7485125f4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cd4b0881-e74c-4bd0-ba80-b33e9d03c5c2"
        },
        "item": {
          "id": "e6e24205-becf-444d-9483-e14682a47212",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6a7e1fbb-db46-4aed-942f-57b4f4e3482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4346079-acbe-455f-b737-64c848f208ca",
        "cursor": {
          "ref": "7e0c5dda-f4c5-4833-80c4-b679c4bf23ce",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b881bb7c-d10b-4934-a946-ad1cbb29389f"
        },
        "item": {
          "id": "c4346079-acbe-455f-b737-64c848f208ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "450324d2-ae60-4045-93a3-e2024a12e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae8c503-0627-41b0-9355-4247e8158880",
        "cursor": {
          "ref": "cca8d89c-ce8d-461b-b7b4-4541939bbd2e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "30b4d3f4-7f14-4e28-a2fb-5a86bc19e124"
        },
        "item": {
          "id": "5ae8c503-0627-41b0-9355-4247e8158880",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f90dde2f-464b-4ed6-99ca-6a5ad25174b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75623e84-f6ba-46a4-a1cc-df381d629db4",
        "cursor": {
          "ref": "7bff6080-5cbb-46ec-8451-3ba05b139eab",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ceb38be4-08d3-4ef2-a246-46214ef673fd"
        },
        "item": {
          "id": "75623e84-f6ba-46a4-a1cc-df381d629db4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "23ebd921-0eda-453d-99e3-9035a1a84da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05979548-84ae-4947-ad8b-e2ce7ad943f9",
        "cursor": {
          "ref": "397489ed-6372-4347-bd21-650e44af96d9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3cbc4761-76cb-4038-bbfa-3a1a6242c224"
        },
        "item": {
          "id": "05979548-84ae-4947-ad8b-e2ce7ad943f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e534c5ce-7bbe-46ff-8b28-13a79851f469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1560aa1-3eb8-4785-93ef-ac359491162d",
        "cursor": {
          "ref": "3bc078e8-2b1a-4b5f-bd94-11e0c762314a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f6427a55-05b5-46b3-ba6d-6d842c2a480d"
        },
        "item": {
          "id": "d1560aa1-3eb8-4785-93ef-ac359491162d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "195f7966-185b-4606-b86d-4c004ca01d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce898d46-52eb-4942-b6fe-0e3c8a9aa04a",
        "cursor": {
          "ref": "319c2b7c-cab6-4339-9ed5-0ab8d7725759",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2ea81910-eb81-4f0b-8856-8b6c692c47c1"
        },
        "item": {
          "id": "ce898d46-52eb-4942-b6fe-0e3c8a9aa04a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6ad2d282-f8ed-4088-a54b-e760b40af75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552a520-7223-4e03-a3e2-262ec0bc5b9f",
        "cursor": {
          "ref": "1172fddf-2706-4f74-9f60-ff9917dc6a32",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0b780fb-c17f-4c96-a65d-91597e448f72"
        },
        "item": {
          "id": "1552a520-7223-4e03-a3e2-262ec0bc5b9f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "23672b22-40a3-40a5-b27b-52514f0bd3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690c4060-eabb-410f-84e3-067675435184",
        "cursor": {
          "ref": "cbb4684e-12e4-4203-b152-c59f776474a0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1aa37a3e-1d8a-4258-b3b6-332d8681e49a"
        },
        "item": {
          "id": "690c4060-eabb-410f-84e3-067675435184",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "429c3980-a4ab-461c-a044-7f195c54cda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd7271-a773-4fce-93f2-8005be39fa86",
        "cursor": {
          "ref": "a9dedae2-700b-40e3-a77b-87eb3d963fc9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e281d380-6dd2-4c29-ba08-ea7033bb8994"
        },
        "item": {
          "id": "7bbd7271-a773-4fce-93f2-8005be39fa86",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38baca0c-a289-4d74-894c-d179c53b7b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445266d-2526-4921-b3d8-3ca15f1fadfb",
        "cursor": {
          "ref": "abc10093-de28-4551-bdd4-071aa885d076",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "67912ed2-5a4c-4dcf-9013-ca0aa40c3b5f"
        },
        "item": {
          "id": "4445266d-2526-4921-b3d8-3ca15f1fadfb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5750883b-40a9-43ed-b74b-e9afd6d24a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0dd99f-013f-4ecd-bacd-4d8473af3279",
        "cursor": {
          "ref": "481e3403-5df6-4e98-b2aa-522309190b4d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7e764f9a-9494-4aa2-b560-e332cd94fb74"
        },
        "item": {
          "id": "ef0dd99f-013f-4ecd-bacd-4d8473af3279",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fc5a0e02-7d44-48af-9919-f2f23700aa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb865e-4867-46b6-a39f-c1c04da502ef",
        "cursor": {
          "ref": "ebefc76f-9b83-44b7-bae4-b62449d8b2bc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fac4a80c-cbfa-416f-bdf2-8f2159a8bda4"
        },
        "item": {
          "id": "d1cb865e-4867-46b6-a39f-c1c04da502ef",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "baf7541c-00fb-4ec6-ac9c-f205f8e5254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ab9a4-05e4-4141-8f5e-e452338a53c5",
        "cursor": {
          "ref": "6444f629-e38a-4e00-a6d9-1b3bc4de0b24",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "65229ce9-f4cb-4d83-80be-8d72e5e938e5"
        },
        "item": {
          "id": "359ab9a4-05e4-4141-8f5e-e452338a53c5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e91d220a-be80-4303-8cb3-ca86c1437978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad965564-5c09-4977-b998-78e806380c69",
        "cursor": {
          "ref": "3d59fcda-7f60-4846-a596-0ed3f10e4b2d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9d6f927e-3ea2-4884-8bc1-7dce02028d2e"
        },
        "item": {
          "id": "ad965564-5c09-4977-b998-78e806380c69",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "240b3831-12bd-4b13-abf6-a786847a4e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c80975-1399-4248-a185-7c1176c15087",
        "cursor": {
          "ref": "5638b66d-e0b1-48e8-bae5-0319c9c6a17a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d098b9ba-40c1-474d-973a-553d7cc2423a"
        },
        "item": {
          "id": "42c80975-1399-4248-a185-7c1176c15087",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "524a49bc-cf52-4d94-9822-26b3897f7750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3000b1ff-aa80-46c9-b203-3e81be84bc30",
        "cursor": {
          "ref": "7baaa7d6-5769-490b-8314-3082548d3cb1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6d6bf3cd-23fc-4b5f-a133-c09ccdbc7c31"
        },
        "item": {
          "id": "3000b1ff-aa80-46c9-b203-3e81be84bc30",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e6cf53ad-c8cd-4dd0-84dd-92b7e71f0fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08b0743-6bc4-46db-a843-84b302348fcc",
        "cursor": {
          "ref": "4a636632-683c-4013-ba57-a221c00ef441",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "40c02bc1-5f51-4a04-a7b4-065c7d4ed66d"
        },
        "item": {
          "id": "f08b0743-6bc4-46db-a843-84b302348fcc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bd647e6d-d876-4907-b5ec-9d02d336720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1562731b-e386-4873-a2f3-902a310b0f99",
        "cursor": {
          "ref": "1ffd9d18-3b84-4058-bbdd-ef867fe90d48",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1686af38-4373-4b1e-a2cd-758f81ba14d4"
        },
        "item": {
          "id": "1562731b-e386-4873-a2f3-902a310b0f99",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b9df2cf3-a64d-45af-9580-08f532e17d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2691a2-5bdf-4867-a449-bd575b8b996a",
        "cursor": {
          "ref": "e73d5931-6e28-49ac-a649-05e3a38e9265",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b03af84e-cb3e-4773-8573-be437e133fae"
        },
        "item": {
          "id": "5c2691a2-5bdf-4867-a449-bd575b8b996a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8725e25e-4438-4922-ae2e-57253f8bd920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0623d4bc-604d-4372-9065-82937f95e9c9",
        "cursor": {
          "ref": "65729aae-40bb-45f2-8468-aa863f2cd247",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fcd4da99-cf65-432e-98ca-2eafdc0c5319"
        },
        "item": {
          "id": "0623d4bc-604d-4372-9065-82937f95e9c9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b7af389a-4ed5-4ca9-9267-1ece4a4eb33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397fa96f-a653-4a76-a287-6ad2a8768fee",
        "cursor": {
          "ref": "7c3c12a1-32cd-48b1-afc0-1df79e5f9492",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1d13858c-f2a5-435c-a345-f6fafa44a596"
        },
        "item": {
          "id": "397fa96f-a653-4a76-a287-6ad2a8768fee",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b7c7b52f-c8a2-4376-b2b0-59e474d13dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25df4a97-b159-46ce-b245-9c9dd6e385c6",
        "cursor": {
          "ref": "9a665a30-4740-493f-92bf-8987160d1bc1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2f2911a6-c8e4-4388-8984-63486475f554"
        },
        "item": {
          "id": "25df4a97-b159-46ce-b245-9c9dd6e385c6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ea2164f7-4c79-4096-9dad-9b2b9eb1271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eb9c7c-d22b-40ce-95ba-095b9d4502ea",
        "cursor": {
          "ref": "64a67b18-03d1-4297-820b-276dbec437f4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f35a80e4-79ac-4d63-a645-bfca17a00832"
        },
        "item": {
          "id": "88eb9c7c-d22b-40ce-95ba-095b9d4502ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bcc4d1e0-a074-40a2-a7ee-8af658fc02bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fc6688-da61-4c28-af35-e8d5ab823b75",
        "cursor": {
          "ref": "dbb84f1b-5268-445d-b5d0-a10395cb69fd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a5f5874-1226-4321-83e2-765a68262d82"
        },
        "item": {
          "id": "03fc6688-da61-4c28-af35-e8d5ab823b75",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5939c77-f88b-411f-b4d9-ccd42721390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7820751f-cfcf-4ff9-b990-1a5b53249d25",
        "cursor": {
          "ref": "83c069fa-4c61-4f1e-ab81-cb53c206c6a5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d35b994e-7b91-4505-a753-7c7f38319708"
        },
        "item": {
          "id": "7820751f-cfcf-4ff9-b990-1a5b53249d25",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "186df2f4-e3b9-46eb-afd5-58663e23219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecade49b-62e0-4bc1-bc6a-2ae676990947",
        "cursor": {
          "ref": "842637fa-5b42-486f-ae9d-eab5b67cb455",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c57204da-10f7-4eba-a308-d430bb72b2cc"
        },
        "item": {
          "id": "ecade49b-62e0-4bc1-bc6a-2ae676990947",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e035da58-5534-43c6-a295-dca6003cfe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdcbb9b-a58b-4bc2-bd5d-04b033259538",
        "cursor": {
          "ref": "292ad956-a2af-448a-b19f-7b956fb2c9ab",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "28602e16-9f06-4e49-8a9f-b3b715346e1f"
        },
        "item": {
          "id": "9cdcbb9b-a58b-4bc2-bd5d-04b033259538",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8623a1a4-8f31-4622-b23c-5f54df080095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75bf038-3fd2-429b-9b87-aceca97186e3",
        "cursor": {
          "ref": "01bec52a-6dbb-4ee0-a853-d55a89767c3b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12aadd97-c515-40db-a01d-56a614057f72"
        },
        "item": {
          "id": "a75bf038-3fd2-429b-9b87-aceca97186e3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ba38b54f-e3fb-456b-9ae0-59836dca2baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "72cc525a-ccf2-4123-b904-5096f9fe138c",
        "cursor": {
          "ref": "55fb0377-3286-47ab-9ed4-622ad13a4a78",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f2a53e43-4f22-47c6-8320-8a5c94e9821d"
        },
        "item": {
          "id": "72cc525a-ccf2-4123-b904-5096f9fe138c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6e1761b-fc99-4d0c-b669-e2d3b482b527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ce01aaf6-d3e2-456a-9ae1-6fb379869370",
        "cursor": {
          "ref": "05ae67ca-6296-4a46-a9ee-e30c028a199d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "48033290-5057-49c4-806a-d8c2c7664fd4"
        },
        "item": {
          "id": "ce01aaf6-d3e2-456a-9ae1-6fb379869370",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b7cbd8c-fb64-4850-bc77-d3bdae5fbba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8e7fcaa5-f83f-4001-97a5-c18340868ff0",
        "cursor": {
          "ref": "1b840dd7-2fc9-473d-89fc-b9519b87a695",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e58bf7f7-c8e9-48cc-ba09-f9c16f8cef56"
        },
        "item": {
          "id": "8e7fcaa5-f83f-4001-97a5-c18340868ff0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9da4122a-5573-4e3b-b68d-fdb51018d539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d03d01ce-ffd2-4714-84ae-169ebd179605",
        "cursor": {
          "ref": "ad02b84d-5a94-4fdd-88a9-6714d527a03a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "de9daca1-1ae4-40d7-9b57-0e3e3d9f4946"
        },
        "item": {
          "id": "d03d01ce-ffd2-4714-84ae-169ebd179605",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f9b5f52c-e71e-47de-b1fe-16b7aec420a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "fb2d06a4-483f-4143-823c-36ab90d07aad",
        "cursor": {
          "ref": "92453285-c9f2-4e77-a913-28579bf6f2a3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4740f5b7-2943-47e6-9c20-7834688939a6"
        },
        "item": {
          "id": "fb2d06a4-483f-4143-823c-36ab90d07aad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e9a5ba76-ee7a-4cb5-8d31-20c706f13357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a79b0423-dd96-48d5-a85e-d9192fce4462",
        "cursor": {
          "ref": "b9eacec2-cf59-42fa-b038-f423c0d9eb4d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "81d6ea7e-5748-4696-b7b8-a9a4b8ddbdbc"
        },
        "item": {
          "id": "a79b0423-dd96-48d5-a85e-d9192fce4462",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3d2403ed-cf06-49f0-9943-0b93f33b824c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7ba0a1a1-f123-46d0-827d-0ac06d16b1d4",
        "cursor": {
          "ref": "ed96f7cd-dae0-409c-a14a-217f5be79859",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "69eadb12-0016-4c53-b097-28c05db93cb7"
        },
        "item": {
          "id": "7ba0a1a1-f123-46d0-827d-0ac06d16b1d4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3befc10-5fe0-4e2e-83fa-28bae0ad31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c97671d-b0c6-4901-94be-c2918183ef86",
        "cursor": {
          "ref": "80604b4b-c971-43b6-9813-ba02b9ff2790",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02f85d3b-a7e5-4bfb-80ee-509483d086f7"
        },
        "item": {
          "id": "8c97671d-b0c6-4901-94be-c2918183ef86",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "46b02002-3ebe-4bdd-8bd0-c53fd4e03b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc21cae-b012-4d41-a8bd-d142adcea827",
        "cursor": {
          "ref": "1949d238-3b3b-456a-a2ac-a1ef4244af44",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7685625e-e286-4f0e-85a1-402fc7190486"
        },
        "item": {
          "id": "1cc21cae-b012-4d41-a8bd-d142adcea827",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "22c923aa-8f1a-45a1-b092-b7eb5c23dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72347ae9-ab09-47a6-b371-e2d233372f27",
        "cursor": {
          "ref": "8eaffd5e-93fd-4265-aabc-5684756d7d62",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "40d04f88-4879-4941-9f28-3516b8f9a5a2"
        },
        "item": {
          "id": "72347ae9-ab09-47a6-b371-e2d233372f27",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6f5fd488-41b6-4598-b7c5-1a37d61746fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739786d-d132-4c1f-aa10-0da77ed7ed62",
        "cursor": {
          "ref": "552d770c-d75a-4483-ab0a-dc88b79c23b2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dd41675a-450b-4528-bfc1-646b071bee79"
        },
        "item": {
          "id": "2739786d-d132-4c1f-aa10-0da77ed7ed62",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "049294af-384a-4f85-8f9e-d5812656689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5fafb-dfa3-4085-b234-af5f0dce1620",
        "cursor": {
          "ref": "baa095a9-7f11-4cc1-a921-a634e6f71a45",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d73ea358-c720-4bd6-892f-8500ec3bdd71"
        },
        "item": {
          "id": "88f5fafb-dfa3-4085-b234-af5f0dce1620",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab4bab1c-4c77-4200-aa6c-15a51932de77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15a595-eb89-4435-8bdd-bf9572aeb66a",
        "cursor": {
          "ref": "0f6bbab5-85bc-4bac-a6a5-7d1e0fc8901c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f8ade509-2cd9-4791-9171-e7ea44230cee"
        },
        "item": {
          "id": "6a15a595-eb89-4435-8bdd-bf9572aeb66a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "80e4db6a-c080-41a8-aa66-ff3c83b3ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9db177-b1d8-4625-a8d2-2dd29b4d0fb2",
        "cursor": {
          "ref": "2d66f19f-8818-43c0-a420-1b7ea091fcbe",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4f7a8c96-b3c3-4297-9bfb-5c2d8c4cef8d"
        },
        "item": {
          "id": "6a9db177-b1d8-4625-a8d2-2dd29b4d0fb2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7550fa1a-4f34-4a99-a1ec-aea08cd055a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45e32f1-45d9-445e-9f6f-1fa5074ff235",
        "cursor": {
          "ref": "aad874b0-aca1-449c-a68d-47e99a2dcf8d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5f4f529-3a74-4c7d-ae68-6a5018898bf7"
        },
        "item": {
          "id": "b45e32f1-45d9-445e-9f6f-1fa5074ff235",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2e9514b4-a3b0-4e3a-ba56-e1481ce76a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3a61c-de69-4efa-9f37-b9f4452e6cba",
        "cursor": {
          "ref": "815e69bf-1b44-4574-9379-242398a36ae1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84208c89-2cfd-409c-98ce-c76739f1d319"
        },
        "item": {
          "id": "33c3a61c-de69-4efa-9f37-b9f4452e6cba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7ef31fe7-b1ef-4c9e-9b1a-5558cfc22ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4359107-635f-4c31-953d-b7349990b627",
        "cursor": {
          "ref": "ffa99bd8-c36f-4eec-86a4-5396a6aeeb3c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "179fafd0-0b62-424c-ac61-f2f5fef8269e"
        },
        "item": {
          "id": "c4359107-635f-4c31-953d-b7349990b627",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5b9c3b46-3f18-49e8-9887-98eb4cb1237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac1dff6-3a56-41ed-aa52-debaa750809e",
        "cursor": {
          "ref": "4595bed0-4d92-4731-9e59-cb191a349f2c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "542389aa-59cb-453a-be2d-3238b14c8072"
        },
        "item": {
          "id": "1ac1dff6-3a56-41ed-aa52-debaa750809e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "accbf836-5466-4e51-9194-9b485b29c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aecc90-45d7-4efe-87c1-1e4549a0f02a",
        "cursor": {
          "ref": "4ac80dd8-13e2-46c9-89a7-a6559746a6cf",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f73175a1-c694-4636-9adc-1047b1e068d4"
        },
        "item": {
          "id": "46aecc90-45d7-4efe-87c1-1e4549a0f02a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "606dbf62-adec-4ec4-9775-f1dedf0552f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbcdadc-ff9e-40c6-9cb9-3d0a0234c02c",
        "cursor": {
          "ref": "d8eed14b-66ce-493f-9e39-2c0e30b3c4fa",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7172c893-f1c0-43a7-aa96-defa69a173b5"
        },
        "item": {
          "id": "ecbcdadc-ff9e-40c6-9cb9-3d0a0234c02c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "475f249d-72fc-4b01-9570-084f1770994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee96ba-d2d8-46af-b05a-c113a55bb78b",
        "cursor": {
          "ref": "ba6737cd-ed64-4a37-aede-78b3b0a5801f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "020416a2-db26-44e7-bfcc-18367b46cca2"
        },
        "item": {
          "id": "81ee96ba-d2d8-46af-b05a-c113a55bb78b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9a9d147b-c8fe-4167-966d-efd8784b263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c95e82-5ff6-4672-8a4d-b1e9b02f458e",
        "cursor": {
          "ref": "0625a19c-ad82-49f9-9d92-a2c90916b6c9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "90831f88-608e-40dd-8402-a4f1f2091db0"
        },
        "item": {
          "id": "16c95e82-5ff6-4672-8a4d-b1e9b02f458e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c62a3b22-4093-4f9b-a7cf-290e35f85683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfdd103-fe06-4838-a98e-412c4246c800",
        "cursor": {
          "ref": "cd91b624-7c4d-4e1b-b0ff-516f24a15674",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6b084527-1f0c-4443-b784-5584eb2ced48"
        },
        "item": {
          "id": "7cfdd103-fe06-4838-a98e-412c4246c800",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77a7d56a-69ac-44ec-8652-6c239d450a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a628e5d4-8913-4d4e-b3ef-249739c7434d",
        "cursor": {
          "ref": "d8a421b5-90ee-4a6a-b58d-393735e74221",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1e4c36d5-81ab-4bbd-a538-0d6c58f208ee"
        },
        "item": {
          "id": "a628e5d4-8913-4d4e-b3ef-249739c7434d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f75ebfe-aa24-4ee8-9cc6-a8670e812473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb2f46c-8bd2-4194-a9cd-a0db972fc903",
        "cursor": {
          "ref": "644c5b0c-9fb9-480a-ac43-598e215d297c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8840c86b-717f-4d66-9e72-9e1839f54692"
        },
        "item": {
          "id": "5cb2f46c-8bd2-4194-a9cd-a0db972fc903",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "671811a5-aef6-4b2d-9a23-f74cd89b527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df245b2-5a64-45c7-938c-bc9855182e78",
        "cursor": {
          "ref": "98980a7d-7c15-4894-b782-45e8792dae79",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "14561766-f691-4f1e-9194-21d8ff438f17"
        },
        "item": {
          "id": "2df245b2-5a64-45c7-938c-bc9855182e78",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ee784fc-9222-404c-9dde-fb67dbf3e228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061db0f3-8435-4828-92d9-fddf7798b092",
        "cursor": {
          "ref": "1442459e-06a6-4c36-b7a7-8c50cfb92e62",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83732f05-e075-4b8e-a4d4-01a836d7078b"
        },
        "item": {
          "id": "061db0f3-8435-4828-92d9-fddf7798b092",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "770bca3f-ad28-4f8d-8386-cee60fb36462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e6c01-3e8b-418f-977c-2d6fbc287caf",
        "cursor": {
          "ref": "3872030e-f266-4c4f-9a18-d6ceaf3a218e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ad9f54e7-7f51-497a-838d-b01a2ef16649"
        },
        "item": {
          "id": "d20e6c01-3e8b-418f-977c-2d6fbc287caf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3dfdbb3e-93d0-4889-b23a-ca101c25021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490e76d4-ea6f-4914-b47b-c80ec90252d7",
        "cursor": {
          "ref": "083fe2d1-8230-43f7-ae12-af1974997eff",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9a0d4f45-f130-424c-a28f-8f5b9bb2663c"
        },
        "item": {
          "id": "490e76d4-ea6f-4914-b47b-c80ec90252d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8997278-36a7-4ee2-8396-fd00b5f80feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba5192-0b44-4f39-a8ab-70aafd134c70",
        "cursor": {
          "ref": "1d1be216-5f50-4e48-a8ad-3635c1e61d33",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "182c8a1f-e0c1-46d4-b9fc-4c9672c6cc45"
        },
        "item": {
          "id": "9cba5192-0b44-4f39-a8ab-70aafd134c70",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81168d97-23cd-4d55-89b5-e723e8903b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1999ef4-32a7-42fc-b877-3e3aa59812b8",
        "cursor": {
          "ref": "6d7d2e2e-fcc3-4fa5-95ef-3f5b0578ebd0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0725d70a-c8ba-42fd-a159-a1e70affa53d"
        },
        "item": {
          "id": "a1999ef4-32a7-42fc-b877-3e3aa59812b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bb0a7f27-4342-46bd-bdec-50cbd979da58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5f87f0-396b-45f0-b689-b7c9e19626c9",
        "cursor": {
          "ref": "bbbef8cd-4084-4fde-a500-558a1b9d6b88",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9d03dcc9-5b1a-4fe0-aecb-bde699c3731b"
        },
        "item": {
          "id": "9e5f87f0-396b-45f0-b689-b7c9e19626c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "96d4c35c-e565-40b4-8eab-1a010bbf97c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d3a7de-94cf-4505-a3d9-9a1d5498fa45",
        "cursor": {
          "ref": "0cec32dc-22ac-42d4-963e-c424a06293c1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "38d9d150-6688-495a-a43a-3f7b681c739a"
        },
        "item": {
          "id": "c3d3a7de-94cf-4505-a3d9-9a1d5498fa45",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d581ba7b-c86b-4b73-896d-b76cbdc542ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9038988e-22e1-41f6-9aab-2f26df55b563",
        "cursor": {
          "ref": "fd67b52c-5643-40a4-b88b-944fb60ba112",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8ffd0acb-7f7e-4272-b0d9-4d8005ea00e5"
        },
        "item": {
          "id": "9038988e-22e1-41f6-9aab-2f26df55b563",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "19683754-8e2f-41d6-8507-8c19a1406401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8dec73-130e-4585-a541-0f829c97c8a1",
        "cursor": {
          "ref": "08b34632-d9f8-4c47-bfb6-149703d52ccc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5596d2d9-9a8a-468a-a937-1cc4b9a5d410"
        },
        "item": {
          "id": "3c8dec73-130e-4585-a541-0f829c97c8a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aaa3c93e-ba77-4e99-9c54-892ae3918439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29150b-aed0-4322-91a7-6c0699de0d7c",
        "cursor": {
          "ref": "f6a7ce92-de54-4eaf-bd5b-1d245e1a6947",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cf80da30-1c20-47d5-a616-74160cfe5faa"
        },
        "item": {
          "id": "9c29150b-aed0-4322-91a7-6c0699de0d7c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9957a39f-5da6-48a0-a23a-9a6c473790b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b61a88f-1c69-4044-95fa-87bf6c9aca61",
        "cursor": {
          "ref": "19e84f11-17fa-4425-b9c2-1602566f0823",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "21b334c3-769d-4548-b93c-6c1d2b5a77e7"
        },
        "item": {
          "id": "5b61a88f-1c69-4044-95fa-87bf6c9aca61",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b31e3001-4004-47bc-a984-ee71d17a4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff6d4c6-975c-44cb-b3de-47fff30ea2d3",
        "cursor": {
          "ref": "88a02318-713d-4f77-b56f-d83fbcfc6192",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb30d45b-d694-43b0-be92-2c0ef6125c40"
        },
        "item": {
          "id": "9ff6d4c6-975c-44cb-b3de-47fff30ea2d3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7bd16d28-2650-4eff-bf71-ee8245f7f664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e634c95-30c2-4e36-a76b-106555f26625",
        "cursor": {
          "ref": "0703ac6e-b166-4a76-b973-d7b7aa24f97b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "188d756a-ecf5-4d93-b1fa-aa1721ee7c6f"
        },
        "item": {
          "id": "7e634c95-30c2-4e36-a76b-106555f26625",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "54a42611-3f19-47d6-8a27-2044654c08f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f358074-eefe-489b-a8e6-aec3ffaba1fe",
        "cursor": {
          "ref": "f0d716f7-92e5-4b40-bf63-f7660fd2a53c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c5bd9457-8e41-44c9-816b-22c99ac0737e"
        },
        "item": {
          "id": "7f358074-eefe-489b-a8e6-aec3ffaba1fe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a06e918-de9e-4d6b-9c59-2e200c6eabda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2acf9c-19f6-4f9d-9103-6a32227cf4e8",
        "cursor": {
          "ref": "0340ada5-5550-4e0c-97ff-14b5cad176f4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4c9fef3-9bd3-4151-b250-c927ba3923ed"
        },
        "item": {
          "id": "df2acf9c-19f6-4f9d-9103-6a32227cf4e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e52ccd51-8586-4303-8c1f-16500a25439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9b78b2-41ac-4883-9784-756c0112e619",
        "cursor": {
          "ref": "214729eb-cb75-42da-82af-1a0761658aa9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "21bda2c9-6716-4178-927f-6c909bf959be"
        },
        "item": {
          "id": "0b9b78b2-41ac-4883-9784-756c0112e619",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eea7c249-d46f-4fca-bdbf-e5c8fa8aa7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a16e14-73c5-431e-b926-54bcf0fc2040",
        "cursor": {
          "ref": "afd8e1c8-5d5a-43fe-9afd-d4ade21c4aea",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6446ac02-55b7-471b-8124-d2d9ae871b3a"
        },
        "item": {
          "id": "b0a16e14-73c5-431e-b926-54bcf0fc2040",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e5ef4094-b26e-4d9f-8d6f-56431e8fd409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acfab35-8aed-40fc-9915-bcb39a1ecdd4",
        "cursor": {
          "ref": "def7f908-774a-4d27-84b7-f96d37ad17a5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b935ca05-3a44-4df6-a1ef-50f8d0df408c"
        },
        "item": {
          "id": "9acfab35-8aed-40fc-9915-bcb39a1ecdd4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "edac701b-5036-4438-8ca3-f5de75e7d2ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec7c797-b73a-4e03-bd9e-319ddb47aeef",
        "cursor": {
          "ref": "c797f906-2e43-43f5-9466-e822378d53bd",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "88b6c03c-0b7f-4570-969e-edca8b230c6f"
        },
        "item": {
          "id": "7ec7c797-b73a-4e03-bd9e-319ddb47aeef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "330335c6-1d94-4edf-881f-30a7c8aba503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa40a4a9-c0a2-4622-81ba-8127fc969299",
        "cursor": {
          "ref": "773f1bd2-95e3-4c11-ba33-7d0281807a71",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a7b4cd0b-acc9-4c87-a5cf-e0412da5b0be"
        },
        "item": {
          "id": "fa40a4a9-c0a2-4622-81ba-8127fc969299",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cab81667-46cb-42f5-9682-4a9818022718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0cdbe0-0edc-4ef4-8150-79e4f8f614de",
        "cursor": {
          "ref": "84c370e2-5411-4279-8e0f-3a6460142d72",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ec26e80e-5875-4432-84d1-2bcb28b1bcaf"
        },
        "item": {
          "id": "7b0cdbe0-0edc-4ef4-8150-79e4f8f614de",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eb26521f-3eda-4dac-94a7-bc280b1b301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51bf64a-334c-4e5a-a688-2059166ffc78",
        "cursor": {
          "ref": "f3825cfd-7763-410c-944b-0bccb5e4fef8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4918ba7c-4691-4b42-90a5-58393c29afc5"
        },
        "item": {
          "id": "e51bf64a-334c-4e5a-a688-2059166ffc78",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "babfbd89-70bd-4cbd-b494-6d90ccbe85f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e228d22c-ef5e-448f-bf66-030c8dd5d5c2",
        "cursor": {
          "ref": "8d143ae3-d6f3-4f68-b0ed-ba87c6d940a5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ad0bbddf-c337-4aea-bd32-5838a82ed48a"
        },
        "item": {
          "id": "e228d22c-ef5e-448f-bf66-030c8dd5d5c2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a2fbd9e5-a6b7-4f68-8d66-7caf0a525586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba83f89a-923c-4ce8-a30c-3f877999dbca",
        "cursor": {
          "ref": "16f41850-9784-4576-ac38-714e6e867cfc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15ebffea-f165-494c-9d27-aa65de6afba7"
        },
        "item": {
          "id": "ba83f89a-923c-4ce8-a30c-3f877999dbca",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "73eda81d-29ee-4d89-831e-02994cc97ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0752b145-8bd0-407b-9bbd-5554c8bc8f6b",
        "cursor": {
          "ref": "febfbdcf-cead-4fc0-a997-2e97275c7cda",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fc12284f-c4da-4010-8c78-88e892d26a2c"
        },
        "item": {
          "id": "0752b145-8bd0-407b-9bbd-5554c8bc8f6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f25b05b-2cc0-470e-95b3-732e328e4e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8c9654-a749-43e7-9d84-cf2701008770",
        "cursor": {
          "ref": "e52fb8a3-4e19-4ecb-962e-b29d1c7d6c5d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f593d41-55c3-4975-a1ef-fae609ab9395"
        },
        "item": {
          "id": "5a8c9654-a749-43e7-9d84-cf2701008770",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f08edeb-e515-4a87-809a-02e467440613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de55982-fa86-48d5-9371-27095a0a45ba",
        "cursor": {
          "ref": "0f30cc4c-abf0-4ee6-a218-584d74a1808a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6569139d-1ae0-46a7-8c9b-4e735a8d0e82"
        },
        "item": {
          "id": "2de55982-fa86-48d5-9371-27095a0a45ba",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7025683b-6c4e-4a43-a0a6-3adfb12d4980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5af79d-bea5-4397-b2a2-8816c7f4fdbd",
        "cursor": {
          "ref": "f988d076-ac56-494d-805c-a237af7c1fab",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8ac17835-f7f7-4d3f-87fa-845e39c603f3"
        },
        "item": {
          "id": "da5af79d-bea5-4397-b2a2-8816c7f4fdbd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cc6d91aa-88f0-403c-9406-833dee7c37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2148e-c828-44b9-8e31-94703ff71be2",
        "cursor": {
          "ref": "b003262e-6386-48eb-ae2e-207947a086ef",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "683678ba-1643-4f8e-9be7-db9fe39491cb"
        },
        "item": {
          "id": "fab2148e-c828-44b9-8e31-94703ff71be2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "93cb8e34-0fc0-488c-ab1a-42376c325c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1bdbce-5df2-4344-acf4-9a5f956d2a1a",
        "cursor": {
          "ref": "c927eddd-a581-4494-8297-b3bf3f6b96cd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "98c85a2d-ce94-4b1f-ae14-59171d3b7e18"
        },
        "item": {
          "id": "5f1bdbce-5df2-4344-acf4-9a5f956d2a1a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18b12e68-7715-4d67-9429-4cf1a7d7896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa1ec0-8efa-44b1-8601-5056ef2ba2a6",
        "cursor": {
          "ref": "4e723ff0-5d82-4957-af84-d44663f9fde2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "43e7ed8a-390f-4601-9c43-1631587fe22b"
        },
        "item": {
          "id": "32aa1ec0-8efa-44b1-8601-5056ef2ba2a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6766ebf8-3401-462a-84c4-0f1ece3f3f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298e98e1-9cd9-488f-afca-847d2181b441",
        "cursor": {
          "ref": "4219f88b-aad2-4c7f-8f8a-4ef4d7de32e6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3bf3b08-d46e-4889-822d-9ef1c5d44a82"
        },
        "item": {
          "id": "298e98e1-9cd9-488f-afca-847d2181b441",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "24ef6d9c-e63a-482e-a28f-363fcf92ec6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47332819-0b16-4a4b-9d3f-cb2a8c68c4bc",
        "cursor": {
          "ref": "47eb9b14-7aa5-4eab-a677-f04777220125",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "32135f42-bcae-4598-a146-17ff788e4f61"
        },
        "item": {
          "id": "47332819-0b16-4a4b-9d3f-cb2a8c68c4bc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8224f05c-1b45-4f73-bad1-aaab7c8acaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c9918-dd97-49a6-b9c2-37a490bb87ba",
        "cursor": {
          "ref": "a5c81f8e-e7aa-44b5-926d-a7288f4ecf34",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7a5c11bf-1dc0-460e-bd05-824091718114"
        },
        "item": {
          "id": "456c9918-dd97-49a6-b9c2-37a490bb87ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5548a4db-99c9-46fe-b497-1af04f767923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5305584-80fe-46b2-b5d6-03ddee0baf22",
        "cursor": {
          "ref": "cd72b0dd-3f77-4b34-9923-4b9aa84e4750",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7bc268e2-1c81-490b-b62c-a0dc2ed9242d"
        },
        "item": {
          "id": "c5305584-80fe-46b2-b5d6-03ddee0baf22",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "30173fc4-6b83-442d-8ee2-d65a32bc8526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd06e456-cc15-4e65-a0a6-5fa4f7032994",
        "cursor": {
          "ref": "f3569c0a-2540-4350-a38d-de1a5532c9c3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d5114dbb-c1d2-4a9a-add3-50c3af92e0db"
        },
        "item": {
          "id": "dd06e456-cc15-4e65-a0a6-5fa4f7032994",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "640da31d-813e-409e-b61d-a81f6e4bad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786e83fd-bebd-49c6-aa05-ba49118bbd55",
        "cursor": {
          "ref": "45f249ce-3bb8-4c69-aede-94302bde47d7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2dba7ba-cc15-4adb-8ca2-cb72d673e3e1"
        },
        "item": {
          "id": "786e83fd-bebd-49c6-aa05-ba49118bbd55",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "29958e6f-8604-4c09-824c-bb0251236d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ad7ed-fcb5-4211-acf7-96c1852c2663",
        "cursor": {
          "ref": "ec618bc5-84e5-4438-ba8a-2fb693e88688",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "585319e6-3fdc-406a-af8d-c2102a73fc33"
        },
        "item": {
          "id": "434ad7ed-fcb5-4211-acf7-96c1852c2663",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b2a33f16-441b-4e11-a04a-7931ab6f384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c0093d-5d8a-43cc-9c24-a11a59abf7a2",
        "cursor": {
          "ref": "8d16eb9c-4013-4a34-b5ef-12d4964fe3e8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e9a17184-deee-4c65-9fa0-95b201f05c96"
        },
        "item": {
          "id": "35c0093d-5d8a-43cc-9c24-a11a59abf7a2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5530bdff-0ff7-488d-833e-9aa0fb8dd5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca836dee-4dc7-4865-a3b4-5aa0083b215a",
        "cursor": {
          "ref": "58ef38ec-d1eb-4f01-bd72-9b5dcd71682d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9ef5a499-854e-4e0e-a77c-c276b825c0d5"
        },
        "item": {
          "id": "ca836dee-4dc7-4865-a3b4-5aa0083b215a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a66ee967-519f-4c40-97b8-4d15c65b36df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1724180-3a0b-48b7-98b0-3addc33cbece",
        "cursor": {
          "ref": "8727b430-0f4a-4db0-87fa-27b9b52e2ce6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b51cbda-c2db-4b7d-84bd-3c08aab47599"
        },
        "item": {
          "id": "d1724180-3a0b-48b7-98b0-3addc33cbece",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c5faea87-0a09-4cdc-9991-e2ffe6f6bf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081a61e8-36f9-4c9a-8345-1276878f95ff",
        "cursor": {
          "ref": "292e4ec7-5f8c-4c96-96c5-fc8539e91b69",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "299fcbbc-0c02-4196-a027-bfdc1efed4df"
        },
        "item": {
          "id": "081a61e8-36f9-4c9a-8345-1276878f95ff",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9394c6d0-a752-4ddb-83ba-a6cc4249ff82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eef37f4-b823-49b8-b54b-8e8ca9ed0b62",
        "cursor": {
          "ref": "cfb81e0c-adfe-41d0-837c-5d94d726d33b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ed976709-04f7-4802-a202-d7e06b0ea54a"
        },
        "item": {
          "id": "1eef37f4-b823-49b8-b54b-8e8ca9ed0b62",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "457b70b8-faa6-418a-bb13-c01554a91be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75facd80-bdbc-424e-8794-866d329def55",
        "cursor": {
          "ref": "4b8622a1-f03d-49f9-9b04-52c449a24681",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13ede756-9ae8-484f-ad2f-9c6900564965"
        },
        "item": {
          "id": "75facd80-bdbc-424e-8794-866d329def55",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "46ebac1d-c946-4ad9-8298-205d8a94d51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe9a5d9-4948-46a4-b703-c65cb6cdb732",
        "cursor": {
          "ref": "65568b76-6756-4717-919d-10c47f683d0d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ed86736a-fc4a-4c8a-9ff5-19d706263ca7"
        },
        "item": {
          "id": "1fe9a5d9-4948-46a4-b703-c65cb6cdb732",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5e23758f-77b3-456f-b88e-83d295e489d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfa23ee-bb7f-4935-a4b7-fa926c041d5d",
        "cursor": {
          "ref": "4bd6c1ee-1e26-4ee1-9a7f-e6612bb6b310",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e2fc8364-6351-49d5-86ce-5c6b8f2fe688"
        },
        "item": {
          "id": "fcfa23ee-bb7f-4935-a4b7-fa926c041d5d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ab47e35-8d38-4709-8f9d-0f789ca4ff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd92a947-5903-47c6-a85a-28c484356541",
        "cursor": {
          "ref": "75c77b60-e632-48c4-a528-106084a79fb8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dfc48843-514f-4f81-b873-b0c300b314fc"
        },
        "item": {
          "id": "dd92a947-5903-47c6-a85a-28c484356541",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "555ef87f-396d-4d53-8494-b59095d3990d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae400628-7239-41d4-8863-169d5564a384",
        "cursor": {
          "ref": "4eea596f-952a-457e-951a-861f059d4b23",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "80c0950b-dfb3-4007-904c-6c261b314cf3"
        },
        "item": {
          "id": "ae400628-7239-41d4-8863-169d5564a384",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a6d06eb-8fea-4e8c-8ed7-db73204ebdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d56ab8-a729-4631-a4a0-2e7afce16aff",
        "cursor": {
          "ref": "da6780b7-0e0e-46b6-aaaf-18054a7c114c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a29a61d8-7d77-445a-bc3e-342ecb561dab"
        },
        "item": {
          "id": "b1d56ab8-a729-4631-a4a0-2e7afce16aff",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3d0b889b-7bb3-4adc-8532-e18a6c926f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14472ba3-4069-4864-8e1c-fb3bbe75c6d4",
        "cursor": {
          "ref": "cd065391-7846-47bd-b6b1-0a7628456342",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8eaa8c4c-cc23-4074-b085-1c43efa7accf"
        },
        "item": {
          "id": "14472ba3-4069-4864-8e1c-fb3bbe75c6d4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6747f73e-14d9-496b-94d4-b5aca80d6a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b047f-160a-4dbb-8580-b0868bcab910",
        "cursor": {
          "ref": "31f889a8-fb87-411b-8012-196a8c0097c5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e0bb99bc-7fe0-43a5-b281-98cd4b529072"
        },
        "item": {
          "id": "844b047f-160a-4dbb-8580-b0868bcab910",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31f2aad4-39a9-4af3-aabe-83d10d4e0aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f037b88f-7bb8-417c-8647-89e0cdea491e",
        "cursor": {
          "ref": "cd5f05b5-d099-4e22-b468-9d7ee15e2224",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d854d9a-0bb8-4da6-aa7b-78c32dc6018a"
        },
        "item": {
          "id": "f037b88f-7bb8-417c-8647-89e0cdea491e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "36bb432a-8369-4982-b86e-4447c5bd696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c451d2c6-77c5-485c-8f8b-e15e044892fd",
        "cursor": {
          "ref": "fb21004c-58d5-4793-82d1-5b38098e4e78",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "50bb78e3-c7f2-4159-b887-a2714d8942b2"
        },
        "item": {
          "id": "c451d2c6-77c5-485c-8f8b-e15e044892fd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "37f80f5c-a43d-4b57-bbeb-2e49504796a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cbb5ec-e910-4ea1-819b-04ea5d30dacb",
        "cursor": {
          "ref": "b36a3bb8-03a3-4552-ae96-69cdd11a79a4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "db6cb0ad-2a16-4a7d-af88-aae9633ab55e"
        },
        "item": {
          "id": "c7cbb5ec-e910-4ea1-819b-04ea5d30dacb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "02a3c289-da07-415f-ac89-c3fbd1c10311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2303430-9247-4ae3-bd4c-32717869cbcf",
        "cursor": {
          "ref": "f7e27b54-c62a-41c9-8724-62487f9f8bf7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd215d60-21b3-426d-8bb0-0653c20ae8fc"
        },
        "item": {
          "id": "a2303430-9247-4ae3-bd4c-32717869cbcf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27ad3f87-88f6-4587-9690-d980472359b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a5e6ac-9c12-4101-9a71-6a802bd27b31",
        "cursor": {
          "ref": "5053faf4-153c-4395-8c72-4a0d287827d9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e7ac11c4-3345-4ef2-a482-6388112bb7d4"
        },
        "item": {
          "id": "a8a5e6ac-9c12-4101-9a71-6a802bd27b31",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "603b3766-ebb9-4c58-870b-5fa0d3f7a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1794f20d-a53b-4f55-a67e-09c9a944aa7a",
        "cursor": {
          "ref": "84131a02-787a-427e-8ac6-fafc9f1e1997",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c2ed75fb-ac32-453a-ab89-fc1d4884f74b"
        },
        "item": {
          "id": "1794f20d-a53b-4f55-a67e-09c9a944aa7a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "537d66ff-9a6a-4bef-a4b1-f86404f82277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b500de-6c1e-47cc-a4a7-695a6be80a71",
        "cursor": {
          "ref": "7e36335f-d1f3-4ad2-9138-d68da3a92e06",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "50017d5b-9fc4-4ac7-a3ef-439bf490c48e"
        },
        "item": {
          "id": "04b500de-6c1e-47cc-a4a7-695a6be80a71",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e9be187a-d366-47a9-a040-5ab14e1dcf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e5c60b-b5ac-4256-b861-e6de71f1d779",
        "cursor": {
          "ref": "4394ed85-1af9-4f2d-b405-b982de1a4c16",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8099d007-90a9-41eb-8e33-c16a62d9c4dd"
        },
        "item": {
          "id": "72e5c60b-b5ac-4256-b861-e6de71f1d779",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98e1b0d2-ee2d-4546-a561-8438aa464e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec8e93a-6c9f-4520-b0c1-3367fc6f51b0",
        "cursor": {
          "ref": "fcb81f99-a1b7-4796-9a72-2c2347959dd9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "50f54ae9-3eae-4c9d-a9a9-0f66e3d59572"
        },
        "item": {
          "id": "0ec8e93a-6c9f-4520-b0c1-3367fc6f51b0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "15d7e862-3478-4c83-8d76-6a2d3cc42780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd11d2c-dd5b-4975-a6fd-a49cbfc15ce6",
        "cursor": {
          "ref": "da350ec8-4ab9-4e40-8972-75f38be2a2a6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8c533b64-4c54-408e-8c59-b2c32057c3d2"
        },
        "item": {
          "id": "2dd11d2c-dd5b-4975-a6fd-a49cbfc15ce6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "07e74caa-c2de-442b-be60-2b05b6b83e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1c5fc-6b0e-447a-90e3-cd4c08dc4c4a",
        "cursor": {
          "ref": "f0bd98ce-8d5a-49aa-8a24-c68fdb03f65f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b9defd7d-9b2a-4125-b01a-7928d224d4d2"
        },
        "item": {
          "id": "8ff1c5fc-6b0e-447a-90e3-cd4c08dc4c4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "46901bb2-ba8c-4185-a839-f11319e734bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539ae00e-07e9-4a18-b3ca-b0155ee6d89f",
        "cursor": {
          "ref": "7c67bcca-927a-4d8e-a07e-6fc2bddfa250",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "885e7a46-f064-41ff-8e74-77149779428a"
        },
        "item": {
          "id": "539ae00e-07e9-4a18-b3ca-b0155ee6d89f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3be176a8-f6a7-4a3d-9b8f-1ff073aa7a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d682fd-b582-4cad-ba64-8f9db9859e1a",
        "cursor": {
          "ref": "737b848d-0ec6-4bb8-a753-d4975749cae1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ce5f73d1-9c3b-420e-a4d8-a2ee1edd5073"
        },
        "item": {
          "id": "20d682fd-b582-4cad-ba64-8f9db9859e1a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b2188869-6015-46cb-b602-a75e4d0bc10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aabf941-d1b3-4241-85bc-6201f3094908",
        "cursor": {
          "ref": "aa5d1ee7-5fc8-4278-92d4-c75b4a1254d6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c92ce888-c658-4330-b8db-132dec714df3"
        },
        "item": {
          "id": "6aabf941-d1b3-4241-85bc-6201f3094908",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3c777227-aefa-4a12-b238-8cf6bcbd24a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a2aded-a0db-49c1-b5e4-6c1caa50921c",
        "cursor": {
          "ref": "d5646a71-1707-4f7e-b365-7857f17574e2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "890b039a-5f04-40e1-b785-2b9d2af32b25"
        },
        "item": {
          "id": "09a2aded-a0db-49c1-b5e4-6c1caa50921c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "385146ed-623e-4114-8fbb-4d329d56a914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8f15f0-27a1-4301-9c82-4902e565c71f",
        "cursor": {
          "ref": "583ef20e-d1cb-4ec2-9167-d00370a8c1c1",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a7edfd22-5a6b-4036-b3b0-9438c776ff1b"
        },
        "item": {
          "id": "9d8f15f0-27a1-4301-9c82-4902e565c71f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "724140e4-2405-49f1-a074-fa026ac292b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ece5b1-9aae-4f17-87dd-ef9ccd44e48a",
        "cursor": {
          "ref": "ec33c59b-7ab4-416b-8010-1bd1dcb48e53",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6347f974-9678-4b51-8fe4-f9dbf4b27e3b"
        },
        "item": {
          "id": "a0ece5b1-9aae-4f17-87dd-ef9ccd44e48a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3dfd897-235e-4e71-8bea-2a679b5ff787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1d1f7e-cf79-47f7-823b-4c35eeade10c",
        "cursor": {
          "ref": "757934dc-2f5d-490b-8c69-4ae4128e622d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7dc811f3-9d64-4bfb-83b4-61a01d21d15c"
        },
        "item": {
          "id": "5d1d1f7e-cf79-47f7-823b-4c35eeade10c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "43c5813d-9ebc-4ad9-a552-7e6ac67c0681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b058f6-8d9f-44b6-8933-501426407b55",
        "cursor": {
          "ref": "86dbcd78-5fbf-4aeb-81b3-4d2331341f95",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a65374a8-917f-48f3-bbbf-e38b8038171e"
        },
        "item": {
          "id": "86b058f6-8d9f-44b6-8933-501426407b55",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a29af5c7-f463-4017-879b-a6e01a7eb6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac833981-ad3a-4ff0-83e3-76485f5b8209",
        "cursor": {
          "ref": "56809cae-cfce-480c-84c6-22c979ff6e3f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2e7a73f6-3e3a-438d-9f63-67e487359fb6"
        },
        "item": {
          "id": "ac833981-ad3a-4ff0-83e3-76485f5b8209",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "58312dc1-ebc9-4677-bfad-109a6b98c467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d9ca2-efff-4683-9a61-f750895e21c8",
        "cursor": {
          "ref": "fb5264b8-67ea-446d-a883-b725867b631e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4d5ce94f-b49b-4f01-b04c-023fbc11ca28"
        },
        "item": {
          "id": "328d9ca2-efff-4683-9a61-f750895e21c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d21040d2-7eb8-4e5f-b243-895c12048afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b25050-8cba-4ec0-a3f2-ee93e194edb1",
        "cursor": {
          "ref": "47b7847b-1157-4978-bb27-237dc5d9a7dc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "693b550e-0edf-4c93-a7b9-a67303cf202c"
        },
        "item": {
          "id": "e2b25050-8cba-4ec0-a3f2-ee93e194edb1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2b386cbc-1c3a-498d-9d30-13f4460b519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93225f26-1ea8-4841-a77f-7405f614ad00",
        "cursor": {
          "ref": "1f4408c0-a83d-4acb-8481-31dbb22250ce",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5e9f4e04-e23d-4d00-9baf-d8a67a97951d"
        },
        "item": {
          "id": "93225f26-1ea8-4841-a77f-7405f614ad00",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75669513-5fd5-4416-b736-c1ce8c7b8631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde98d60-912b-4004-be9c-cc29d0e1f6e4",
        "cursor": {
          "ref": "9e7b56cd-758a-493a-8915-f5067eb7d254",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4dd4c8a-b53a-4437-93b1-973e988c0555"
        },
        "item": {
          "id": "fde98d60-912b-4004-be9c-cc29d0e1f6e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "87420fe9-a486-4397-88b0-b70e74e6c5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f6591-ee96-4ca9-94d9-47e484ac61f8",
        "cursor": {
          "ref": "b406676b-f3c7-4e0d-8f4c-921b249709f7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8fc52d92-9915-46a0-9e9c-dad05ca7092b"
        },
        "item": {
          "id": "c70f6591-ee96-4ca9-94d9-47e484ac61f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2451fced-919f-483a-8f02-ce47c5cefe44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7da4a1-96aa-4c68-bf6b-5208a36ccc1f",
        "cursor": {
          "ref": "8f825ead-aa46-4613-b4e5-91b50e005c76",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d8a3f6e3-1777-4316-b304-0faed610c700"
        },
        "item": {
          "id": "1c7da4a1-96aa-4c68-bf6b-5208a36ccc1f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46391b15-41ff-441a-84c6-d17ecbbdc4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe327dc-4526-4b7c-abbf-5bb440c79cd0",
        "cursor": {
          "ref": "8a1af1d6-fa7a-442c-b84d-3fd4fb0e495e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b10ee428-f669-4b5f-bd33-b74b4789fe76"
        },
        "item": {
          "id": "cbe327dc-4526-4b7c-abbf-5bb440c79cd0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be19def4-9c8d-46ec-84e1-6c2f0663b589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9337a99-e47c-4f69-b815-c1133350aee5",
        "cursor": {
          "ref": "ec3f142e-8513-41f6-b222-7f26a08344ad",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc6c7f28-655e-44d5-ad2f-5927b2f75689"
        },
        "item": {
          "id": "d9337a99-e47c-4f69-b815-c1133350aee5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b3730f20-5ff2-49bd-be05-8373bd19552f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f05f88-d62c-44c9-ad5f-630b5c25d83c",
        "cursor": {
          "ref": "1ccfec91-7abe-44a5-9eca-2053c20c706f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bcb17cb3-44e2-40c5-9824-65d0a9a6cb6d"
        },
        "item": {
          "id": "f8f05f88-d62c-44c9-ad5f-630b5c25d83c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "86ff8d7a-0092-4687-996e-42f14bec52db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c34a105-aac2-4d73-8361-f91cd3a56bde",
        "cursor": {
          "ref": "573a8008-faf3-49d4-8a32-67bf8b8551b2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d7a5491d-3362-4796-bac8-319270fdd01f"
        },
        "item": {
          "id": "9c34a105-aac2-4d73-8361-f91cd3a56bde",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "05f79a5c-dc3a-4e2b-9262-3d4be57f1fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271db8f-420d-4954-8f3b-20c3cec847f9",
        "cursor": {
          "ref": "a359d090-8330-45c4-8885-6a0c719575b3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d8536ad-9737-47f3-8068-8d19af796a66"
        },
        "item": {
          "id": "d271db8f-420d-4954-8f3b-20c3cec847f9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9d6d9f86-7756-4660-bdf8-c29e7cd7daf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a9bb89-b8cf-49f1-83e7-46d0e9f83ace",
        "cursor": {
          "ref": "1f67b42e-22ff-4a10-a458-4e9e5d6399ab",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1230c9d2-e51e-474d-afc1-6a40dedc3aa5"
        },
        "item": {
          "id": "b3a9bb89-b8cf-49f1-83e7-46d0e9f83ace",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a4300bc-18a5-466a-9c77-3d7d6525c46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1eea9b-bec8-484d-a481-f39faafba926",
        "cursor": {
          "ref": "23e7e7bf-5443-4248-ae38-7af2b49c33b4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6d845969-5504-4fa3-b925-af7429ee5467"
        },
        "item": {
          "id": "dc1eea9b-bec8-484d-a481-f39faafba926",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "41dfcae8-d9fb-42b9-aeaf-492cdc43ecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f95205-e680-4d15-8159-2384e31f6478",
        "cursor": {
          "ref": "384c2092-dd49-49ae-8555-64028e16ede3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f50a91dc-470c-472f-bb40-efd13d637de5"
        },
        "item": {
          "id": "75f95205-e680-4d15-8159-2384e31f6478",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "562c1ea1-6e0d-4233-a144-9fb915f00113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace0a4a1-39f2-4d63-bc96-50f1b600e6f8",
        "cursor": {
          "ref": "16b78b0e-786b-48d8-8773-0226d703ffd3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5dd99cfa-4d61-49e4-825a-398050738859"
        },
        "item": {
          "id": "ace0a4a1-39f2-4d63-bc96-50f1b600e6f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2f5faa04-7735-44d2-b474-4c59d25f54b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0051b2a7-43f1-4276-82c1-a78c4422b673",
        "cursor": {
          "ref": "1d3652e3-7c50-4f2b-b3e7-a5271adcf3a9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "04ff60a7-d7b6-4376-b3c4-ec8df56457d9"
        },
        "item": {
          "id": "0051b2a7-43f1-4276-82c1-a78c4422b673",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ee3f6a6c-b94d-4a1d-8893-6416f0f16003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750fcacc-831c-486c-8e95-bc669f1ec2bc",
        "cursor": {
          "ref": "2bd3c114-e94e-4f7c-8d63-46cdbce94692",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a87fb647-d99f-4e60-b324-3ff473e22317"
        },
        "item": {
          "id": "750fcacc-831c-486c-8e95-bc669f1ec2bc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c5f9ab3b-77d1-41df-bbe6-d73311512bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4493082e-586f-42f9-8066-6bf715b80886",
        "cursor": {
          "ref": "dea01efa-320f-45b9-8817-1f17628d6488",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "051bca8c-435c-45cc-b1a4-44effd00529b"
        },
        "item": {
          "id": "4493082e-586f-42f9-8066-6bf715b80886",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b423de07-110e-4bff-9bb6-6dea12f40592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5318512c-8fc2-4d9a-bfbd-7b08c3956c8e",
        "cursor": {
          "ref": "7daf785f-ba20-4962-907b-a6861677cb34",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "13cedd67-2394-4cb8-810c-5f04cf2bb9eb"
        },
        "item": {
          "id": "5318512c-8fc2-4d9a-bfbd-7b08c3956c8e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b21ae55-9ae3-4dc6-8dc5-ab4d10f50980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3511cbc2-6856-4ac5-ad16-274987ccfb07",
        "cursor": {
          "ref": "12d56628-5a7f-4dc4-a417-2bc07286d319",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7c4acb05-e53f-4b6e-9c01-a86a1f22f5dd"
        },
        "item": {
          "id": "3511cbc2-6856-4ac5-ad16-274987ccfb07",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3e6d8ce0-be8a-4a82-9776-900931b860e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cc6b20-3661-40ad-a425-cd9048c26ba7",
        "cursor": {
          "ref": "53a8724c-b5ba-4d67-bc8b-9d05957e995c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b158f79-484e-4b65-948e-d2ae7b879036"
        },
        "item": {
          "id": "f7cc6b20-3661-40ad-a425-cd9048c26ba7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3e146b81-e8ce-464e-adac-a20f05dbc060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad75f60-2a09-46ea-b14c-0a395bdc0ea9",
        "cursor": {
          "ref": "a72129d2-99a0-462b-9442-6955fbbf4093",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f94e3fb-8478-4bd8-be62-c33492d666b8"
        },
        "item": {
          "id": "7ad75f60-2a09-46ea-b14c-0a395bdc0ea9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f896330b-7f39-46cc-92d1-0fd9e4b81cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c695b581-53f0-456c-a979-f3272cc2343c",
        "cursor": {
          "ref": "6ad460e5-e542-45ed-b3cd-4746d2d0a51c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4cc9409a-9574-4ca9-b749-1b40a741f9e7"
        },
        "item": {
          "id": "c695b581-53f0-456c-a979-f3272cc2343c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d2b9283-8441-46aa-bb37-1612c5484f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb19285-0d01-4f22-bcd3-9461f194e44a",
        "cursor": {
          "ref": "312c2a0b-3112-4b58-a4ef-ccca6b3dbd77",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6de7ed60-8ac2-479e-b63c-c28962869ea2"
        },
        "item": {
          "id": "bdb19285-0d01-4f22-bcd3-9461f194e44a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d9c36b6-785e-4d04-9272-2f30b9b65ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5b25ad-416a-4871-9126-986097bf623d",
        "cursor": {
          "ref": "8f85cb94-e82e-4431-8cc2-b56d1e545e46",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5cf06a41-6672-4b8f-93eb-6c6f5e125b27"
        },
        "item": {
          "id": "0b5b25ad-416a-4871-9126-986097bf623d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ae5e078c-6cc8-4a02-a782-d8be6f925d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ac6bc2-70b9-407e-bd38-3ca0a89c3add",
        "cursor": {
          "ref": "ce44ebdc-4f3f-43a8-bd24-b0d5d4051b44",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "14648776-1d56-4310-ab36-3154cf376654"
        },
        "item": {
          "id": "87ac6bc2-70b9-407e-bd38-3ca0a89c3add",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cfa19b21-6a05-4f4f-888f-1ad63e63b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f35e6d7-6f3f-44c8-a266-62e1b81685e7",
        "cursor": {
          "ref": "0cf59c86-176b-4274-8d80-3ceafd31d779",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e791941d-b7c8-474c-a980-9948233a7dcf"
        },
        "item": {
          "id": "3f35e6d7-6f3f-44c8-a266-62e1b81685e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6c124f09-6af1-447f-be35-b52cc0005d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c86113-ab2c-4e9e-b570-c7353bac19aa",
        "cursor": {
          "ref": "faa74927-f9ad-4381-9e3e-43a50d69ac23",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae1aea41-9325-4f12-b2c9-9775c8b7d820"
        },
        "item": {
          "id": "22c86113-ab2c-4e9e-b570-c7353bac19aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e41ada29-d1d8-4fd5-ac62-1f55770465d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e9b761-b706-4bbc-96af-f580f5429b21",
        "cursor": {
          "ref": "6fe2defa-d156-4249-b566-8bf5f335b790",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60fcbe83-3b48-40a0-9872-349fc84c3434"
        },
        "item": {
          "id": "73e9b761-b706-4bbc-96af-f580f5429b21",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b4c0dd6-435e-40cd-a3cd-b44d4e32dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9976ef8-2b01-44a1-874a-1ad5800be672",
        "cursor": {
          "ref": "b371f119-fd98-47ed-89e1-b1430c2751a6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18b61dcb-fde6-4b3a-a745-56e29ae1e4c5"
        },
        "item": {
          "id": "e9976ef8-2b01-44a1-874a-1ad5800be672",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4433a353-2f65-490e-addc-d260100230ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ffd034-ec32-45d9-a4b0-6445b4d729ee",
        "cursor": {
          "ref": "d6485e2b-a95c-404d-8aba-ae1bb93a02ad",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cae76c2e-3c49-4f6e-afa5-f5db49adedd4"
        },
        "item": {
          "id": "43ffd034-ec32-45d9-a4b0-6445b4d729ee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d230f547-354a-4b6a-b834-32147fb8fc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5906be61-bcfa-49b1-bafc-a10d5ba1a940",
        "cursor": {
          "ref": "799712ca-16ac-447c-b988-e8f3250205a9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf0f1267-e302-4c95-bbf0-cef3543dae0d"
        },
        "item": {
          "id": "5906be61-bcfa-49b1-bafc-a10d5ba1a940",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7e26d4bc-3ed8-4682-a16a-2f3857b33b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d0c4b2-4e28-48fb-a023-0d97a2b15bb8",
        "cursor": {
          "ref": "d71c895d-c975-4f8e-bf2e-75a7e4926e54",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7c4c95d2-70d2-4e16-adb0-b1f18eec94de"
        },
        "item": {
          "id": "52d0c4b2-4e28-48fb-a023-0d97a2b15bb8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2a34f501-54be-40a5-ad3d-889e9afd5c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450ca29c-84bd-429b-88b5-744c5a5fdea1",
        "cursor": {
          "ref": "e9060d4b-53be-4b5d-a884-54154fd2714e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "df7593a9-426e-4205-b5e2-717b04ab6bd4"
        },
        "item": {
          "id": "450ca29c-84bd-429b-88b5-744c5a5fdea1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3a965b0e-d67a-4b2f-882f-b995f2feba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d1ca69-926b-4008-86ad-d0da00655a23",
        "cursor": {
          "ref": "773c094e-d783-4260-a73e-97f618539068",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6598c28-4dd4-4b5e-a7c1-2051e6526c3e"
        },
        "item": {
          "id": "04d1ca69-926b-4008-86ad-d0da00655a23",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "519d3aad-fa72-4a3e-aedb-ae542f5acac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf3585-dd9d-45eb-a9f2-f4d4db178881",
        "cursor": {
          "ref": "db1de6ef-364f-4acd-b64b-a60d83a3e46a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0e1f81e8-646c-45b9-9fb9-9925a99ac032"
        },
        "item": {
          "id": "65bf3585-dd9d-45eb-a9f2-f4d4db178881",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "61c91708-d071-4ead-a8cb-22c65b947403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efeac6b-b4e2-432d-bdf1-961b6862f4b5",
        "cursor": {
          "ref": "d0e6c110-3259-47ee-871d-7ef5e2826b12",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "40f4316f-d390-498f-9d80-21bde0c5aa19"
        },
        "item": {
          "id": "2efeac6b-b4e2-432d-bdf1-961b6862f4b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b015672-6740-448b-9a9a-d1405004c454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55fde5f-5808-4eec-9f38-7d969d0d62fb",
        "cursor": {
          "ref": "f271f6d5-dd58-484c-ba81-b09c904a6bf7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "321636d1-f320-4558-8b82-864b5f4f2085"
        },
        "item": {
          "id": "f55fde5f-5808-4eec-9f38-7d969d0d62fb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "451d372e-6838-4b5e-b231-911798329c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d320e70a-c8f6-4269-949c-1677727b5935",
        "cursor": {
          "ref": "3db5ef7b-6689-4296-9dbc-11289e7d2f24",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "df0ba223-22e5-4e29-a447-6a5fcd963973"
        },
        "item": {
          "id": "d320e70a-c8f6-4269-949c-1677727b5935",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "65674861-4171-499e-9d70-b9c781e460e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ac66fd-4e0c-4ccf-8f68-a0fe23bdd869",
        "cursor": {
          "ref": "609b0a7d-a7af-4f1e-8823-1eb02c6eb37d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3348cda7-48ef-48ee-9858-46f86c6dda11"
        },
        "item": {
          "id": "a0ac66fd-4e0c-4ccf-8f68-a0fe23bdd869",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "efe058e3-8fbc-4d63-b13b-5d64b5ef69c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640d245b-302a-4a82-ab3f-d0ff0289a044",
        "cursor": {
          "ref": "f552cacb-2b07-4d5a-bc33-98448f08d60f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a9f2e38-1b74-47e5-a1b7-cc88d0d3f0f9"
        },
        "item": {
          "id": "640d245b-302a-4a82-ab3f-d0ff0289a044",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "370a67e4-197e-4e43-bc50-bbb9f8f5ca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d35ff2b-e5c4-4767-8e09-4cd7a97ee852",
        "cursor": {
          "ref": "ce6d77a0-e95a-42a0-82f9-f5935e04a2c5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc4f8ef2-3241-484d-a1ec-a0206b185fed"
        },
        "item": {
          "id": "5d35ff2b-e5c4-4767-8e09-4cd7a97ee852",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a5c6ec2e-73b5-400a-b39e-efc6405761f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9380e3a9-a310-4868-aad6-feda36cc0f9a",
        "cursor": {
          "ref": "3e1214c0-5d15-485e-81be-6c5e0f1c1305",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "755c51d7-d08f-4b4c-b1c1-4226f885bdd9"
        },
        "item": {
          "id": "9380e3a9-a310-4868-aad6-feda36cc0f9a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f408ce4d-13f7-4685-8559-e7328013d859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed3f35-7d2b-4ad5-881b-338cc0736619",
        "cursor": {
          "ref": "9c0d7072-33a5-4ebe-bd5b-2755b30d345c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "08091999-f332-4e9f-a37d-2dc21b5af1b8"
        },
        "item": {
          "id": "eeed3f35-7d2b-4ad5-881b-338cc0736619",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "21765971-87e6-4819-a645-bb7c190028ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359bc384-c442-4341-bf5a-c8dcad4c25c0",
        "cursor": {
          "ref": "35b3b30d-a553-4025-a54d-74877f64a5f7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6d0b7399-9d6c-42cd-a17e-f31f06cc798f"
        },
        "item": {
          "id": "359bc384-c442-4341-bf5a-c8dcad4c25c0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "86d2f46e-8eac-4c3e-b113-a558c5a2b1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d1a904-0db1-48cc-ba3e-eda443868626",
        "cursor": {
          "ref": "f7d8602e-5e2f-41db-ace4-587f60a09f80",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e5f85581-c700-4481-815d-d7e3cc115192"
        },
        "item": {
          "id": "f9d1a904-0db1-48cc-ba3e-eda443868626",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9bc88679-aaf2-4390-9d1a-ca7327329757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e784b657-a78b-4242-8b7b-7505ab8ba158",
        "cursor": {
          "ref": "e55077a2-1ca1-47b0-9ede-768c478d22d2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c961904-b0f5-450f-b04d-9b9aee4bf45b"
        },
        "item": {
          "id": "e784b657-a78b-4242-8b7b-7505ab8ba158",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3116f03d-4c88-42d8-8bed-4de2b322ad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "3da25761-e341-4e4a-b380-33831dcd6bef",
        "cursor": {
          "ref": "8437f05b-d10d-47ee-b626-78c63df73d4d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e7235be3-1fa5-4ecd-b2e2-119fbfa8aabd"
        },
        "item": {
          "id": "3da25761-e341-4e4a-b380-33831dcd6bef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7032938-c329-43b4-a8d0-097e497ed888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "6f0dafce-5177-4b50-bc3d-a06eda68d559",
        "cursor": {
          "ref": "56afb3d9-06c9-4373-9c7b-92528c2d39a7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb281de8-d8b0-48c4-8a35-764279b368f8"
        },
        "item": {
          "id": "6f0dafce-5177-4b50-bc3d-a06eda68d559",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb1e2d82-2b65-48ba-b2cf-728aaaa378c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0dafce-5177-4b50-bc3d-a06eda68d559",
        "cursor": {
          "ref": "56afb3d9-06c9-4373-9c7b-92528c2d39a7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb281de8-d8b0-48c4-8a35-764279b368f8"
        },
        "item": {
          "id": "6f0dafce-5177-4b50-bc3d-a06eda68d559",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb1e2d82-2b65-48ba-b2cf-728aaaa378c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b6845b-ddb6-4f1a-9e22-46e26c2a5c14",
        "cursor": {
          "ref": "88493204-9361-49a8-8c71-47a6169731e3",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d33e083-8dc2-4b4e-bbcc-4aa125afe3eb"
        },
        "item": {
          "id": "55b6845b-ddb6-4f1a-9e22-46e26c2a5c14",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ace9e04e-1135-40b2-8475-bfc98e109eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb33c4-7472-49b4-a59d-3176b6e7ab76",
        "cursor": {
          "ref": "540c7e03-8d6b-4a8f-9e25-ead30f92e326",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "21987557-a3aa-445d-98fe-e8fcf1d1dbf0"
        },
        "item": {
          "id": "b2cb33c4-7472-49b4-a59d-3176b6e7ab76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1995a2d-03ac-45ca-8e89-ab77617c828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}