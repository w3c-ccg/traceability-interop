{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3bc54654-9c8a-4c88-bb4b-667ad3fee3d5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "974e4eab-3b42-43fb-bbe1-5a7f681a7dd1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89a34dfa-a001-47bb-bcb8-5cb8d9f66fbe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b48aa689-2ddd-46f3-b5b6-494050307fb1"
                }
              }
            ]
          },
          {
            "id": "abec084a-69f2-4ab5-87f8-70dbee841c44",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2beb83e-1fe3-47da-9f6f-0aea681057b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2695b450-7feb-43fa-8131-345275d18c20"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "42d1c460-550b-4999-bdfa-7723d864aacf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a1b66672-5d6b-4e54-bfe9-9028ed3821ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66555c71-27c3-48e0-b4c5-9f9ff2f9ea13",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b4c74c4-4699-4996-ab71-9f34c442dc4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d6f466c-02bf-4f29-91eb-b078f2b23f3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1824e261-e20e-4849-ae2d-ce00529a1161",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "541a671d-6260-4d2d-986d-bbe6fd97438c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0493b0af-5bf1-4013-bb96-6096c3b137fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8b208d9-2ad5-491e-9c6d-e2d9eb9e1dd0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2045011-4668-4f98-a0e4-3f266474f168",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2c8e63dc-0a8a-4f99-84e6-f5c78dc4f91f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c8c6dd9-d17b-4a02-9831-f14d37ca4538",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68642116-ea9d-4079-8f27-4045e96d3559"
            }
          }
        ]
      },
      {
        "id": "a33d5383-3a59-479b-a52d-d184c856ad08",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ffa9b559-0ccd-4139-855b-de1853872ae9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a51d9fe8-29a2-44b9-8040-e5557ad44b68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15506ccb-3026-4a0d-928c-14637fa86459",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94cdc5d-ac34-415f-9735-6198cff787db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f92da2e6-f2cf-4815-a15f-8e5d946a6ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415ca2fa-4a83-4dcb-a94e-f11ccca477e9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb8307-5161-4b48-b2d1-3202eb6f05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6c996f2-73dc-4b91-ac60-9c5319698063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923ec50b-ed97-4ad4-b095-ae0e144405d9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b45e05-f18c-46d0-b730-e57020dc4a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c12789a-e692-4bf0-a449-4eb1108ffcdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62a4413f-a075-4db3-b877-8a16e11b4ef2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbd63988-3d7c-4a52-9fb7-5a6f5a6cb4af",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc318570-261d-4d75-9db9-ee3730085fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c48df4d-69e1-4480-b209-13379cdda972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d30e4f-b212-4c01-a1e5-3225f5541fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db3e4fe-5071-4066-bdc3-993852603e60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bfafd273-6ade-46e4-b86e-4fd6efc09675",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c314dd8-af14-48d6-8936-1d722f592eb3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b34bb2d-0180-482e-b2ae-565de45fa690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f4c4700b-f8e8-431f-9377-4b2b893fef1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95adc5b7-7bd1-492d-adad-55f94de90b37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5bd14689-aa8a-4e9b-af3a-f5a4f4c14bd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd9e29c-3592-46df-b633-a5ae6e81346c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e51a863-1307-4190-b6ec-2717ceb72390"
            }
          }
        ]
      },
      {
        "id": "303a168c-dff8-4b8d-a5e5-8c67f9cbce22",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c01d6543-342a-44c7-82ae-ed0b835f594c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5092245a-01ba-46eb-81c0-21c4e2113662",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "346a7a30-d15c-461e-8f4a-c732b1e56fa2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe44d38d-e993-480f-ac60-3510a86a17a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb503c7-657a-484d-931f-5699c21eca7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae70d3a6-c02b-4b5c-a5eb-91fdb46a3cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "878833c3-425b-4742-a40f-bdf737432bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fdfa14-3fa7-4f64-b1c3-be7b2f95c4f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5576936-ba51-4353-87ab-4693de0e0221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c11e3ee-7175-4dd8-9c1e-123638e2d66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09886027-2a6d-47f2-87bf-9b751a2acee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea3fdf8f-bfad-4165-8cb4-bd82a9f757d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719551dc-115f-4675-b40e-b37ddf013944",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35997c00-e40e-47e2-9486-2a5e4d25fd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657ae11c-5b82-4f75-a12b-5b6f156121cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea1d084-25a1-4420-af89-92675ff3cd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8b58be-c1bf-4023-b792-220719b17c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefa1114-0ce8-42b2-ab9e-4400b2e7ce9a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687b0af9-bb42-4d5a-a5f9-74aa11f3cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df07b0b-c28b-46b9-bafc-d690ef0f0666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b52ea0-7eee-44a9-819c-2cb7978f948d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3353831-81fd-41a8-a07d-3e664d213a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d9b34-4bee-4416-bd0a-2ba98b6183b9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ef09b-18e9-4872-80dc-a843f14d7291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99862fb1-62ef-4c62-8c46-8c4bd723f65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e395195-4849-4c01-8066-db5e536d951e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad5f7f8e-a48e-466c-9384-47d48ce83c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c90185-779c-4038-9360-5d8832fc9d5d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4064d4-c106-453b-9ffa-9bb4aeb69138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05238324-284e-4897-9a97-65a54665ee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261eafc1-18ca-480f-9c88-dc2b675444fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4909486b-eb55-40e2-b669-0f363a4b49e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0a3a9-2f30-4db8-b6f4-464273c30d41",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f35f527-6495-4abf-966a-f59905c2826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fc1ab6-5295-4f8c-9a5e-b828692424ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5cf054-ebc4-48dd-a579-cc5fe9911777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9ce4fa-93a2-4431-a9ac-122717dd4c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a31e25-305e-42ee-a969-7bfacf90d397",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85928481-72fb-497d-a921-7b6f7fb0a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7244321f-0c1b-406e-9c9b-b1cd2e15bfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972e17a2-c7c0-4e10-99b3-916fe75c7128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49ce9d49-6d0a-4ca5-9ae5-7a4d2581f53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec14e9f-fb90-4f54-84c1-5853c3fc2461",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31102309-3a94-4b6d-898a-cd6a7656f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728b3b22-ae2d-4596-9a61-ede0fd63db9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9d7cb1-2db3-4f87-b3e5-c2df747cf037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0199558-616c-4c65-95a1-bf658a453336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e65ae-37d4-4ee6-8a86-b1f3dbc6f985",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1fe731-683a-43c7-95e6-71b653870212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf86dc9b-1371-4ff0-8d6e-dcad64701d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9e02be-66d5-4817-8139-29b8a3d439de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89667cd7-834a-4cf1-97d7-6ee986c8f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c826440-5cf1-4cc1-a9bb-a8879d2ec676",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf63bcd5-f8de-4d94-b70c-660c60791c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685895ba-0c07-49d1-b899-05a1d0b518b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d441c95-322d-4f14-9cc5-5fff3eed433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c7f38c0-a31a-4155-9a20-2483e68197e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034b7e43-782a-4456-9a05-e653532394f8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38373bf7-ad31-41d2-b4b4-ee8b95703c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29a679e-65c8-4eeb-bf4e-3cead0101069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6423310f-62a7-42d3-908f-ab376cbbe499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15868ce-c848-49cf-8d65-201c0f087c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d691d02-9cb9-4468-b4fd-3f2c77f75e03",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeba481-be91-4c33-9f68-81a59a0675dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8c45b7-0381-4b93-b1c5-ed95e5417986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be5654c-42a4-4508-8d5a-baa036e5dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac27e41c-ac61-4231-b4fb-8f8a0cd9737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f24577-c553-4308-add9-1e61d45b11b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648e83ad-adfd-4700-b866-20bf45ae9f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1d2858-f973-46e1-be17-9e2e9743cda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819c1ffe-59ce-46d7-ab1c-cadf9e35e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc6a8cb0-fc69-41f2-ab97-6c6b4a0c3853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb930bd0-e95b-482c-b6d2-b0d16a29c8c2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbdb210-9d2d-4ac6-885a-f29668eaa3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820f812e-eb62-4ce8-884d-dfe6596f7e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e4351f-5927-4d33-b1c1-67a90eff5fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcf6ae99-cfc2-455f-9264-22ad4d790bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354d489-52e7-4999-88aa-297af10f59e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb29c39d-65e6-4ada-8c6a-4e60b30033f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f8a5e7-7d20-4238-9b46-c9b7c04e33a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0feebb-e8d2-476a-a7bf-b056cf0e1992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9003dccd-9cd2-4255-924a-afc796afd112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82804692-619d-49c1-a615-1a9af9a146a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef166652-58ea-48c5-9d75-b33034b72403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f59dae-66f4-4a7b-93b2-e5e41ea84046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98ac6f8-217a-4149-8ac5-500d5364b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f104cec-18aa-4f9e-ad0a-efcc8b694010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01a4ef8-8dcf-42f7-b581-b437ae943e55",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c947e8-f7a1-4bef-9491-f6107a7aa139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbef506-cbbb-445c-852b-d6161e058db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068b67a8-47c5-43e6-bd46-a6a78a8a0668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1025ff-e94e-409a-80a7-09c294a7249c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fb629d-be30-4c5a-9e8b-beb741adeedc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57998611-935a-4d05-923e-3164ee17aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0419ff-35ac-429e-9280-9b0b093f0109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0823e9c-710e-451d-9b3a-97797b0002de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "565f135a-c029-4956-b775-8631fe5b059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13a92b-3786-4185-808c-97e33400eb03",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0611cf3-23c7-4620-837a-39ed8b916626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d160f466-519e-42af-819d-11ee9641b408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb13320-f32a-42ed-8495-ed8b2109aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9d56eb-55ed-46f0-b319-ea9e2254255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86150692-1e1a-49be-89c4-eb1ffc30f500",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173046cc-9d6a-4b19-80c9-c65fc17a972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ba6084-142e-4f2d-a96c-81c75955b7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875be346-3669-43df-905c-8609c668613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c2d22d-7804-4888-9091-4d743dcd194d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5389936c-15ce-439d-9726-5d4e0c013517",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e45fc7-af1d-4f8a-b954-67235e625d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12667844-da45-4106-877b-9c9e1818ac42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49904ada-e5a0-4525-9ff4-9e9753a8e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3241ec4e-3ab9-4fda-9686-cbb4afa1b7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33a6f34-4c98-4547-9946-4338346e0fca",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb134bf-d96b-42ff-841c-5b1a5dd8c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a00b722-85cf-48c7-bd13-a52d6fc8ab61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd4daa4-ef55-4b00-9bd2-9f4b9eab7a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69e9dbd1-2f23-438b-8682-10c536b84cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49a27d6-3eae-43a6-a1c1-d9fdaac1e075",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10362d96-266f-4743-a70e-15646468f1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f70c5da-7419-47b1-83bb-d33d1988fbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bdaf3f-1449-4581-ad9d-29e2470d297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da606883-8421-44a7-aa45-2ae989e657e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ea9487-e024-4c7b-b0ef-f8bb605b3b95",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5989c9-9b51-495c-b9c0-e5dcc1935556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a44f46-374f-4241-a8ef-bebd7d953dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9f8a32-4e2d-4327-9500-fe65dad7bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f371278e-50e4-4498-982a-3dc7e8e5d636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf6b99-0fb2-4d2e-8831-3fc7ec565741",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2ca121-bdcb-4cfe-affb-812be626fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03a8f01-014d-4579-8dc5-f1b5322712d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6b94a9-6d4a-471d-aa0f-86888202e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a14669-d70a-4b05-bff1-3dcd16f1f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7236d774-7702-4ab5-b6fc-f368d624ac7f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f7c1fb-c27b-44ac-9152-fe23845b5d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d94e3b-07f0-4091-be62-3e1d58c7c358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd670973-bc1d-40e2-91d2-276ab73321f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abdc7e4-7655-48db-ab42-77a86a759eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1100ab06-9079-48c4-ab78-82d315f98a73",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0b5f0e-5dd3-403d-929f-2587c161abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3135c4b4-3a85-4360-af52-a804eb24d74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8a3af2-4955-45b2-bf0b-17b488ce72dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7bfea5-75a3-4c95-8074-9b1cf5adf4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c425637e-0c1c-462e-a6c6-78fedc0053d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35e19db-4ddb-47b7-b299-112bcb2a4a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6552e2-f424-4cdd-9ae7-04404429e4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ba5f00-6024-4766-94a9-729d33d4c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38f2d66-bfd5-4438-969b-b4af6317c5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473d9217-c8ac-48b1-b635-9a517660056e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c800952-924c-4d37-ab26-0213bb44bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101a691d-48fd-4316-97c1-8f49932d406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccec898f-7274-4e8f-b83a-ceb6ff390a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b9105f-bd6c-47d4-bd77-1bfb15b60f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a2fa42-4d21-4676-940c-0f05ec06ccdc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd8e9dc-0337-46b1-9043-7b17f8bedddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc83ee3-596a-4621-9ab9-b254a6016686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467959b8-8a84-4e04-9b45-a3892523ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbfb09a-6537-4c5d-9200-553e64813160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1205f4-7556-4ddd-9cad-b70c64538b08",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072746ed-2edf-4762-9899-f3d36898d02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b660d28-0d55-4570-bb65-c2eef71463ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece55a8f-3231-437b-a4ef-222bf42df246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00e37c3-8442-4bf7-b9c3-f97091c48e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578d8f4f-eb03-486c-afb4-03d418d84c21",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a226cace-59c6-46a6-b21d-e005e3d1b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece41c3e-2393-4354-927b-9e17c452e396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c4d13f-6f27-42de-bd71-a0cf4900fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9f3f6f-e44c-4ab1-a451-49a12adeeb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392ad9b-74ef-4dfe-b37c-12f010d3ef5e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbd1045-058c-474e-b3e9-645009ec04d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0c128d-f7c1-4b19-9865-1ae09f7d1fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17db87df-cc67-49df-8f96-421f75b2768e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c46ef37-61dd-4250-b88f-67697453e12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f589575e-c25d-4156-86fa-0ab6c54965f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d291c0-df8e-4fe6-921f-27418c049b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b673cc-05c6-443f-a723-3ebb8f6fab06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81650c0c-9d5d-450b-9f01-00d347848e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "84393d91-3f60-479e-815a-ffb294ba61e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee922ef-d34e-4759-ae53-26d649448b01",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8a11ab-8e1b-4454-9cbc-cea545abd02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74759acc-35bf-473d-8f93-25cdf4b62f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6a1be3-9602-451c-9f17-cafb228836b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d486f297-042c-4e5a-86e6-28431c01e6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8629f4f0-6c30-461b-94b2-885247caec01",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3d34e2-e039-487b-8180-8548d560502a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a267e6-831f-433e-a3de-fecf50bcc25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96bd91f-275e-46ec-a220-718db987fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17abb3fd-7dff-4e61-9c9f-211d087395f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6db4e8d-4b55-4064-8f97-7524778351fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ef8d16-6861-48fc-9607-c3661c327027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17d3701-c030-4a5b-9950-9532e79f4955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8c163f-f9cd-4658-b2d9-36943c5eea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e0b52e-4d05-4e4a-870e-c727d4415bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f15e84-6264-4024-a78a-b93cf91f06e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb892d6b-8109-4b1d-aceb-10a7cffe738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727adb60-56fb-4fc4-b5b9-40328a2b7404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a82b12e-7f3b-4e60-b9f3-5a88e0de8a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabe464f-8654-4941-8937-26021eedbab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8033b27a-8660-4534-b9db-cc671039db65",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4fc9af-0520-45c3-8d47-808c72882c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ed523e-5a7f-4aa6-ba44-f70df45f6e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52eba4e-b163-436f-9016-ddd1aa3909eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67fa2f2b-7f32-49f5-bb01-496e795e66cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb9b4d3-51f8-4346-b936-c7402174f2a1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cfac6f-7002-44a2-bd48-ae4f36388554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c25ec24-dfab-4282-b27c-c315f1661f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5965694d-06d9-47f8-847a-7c8f7380ee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfa7df2-4732-4c5f-b4f8-73fd9b4e336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76e7913-5b52-4470-9f15-1a1a0bdb5b42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949beba2-4c22-4c75-88b1-03b1517b4ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a403f86-424b-4a5e-b753-041331228a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edb1969-eb98-4f2a-9137-cab253ff0ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e8de5440-2b3e-4aa8-8127-a62ae78b1114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1125e016-b38f-4391-a6ed-c356b9c9a974",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8340f4f5-2be8-4fcd-b8a0-ec8bfdbae87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324f5d6f-15db-4f78-aedb-16b6928f8011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2fa5c-8f1a-4943-a5ec-bf8a1146abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b640a8af-9965-43cc-8d8f-c1ba42fcd584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61d7e98-f3dc-45d8-9130-96e90b1ee6e5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de6541-9236-4ef7-89af-8b260ff27326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f26975-8fed-4291-b8ac-927633d42d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4091643-534c-4c97-a960-92a90047bf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0f3201-1cad-47b7-9708-937f6031ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956ec97b-bf2a-447c-87cf-7d096a38e737",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0f3d6a-92ba-437d-909a-a8b70d3e47d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f16151b-0ecb-4de4-8404-731a4f924bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c63c8e9-9a60-462b-b3be-c5302785c160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e29ae8-bfae-4124-8320-f1e9893f9f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49ca97d-2384-4968-9456-f922cae85e7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925adaaa-8984-41e9-83ef-b0d440ea081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65fdd4d-8f53-49eb-a747-6cb3db1231dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c7aad6-07db-49e3-b539-35b82622e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccffb1f-5c00-47fe-a536-628cd37d1d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609e4be4-1c41-4a73-b2aa-0e1b3f5dfa60",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb82109-4324-47e9-ba46-fe67c10c9aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e168feb-9a0f-4ff8-a0e5-76260590af2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e6de3d-2034-4204-b438-baa9d4ec2018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb325a95-199c-4053-9f0c-375d6957f96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2e6623-a95b-4c61-a248-1e1e774a1470",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834dc1f6-9577-4b3f-8464-0df7cfa0d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5c94a8-b4b3-4e3d-8fae-6fb922005e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b66db08-9765-4c9a-8af9-8ffb8c0371e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71339285-b428-465a-8d56-3e460370858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701db84-c570-489b-8688-ec85b02e4eb2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340f0aa6-670d-4924-a298-ef3895eee8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38df0c02-b994-4a50-b68d-2fd221cbd395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403a848-7a27-487c-a7b8-99bd62c837fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbd4890-aec9-4025-b88f-f3d399c5c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be939095-4013-4207-84eb-a9b2afbc515e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95ae5a6-64a4-491c-8683-501aa0f10c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0badfa9c-0081-45d5-b0e3-0e1e373e3051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deadb1b-8cf4-4a09-9f07-7f808c691c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc24bffe-1e1a-493b-83ab-d075d68e1109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3694ca1-d90d-40d7-994f-7738ed7d92c0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc5ad8b-a81c-40f3-ad5f-643fda3c3857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5c04ca-ef1b-463f-a374-f9eb14657808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d35d993-1b48-4dcf-ae1d-6d4c14143a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9a9fd0-16c1-4b34-809f-5ba3f80e3c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572dff10-45a6-40ea-9f59-86260423863d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4a90de-430b-4b17-95d2-b4ff895d18c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff4f273-f9bc-4d77-9d1b-0407c6fc7b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca91e906-0aed-48a8-b930-35be9becd023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7402f0-cf7e-411c-9c3b-8c05e057e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5502e187-4fa9-4ecb-8351-548f45d65628",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad916717-c3da-4b2a-8794-2a0607ae89a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6147d5d0-dad1-428e-a624-9801654ef862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6877b6c-c0c5-4e60-b808-cf34fd213fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ab8c59-bd90-43d0-8851-da2de5fba09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f352716-9b9d-41a7-8e94-ebda42974cad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3ddc1a-7c4b-4438-9ca5-453964e77e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbe4125-0d25-4f0a-8560-902c205ede90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e77ae2-1c10-41af-ac00-8e18ef70330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6c74d1-ba1e-44b8-9ec4-b912a4e5eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e6ad8c-5a26-486b-875d-71826312e645",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96347b2f-f139-493f-8030-b588457ceb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8afb5b6-dc51-4697-8b9b-fcdbb640022b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d90183c-606f-4838-9fbd-b72929d89309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6f6668-a660-4bba-bfaa-28b960f79964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cb4afc-5431-4923-a4a7-88bd8c39bc56",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b886132-162d-427a-bf12-f5350ef7c659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f12ba6-f5c0-46b1-bec2-0153cd49193e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d5ef46-c12c-4853-8669-e007c3ca5b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8ab593-7b30-4b10-9ef9-598204f3880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214970a2-dc7e-4f91-a2eb-fcce73b0c4ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a815931-b2a9-4a2f-95c6-a05c8f7c19c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23cf119-3b53-4ced-afd9-8a1b06d779f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0de31-8d7c-4564-bd41-fdfb9eb512eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "201feb37-c46d-430f-a557-20144bc523f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff31f1e-9d9a-4316-bdb6-0a02c5299c52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd3099c-03d2-42ef-8fae-307a0c81294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e33145-7d2d-4541-9da5-bc24534249d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacc8fdd-bb55-4c19-b552-3d3a340fe027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d2673c-9d74-4398-98a8-eb22b74d28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38245f58-a404-4ac1-a022-6d75ca060578",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b4a15-3173-4796-951e-c2898bc45d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f7b967-a7a9-4217-8c6a-690046d074d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a5239d-1744-4ff4-8ee7-6e8ea07da187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06e3031b-a850-4437-885b-ac013170e462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8fbf1-b65c-40fa-9fe7-ce9ae19b0e1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ebb2e7-d6a1-4330-9b8a-7df1c33eac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc1086c-7f84-439d-aae4-7f6470c042ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0920aa0b-1518-474f-a737-992b81313afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38cf7367-d7df-4689-8e51-031af493612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc1411-6ea4-49ce-b583-e076ec1428cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f50b43-9b93-4225-b436-f4e6f461ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c39ffa-d1d8-481d-b9ee-1bb3896024da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1c8eb2-98b0-4fc7-934b-be1a82797524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb36799-730b-44e7-920a-e4008b6e3572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa31569-a24d-4135-b471-eea69a84454c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e890f8-9f5f-4e09-9275-7328e973221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf92bc77-984c-4783-979b-0f3b2ef56705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7407fcce-1f2c-4f5c-8787-a28c73ed4524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6885301e-1dd9-4621-a0a9-275b1fa85463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e40a45-bc84-454d-bac5-ffdc0f2ce20c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e28a916-18ba-4eea-b753-381f22d87e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33dbab4-f2c4-4f28-8a55-53afd9bda754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab39dc30-904a-4bd3-aef2-73e4c836132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21007b9e-12c6-4686-9fdf-a4f4b9c14bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149e30d-fe7b-4baa-8a4d-d93389cc86da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f0fd31-5b1e-4884-87c6-34bf51e7837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e945c-5c39-4ce4-a4d3-6959e69673fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cda47e-392d-4d19-9748-dccdaad5ae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "befdac29-5dc2-4ed0-b997-e4b60a436438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edd479f-2d0e-4431-910b-03784e509324",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e526c1f9-9325-45d8-abf2-64cc4fb3816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8ad68d-3f81-47fe-a67d-a28b809d1d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89ba1d-e500-4ef7-a63c-387e42d297de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0152a4ac-0195-4acb-9f54-dc7916bf4e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84970f38-ba6e-4b40-89dc-881b46483950",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93c5a21-307d-4a00-9e25-ca36ea4ab66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbd9b92-84d1-4aef-9051-6794d267b1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15979f4-fac4-400f-85d6-19bf7a172496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e960f8f-1bce-4bf0-8294-c8021d8dc5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd42dac8-17af-43b4-8c7c-4ea55e4a6de7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fe6f6f-a665-4504-8b70-934eb1fd0476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a740cb-f962-4c18-8032-22d2f1deb1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f0619a-7343-4fa2-aedb-4ad1134ad7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aecb8ef0-df9c-49fb-a9ff-94d3f70f5885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4cba7a-3075-493e-a27a-47971a382b0f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6336fa-7acd-4a40-9449-9af4a412fe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48592cf-8cb1-4915-97c1-f4cd874849a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a32595-7079-4bf4-97ac-c579f167b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f364ff-5b24-4468-a957-30dc4e597e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845dd3b-dffd-4116-8920-c3101835f20f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdbbd78-9f23-4715-977e-3b87db99a64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10375e3b-592b-4c20-bb92-a526147d0aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1993f1e1-8a2c-426b-a5b3-8f92f061eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d03a6a71-9975-402d-b4fe-f37dc84cad6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a6a0f-bcf6-4a35-9d51-f4d5cc833842",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b2739-9ff8-4259-bb5a-860e54838dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc25a9e5-d26f-4cee-b8ef-6753d5d571a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25733ec6-17ce-47d8-a786-4ea8b185becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42287a8-4ab1-4223-822f-7b4febaa9419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06f5797-8676-4949-b4f3-a861952f9ede",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324b7b75-5d41-41eb-9430-36aee160f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454de105-d5bb-4b79-9ae4-766c3658be4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62b16ed-be10-4608-b14d-ba41bbfa5683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "461ea395-a8ab-4475-8557-1e5cc695ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fdac2b-ad19-4be8-b1b2-881c8d35b081",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29136a26-e340-4c2f-b272-f9ffcc747892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88267b05-8c05-4f38-b24d-40f4b8981027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b0a670-6491-402a-a065-2536a51d192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d484a7ee-c6d0-4a3d-9bb3-d5a5cab6575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c723566-0f91-402b-9966-66dbd887f8b6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82330f28-fb33-40f6-b83c-d707e5385f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c1b750-f8b2-4f7f-9afc-3235184b3a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d70133-80d0-41fc-ad08-44017fd262de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "485204aa-002b-4e96-bcaa-d0e709f37949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3bcac7-9804-46dc-b8dd-a9d01a436aac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b77c93-4109-4107-8060-c74f78a71388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b18ef7d-7ef8-4b27-9442-485989cc4ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2785f833-3948-4f29-a86b-15eb6ac84fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22803260-89f9-4380-876b-dbbd49260467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73272158-1a78-4a4d-8ce5-0a16e1fc6699",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ab000-c609-48e1-99e3-de08d6f6b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a56ad-76d5-49da-9c38-feb75e3753fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3b25bc-bb7b-4baf-8534-524b8851904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fd1d82-319a-4fa3-93e4-6406b820a101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4c73a-a3ee-49bf-9c62-a65697276684",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d349a68d-9794-4d8b-b79d-90759436c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35da35e-cb72-4127-aa57-4e62517ecfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded2f3c8-ce48-4206-a5fa-659de4238eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d375b8b7-fcb8-4f27-a584-5dd7d656a122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7956f2b9-10d5-4276-9f4d-2d889b21f024",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556e903a-7e22-4531-8a2f-5724fb2b25af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72f1ba1-e8b5-4e9c-805c-2258788ba2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c370d-5999-4bc8-8f36-406320818706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66009469-e802-4e50-856e-e7a9e3360a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f97cd2c-053f-4586-9208-64c4cd7a36a1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06db3d66-d59e-47a8-a7b2-8c918bc4cb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ec8bc7-9e23-4812-88e3-8de4d1bb3cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ebbb8-7695-4566-9aea-718babc2640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8093d516-2b2f-4e07-9db6-3a752d8d7d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07f225b-7dff-4507-89c1-1c073ff03a24",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31df3a40-692e-4d7c-ae1f-5f9833aae292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1ab786-dec4-4b40-b26f-6d2c4b40c2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eb1e16-623a-4a23-b9b8-fe7f0b9133bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "179d22b8-029e-4f89-a3c7-2b4e8a8f7325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b21eb7-a3dc-44f2-a5b4-fda80c37668e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2878aed-0dfb-4383-af7d-9fed8e996dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facc4501-39aa-487f-9257-42cd9fc66cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d093be-496f-486e-846e-5293778701e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "309d4288-03ad-41e9-875b-ae0ca8f6ac35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07062c7c-39ed-450d-b1bf-25505be0bce2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422b2e52-cb1f-4f00-916f-3d97e7c0ffca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f33fc3-d779-450b-98d9-d15fab746458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae23787-3d7f-46a6-820d-8d71151c16fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67de036-664e-4e8d-b610-76d1849f9e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583a9768-ee77-44ee-8101-2199a830b1d5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a1eeeb-aca8-4897-9b2b-2f021597f45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b1c6ca-b8cc-408d-b338-c89480dad777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503cca4b-0e80-4cae-bc3a-b0121562efa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22038c89-3f0e-42ab-9cdf-ad95adaf5ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba18e362-e0d5-47d6-a9ec-79b8c0b09f97",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a428bd-8b78-40bd-9d80-f919870244ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acbefbf-484c-433d-ad47-f162acbd0f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b16e8-0ac4-43cb-b409-fd88ec4eb648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7457ce-7259-46e7-93d8-d9ba8bc0db2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7705cb0c-f837-4a16-83ad-5918ca5090af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cc6598-44dc-4c89-88df-1c8db909a400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dac2ec4-16a8-4c91-9e92-7283010ff8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382ec87-8e40-4b21-9f2a-a22058d19e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3382b10d-7db8-4e44-a079-1b44e4842cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd4ab7-0342-4337-a4c3-c4a879028b5a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15a4efc-1094-4f06-a4d9-546ff934d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131d029c-f495-4c10-bf4a-e512fcd34320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94434603-a238-4a22-9224-22abd1174ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55b0cdc7-4beb-4640-8bca-e1bd3c634f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee46f472-396d-46a2-9360-deb6cc7ea5f6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8f6a30-778b-4c09-bbca-847521563e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4275c1-e823-43b5-b8dd-454ff53f90ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec737a8-7d6e-4dda-a0ab-b4ee70169672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b30cccf9-903a-4e68-976f-1c6cef059d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffe1976-8f8a-4a76-8de3-f8c6d9bfe488",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed18805-3662-4143-aa49-d50b9294ef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d58979-b554-445d-9716-70ebb99c5e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14af24f-f6ec-475a-a08b-409deadd9567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2321da64-6826-417f-993f-9f549dd22f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226d0ee1-e9e0-4206-a037-4eb1f4080495",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b9f99e-3d2d-4ea2-9eaf-081a03cd99a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0718ee9-3aac-43aa-87d4-29198a11ad6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc17864c-45f8-448f-b8a1-e53bd4511854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e772815c-15b8-4d33-89ef-184d8c3af9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9287c735-b17d-4efb-96ff-dd9815953868",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24042aaa-d989-4178-8ad7-3ea3c99d4d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc176e-e3af-49c8-83de-b09349a06d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a626201-3476-4f8d-abf3-16975e89418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2167f201-4433-4fe4-99f6-36361885aaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ca3d1d-1515-4065-a3ab-9a2f50d8ee0b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c54f8d-1fc7-455c-b941-8ad5040f1071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0de01ea-9829-4f5c-8565-2c4b36f2357b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1992c5-821d-480a-9958-68add0f6f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1096039f-f102-48f6-be27-e09806ffdd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b9fc1-11fb-40b0-9db3-0340ba52f465",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423210f2-b0b8-49cf-bba2-8d49bdcecf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c0f205-8ad5-4324-bb39-58d2f11facee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7811388-d1ce-4f72-80d0-4daabbc2df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dc88a5-2c03-4190-b96a-464db1e03828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8085d6-9421-4686-b211-6c4b5d30a28a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1945ee-0c41-4b4b-8eed-be71c4e67668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7d057482-5025-43b8-bea8-22577fc44b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59757cb3-79e1-41c4-b673-10cdafec486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a140119-89d5-4657-9d46-35afd1429beb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebd1caec-7f33-415d-b907-977874a4340e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9355365-2781-4717-b136-be337baff6d3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea17b1-c0cc-4833-b4a8-0b95f716d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7866e2a6-561b-42db-8051-2b8b34eaa404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b4db24-a2b5-4199-bc8f-2c6d038d846d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6d5f563-b678-474c-b531-dc8da9144fd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6327ec15-118f-4373-a7ec-8cf8ae1faae8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ac52938-efd9-450e-9fec-147165a2b9d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce1d1f04-66e5-4097-b6e1-caf12735738d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2d6e8b2-e968-4471-bc86-ea685386703e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb6ae748-8efb-411d-b96a-af95b14d958f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21ddfd97-a99c-4ba1-a364-b8fac6c27aae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26f9c51f-85ca-43aa-b48c-47f457a7010b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9a4084d-9ed8-4b5d-a4f9-ae9e66d4fb62"
                }
              }
            ]
          },
          {
            "id": "974752fe-f189-46ca-a15e-ea278fe8050c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "239d4f3d-f2fc-48cc-b8f3-53df4b738983",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f1421614-47b6-4fcf-9010-8116ec03f293",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28efbe46-24fb-4a3e-8b07-5edbece96da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "65651611-04c6-427b-b4c6-16b88d174906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87229f-e7f2-439a-9030-2279d62f132f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1f338b-4eb0-49c2-883a-6541d7b38fe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e4eac9f-9875-4eb9-b312-6799db717772",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88370894-aad9-42ee-a842-b948bd476553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "947f15a2-8bfa-4295-830a-9168854f7a93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a6d2e4e-50b9-4054-886e-8d4c83680e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08660dc0-d8e7-4fa6-a489-a299a4997bf0"
                    }
                  }
                ]
              },
              {
                "id": "e05f8883-0128-440a-856d-3becd7694c70",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "286ddcbb-77da-47e2-b081-81a75823c988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1eca36f-916f-4228-a3d2-c464750a6f25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a97e5dba-79d7-44f2-a5bd-e33ba83fbc40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5872afd0-7a18-41c5-b33e-9e2f597769e3"
                    }
                  }
                ]
              },
              {
                "id": "855e9f46-6921-4998-8ab8-3c0439f6b3a4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dafd22a-7e2a-46e8-ae59-189080c6ce65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04ace694-dc11-4dbe-ac89-69298f561022"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fbacd6b-f7bb-46cb-89f5-6752f5c4aeb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b46b236d-d5f2-45c0-805e-ea19a27a1290"
                    }
                  }
                ]
              },
              {
                "id": "5dfd355a-13dc-4f20-8ae3-b62215a20ddd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "434208ba-a855-4409-8027-76218a7b1cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd6809ed-39ea-4982-8217-8480806170f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8d50b00-1353-42c0-8a09-7f23c9c87686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7f94df4-8ec9-45ba-94f9-94444b95c190"
                    }
                  }
                ]
              },
              {
                "id": "c897da97-a319-4e79-bac2-094466ee6a4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8450ac7a-d04e-4dce-8abd-1ebe35d2a4ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db85e1e-c9b1-4e18-811e-410f13f44f41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ea751af-7fd4-44c2-9149-9677a2ff2a45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c9b45887-64bb-4b74-8a57-febb37cbe533"
                    }
                  }
                ]
              },
              {
                "id": "83708d07-f265-4371-a5ba-fd52e7a53bc8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc7e513c-0aa5-4868-b4d5-025aa89cdfa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "885bcd35-2fb8-4d13-9e26-b2272414b981"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "995f271f-1082-4415-80f4-c7011239b9f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d7a276d-f4b8-4430-a63a-fe9103288b5c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3bed094-244b-4c59-895a-58139ef92a04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "528b06db-b54b-4982-9f74-05dcb59411eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0837456-2495-4464-a4da-5bc1d0cb8f0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a3ee3b3-eeca-4deb-996e-c4ec277c2c15"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f23fb00e-3ca1-4e5b-bbc7-54ac06c3986a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "696ecd4e-ad7d-4fbc-8289-9efb7dbe45a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d711bff8-c325-4081-a8c3-decabb53c762",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "860d17a5-db4b-4f8f-b96a-265f5d3203f9"
            }
          }
        ]
      },
      {
        "id": "d5302e5b-7928-4497-9ac4-e1ba7036d4b2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e7322ae1-f276-4059-82e6-6e0931f96faf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ece03450-80fa-4eec-922d-1a5965845432",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "060d7024-fc17-407b-b24a-6d642fc73172",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e929d0-9cd6-4fe1-b3ea-ae3eef510bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2b5ad6-1286-4a13-a79e-85d39a495485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92933f1a-bfb1-4b7b-b4f2-4eff98312576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4cccb5-c930-424b-9145-d4cff1bb07d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b351e564-2398-4cd7-b330-50311d6c8671",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2274dda6-0ab9-44f1-b2e9-07958a1071d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fa3547-e331-49ed-96cc-339b439f2ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517621dc-0e4b-43e2-9973-5335ec141a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db240f6-ba8c-42d0-87ea-2f7439eb4080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a4d46d-c6fa-4a81-9174-c242eaaab1f4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266de156-9f40-4076-9f3c-fa730d5bcca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0225f-b14d-4b30-a2bd-a8ff629531a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7516ef88-9b60-4c36-a856-f4b7ff5fbef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfe9a6e-0683-400f-848f-a3800bd789d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab3085-5086-4934-8455-c2086ed831bf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc610638-8c0f-41b9-a1b6-b708e12523d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93358ca-2033-4520-90f7-6ab50a73d4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab7bb6c-1ca2-4f0a-bae1-46359053e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c787ad-eda3-4411-a3dd-8683e529aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b12a78-4b60-4d33-9237-45d33c534e1b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9310a0-5ffc-42e0-aa43-b23bbd88d1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cb154d-9454-4e09-a3b6-1b674bc7dd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36b5976-a41d-47e9-8405-a5009862d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "371e15ec-79cd-469f-82f5-d9f1a96c6abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c4fc1a-f8f7-4a31-b335-923d4b7ab265",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4af204f-9bf9-45e5-ac0c-a5eeae2a32e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819c21d1-fa66-4687-88cd-32d0ef6697f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d1ebe-2b00-4cf2-8957-d4c23fa912c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31bc229-6640-43c7-9726-5b84f8c52de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ce699-f4bc-4a50-ac80-14c03ee5ab9f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcff59c-8fc7-40b4-ad2c-8b4a80f69416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bfafb9-2a1f-4ac7-8975-7273acaccce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644e1a72-7d63-4603-938f-ce33a1053abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "125342d0-c201-47e9-9846-1373a7802a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af166174-226e-4575-9977-f2d3d57f85e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0ad8e3-3821-428a-b633-38007b9a47b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a33394-8179-4bd1-a17d-13161aa03a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e99582-83fc-414c-9ced-0f7a870521bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2e4629-c632-4e7e-95ba-6c13602a2679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b990fe-03ff-4f85-91d9-05eda6d11411",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcabe5ee-cfbd-4081-ad36-ec8291adee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a78ccff-76d7-438f-b1a8-9be659660a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6d624-e4ea-41f6-985e-3260cf4f1745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4046cc1-a045-425d-983e-43d68d63b6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554822e0-4508-4c53-ae7e-19791d6b5b25",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac9ee2b-9725-4096-9e16-1f8b7afab7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d940dc61-8f31-4103-bf56-205b2e68d1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e2f076-3784-47f2-b1d1-b84b8d76379f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc06b2e5-c37e-4ecf-a0b0-85bb7a6c0184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb952b85-42d6-467a-9f7a-bbd4e29eb7ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede6d940-0ff4-4beb-9f26-998408547d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410a3166-f7e0-4178-aefb-93c68f212d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95eb959-3d5c-4809-8b80-8cae6b26efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a523571-db35-4a4b-87b5-b5a0ec60c62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac66afe-19b9-42a5-96f8-fa2984416916",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61de3b7e-9801-452d-abae-cd51217a884b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7769b6-528c-4f67-ba35-5d5d0ab62ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6cbd39-0d68-4bb5-8532-dbe1d4cb7a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2adae531-efe2-4575-b935-4aa4f5cca727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bea40b-e2d7-439c-b62e-7b91b95030d0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4da093-52c5-40e6-b8b7-831006231291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427eeadb-8bef-4475-9efa-94ab3d8984bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66485e8-2520-4d59-8ec4-3750b279abe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb07387-7faf-4b2f-a35e-aa01466e076e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270cdd71-80ca-4b47-aa16-c1df91e1f3c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e06da4-e022-49d3-a809-d90f70f66475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2bc728-dac2-4b46-bf8a-8725d8416178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07509e5-1766-440f-919d-cfd9bd85602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "198a0fe4-3513-480c-a959-4c5b256117c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e6c9e-389f-4945-9f8d-6421dce1d52e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23350d03-5a72-4f19-aa30-c3db5ab47422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbff315-36ba-4241-b49c-3e39415a31f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b9e0ae-e298-4f2e-a4ef-285c747f2507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc937f4-724a-4fad-9214-7918156d9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34901150-b8b2-408e-8e6c-676e9d5b3f0f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa3ff95-8614-41a1-b6ac-0e5044f773ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845a65af-016d-41e1-9723-265ec5eecc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daa58d1-34b1-41c5-9f9e-95d0d25fe76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ee1511-a425-4b6e-aafc-1bbe078ed27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb60bcd-a916-41d2-af95-a1d00f1fa866",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb11a17-93ed-4ca6-8023-f2a817b0ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad817102-b445-45b9-b324-fca559ebbbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b04c3ce-dfb4-478e-89a9-a9c6c9795d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53acadda-0233-4059-8738-e4670bd71960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5bf0b3-4a4a-4c93-bfce-d86b1ae375ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333268f2-8c47-4257-8f39-c84fb51d0bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f63bb74-67d8-4f7b-9db2-6c6419fe31b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ee14d8-2cc9-4372-b1c7-0d7b3643d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eef774e-7104-430c-8ece-aa09bdd421d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1059d3c1-abef-4187-b84a-8232076d7c10",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d5af7-a45f-4415-9be4-eaf3886c2f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be316503-735a-4704-8be9-3f3b89b112ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72a08e4-2770-4351-b7f6-9f58e7512c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a88e400-f618-4205-b84e-d959c292344d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5419db5-1595-4fa6-aed5-e2c948d0e9a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5101419b-58ea-4c8e-8130-0e862290ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc01ec7-fa9e-4fc7-8868-734ab108405a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6721e08-ec83-4f4c-aa73-1d5a1cda0239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d93b1b3-5bc0-446a-b1b7-36b45943b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4fcf3b-53b3-4588-a63f-849140eebb53",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0cde77-eb88-4830-88af-c9deffc418e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7c82c4-9d31-4021-bdda-83e0ea1751bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d6f41-cb24-4515-b5b6-61b4d123461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca1c956-d27c-43c3-8397-c9dfe5666197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f0ab5-a2ff-4dcf-8d49-df38025585a8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabc105f-93ad-42b4-a589-dcd3ae8439f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396e0cf1-be2e-46d0-a28f-c0e62c183863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aeb979-4a09-4497-bee8-f5bc3839ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddffa66-355e-4bf2-9465-36ab8f5f6684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c00f5a-af1f-4f14-9e1d-d062554800a0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1d1574-13a6-4e6c-85b1-550b88e423ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5835d5-cdbd-474b-86c7-7ece8d6966d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5b9408-14fa-4d75-a4d4-ff8566c209a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d404fcd4-e86f-43ad-87d8-934a841d44f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5198ec42-347d-4ec6-bac3-31f657c04bb8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20726691-4ded-45fb-bce9-09c6b1927f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c88f7c9-34cd-40fb-8855-332336665560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c533355c-0449-4cd1-8a3f-b078f07238a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65d5c25-7534-41ef-a296-7d49c3ccd678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda5c902-4275-4ab6-9689-e2716c22a741",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c710a8-0ee7-4b38-91d4-44f46896eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8782d2-678b-4531-a982-d409a2e794cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c49c107-dd3b-4c49-8161-83fecf3dd998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97dd6128-367d-4a1d-b5e0-8089f503d04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7962d206-da48-442b-b115-acdbaf5de38e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4166548c-cf03-43a7-84d7-69d8ea9882d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445fea8a-daba-47f9-b20a-ccabc59619cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c473c00c-d21a-4074-8ea8-7df9078d66a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0efeb161-2e6c-406e-9c4d-8d992f1baf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8218156a-b32f-46be-89b1-f853fe943505",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba621f-c825-4fa9-b87e-3df65220b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5432a000-1487-460c-b3bc-50a76cb95aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8059dcda-f43d-482d-b0e4-356aa0e51df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25733e2a-0b59-456c-abca-43d6893dbc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b950aa-23e7-4971-b214-5d822c9cd998",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68bc8e7-feac-468a-9fea-4e778844c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77850e47-7897-41b9-9a03-5c0968168413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed24466-bee1-46b2-9f7e-31b08a4ae92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b49c14-aa8d-46ac-b34f-3b7aa8a6de9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8a3787-1ec5-4af5-b519-6f4ced598caf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276f1c8-d40f-4fed-813d-be65ea2d7364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35d5205-4883-439a-8404-829acb1cff83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53561e0-c5a2-49ae-b624-54f8591aedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0d9a99-6e3a-49be-8c08-f436f2f6ce0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b48e0b-1e48-4dba-b5df-6d8de29e0a7b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1a4163-e394-4ce8-bbd6-b5a91ac6f913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcc51e3-6233-41a2-9993-286d79f645e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e74a4f7-bbd2-4d68-9c75-e59781fee44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488e1258-2771-44fa-96c3-7c57f18eb4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2f397f-ff24-4fde-b089-b356635efa69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61a1b7-3928-4100-bd13-a015eb8ba60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163299ba-4059-4ce5-a248-4992242d01fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca40f925-6302-4c0a-bdea-c8e20ffdbd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667a2e36-92f4-42e7-80df-543cf883e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde9f74-3c3c-419b-a074-2bd944f1aa3f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4496f1-fa88-4a69-a313-84a8c3994b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d21c5a-5494-4d3a-8fdb-035687f25a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd2a7fd-b3a2-4265-ad20-67f076b9ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afeb1059-4e33-4ba7-a61d-05ec6a3ab504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa710e4-b7fb-413a-a567-63d1e9a1f97a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bbd9f3-45f4-420c-a81e-5ab6abdc155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881dfb0e-19f8-4c66-bc2d-5dfe33e313a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb64dc-beaa-4449-a4a6-4c56fcd810e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "446a68be-320b-4821-b51f-bb13d5bfaa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7078ecb-fba5-4031-9fa0-d365beb84de8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bd14be-c01c-497c-8762-87ffc8094428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250914f1-6e5f-4249-89b0-ff7bdc582899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e513b63b-e849-4548-bef6-e8529f81ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b008e1e-3414-4cfc-9fd4-596e34997bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19847f56-89b9-4088-ae3c-573a3f5d373f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44ddaa6-0776-4cdb-83fe-1e9f3185e99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c82d73-f6c8-496f-bfdf-8e01ccdd2ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24d3bc7-14c4-4109-b82e-713b82303f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7044b83-eddf-41d1-872a-c82c0441d6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26652b9f-4d9a-4967-af99-a65b6381af4f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5cec6-6181-44ea-a64a-a007f860aaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92993179-366f-4870-bab0-c5aa1c9174fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a8e625-716e-4ffa-ab07-d144837d89e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bc2b85-e27f-4284-b4bb-86132bfa0857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056a59ba-671c-4522-b691-e7871a345d4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad4102-8fd2-4b97-9783-a790194d1869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4794a276-bdeb-4b83-944f-6adcee1f247a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0455ff-fba6-496c-990e-9afc4f584afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd68b1b-713c-4f11-8366-269e3b82032f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ab9f97c-7e63-415d-a280-1c47db48ce90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf65d4bd-17e5-4fec-9887-047b7170e22d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15119e3-021a-4469-a996-4ea8313dad6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c798081a-5744-4b7d-a848-5c0275d1f1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7983cee-9721-4287-a3df-a8fa72ef9372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6510b89-110a-4040-a149-4acb6fafc1e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9c219bb-7d7e-48f4-b786-2fe82bbf4ac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b815ea5-6b5b-417e-a88c-aff2fe4a4a83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9198720-3d9c-4ca9-b6cb-5f38aa4f3fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166c646b-d207-433e-80ba-f4c6844e633a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6d928e0-d3a8-45e2-9395-94e10b3c7a46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dd3b72a-d87f-42a1-bf20-0fc508b6b8c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27663ae8-8071-46a3-895a-176e664435b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a52bcac3-15d0-43b1-9317-5bb4318a9e2f"
            }
          }
        ]
      },
      {
        "id": "2506b703-d332-4354-88c8-b5f59f3e1a3d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e68712d8-9646-4642-9582-d624adb3febb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90162363-2d65-4da1-8a42-b39007321813",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bda559f7-8712-4943-82fe-405c61bc639f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46198126-ac9a-451f-9603-e8cfcc9af597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b026f8-f20e-42b2-b163-ea9ae8ab24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071ae19e-5342-44a0-b321-c7dd743b7e33",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614b231-05ee-4098-8791-2f757f386f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95419f29-673a-484e-9d69-d9c3da508097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3060ba-3da8-41a1-bd19-f7fd9fe19db3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75eef0d-d414-47e7-a29f-ddf53c581834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bca931-ea49-46b6-8285-82d1a03202ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6103b4f7-f913-4148-a3f2-d53be6fa8b45",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a939014f-435c-4f19-8f1e-153ed46ca7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb87f20-8ef1-4a91-b969-dc06ae4c578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ef71d-0f9a-42c1-adff-98d5df1ac87d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a6addf-4646-4fab-ab53-4f03ebe92a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d73081c-3a63-4072-afa4-1578787a68a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea666aa-8d19-4cfb-86df-0b8b89a737e7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657accc9-a444-4a0e-bcef-5fb87cb31e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1896b8ec-6384-451d-a817-681f5ccd2848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b2afa4-ffd2-4a1c-8ead-40576e6c4d74",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4466bd-49cf-441a-9ae9-1299f9f84291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93072f9f-1149-4db8-beb3-70332d8d568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11adcebc-4734-4506-9c69-544fc86dd5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82eccbd3-8cb2-418d-8653-82f3daeaed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3034c6cf-76d4-4bb2-abb5-c714c117c0e3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786f54b6-c057-4a9f-9a78-25d13fd49bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf1e860-9447-47ac-a46b-8118ee9c586f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791cd92d-f6ac-4ccd-90d3-29fecb976961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b8243f-c739-4f91-97de-668bbfcbf6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074403a1-9dde-4e84-a4c2-208531dfc32a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a8b8a9-edce-4a79-a3a3-c6cf2de79b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6451ce04-fdcb-4a08-812d-3969c989b0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff9f07-a3d7-4275-8119-d643e4e3811d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57125af6-8059-4aaa-9eb7-de370e5d2ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85c564-3af2-4a3f-ab34-252ae0f2abe7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b6e293-d6bd-4cee-b884-fbb838d3c755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918eb23c-ad48-4472-839a-edf2b7b090fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb05cc16-e2a5-41c9-a495-d24b24fcb5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11709bf-211a-4ead-9109-ae2506ba21fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c2d0f4-d8fc-410b-b749-342a527789ca",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d44060-a536-4744-b7c1-c149266832e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4542f8-e078-4ea6-9206-2d607ca8b5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6ad9c3-d34d-46a2-8bb0-33d20beb8b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f02a8d2-6137-459e-8e3d-d388e617ab7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db3c03-a01e-41ff-848d-ddd040858d2c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb15ae21-ee74-40a1-94e6-c74efe31934e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090e76ca-c4cd-4258-8cae-bd4669600b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143a685b-fb69-4ed7-b092-20d3adf72d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc3b4f5-f1cc-4d43-8e95-9bbe81baefe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f8e4e-c45d-4526-b8e0-2575185c3237",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9514077-c865-44b9-b562-95dc32bb47b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87de42e6-6126-4df7-b503-d0f5d48df3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a89430a-08a0-45ac-bc7c-f434ca85bcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2413f733-4d64-4c1d-886b-62784fc9788a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb89805d-e804-429e-8846-f51c42b61fd0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903dbd21-e627-48de-b721-275e947db5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffda530a-a9c6-4a80-812a-5a06d54b8182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fb4d21-9b94-4f6c-b7f3-5d7299ce2d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fe36ce-537a-47d0-bfe9-3be9abf6f7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7dc3b-db39-484e-9fe6-91a5e704b154",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebe70e-1f76-4176-8504-944c22c685ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16f9f7b-b2ab-44c9-9f04-379b15cfb8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae00d7a7-271c-4075-813e-0aabe753f8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f960c42d-6ea5-4b5d-9e6d-fc7ff70181fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf51a471-e4e1-4a1b-9aa6-c320cdbd2bac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d4bfd-72d6-4a5e-86ee-67b944c38f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be12551-c662-4d6b-a594-32d956eff9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e60be-e861-4a7f-8259-80c600dd4fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6159c54c-7873-4d5b-971c-35cf08cb455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140c6b38-aa6a-4001-b52a-a06183f01db4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1b3b2f-7e1e-4ef8-b2ea-69cbd751c9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24be58b7-e0f3-4f62-a999-44e6c17be1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406c3e29-90a2-484f-a758-57ddd5964dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acce3686-e578-4e8d-803a-b51c0f90a391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3d81d9-8b16-4575-920d-91cffa918ec7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e1fbfa-b266-4480-9776-fdd885e12671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bdab6a-89d9-41a7-a7eb-6ea95dcb91dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3e4453-87e0-4094-a1c8-e5583943017f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e91753-ffaf-4957-9068-400beef1478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a13c14f-93e8-4b84-af25-be02a5678bc0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff53847b-985b-4392-810c-0f2495a68224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df97acd8-35f0-4f3e-a43d-74ff04e169c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b448a42d-2b5d-40f1-83d8-424396327020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df51d6f-61e2-49b1-a70a-e4040f1b6f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769489a-6cb6-44ff-9110-902202ef18a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c0e57c-00f2-4a2b-a37d-221b67a7afcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466a276f-bf37-4742-b2d5-0f56960daf6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a4b152-b4cd-4c91-9aba-893cd4ad12e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719ad4c6-cc37-4672-86fc-39b5b0a79084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8ad6e6-ba9a-4bbf-beff-146e7d23dee8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089981bb-1bb0-4e42-bfef-8eece18e67bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5ac516-10ad-4824-b082-f248a904cc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db24b5f-dd4b-4436-912e-017fea7b8218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac927cc-87b0-407e-ad69-e0b6fd7da8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556fb18a-f68b-4181-a2e0-b2bb1cbbb8c7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f74c3-d44d-435a-a3a7-b8ed96edb2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc27279a-be61-4702-ae1c-d4f4072525aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e0439-b048-4b17-9cf0-f65155e0c09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7fff99-ca5e-4cb4-8247-ec7383f93ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc0e6f-8f85-4a7d-969f-4142c2a03de9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab54c448-7fdc-4fb6-a208-d4d3e2b3af76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b428d4-ea00-410e-aac4-ec6309aedd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd496c-9834-4ac4-bb91-5186203b5162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1284871-4770-4512-9cdc-0c7e0b3fd4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ac84d6-e3d2-4888-9fb4-b4186295b36e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26970cc6-d946-40f8-acca-5d446c4279cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a216ca5f-d54d-43d9-8d09-dfcff075926b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc9490-0416-481e-a685-db7cdae52141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21140cb1-4571-4767-8831-f082b1c4ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc74e48d-ef2c-47c1-8a2e-bcead7264a24",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2763ffd5-99f0-454d-a866-77f8410f1c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cea78e8-3444-41d2-bc90-95fe744462ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53705b3a-7e24-468e-8761-17a21a36af41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082e794b-829a-4989-a759-902289b0c686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4318626e-b91c-416c-bed8-5a43042834c9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3afb33d-71ed-42f5-9476-bfe395f3964b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018418c6-8782-441d-8c03-1c38e5e2c76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4638395a-7bf8-4ac3-b27f-287c5607b337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f47ee9-ecbb-42e9-b316-0053f1598bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f53f0f5-b947-4fc4-a1f2-d184f3deedf4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27b1fbe-8a05-4c2a-807c-f3edc18ba772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3b0856-1adb-44fb-8f15-88d55d87ca64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568c514-46d0-4c4e-ac0b-31d240c011f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7fb451-596e-4c76-8225-1cb336b9ba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55022fe-3d3d-4080-aa99-2f0d5580a868",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca616131-134f-4a42-b8a5-9f69727f59ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99797985-1ae4-4425-85fe-4b0caabadbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a45671f-a503-49bd-8204-f139b78a280e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f292f324-6b96-4f54-bd2f-838c7184c635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b636db88-a9d7-4ff1-b9e5-31a16e3b0886",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e2d616-d58c-49ea-b066-7427901d14da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4e1ce9-a408-408c-924b-522ce6431765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534f6d4f-04da-4cdf-b977-50d0ee59c107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864c00ef-5783-46e0-bb37-e4d2f1612df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6708b90-e021-406c-afda-65c736c17bdd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9543059-8858-4f72-a725-7f02416fc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1675077e-b0ce-4187-af3a-d4c845c4a28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1931cb08-1ff4-4500-b7c0-609b33cf113e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af68851-1c2f-4fb6-a0d6-41b7fc58f5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ba498-3e24-493e-9712-8e0ba8a65cbe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca999fec-57f9-4574-804a-cb641dc0b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aedeb697-758a-4244-9edd-630a43631cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150dd22-06cb-474d-aa96-8998f5d99a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7bbcc5-5d2c-4d92-934b-fc0ec1153d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d220d589-91b1-4945-9b55-6234ea1763cb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91328373-b833-4829-b5da-fed858815b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668d36ea-3f8d-41c7-93c2-77341b030645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389a79f0-1ec9-4643-94a8-3be3d9025ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af744b11-3756-47fa-8e72-f77d601544ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920a8abc-456f-4331-b667-263b5cf5ab8a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6a4849-d2ef-48f5-bd15-15cfc90e7223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a02cd4-24d5-4ff9-90ce-83c209040285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b292da-c58a-4bc4-ab75-96412601d8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e84ecb-583a-4bad-b81c-2b33f099fe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2c002b-36e4-4189-9fe0-6111ab7439a0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2a50cd-8cc5-4b61-92cd-61e0b3c06198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c83034-0a25-48dd-a324-d254bfb13745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460948ac-771f-4561-97f0-70487e6e3079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd08c535-c809-46bd-b77d-9e2c4aa9d778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f2d3b8-07e7-4b59-a100-3e3dee7e41f9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94563585-080b-493c-986b-e09a14a59600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ed863b-d274-4dd6-806e-8d92273fde83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c5cfeb-da85-43f9-9d01-ea9f60c3a6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c4b190-b9db-4f49-971c-f03944ffb095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5102c723-faca-4cd9-9441-46f448712e0c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2933195-d88e-4f1b-af13-2ba08bcfc4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91451fd-7bdf-4f15-81b1-ffd83d12cfb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3c6c99-0c32-4e3d-83df-5319cdeb7966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0391f1d-85e0-479d-b9d9-6bb26283858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8376c979-f240-4734-9eeb-fd0f9bd0cbca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3164999-59d3-4da7-a075-50c83d84aaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ea170d-ddaf-449b-8f1d-250b518846b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1544466a-18e7-4bb9-a4e6-b0d9f81c06e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba13f47-6195-4818-807d-8a18e0eb2557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6301879-fe57-4e41-afb8-c70d91c5f868",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9729c9-69d6-4cc9-893b-b32e757326b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af173c-4700-49a5-b98f-c152aa2c9b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56f6a5-d176-461f-8d73-4cb991ec926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7d287-ad93-4746-aa50-c7921e4bc342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992651d5-63bb-40be-8c2b-57c3bd9c7420",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2613185d-3124-4c87-b429-0846b128a86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec29f72-e1ed-43ef-868f-b4b4a8d5d572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66171899-4205-4ad6-a86f-21c5191e56d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4a28bb-3542-4609-b7e9-291587dd8c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e12f693-10c4-4d30-99c4-c2bdf5b60a6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19d3d27-1ea8-473a-8a4f-60e29d8984ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dc6ae4-29b0-4427-8879-ab948c98e5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f37fa80-ac50-42be-ba36-a4acedb8d2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96381991-72fe-42e0-8dd3-e9ebcd299b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f875dc5a-6fd8-4b5f-8580-b9ea2e63143b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef59e9e-d9be-4f09-a867-7fe926425dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c190a30b-8759-4dee-9aa0-5dac4896485b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4dd8b8-1cc8-4e72-98ad-87e0c04417f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d180766a-5c02-4780-ae64-e901b7ca1816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ec0319-382e-45f6-841b-8647e5b73b45",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2063472d-be16-422c-a39d-100f4eed231b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2926ca-9351-40bd-90d7-94e6eb6bbe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da16dc6-8b28-4d98-9c0b-b8d7402953aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55247915-1567-4ac1-9082-9d39b0a00917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455e296-b6cc-4f00-913a-c0f67681c0a7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0798c9ae-acd7-47ff-b983-7f4fe5c1176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7595195b-f291-4d94-bfca-d90d5c99e8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cbc384-cb7d-4829-b007-8a6153b49119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672e821a-7209-4d8b-9474-a58f39d682b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5a14f0-bf5c-4b99-81f3-e3b9085aec64",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e762b6-d66a-45c1-bbf3-0a84a34e8044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cddb7b-c1c9-4276-babc-3a56fc5b52c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfde1657-778f-4239-914d-505d6cd19198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb82ea3-8218-434d-8c41-8817c4a0600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db383421-25b9-463c-9aa7-cf6eba544b49",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d235a7f-2c58-4364-b97f-ed96f0973878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce5b299-c971-4490-be80-f731dabd60fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953827d7-325f-44f0-a1af-211c8ea1a0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d0e55-3e59-435e-97e9-98984ec12a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872929e7-f7bd-4122-85ea-1c7633248d6b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004b9ca1-965c-45d0-b43c-b592bd051c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55c4c90-e843-4202-a91e-5a4dc3c3ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b9cd1-ca74-4cbd-95c7-fe790634e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a402bde-cd37-4182-a7d2-ca098abd6c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479d189b-822c-4999-bb8b-400eb0b0121f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c744823c-4697-497b-84b2-add9c15e99eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8553a9ee-95f5-4521-bab9-621af7f35c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ddf8f-950d-4418-a352-919f7b85d023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9332a86f-7b76-4608-8b18-2404b22cbca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804b8f14-76f1-462b-b229-445886997af2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64c222b-cdd5-48ca-8590-ae6cbea0892a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8eb550-5f67-4bb2-8c98-f2133b3b26d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc71d352-4fae-4a26-8b3f-3605dedafa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d8d9a6-2a04-47d4-a7ff-e4091cf7ef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00ad2ba-d78a-475e-9f28-1aac82d61004",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c488265-600f-47ba-ba02-3c97ed3d6207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b54fdd-ac40-4a7c-95d9-219df13b84d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70536a0-6d8e-4e2f-ada5-b2d359d4a9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa73fa1f-4cf6-4a6c-9b38-0760c5d50480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c92fa7-c718-458d-abd3-e1b9328cea5e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2325eca3-8106-4dfb-9676-f732e11231d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bbb46c-7858-45b6-a6e3-aeff37298fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f19bca-bc4a-418b-9fac-2656fbac8726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d7d5b2-4d87-4f6d-9890-81163e1c151c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3697fd24-82be-46d2-8139-7e36d6909fe0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5380e32c-7d54-49aa-8d8c-df8b2b08fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8786661-069e-435d-9def-787ab5ba7775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2016297a-0bde-4e6b-b7d2-7010966d1ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60d1d56-9bd4-4a25-a421-a83a2782b708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08e5615-a3b1-4746-a392-2390a93003d6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b1c06c-1f5b-4e10-bc45-2a92668936eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625f5f94-a3d5-4f4d-9052-509d7fb18dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a77cb6b-cd03-4ebe-b9a9-224bc99e64c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346672ee-502e-47c7-9dce-8d0c68c8a4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04a0b3-0172-45c4-8c05-d147e53d5f3c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4846cde5-ba50-4346-83e7-c1b813e6e216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e947c37-a86d-461a-bc6f-410bee56b1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ded1ab3-625c-4ca5-af78-12a728fafb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5deb08de-8238-4258-9c76-7e83c875436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0f42b2-6b34-4f23-8880-490955b63da3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe9f7c0-72a8-4cfd-8743-b269d7512e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f13e3f4-dd30-4653-889c-1638fad5a9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a91cb87-e22f-4321-84f5-d5aedad9f46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946d8d13-7e1b-4ecc-924d-bac498fe58a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976cba3b-cc34-49a8-830a-d365d38d5f90",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cad46ba-ce3d-4342-b439-9a6f48845a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b156b07b-3991-4c6c-b7d1-3ab85d9dbe98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760bbb2a-6084-496f-b940-639ab8a59184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b4c19e-e780-4211-8445-9a5af24af067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f38473-15ff-4786-a3f2-1644abd89f19",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23fd87b-338c-4db2-95b1-b392a584f620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c84a2a0-cf5c-4151-beba-7e4ca509b66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706653a4-5d9c-4ae5-8176-fd36f1ce8bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de607f3f-6f74-4862-918c-32691c476438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc20a50-4f9c-41d5-a767-0ad3e2135cf6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23f2f4-058e-4c31-a572-2e0ec4c226e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b51148d-7da6-4ed0-92e1-3c81f3979c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abec47f4-0bee-40b7-8a2a-99e9a7d79a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d995ac96-6725-4555-904d-b00fb728c5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8072afe4-eeaf-4f71-882a-4a8db6ed3ccb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56182dd2-e94e-4866-8497-a7aae325b76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0eabd4-9a76-4bb5-93d8-3dfb3cbf1ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da6e606-5d80-4d59-b69e-604d672770dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac91fdcb-7ae7-491d-a1b2-9d9d116def53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89dd59-d8d8-4777-b80e-0ecddedf83b0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6269c9ea-7427-4ccb-96ef-49002c9283d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50c16d0-e94f-4dd7-a438-7fdbf3a458a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7977eb-1f82-45ec-bbad-6235c5cfba67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df063940-c6f8-490e-bf97-9d2da3ffea07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2977eda7-38b8-412f-8925-d59307bbb386",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b35434-25a6-4522-ae79-765b2a139b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d7a405-f237-4863-891e-ffd189bee6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b0161-d79c-4c4c-ba76-58b7f1754b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3e02e9-aa49-494e-b5fa-4c955945dc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ebca5c-bece-43e8-92e4-006a67133c0b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29639b-f21f-40bb-9cf2-c31a28f8554b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f2e70c-25fe-4cda-b1b8-123b1d5f9ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a726a7-1535-478f-a9ae-f1f905e0acd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2f8417-7102-4741-8fc0-c2f6c56b1999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9125ef0-ebae-4c7a-9856-761c854e4282",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de14899-94ec-4495-9354-7cda004aba29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da8811a-82f6-4434-906e-ae710cac3bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1ec81f-4f5c-468e-9b44-160d268c1d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0551d4-5a6b-48ee-a89a-fc7669a9609f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d6666-40e0-42f4-ae22-5da295a8da5b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e800f7-c883-4f18-b49e-9cf704ec154b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875814d0-6ea4-447c-be86-09609bccfa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fd543d-894b-4e07-91ef-19e41bb9c40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2084b0e3-b13d-4867-bad2-b333d37df012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f59bc25-c853-4bdc-b19f-5f397b107aa5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6813bea4-d663-4422-8064-443d2320e89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96da9d3-22cf-42bb-96a7-52198b273b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104aba84-f48f-43b6-a4e9-c0226a4becfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371575da-e7ed-4f16-8039-4a3e14011fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997a7c25-30e9-4cd4-8b09-e2b62f6d9196",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbbb143-d7c5-472b-808d-dd37ce2dcd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76718ec3-e2a4-47d2-b0ad-27aa91c22773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c485370-30ba-4d4f-b649-a2a43a210958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8904899-005b-4d7b-b8c0-081f0218f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103c30e4-fd94-4cd8-b651-afa4feac4198",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f79a08d-d3f2-41e8-929d-7367899eb301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3db8818-0dd7-4789-9762-48ef02919521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76970391-bb7c-49b7-902d-25a28c2bbf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32003a7-6db3-4ff5-9ae6-5cfa8d9e6b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ff8666-bf42-4726-993a-4ae003cc2729",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5dc2ce-6f96-4d49-a1e2-8296497a8e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6980323-2c52-4405-81f5-537affb9b6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fb1fdb-a18b-4c3c-ad1b-c2596bb5d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c303d776-feee-44f8-b943-826cd6857e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447a1ad0-15ca-4ec1-af94-95bdda5d15b4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8897a0b6-d9f9-4be3-b143-3f89b676553e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8addf8af-40f1-4f43-ac33-79202abd8e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae9b58-fbf0-4913-ad3a-91f8c3c65e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86039145-c25f-4ae8-986c-a48298b99abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdab824b-420d-43d4-a388-191bdf1141f7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95c6177-a0fc-4ffb-a783-8db8d75abd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12803fcf-1614-4d61-822e-887e3f04ba3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30080c1-fc8d-4a49-a26c-687338d89747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2849366d-ba01-4022-94bb-2aa49f6fd8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53337289-0961-44a8-ac0e-4696fac315f8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76934ad-b125-487b-9303-2876fcb5a834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67beea93-a0a5-4618-865d-f0a441521409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6546e341-1115-4f4a-9cbd-f1ab8708d504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49755016-8d06-439e-8f97-1967480e44c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c87edb-a670-460e-94f9-83cea4c61576",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44af14f5-2226-4327-a2d0-d9e2f298f852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c139dcbf-97b4-4a66-a98c-e2b248db75d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8e71e7-d6eb-4f68-83d2-4b8df76d6215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab730ac-8428-4acd-9320-44eb2476a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7f1028-c983-4280-af34-accee7f7548f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2897bb5-b040-4079-8e29-195f9e5c7eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5178079-1969-4446-a0bb-802c0ecc4dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09fd1b4-fcfb-40e2-90c1-5533c912db57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de5f7bf-aca0-44ac-9965-40ffef4f357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae5c27-cdc3-4f75-b6cb-ee1899258e82",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a04cfd2-0e2f-4355-bc04-770683731fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f850b8-72b7-4009-a8bb-5a5b984c97a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e62e9d-9b5a-47c0-beed-3037d054d848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e759fe-54a0-47e7-8d86-7c99ec15b3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5376fad4-8445-4646-92c6-e85bc6e5c15d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8194baf-3e98-4e25-843a-10e715620832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd59e33-8a8c-44c9-808d-0c8e23d99c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf6e11a-49a2-4673-9ef7-1070ec79d36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0207f6-579a-46b7-92cf-4ed16bb41121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b59d331-bb10-444b-a6a2-f3bd06f7b3b7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e21b4ec-d8de-49db-9a33-92983953fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9894e1ba-56c5-4293-a0a9-ef3fe8b5bbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a23587-f33e-45f9-88de-39c12ee075fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d6cd7f-a061-43bf-9746-fdb583992415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d593f48-3845-462e-b50b-9e23281b7fcf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428fb046-903d-439a-b1f4-a52eea8a2e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1580aa-9db7-4a5e-b4b2-5e7f4315aabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a27250f-f372-4eee-a307-8fc7897c58c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44987453-9b0c-420a-9ef5-d46ccaaec7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319b597a-213d-4eba-8ca9-6f46e7024b48",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eab0bf6-bbd7-499e-804e-bd2488eea399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b95298d-b40d-4ce7-828b-5b49b6e5fdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1ed6e-605b-4515-bdd2-184143724323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a657a7-4460-4417-8853-5973b75590a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46546bd4-cf0c-4ad4-b868-fec4e82500db",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130cdd9-61ab-4403-9258-e8659a8ca3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf040c3-18bf-41fc-b0fb-571a9fb09abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26501505-c566-48e4-81b2-17f7fcab1dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523293d1-ef4b-4884-a512-7f7e3007c1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399241c1-c4f6-463a-acbc-c20c97f34664",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca13f159-4111-49cd-8bb8-826e29782bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa5641e-4d94-4820-93a3-a46502ce66ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15b9b59-fe33-4dbf-bff4-309b37714da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9187c37b-a3d3-4714-a3c3-62aa62b548d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea013ad2-4425-46fa-9581-2a64ede287fc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a0e889-f8c4-4354-aa5e-6fe4600b3c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2be930e-b978-4216-8cc9-df46ea070ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc9b93e-5b73-4e1b-adca-ec7462b177a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5227680d-d80c-44e3-a7a7-a4c40d3f5b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0699cade-cad7-456c-93a0-9cc7e3943ed0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef47727-5aa8-46dc-b893-06070df3a6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d93840-2d55-46f1-96ee-01b545dd5c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c97b7f-19ef-4a59-98a2-a069d37678f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dae6e2a-9dea-4467-9b45-6a8e02bbf8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de01d288-b27d-4e6d-bbaa-9eb672ea4b85",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca10ad5-fe32-453a-9253-cf744f89d82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a99678-395a-4c1e-8b26-ee8fe3007cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93fc3d8-59e1-483d-a0e1-c9c13554834c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825eb5e-2622-4217-bf67-0b2d71df0a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c02a330-8009-4e22-9e61-45ff6cb922b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e370827c-4ebe-4e18-9cf2-06962f26bbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b8e13f-35ab-4ca7-bd98-538ca6f5cd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc05d79-92ea-4bb7-998d-32ec2b4da15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35df1945-0d1e-47a4-89a1-52baec1b9729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a757436-a382-404e-92b7-6a0a7b82088e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02a68d-01e2-43d9-b920-d6c951b84cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9602fe-1c30-4c91-bc81-ff1ff513f4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa123f1-a304-487e-ae63-66f8b8b49ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bc53dd-64eb-4a52-8359-5bee5b74a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fb4d6e-72ee-4b34-90c4-8a33e3279569",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df86b86f-77a9-4245-b2b4-d8432cba091d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fdf1fd-0eca-4217-933f-c4ea694b8780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2e7525-647c-419f-bd0c-8cde1c30b245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef79e4fc-a5a7-4428-bfca-c6bf51f0f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7494b31-b50a-4c00-9dd4-f934d7743b40",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a77f8d-1904-477c-9fa4-82d1035b96fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50611a8-5075-4b38-b7a9-8a0026c6a9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3e7ef-cc7b-4f1c-aed1-2fb5cd265586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e96672-6316-4af7-b86f-e57153c1c080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cc29a7-3b5f-4a87-868a-479eef387233",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5baa370-565a-4310-859c-c55612a6aaee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c70c31-8950-4cbc-9171-1a56212016ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f1b781-d28b-40cf-9217-e17bd1c93b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c57f5f9-05c7-418c-8bc4-b110dd3f438d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1903e964-192e-4866-bdbc-afb45b51eae3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eac941-2fbb-4cbf-ab1e-4b4c82712105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1831af-1bd7-4a18-a7dd-a5c9badee439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0db517e-cad3-476f-8028-b3e13f7e2dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bc01ce-f239-4531-bdf7-c96f23c0b515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb0b7fc-5b6a-45ba-bf87-705c0cedb885",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b1d2e3-198a-457c-8e09-31c58de02dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac1d207-9081-4f7f-b308-c900fc03fb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a1427c-d95e-4e34-abe4-d50b841ddcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90006678-2546-479e-afa2-2c380d40467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5ce4ed-67c8-4e8e-958d-8361897febcd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e2d0b-4d17-40bd-818a-fad9f7650113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a76bbb-3a9d-4b21-b638-6fa18eb376d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ee58e-ae15-4e56-acf2-0adb8c29d258",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d8c78a-45ef-4d6c-a0e5-3860c77e69e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b420b9-1d6a-408e-9fc8-117027fe269f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3409a09c-c279-41db-9c5d-b79015045bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97883c63-f234-498c-b7df-8c834c494b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e792844-8c13-406b-867d-b25ad9f1ba7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044c7346-0b0a-4d98-92a6-3ce7e5f7b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1766f-56fa-4c12-aee9-0f9df88286c1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0171a4-765a-4c56-94de-67d5714bacf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d0723b-3b6b-463a-9ce4-d4dbb335587b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76f73d8-2c03-49d6-941f-c05c301bfabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4860101-3d10-4c44-a925-9fdccaeb0775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61b2dde-f9ff-48f6-9daa-f06aaa620a1d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14541c5a-cf31-4e62-ad9a-84c53b4f1418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8c40ce-50e0-4fe6-8b24-eb2fdaded813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f84ab7d-8048-4cae-8c6d-2b47b7c191c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7074785-b707-453e-882c-e7de0021346b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668632f3-62a7-4467-bdb2-74b967461c1d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e0f8ce-6e3b-4a9b-86af-64a1cd4c5961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e200dcfb-5ea3-4b51-a920-2c64b11f7a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baa9cf8-e409-4356-a8ae-bf7468f52616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff450320-8c73-4f5b-a01c-926493c13e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774e14a1-73f9-4162-98e1-53ee07b822a9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ebe514-017e-404c-befc-4951dbbdd0b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083dc0af-f4f8-4940-b4ef-a22d3c4a637a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b35c83-db2e-4fff-9c69-403ae457a917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebee55fb-5eff-4678-8015-f7383147d599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b2570-809a-4bbc-8011-35dca5f53d03",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c644b-6491-4f9f-9440-12163481a6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9c24e3-33b3-4fe8-b771-45c8d8564100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f21c9e-10af-4aeb-8121-e314f148f701",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f3f683-f6c1-48cd-91dc-671777c81150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e63631-0419-4757-8a65-c5182a232ea4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf595a-ae6e-43e5-8bfb-b6efe80be5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d020fb7-2635-4b02-a0d8-6b56cea4b633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f97563-4168-4c41-ae37-9c4bf694e0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821a2573-92ee-412e-98dc-2d905699a3ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68876f16-2c87-4c9d-8729-6490bca860da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f04dcb3e-27d6-4b55-b8b3-3fb6579b6e12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b247403-7fb7-47f9-9b1a-a19dc635375b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bfa16a2-653b-4380-b009-a7121bfcbf4d"
                    }
                  }
                ]
              },
              {
                "id": "ea5db9b0-83a9-4b63-bf5e-3e064147d53b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "785fb46d-70b2-40be-9fce-65288aa4048f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d012e02d-e6ae-46ed-95cc-22f4b757378e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "df6f03eb-518b-4d6e-b85f-8be8d9837450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c5a5a3-968a-47a1-a261-08367c033ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1fcb54-52a6-40a1-bfa7-680056a9f820"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88bc307b-7f2e-4b20-a2d7-ada9f35ce631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2efcd184-1859-4c58-ab46-780bf6f2523b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "447012de-8d62-4039-a9c6-fcbdbabba67b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50ade05d-7aa2-4534-a664-cc153b538b3e"
                    }
                  }
                ]
              },
              {
                "id": "c4806caa-d3bb-45c0-a997-a5e60d7a2534",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "51a3107d-f69a-42a9-991c-70647f8b9536",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c37adbc-e2a9-4d3e-b6da-e27579916ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a3e5bf7-e003-41b2-a8ca-a02cf4be45ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f324b97-de0e-4f60-a59e-f6ac303ae6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac12038-3862-4c99-8fad-9fba96bc9772"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ae54f7e-7dc9-439a-b331-a4668c4b65a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d02075d-f124-4ee7-9e0d-1fadd9fb0c70",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eef824c-0743-4a0e-a179-e9037128744f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46d831a9-1259-439a-b2b5-861db3ac0a7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a97d17e1-d423-469b-abbc-6cf3718d0112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d1b81ca-107b-41cc-8d27-0dc9a2fc0d3f"
                    }
                  }
                ]
              },
              {
                "id": "3cfd0ed3-5eaa-4a8b-9440-ceeb0d238ee9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9f4c249-a07d-42d3-9994-7864487c3e2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e46319d-dbd5-4341-bd05-426cf40a51cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25d50dbc-15f5-49e4-9b37-4c6b76bc258d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2572ed38-6df7-4a17-8e89-331982fe1e9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee6102ba-7b7c-4832-9fdb-b61fbfcf216f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7bcd0376-96ee-4c45-92c3-b146e4546dfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f8797ce-781d-44f0-8f15-3a2609872329",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f88a22c4-f00e-4a8b-b2da-9be40ef69b66"
            }
          }
        ]
      },
      {
        "id": "402904c8-4c23-4913-80e0-3bce34b81f20",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c43cfd89-37d0-438b-8ba9-f3652fe78f86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e7e9815-c4bf-4148-b86d-b579af68d8b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c56dab02-0181-4fe1-91b2-6f33f099c446",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcf3db-2f6b-4afa-a957-6f8810b5de51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6500f937-17f6-46ac-97cc-08952e137412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f89cb-1132-42ab-9824-fe77bd58501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5da43f6-9a6b-4e5b-acdd-6c217c8b2e5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ca3079-5609-4843-a133-58772a90ac43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a636b928-2268-41c0-9070-18644e245449"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca2e577-2653-4f2e-bd8c-e4f7f286260c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad2fb8fe-8484-41b4-bda4-20a62c266bb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c9f4634-1522-4c04-a978-4aff7c905929",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24ffc5bc-045e-4dee-bfb7-21c7ff18622c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "108de3b9-8864-4ed6-bda7-b9d08be34322",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90d3f924-0230-4c38-878b-19add2efbe93"
            }
          }
        ]
      },
      {
        "id": "dfc2da30-cb4c-49d2-981c-d05f87c1f15e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3a8eca12-8fe9-4e62-920c-f6063a4c1630",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a352835c-037f-430b-96cb-a87fe1df17ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe93855-b052-4c34-91a0-a2919a774989",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11593b14-6c7a-4f93-9b63-9e03b8cd70af",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3e99857-6ff1-479e-b019-7a0103b39432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d599bd7-07d3-423f-b5c1-dee4bac7b460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7face2f4-d7ec-44ea-99e1-9cae45a853cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f00adbc4-76d5-4234-a0b2-1d7e0f0377db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25fb270d-e3f7-4805-9f1c-75c2e6f762ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4fc0e21-be20-4882-aacc-988b395120aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499ca602-c912-4e34-8989-8f212182156f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97ff8bad-292d-4391-b58e-0f642cb6bfe2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "323d42a1-6af0-4400-a3da-6d62d1d52c48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e333ea-a29f-4786-945e-ce194a8eb77b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1605ccf6-0bf6-4023-88ab-3a5b3278c726"
            }
          }
        ]
      },
      {
        "id": "038df332-7b79-4e44-9b90-7b1c25d2bd83",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db8f48c1-5e0e-47be-af31-9c342544676a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca6d66f0-cc9b-46c4-801c-14df3d775c77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1ae1613-a510-4948-bc9d-68da95b551af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb862c30-1a23-4ebd-9858-32d5c5785be9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8959385-4258-4b93-8934-b7d7e8cf1bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e562c6-a8fe-4af5-9799-c08a98bf246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9a0849d-92a9-40ed-9b22-33a2df67044f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86579853-5bda-4289-ba7b-e2d6a64a5676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90eec240-4290-4e9b-8057-cccf4174f001"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c67b06ef-31d1-40fb-9867-117cfb8b173f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9bb1320-1d60-451e-a5d3-ea44c4408dc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a5a3c2c-e30b-47bc-8564-12d23361e926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48dcbd94-8e2e-4a57-abaa-05c14b12be3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26030e2f-285f-403d-aa8c-5f4f8e6fd82c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03ccfc92-84d0-43b2-9c36-1fd1a75c2906"
            }
          }
        ]
      },
      {
        "id": "51cbc2ab-bb20-4173-a2e5-afed5788cdd4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38cb918e-0a5a-4ec3-b9e7-e7e37a9bcdc0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37c0d9f-b817-44d6-ac42-ce479127984c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "57d85050-961a-4ed1-bce7-40faf7dc6d38",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e30806e-6e15-49c5-88c6-76d0acf92956",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84537061-4c22-4299-9da8-4e1d9fc50219",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 433.9960317460319,
      "responseMin": 11,
      "responseMax": 12351,
      "responseSd": 1858.8649154238692,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724546681821,
      "completed": 1724546799703
    },
    "executions": [
      {
        "id": "974e4eab-3b42-43fb-bbe1-5a7f681a7dd1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b2aa832e-7998-4160-8275-2c982d0dfbb5",
          "httpRequestId": "f745d7c5-04ab-453b-b2d4-e75b538bf04e"
        },
        "item": {
          "id": "974e4eab-3b42-43fb-bbe1-5a7f681a7dd1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "42df56d5-35c5-4ead-ac21-695218eafa92",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "abec084a-69f2-4ab5-87f8-70dbee841c44",
        "cursor": {
          "ref": "66eaad31-8e08-4f0a-83d9-83ccc0e78c87",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ac2942ae-5bd2-48f7-a68c-7159a8fdd08e"
        },
        "item": {
          "id": "abec084a-69f2-4ab5-87f8-70dbee841c44",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "889c765c-60fa-4348-bf18-523682eee8bc",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "66555c71-27c3-48e0-b4c5-9f9ff2f9ea13",
        "cursor": {
          "ref": "64d8e284-6d62-4757-af8b-eb588ed8ff94",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c2a03d16-81d0-4046-8ef6-6ed191f111be"
        },
        "item": {
          "id": "66555c71-27c3-48e0-b4c5-9f9ff2f9ea13",
          "name": "did_json"
        },
        "response": {
          "id": "1c01438d-1390-49e5-9c84-5a61aa1663c5",
          "status": "OK",
          "code": 200,
          "responseTime": 456,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15506ccb-3026-4a0d-928c-14637fa86459",
        "cursor": {
          "ref": "286fc6b9-b7dd-4c97-8e42-7edf02f04d38",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bddff991-68b8-4218-8128-fbf3c648bd52"
        },
        "item": {
          "id": "15506ccb-3026-4a0d-928c-14637fa86459",
          "name": "did:invalid"
        },
        "response": {
          "id": "02014e59-e135-4394-add6-4f618dbf7e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2035,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15506ccb-3026-4a0d-928c-14637fa86459",
        "cursor": {
          "ref": "286fc6b9-b7dd-4c97-8e42-7edf02f04d38",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bddff991-68b8-4218-8128-fbf3c648bd52"
        },
        "item": {
          "id": "15506ccb-3026-4a0d-928c-14637fa86459",
          "name": "did:invalid"
        },
        "response": {
          "id": "02014e59-e135-4394-add6-4f618dbf7e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2035,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415ca2fa-4a83-4dcb-a94e-f11ccca477e9",
        "cursor": {
          "ref": "c7bbd7e1-4dcb-4ca7-824e-4bc25c2e8274",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3dbec527-cd33-428c-a1f0-483bc944b75e"
        },
        "item": {
          "id": "415ca2fa-4a83-4dcb-a94e-f11ccca477e9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fcc5d2f8-6075-4820-98a2-489978d4e44e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2393,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923ec50b-ed97-4ad4-b095-ae0e144405d9",
        "cursor": {
          "ref": "b8fc5671-383b-4ce0-9c08-00f377c3d891",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f1ade517-b487-45b6-8c4d-bd0745c4cf9e"
        },
        "item": {
          "id": "923ec50b-ed97-4ad4-b095-ae0e144405d9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ea9712bf-13e9-48db-b856-e727a92cf1ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2131,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd63988-3d7c-4a52-9fb7-5a6f5a6cb4af",
        "cursor": {
          "ref": "e824aea7-4131-4514-9251-2e81c96863d7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b538ca4b-1db7-4145-87a8-97652a57d2eb"
        },
        "item": {
          "id": "fbd63988-3d7c-4a52-9fb7-5a6f5a6cb4af",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "28a6f7f9-509f-42ef-ab46-f87f9a263315",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c314dd8-af14-48d6-8936-1d722f592eb3",
        "cursor": {
          "ref": "950b276b-5f6d-4ee8-b3d3-593c4a30f6cd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c206e7cb-066f-4415-8eec-295a5ec7e326"
        },
        "item": {
          "id": "5c314dd8-af14-48d6-8936-1d722f592eb3",
          "name": "identifiers"
        },
        "response": {
          "id": "bdcf7703-a57d-4b10-8c6c-96a323557344",
          "status": "OK",
          "code": 200,
          "responseTime": 2344,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346a7a30-d15c-461e-8f4a-c732b1e56fa2",
        "cursor": {
          "ref": "19e6b7f5-8bff-45e3-b629-ce9c049e6608",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2358b9f1-9053-4714-b100-1fe0c0b665a8"
        },
        "item": {
          "id": "346a7a30-d15c-461e-8f4a-c732b1e56fa2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "429fd4dc-6dd3-453f-89f4-a2abea65d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fdfa14-3fa7-4f64-b1c3-be7b2f95c4f9",
        "cursor": {
          "ref": "6dbc9a36-cfe2-40b1-9d63-2a64c7337056",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cae221d8-eb32-43db-8fa6-146f79955936"
        },
        "item": {
          "id": "47fdfa14-3fa7-4f64-b1c3-be7b2f95c4f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b322f2cc-6ea4-48c0-8fcf-90cab5444211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719551dc-115f-4675-b40e-b37ddf013944",
        "cursor": {
          "ref": "c6bf4927-d2a8-46e0-8267-f13251adf6ed",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ead9394-f704-4b45-8287-8ee338e66e35"
        },
        "item": {
          "id": "719551dc-115f-4675-b40e-b37ddf013944",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "14408862-4107-4c5d-a8b9-6c3bea8c174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefa1114-0ce8-42b2-ab9e-4400b2e7ce9a",
        "cursor": {
          "ref": "a4344da7-637b-4c70-9a8c-1ad31dfd7799",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "beaf9e9a-4f7d-4134-b5ff-b04563fef47f"
        },
        "item": {
          "id": "aefa1114-0ce8-42b2-ab9e-4400b2e7ce9a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2965df66-3c48-4b8e-9a8c-443342d2c8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d9b34-4bee-4416-bd0a-2ba98b6183b9",
        "cursor": {
          "ref": "566660f7-7189-4cf1-907a-30464daf833c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "97c34cc6-e88e-4143-8e9b-93578872974d"
        },
        "item": {
          "id": "659d9b34-4bee-4416-bd0a-2ba98b6183b9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "be80d9bd-0e2e-4fdc-8d73-07e125085a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c90185-779c-4038-9360-5d8832fc9d5d",
        "cursor": {
          "ref": "1aabe9f9-fe5a-414d-9b79-96740b34a0f2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "13d32d53-9a79-46d4-92d0-538ee4edd236"
        },
        "item": {
          "id": "16c90185-779c-4038-9360-5d8832fc9d5d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f27b01e-01e0-480a-ac18-7735d5ae87c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0a3a9-2f30-4db8-b6f4-464273c30d41",
        "cursor": {
          "ref": "22f41a38-3683-4800-a0ae-f48721945d54",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "758868b8-b3e3-4c4c-8f28-6132246d62ef"
        },
        "item": {
          "id": "5eb0a3a9-2f30-4db8-b6f4-464273c30d41",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "688c683b-8b9e-463b-b981-9446c67ac279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a31e25-305e-42ee-a969-7bfacf90d397",
        "cursor": {
          "ref": "4328a64f-5cf2-46e1-b7b7-b4196ea831f7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ceb91399-ce5f-42e4-83f2-069c3f3575d8"
        },
        "item": {
          "id": "d3a31e25-305e-42ee-a969-7bfacf90d397",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5d80f372-7e3e-4a01-902f-4c7e10c3125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec14e9f-fb90-4f54-84c1-5853c3fc2461",
        "cursor": {
          "ref": "e2353cdf-4aef-4f61-9715-f888b0746a84",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2f68792-b604-42e1-81a6-29d97255f2d2"
        },
        "item": {
          "id": "6ec14e9f-fb90-4f54-84c1-5853c3fc2461",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac0e975f-07d2-497f-9566-034bffb44790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e65ae-37d4-4ee6-8a86-b1f3dbc6f985",
        "cursor": {
          "ref": "930cb93b-d73f-466e-b590-26da4d6bceb4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "11ef23bc-b0ed-4420-a440-226ea3bf0bfa"
        },
        "item": {
          "id": "2a5e65ae-37d4-4ee6-8a86-b1f3dbc6f985",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4b2b2cbb-1d8e-4379-8ff4-3071187389cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c826440-5cf1-4cc1-a9bb-a8879d2ec676",
        "cursor": {
          "ref": "10e31f5b-6778-4ec3-9be1-468cf6f4106c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82b9b3fb-3cf5-4120-92b4-9f7467d14415"
        },
        "item": {
          "id": "5c826440-5cf1-4cc1-a9bb-a8879d2ec676",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ee63afc8-5a4e-4995-8822-c3f7e878a4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034b7e43-782a-4456-9a05-e653532394f8",
        "cursor": {
          "ref": "b9ba8aef-b963-493a-820b-336b9f9c7a07",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e01c8d5f-f751-4695-917e-167e7263e155"
        },
        "item": {
          "id": "034b7e43-782a-4456-9a05-e653532394f8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "00f32bf0-8a9f-45a6-b4a8-dfee7be9a36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d691d02-9cb9-4468-b4fd-3f2c77f75e03",
        "cursor": {
          "ref": "665bce56-6fb4-4dd8-be6f-3ccb3527926a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2b4c2614-9985-4827-82a4-42cae52afb86"
        },
        "item": {
          "id": "1d691d02-9cb9-4468-b4fd-3f2c77f75e03",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a1243410-cb3f-42cd-af1d-d95740aa9afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f24577-c553-4308-add9-1e61d45b11b2",
        "cursor": {
          "ref": "80c5f65f-017c-4c3a-9fd7-f58486012684",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7386da9a-fcfc-47ec-b58f-ef18bea464f3"
        },
        "item": {
          "id": "69f24577-c553-4308-add9-1e61d45b11b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5837021a-0b68-44e8-96ea-be01818909ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb930bd0-e95b-482c-b6d2-b0d16a29c8c2",
        "cursor": {
          "ref": "b45ab3cb-1443-46c0-b0bc-56d37123b00d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8a49a089-52e8-44b0-ad5b-55fe0ab6557d"
        },
        "item": {
          "id": "eb930bd0-e95b-482c-b6d2-b0d16a29c8c2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ae18dd7f-7c33-4497-9d34-b43b30764949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354d489-52e7-4999-88aa-297af10f59e0",
        "cursor": {
          "ref": "3de380e1-0f75-442e-8987-9f146f70de24",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9064b339-fe02-434a-a934-b4addc420f03"
        },
        "item": {
          "id": "1354d489-52e7-4999-88aa-297af10f59e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba8b1eda-1699-40b9-86a8-59019ebfbd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82804692-619d-49c1-a615-1a9af9a146a3",
        "cursor": {
          "ref": "b9349531-1175-47a5-ae6f-81588c22a543",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3de94f79-15c6-4d86-b60e-cf70f194b74e"
        },
        "item": {
          "id": "82804692-619d-49c1-a615-1a9af9a146a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "80c17d5f-661d-4208-8c93-0a20d296e30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01a4ef8-8dcf-42f7-b581-b437ae943e55",
        "cursor": {
          "ref": "fe22579e-5927-4796-9eed-c5e240f611aa",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4cb106cc-00b8-4acd-b841-5986e999c5c2"
        },
        "item": {
          "id": "d01a4ef8-8dcf-42f7-b581-b437ae943e55",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c64d416b-42a4-491d-bc95-b3c6eeb05b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fb629d-be30-4c5a-9e8b-beb741adeedc",
        "cursor": {
          "ref": "4e11a8fe-214f-49af-82eb-40f71a43265c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5871fc8d-909b-47ab-b31d-2de416ea291f"
        },
        "item": {
          "id": "00fb629d-be30-4c5a-9e8b-beb741adeedc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4a0802c2-0df0-457f-be18-85cd0b5a20b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13a92b-3786-4185-808c-97e33400eb03",
        "cursor": {
          "ref": "f21a3efd-6509-431d-9d27-07372309713f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e0f75bc-18e5-4cc5-9527-ffdb7482b343"
        },
        "item": {
          "id": "6f13a92b-3786-4185-808c-97e33400eb03",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0dddd8fd-40ae-4312-b247-455689d77eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86150692-1e1a-49be-89c4-eb1ffc30f500",
        "cursor": {
          "ref": "debbbca3-d343-4fa0-82f2-2832e94955bc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5ed4dbc8-b0a1-4119-96a2-7f0ed1804ddf"
        },
        "item": {
          "id": "86150692-1e1a-49be-89c4-eb1ffc30f500",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12f0308c-5385-4c81-80e3-85f8511f667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5389936c-15ce-439d-9726-5d4e0c013517",
        "cursor": {
          "ref": "563c3530-eea0-4d00-9abc-b505c10b3b90",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a074e0d3-6225-40a9-8c91-3b1ba97093e3"
        },
        "item": {
          "id": "5389936c-15ce-439d-9726-5d4e0c013517",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05e8e490-2a18-4857-bfb9-ca7901391394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a6f34-4c98-4547-9946-4338346e0fca",
        "cursor": {
          "ref": "c1965a34-7379-415e-914e-93438a1d69af",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d0b5c48-d80d-4fc3-aebc-5ca092756bf5"
        },
        "item": {
          "id": "a33a6f34-4c98-4547-9946-4338346e0fca",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "537b220a-9a16-49ef-a327-d9d338044d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49a27d6-3eae-43a6-a1c1-d9fdaac1e075",
        "cursor": {
          "ref": "bc7e0722-62a1-48c0-9d78-aed7da9f9f76",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e9529b28-54b6-4da2-a4c5-bd5774a0ca9d"
        },
        "item": {
          "id": "b49a27d6-3eae-43a6-a1c1-d9fdaac1e075",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b8eee6a6-f8f5-4f66-953d-29b72a21834f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ea9487-e024-4c7b-b0ef-f8bb605b3b95",
        "cursor": {
          "ref": "f33b2866-c8fc-461a-b2bf-a6d24d692cfe",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de5ea10d-51a5-4c9c-92ce-17d8d0cb8f48"
        },
        "item": {
          "id": "60ea9487-e024-4c7b-b0ef-f8bb605b3b95",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21ffcdfc-99e5-44a7-98c5-eff07dc4b7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf6b99-0fb2-4d2e-8831-3fc7ec565741",
        "cursor": {
          "ref": "d366a896-e658-4c02-ae5b-61604deda609",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01963ffa-ffb6-49b6-a8cb-907fbd22ed7d"
        },
        "item": {
          "id": "2edf6b99-0fb2-4d2e-8831-3fc7ec565741",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4e4c88da-3856-45bc-a4e8-c6f7a52e0194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7236d774-7702-4ab5-b6fc-f368d624ac7f",
        "cursor": {
          "ref": "fec47661-2f25-456f-9073-86c0a61cb0b1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8819ea30-b3a8-4ef8-9c66-4085ad8f0f8e"
        },
        "item": {
          "id": "7236d774-7702-4ab5-b6fc-f368d624ac7f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "059450bf-8ac9-4758-a5d9-22acbae8e6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1100ab06-9079-48c4-ab78-82d315f98a73",
        "cursor": {
          "ref": "b9d66fa9-4bce-4e63-a2f2-1818e3f3b63e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9ae2cc17-4cca-40a8-811c-4d1ecbb93b93"
        },
        "item": {
          "id": "1100ab06-9079-48c4-ab78-82d315f98a73",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bbf0cedc-d646-4557-a54a-20483917b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c425637e-0c1c-462e-a6c6-78fedc0053d1",
        "cursor": {
          "ref": "b3b90763-68e0-43a6-a155-eed20f02c589",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f777c3d-d774-4ce5-82a4-8cc44025aef2"
        },
        "item": {
          "id": "c425637e-0c1c-462e-a6c6-78fedc0053d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "000a9ba4-2732-4b06-a50a-93ac3d3a3752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d9217-c8ac-48b1-b635-9a517660056e",
        "cursor": {
          "ref": "ec0c6781-ca37-426c-8a08-ed4b1144da08",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0b179259-b3ae-4034-8aba-ed8a468d21e3"
        },
        "item": {
          "id": "473d9217-c8ac-48b1-b635-9a517660056e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e000723f-ccc5-4db8-b3b5-e5b736b32b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a2fa42-4d21-4676-940c-0f05ec06ccdc",
        "cursor": {
          "ref": "4f7b7e6a-8ebd-43bc-a199-ff7367620c76",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6c05579-469b-4040-9dcc-23bc00c00243"
        },
        "item": {
          "id": "f1a2fa42-4d21-4676-940c-0f05ec06ccdc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f9836e62-29d6-48e4-bca3-51f25ded53af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1205f4-7556-4ddd-9cad-b70c64538b08",
        "cursor": {
          "ref": "d52cde8d-97a0-4e78-8c2d-cf156deffe0b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a3d6931-79aa-4490-a537-4668fe9da638"
        },
        "item": {
          "id": "ee1205f4-7556-4ddd-9cad-b70c64538b08",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5545769b-1563-4aee-ac9a-5163d4e9c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578d8f4f-eb03-486c-afb4-03d418d84c21",
        "cursor": {
          "ref": "55722a36-62b2-4fb2-be56-f9378c956a0c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "81ff2281-c5a0-4aa1-9475-12e1de27c0cc"
        },
        "item": {
          "id": "578d8f4f-eb03-486c-afb4-03d418d84c21",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "551b7981-17e7-433a-8b63-34652848dff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392ad9b-74ef-4dfe-b37c-12f010d3ef5e",
        "cursor": {
          "ref": "3680c316-c1b7-4626-8610-1aca7bda7dd4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c56bad42-9bfb-4000-a866-fd95ee00c5a2"
        },
        "item": {
          "id": "8392ad9b-74ef-4dfe-b37c-12f010d3ef5e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "39c7ab56-f188-45dc-9a57-d2d445792726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f589575e-c25d-4156-86fa-0ab6c54965f2",
        "cursor": {
          "ref": "e644351c-20c4-4dfd-be10-0f0aa4098160",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b66a84bf-a2e0-46eb-b332-abc93ca4a98c"
        },
        "item": {
          "id": "f589575e-c25d-4156-86fa-0ab6c54965f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "90fca238-4471-4909-ada9-517f20b925c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee922ef-d34e-4759-ae53-26d649448b01",
        "cursor": {
          "ref": "c0c48354-7187-4469-aa2b-08dcbff7ed96",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e025906-6752-4edc-894f-cca62d161669"
        },
        "item": {
          "id": "bee922ef-d34e-4759-ae53-26d649448b01",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "98b51b95-30aa-430a-917a-df27c53f4e09",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8629f4f0-6c30-461b-94b2-885247caec01",
        "cursor": {
          "ref": "e3e3f40b-2a18-40fa-8f04-cef3c0a2cb19",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dce77c3d-7794-4a3c-b3b3-b271792c2264"
        },
        "item": {
          "id": "8629f4f0-6c30-461b-94b2-885247caec01",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6600ec3a-e038-4da5-a7f0-7237ce018716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6db4e8d-4b55-4064-8f97-7524778351fe",
        "cursor": {
          "ref": "f0625cce-0ad2-436a-ac09-f8c0e74eade2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b64c06e-3531-41d8-b5e5-11b082b74f42"
        },
        "item": {
          "id": "e6db4e8d-4b55-4064-8f97-7524778351fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3eb1a42e-53a4-44ce-bbc9-f73bb0b07086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f15e84-6264-4024-a78a-b93cf91f06e5",
        "cursor": {
          "ref": "04870e03-454d-49d6-b4bf-803db16fd260",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50b402bd-8c6d-41e9-8a9b-d6c156a0c875"
        },
        "item": {
          "id": "f2f15e84-6264-4024-a78a-b93cf91f06e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "271caad0-4a6e-45f1-aec6-6711babaf27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8033b27a-8660-4534-b9db-cc671039db65",
        "cursor": {
          "ref": "95c68476-248f-4a3f-9690-a43966cb2ca8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78a8101c-2e75-4427-afee-395a7c53625e"
        },
        "item": {
          "id": "8033b27a-8660-4534-b9db-cc671039db65",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ecc1b996-7a81-48b4-b50c-d557edd881b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb9b4d3-51f8-4346-b936-c7402174f2a1",
        "cursor": {
          "ref": "e1c98c67-de4b-443b-acb9-cd0e7a84b6b8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "58fcf6be-62db-4fa4-9327-bccce659391e"
        },
        "item": {
          "id": "efb9b4d3-51f8-4346-b936-c7402174f2a1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a68206d8-9a94-45c9-86ba-7a22afa7286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76e7913-5b52-4470-9f15-1a1a0bdb5b42",
        "cursor": {
          "ref": "b2a8686b-d793-48f0-b3f6-4b8b2f5e61de",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1113f8e3-18c5-43b4-bf72-23a9b0bbac58"
        },
        "item": {
          "id": "c76e7913-5b52-4470-9f15-1a1a0bdb5b42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c70604a1-f6be-47eb-91dc-c963c53e0a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1125e016-b38f-4391-a6ed-c356b9c9a974",
        "cursor": {
          "ref": "a7d94c4c-0d06-4dc1-b602-90041efc99cd",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "32b2fb86-4ab8-4c9b-81d0-7e94344b3b97"
        },
        "item": {
          "id": "1125e016-b38f-4391-a6ed-c356b9c9a974",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "17a0aabc-2686-4a8c-a6e6-c89a1dc9058b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61d7e98-f3dc-45d8-9130-96e90b1ee6e5",
        "cursor": {
          "ref": "3d9e93aa-a947-494e-be0f-746dbe6f52bf",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c4de5bbe-57d3-462c-a140-de54f8fb4e88"
        },
        "item": {
          "id": "a61d7e98-f3dc-45d8-9130-96e90b1ee6e5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4531f613-fd9b-41fc-8636-808024c3a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956ec97b-bf2a-447c-87cf-7d096a38e737",
        "cursor": {
          "ref": "c0c49b01-5145-4471-bd2d-55c7688ed9f2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e18528bc-be38-4d58-88e5-217b03c013b2"
        },
        "item": {
          "id": "956ec97b-bf2a-447c-87cf-7d096a38e737",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a226c649-ef67-4489-94aa-6ac831b79339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ca97d-2384-4968-9456-f922cae85e7c",
        "cursor": {
          "ref": "bc9d8b63-43cf-49f5-acee-0a78f0998a0d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "14f55321-e865-4e2a-ad0c-68ddce3bdd6a"
        },
        "item": {
          "id": "c49ca97d-2384-4968-9456-f922cae85e7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "553625a1-1025-4a04-aca3-e817d1bc67de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609e4be4-1c41-4a73-b2aa-0e1b3f5dfa60",
        "cursor": {
          "ref": "11e2a315-5f7f-4b0f-8bfc-7df1bc531ad0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5fae009b-49cf-4602-8cb4-3790cd5be0a6"
        },
        "item": {
          "id": "609e4be4-1c41-4a73-b2aa-0e1b3f5dfa60",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68cde1da-4ed6-4df8-82b8-76b5101b9263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2e6623-a95b-4c61-a248-1e1e774a1470",
        "cursor": {
          "ref": "ca53a9dc-b2b9-4910-bca1-4217e3c88b19",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "30891623-937b-4f55-b8a3-a6e648461934"
        },
        "item": {
          "id": "ba2e6623-a95b-4c61-a248-1e1e774a1470",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c644c78-6dd8-49b0-9fdd-108bd9d5a6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701db84-c570-489b-8688-ec85b02e4eb2",
        "cursor": {
          "ref": "2e3c01f3-a48b-4c2f-889f-6fe2aedd4eae",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f1c833fa-b51e-4e2a-a320-aa3e26357d0e"
        },
        "item": {
          "id": "0701db84-c570-489b-8688-ec85b02e4eb2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "25ba61eb-e20e-4462-8ba7-e8ccceaeb16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be939095-4013-4207-84eb-a9b2afbc515e",
        "cursor": {
          "ref": "eca45f11-ac79-4791-aada-554613e54d6f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "189291bd-a6a7-47ce-af51-195eba5fb16d"
        },
        "item": {
          "id": "be939095-4013-4207-84eb-a9b2afbc515e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c39c56ad-82ee-4263-8d4b-4e147b2c01bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3694ca1-d90d-40d7-994f-7738ed7d92c0",
        "cursor": {
          "ref": "d46d57c7-4374-4310-975d-02fce9a48820",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8697e837-8cda-409d-b487-a449c7dd4402"
        },
        "item": {
          "id": "e3694ca1-d90d-40d7-994f-7738ed7d92c0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d00ad1bd-fd6c-4e91-b9de-9b376c8bbaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572dff10-45a6-40ea-9f59-86260423863d",
        "cursor": {
          "ref": "608c4053-5482-4da4-801c-09e170b02be0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e466f5cf-fcc2-461c-ba99-6f5d53c6d351"
        },
        "item": {
          "id": "572dff10-45a6-40ea-9f59-86260423863d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "765c3b8e-5df8-4fe6-9e6d-7308edb80bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5502e187-4fa9-4ecb-8351-548f45d65628",
        "cursor": {
          "ref": "a5dbf782-34cb-4c81-920d-fa07e8d88f4d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a9394c0a-8a4d-4bb5-bb6d-1de7de5acbf9"
        },
        "item": {
          "id": "5502e187-4fa9-4ecb-8351-548f45d65628",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a5c574c2-cd84-43b9-acef-a938bf04ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f352716-9b9d-41a7-8e94-ebda42974cad",
        "cursor": {
          "ref": "5c38fa53-a892-4cdd-8377-8c75b0917148",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "86f18007-328a-4acf-b443-7fbddf28c6fb"
        },
        "item": {
          "id": "6f352716-9b9d-41a7-8e94-ebda42974cad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b0d0ed6c-59d1-423f-a9f6-4ae51054f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e6ad8c-5a26-486b-875d-71826312e645",
        "cursor": {
          "ref": "0e3b454f-e31b-419e-bd28-4659f85ef6ad",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6391bca-6b43-4c66-9848-7939602dff7f"
        },
        "item": {
          "id": "14e6ad8c-5a26-486b-875d-71826312e645",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "615dca8c-68fa-4974-9bb1-d7d29b0fe4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cb4afc-5431-4923-a4a7-88bd8c39bc56",
        "cursor": {
          "ref": "68ef3d6d-db3c-450d-a840-c37016705718",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "10998d0f-34c9-4e75-a305-a6cd07dcf299"
        },
        "item": {
          "id": "74cb4afc-5431-4923-a4a7-88bd8c39bc56",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4b1b65dc-a815-41e9-9311-176944505f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214970a2-dc7e-4f91-a2eb-fcce73b0c4ab",
        "cursor": {
          "ref": "0ffc1e8b-b6dc-49c9-af94-951d2a23bdd6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c4d437f2-edf8-4410-b99c-577b75916bed"
        },
        "item": {
          "id": "214970a2-dc7e-4f91-a2eb-fcce73b0c4ab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8813b5e5-3a4d-4563-996e-c374c0404f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff31f1e-9d9a-4316-bdb6-0a02c5299c52",
        "cursor": {
          "ref": "aad7d6c2-e147-4726-8d39-b7fa055badc4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cdc90170-70f6-4e7c-9e53-032105ba36f0"
        },
        "item": {
          "id": "bff31f1e-9d9a-4316-bdb6-0a02c5299c52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c93448c8-c79a-4f22-8f16-f005dc27c598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38245f58-a404-4ac1-a022-6d75ca060578",
        "cursor": {
          "ref": "67f364ef-7614-4858-9866-4c718583b567",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "076a3016-3607-4bd1-ace8-0298614c3095"
        },
        "item": {
          "id": "38245f58-a404-4ac1-a022-6d75ca060578",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5c1eef11-db21-4341-8553-cc82f25698d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8fbf1-b65c-40fa-9fe7-ce9ae19b0e1a",
        "cursor": {
          "ref": "97fa00c3-fab7-4ab3-885b-ae0c0bca2ce9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e79490d-18f2-4301-ba29-473357a27ef3"
        },
        "item": {
          "id": "84c8fbf1-b65c-40fa-9fe7-ce9ae19b0e1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d7f02ae6-f0c7-413f-8e27-5092c8337cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc1411-6ea4-49ce-b583-e076ec1428cb",
        "cursor": {
          "ref": "ce179cb5-75ad-4863-b55d-0fbe353ef943",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "50d06a05-0922-41e6-be0f-a7961c1efdc5"
        },
        "item": {
          "id": "fdbc1411-6ea4-49ce-b583-e076ec1428cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "faf82e05-92d5-424c-ab4a-25ec2a1c826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa31569-a24d-4135-b471-eea69a84454c",
        "cursor": {
          "ref": "7ad8efd9-3e0c-4732-8efd-a265eb75cbff",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8e18daf6-839c-4046-a4c7-ed22330358ae"
        },
        "item": {
          "id": "0fa31569-a24d-4135-b471-eea69a84454c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "93f63944-8ed9-46a3-9d72-38cc25b61d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e40a45-bc84-454d-bac5-ffdc0f2ce20c",
        "cursor": {
          "ref": "e74c95c4-c332-422d-ba22-29bf429a9234",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "58721d08-5af3-4ba0-ba7e-23a8707efd2e"
        },
        "item": {
          "id": "f2e40a45-bc84-454d-bac5-ffdc0f2ce20c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4c59cf5-450f-4512-9a53-a327f169cd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149e30d-fe7b-4baa-8a4d-d93389cc86da",
        "cursor": {
          "ref": "794e5aad-f59f-49ad-a88f-51f53ecf08d0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a27b4da5-ad56-45a9-92d2-17f6209a0839"
        },
        "item": {
          "id": "1149e30d-fe7b-4baa-8a4d-d93389cc86da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "21a22fef-cd97-40bf-b0d3-f111b3c842f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edd479f-2d0e-4431-910b-03784e509324",
        "cursor": {
          "ref": "eedcdf3e-0a6e-496d-a5af-ac6ef098937f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2edafcff-7c96-4b2c-be98-03ff71829c40"
        },
        "item": {
          "id": "9edd479f-2d0e-4431-910b-03784e509324",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "133dd1c3-0dc5-43f0-8073-ac2ef50468bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84970f38-ba6e-4b40-89dc-881b46483950",
        "cursor": {
          "ref": "a96b2505-612a-4e9a-b880-932533453ca1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1cac2afa-1683-499d-a0ba-0f13b5a17e71"
        },
        "item": {
          "id": "84970f38-ba6e-4b40-89dc-881b46483950",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9ba20416-8efc-4d94-9426-ca8eec10ef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd42dac8-17af-43b4-8c7c-4ea55e4a6de7",
        "cursor": {
          "ref": "20fc5c05-719e-4270-9c2c-87fddefbbffa",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9d0a55fd-da21-4310-abcf-1592fe123926"
        },
        "item": {
          "id": "fd42dac8-17af-43b4-8c7c-4ea55e4a6de7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ee700f3-98c1-46dd-b653-b5f14631a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4cba7a-3075-493e-a27a-47971a382b0f",
        "cursor": {
          "ref": "340c488b-8a2e-4a28-9b78-6dba47e636b3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8858a3fa-6467-4c31-af12-a309b908c405"
        },
        "item": {
          "id": "7b4cba7a-3075-493e-a27a-47971a382b0f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9c19a8d9-6564-41fa-9993-84c708ca35c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845dd3b-dffd-4116-8920-c3101835f20f",
        "cursor": {
          "ref": "2c043a3b-c549-4e0c-954d-9f00034ce095",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "33b53ee7-5484-4987-870b-6d9785c27fb7"
        },
        "item": {
          "id": "7845dd3b-dffd-4116-8920-c3101835f20f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "804fb921-d886-4a7f-b021-63a61ba42bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a6a0f-bcf6-4a35-9d51-f4d5cc833842",
        "cursor": {
          "ref": "588b13d4-a413-4fa1-8daf-1cc600292384",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f2895f61-cc28-48a5-8abd-e77c1116f00c"
        },
        "item": {
          "id": "ea8a6a0f-bcf6-4a35-9d51-f4d5cc833842",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "96688931-9042-4bd2-b725-74330ebbac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06f5797-8676-4949-b4f3-a861952f9ede",
        "cursor": {
          "ref": "501d47f6-2021-4486-9558-ab0944c97ffc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cdf2e87d-e93e-4f4d-80e0-d93ecc4da3df"
        },
        "item": {
          "id": "d06f5797-8676-4949-b4f3-a861952f9ede",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "677086c0-5a2c-4469-a8b4-41157080a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fdac2b-ad19-4be8-b1b2-881c8d35b081",
        "cursor": {
          "ref": "a905c800-4f91-4b0a-88e3-16274fbb4af5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "afd1bf43-042f-4ac5-8d1f-61b1474f2f19"
        },
        "item": {
          "id": "14fdac2b-ad19-4be8-b1b2-881c8d35b081",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f8f96f1b-afa8-458f-ac1b-f99dc17e15bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c723566-0f91-402b-9966-66dbd887f8b6",
        "cursor": {
          "ref": "a85d5f26-bcad-4501-824e-bcaab548910c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a5901e50-e7d2-42e5-a869-89f6ee53e064"
        },
        "item": {
          "id": "7c723566-0f91-402b-9966-66dbd887f8b6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7484e785-73eb-4a48-9950-586db892e176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3bcac7-9804-46dc-b8dd-a9d01a436aac",
        "cursor": {
          "ref": "36f3c995-497d-452e-aaaa-9ef62d86777f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dd2fa939-b1f4-4537-966e-038551287e1b"
        },
        "item": {
          "id": "2f3bcac7-9804-46dc-b8dd-a9d01a436aac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a2c7a9de-2614-49ae-966a-5282292c31a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73272158-1a78-4a4d-8ce5-0a16e1fc6699",
        "cursor": {
          "ref": "8d5c066e-f251-4925-8d6e-f6d271dc9617",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d27871a-88ba-4a4e-9cc6-0fa784f7e943"
        },
        "item": {
          "id": "73272158-1a78-4a4d-8ce5-0a16e1fc6699",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c4287d98-3e1f-437e-bb05-f1c4e32f41c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4c73a-a3ee-49bf-9c62-a65697276684",
        "cursor": {
          "ref": "d51b0baa-ca5b-430d-a33f-92c1d8ab3329",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "86d98e92-fec3-475f-a01e-9674e23a6e13"
        },
        "item": {
          "id": "40d4c73a-a3ee-49bf-9c62-a65697276684",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "098c506f-e7f3-4a14-8e03-a8a512562716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7956f2b9-10d5-4276-9f4d-2d889b21f024",
        "cursor": {
          "ref": "0200f091-179d-4e6c-bb7d-c66738439ff3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0caf9568-04b2-4ed0-bb30-3e846bbc39d8"
        },
        "item": {
          "id": "7956f2b9-10d5-4276-9f4d-2d889b21f024",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ee918a28-2a33-4404-bfaf-8fd8b372e624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f97cd2c-053f-4586-9208-64c4cd7a36a1",
        "cursor": {
          "ref": "317154e4-96f4-46ce-be55-8b9fcbfd5c02",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f170b1bf-1043-4437-98a2-e28b59855bc2"
        },
        "item": {
          "id": "5f97cd2c-053f-4586-9208-64c4cd7a36a1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b91f254b-1f16-4a82-bb36-8cae870ba391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07f225b-7dff-4507-89c1-1c073ff03a24",
        "cursor": {
          "ref": "de1853a5-311a-4be0-92df-a49559d50902",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4fd2a5bb-c6a6-4bca-9802-0edf9eac8a53"
        },
        "item": {
          "id": "c07f225b-7dff-4507-89c1-1c073ff03a24",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5005cc5-4659-470f-a7c5-a7a0ca540dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b21eb7-a3dc-44f2-a5b4-fda80c37668e",
        "cursor": {
          "ref": "65a79356-0e76-481c-86cf-5fadf7b5926c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fd880f7c-84ce-4902-bb1a-6a552607149a"
        },
        "item": {
          "id": "45b21eb7-a3dc-44f2-a5b4-fda80c37668e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "548e47ad-bae8-44e2-bf50-6cad4f535b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07062c7c-39ed-450d-b1bf-25505be0bce2",
        "cursor": {
          "ref": "d2f0d4bc-958b-4034-a732-6c1e34f61aca",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee83c0ac-5446-4f6f-8b07-95cc114f78a5"
        },
        "item": {
          "id": "07062c7c-39ed-450d-b1bf-25505be0bce2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "605270c8-9ece-4f07-95b5-af2046bd687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583a9768-ee77-44ee-8101-2199a830b1d5",
        "cursor": {
          "ref": "d855e85a-1a2c-410c-b654-80b9c56c22f4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8fab7675-114c-4183-bd1f-c3fa2223301e"
        },
        "item": {
          "id": "583a9768-ee77-44ee-8101-2199a830b1d5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8de9da6e-85ba-410e-a92b-dcad9eb9cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba18e362-e0d5-47d6-a9ec-79b8c0b09f97",
        "cursor": {
          "ref": "03083fea-c25e-45f8-a68d-e436ad8e3b53",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "05482444-1ab1-4794-af1e-4d9896dc702a"
        },
        "item": {
          "id": "ba18e362-e0d5-47d6-a9ec-79b8c0b09f97",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "572027c3-f6d7-4caf-aebf-8855ee7a5b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7705cb0c-f837-4a16-83ad-5918ca5090af",
        "cursor": {
          "ref": "7d94385b-16b6-451c-b218-72bb5eadf341",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "97a08869-a27b-419e-8c4d-59a2ecdadc18"
        },
        "item": {
          "id": "7705cb0c-f837-4a16-83ad-5918ca5090af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d7df7e11-7b4a-4a51-ba3e-f79fb80d59a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd4ab7-0342-4337-a4c3-c4a879028b5a",
        "cursor": {
          "ref": "1d85f71e-2901-4b23-a7ac-36f484037ca4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "104e502b-4c12-486d-8e50-a0952be73660"
        },
        "item": {
          "id": "27dd4ab7-0342-4337-a4c3-c4a879028b5a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "71f7b893-da42-4105-95e9-6e53c6def87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee46f472-396d-46a2-9360-deb6cc7ea5f6",
        "cursor": {
          "ref": "a904af96-2752-4590-a4c8-3919ca35ce72",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e1627cca-dde4-4ecd-a479-167701f179ed"
        },
        "item": {
          "id": "ee46f472-396d-46a2-9360-deb6cc7ea5f6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ee699b76-ba95-4d1d-8df7-408bc0c259da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffe1976-8f8a-4a76-8de3-f8c6d9bfe488",
        "cursor": {
          "ref": "d7a1e145-9d2e-42b5-92ff-e5ee3233b405",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2810e291-a3ee-459f-b48e-1055c5bfafc3"
        },
        "item": {
          "id": "bffe1976-8f8a-4a76-8de3-f8c6d9bfe488",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5163e820-e616-46a5-a278-23769426a957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226d0ee1-e9e0-4206-a037-4eb1f4080495",
        "cursor": {
          "ref": "9b6d4ee9-912f-4074-a5a8-eb511398d1c7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1e59265-e62d-4064-a379-b701512ccba1"
        },
        "item": {
          "id": "226d0ee1-e9e0-4206-a037-4eb1f4080495",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "86103f17-aeb8-4e3a-9fd5-45884e12adfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9287c735-b17d-4efb-96ff-dd9815953868",
        "cursor": {
          "ref": "57a8ef76-dbb4-4f4d-9341-3b7003c5076d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dc479e8c-2561-4ecd-9878-11004f34f57d"
        },
        "item": {
          "id": "9287c735-b17d-4efb-96ff-dd9815953868",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3b12913-6b72-4f9d-948e-c180fbcc5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ca3d1d-1515-4065-a3ab-9a2f50d8ee0b",
        "cursor": {
          "ref": "45f0ad61-c0c2-4665-a7a2-edbd83888b9b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5fa29a79-4c1c-48d7-9704-ddfdefb0786b"
        },
        "item": {
          "id": "52ca3d1d-1515-4065-a3ab-9a2f50d8ee0b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "92218dfd-3bdc-4830-a5ec-7fb82a5082d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b9fc1-11fb-40b0-9db3-0340ba52f465",
        "cursor": {
          "ref": "2814f841-1ec1-4b52-8325-f1ea01a8d774",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "57e932b9-fb55-45d6-bde6-2fe081c600ee"
        },
        "item": {
          "id": "b78b9fc1-11fb-40b0-9db3-0340ba52f465",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "02b3b437-12bf-4a66-9b34-5a612f6ea4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8085d6-9421-4686-b211-6c4b5d30a28a",
        "cursor": {
          "ref": "d1de342d-2ea3-4791-a0e9-69eb65d2eb0d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "97d1e12c-0d0d-4a0a-9d2b-fe3b2e9bf837"
        },
        "item": {
          "id": "2a8085d6-9421-4686-b211-6c4b5d30a28a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "531eaedf-9bab-4090-aef6-ac59bdc92c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9355365-2781-4717-b136-be337baff6d3",
        "cursor": {
          "ref": "54b01e5d-f678-4f22-93d0-b2a57d340262",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "87c17be5-12b1-4194-abbf-c2a08c973974"
        },
        "item": {
          "id": "c9355365-2781-4717-b136-be337baff6d3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fab2ee6f-edf8-4d65-babb-d35dcc410722",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1421614-47b6-4fcf-9010-8116ec03f293",
        "cursor": {
          "ref": "b1d914a8-e2c8-44aa-b0eb-027da79d4a21",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e869ba99-6dbb-4b5b-a7ad-f29cf295db34"
        },
        "item": {
          "id": "f1421614-47b6-4fcf-9010-8116ec03f293",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a0af7210-8636-4f33-96ed-49dfe2ba844c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1e4eac9f-9875-4eb9-b312-6799db717772",
        "cursor": {
          "ref": "4ff2d081-fca1-4d9d-9085-589dfcaaced4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "91e7c1b4-1bc6-4e9f-87d5-bcfdd223561d"
        },
        "item": {
          "id": "1e4eac9f-9875-4eb9-b312-6799db717772",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7ba6dd9-68dd-4648-968d-810599c96b66",
          "status": "Created",
          "code": 201,
          "responseTime": 12351,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05f8883-0128-440a-856d-3becd7694c70",
        "cursor": {
          "ref": "46191be2-a5b1-44c3-bb65-df2ea9797c14",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "76e8fc86-010c-4dcd-ae7c-179d84b882f6"
        },
        "item": {
          "id": "e05f8883-0128-440a-856d-3becd7694c70",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b9f8addb-4f78-4271-8195-202d8872434b",
          "status": "Created",
          "code": 201,
          "responseTime": 12266,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "855e9f46-6921-4998-8ab8-3c0439f6b3a4",
        "cursor": {
          "ref": "6a6e25ba-e0e3-4ded-802a-4371e9914d57",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "54ed6142-1122-48c9-98bc-5918821aaf5c"
        },
        "item": {
          "id": "855e9f46-6921-4998-8ab8-3c0439f6b3a4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4570a97f-a857-4351-adfe-36a6c22472ed",
          "status": "Created",
          "code": 201,
          "responseTime": 11986,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfd355a-13dc-4f20-8ae3-b62215a20ddd",
        "cursor": {
          "ref": "b084b75a-303c-4479-9f36-ee382f9fe95f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3cbb5ae3-f30a-4a76-b97b-37b780c38dca"
        },
        "item": {
          "id": "5dfd355a-13dc-4f20-8ae3-b62215a20ddd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fea8a169-269e-477a-8067-5cfc853cf440",
          "status": "Created",
          "code": 201,
          "responseTime": 11752,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c897da97-a319-4e79-bac2-094466ee6a4b",
        "cursor": {
          "ref": "7f07e209-913e-4bc8-8cdd-b47a24c78b27",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc8793db-4871-4ebe-ab75-344d5c9c67ac"
        },
        "item": {
          "id": "c897da97-a319-4e79-bac2-094466ee6a4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "429523f6-3af1-407d-a5bf-20f5d6a501b5",
          "status": "Created",
          "code": 201,
          "responseTime": 12123,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-25T00:46:02Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-25T00:46:02Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "83708d07-f265-4371-a5ba-fd52e7a53bc8",
        "cursor": {
          "ref": "6347e5c8-94ba-4e35-bd48-8785b12cc8ce",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8cd7b8d0-5676-44bb-a0d5-766e356700f4"
        },
        "item": {
          "id": "83708d07-f265-4371-a5ba-fd52e7a53bc8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "168b0217-74e0-43d2-979d-8b6db0b107f5",
          "status": "Created",
          "code": 201,
          "responseTime": 11759,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060d7024-fc17-407b-b24a-6d642fc73172",
        "cursor": {
          "ref": "9e557362-3ac3-4fac-bcdd-d8b17737e07c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "930ddb33-88af-428b-bb90-aba9641d6a96"
        },
        "item": {
          "id": "060d7024-fc17-407b-b24a-6d642fc73172",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ca0a107b-4b4a-49c8-96bb-0ebb8d1a92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b351e564-2398-4cd7-b330-50311d6c8671",
        "cursor": {
          "ref": "c9dc288e-390a-42d4-82ea-fa7dde3af906",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3107c65-c3f3-457a-91ed-ce2a56f2cc5c"
        },
        "item": {
          "id": "b351e564-2398-4cd7-b330-50311d6c8671",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa9e0a4e-4afe-49d7-b5d7-18d5da66ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a4d46d-c6fa-4a81-9174-c242eaaab1f4",
        "cursor": {
          "ref": "b504e732-2c86-4ed0-867d-cac4f4c4f026",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6309f7ec-3d3a-4eb9-9c1d-2e846b841b74"
        },
        "item": {
          "id": "b8a4d46d-c6fa-4a81-9174-c242eaaab1f4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f6bfb626-d75b-4e3d-83bb-35a5d5aa5f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab3085-5086-4934-8455-c2086ed831bf",
        "cursor": {
          "ref": "14d122fa-40a4-45c7-ac38-7025e570b4fb",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7199d76e-f219-4009-bc4a-8db3b73b6f90"
        },
        "item": {
          "id": "82ab3085-5086-4934-8455-c2086ed831bf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e40d627f-8a94-45d3-8f4f-ca80382c325c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b12a78-4b60-4d33-9237-45d33c534e1b",
        "cursor": {
          "ref": "24bed6bf-a9d5-483e-ba07-51896b9a55cb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9162e906-a7dd-4133-9a22-791ae0448fa9"
        },
        "item": {
          "id": "f5b12a78-4b60-4d33-9237-45d33c534e1b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2f71408e-5412-4192-b831-98e4c540198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c4fc1a-f8f7-4a31-b335-923d4b7ab265",
        "cursor": {
          "ref": "8692b9c0-9534-4f84-a6a1-35d68932a78b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4768b440-ccc3-4517-b307-ae00e5836376"
        },
        "item": {
          "id": "b1c4fc1a-f8f7-4a31-b335-923d4b7ab265",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ea9649af-ad7b-4041-b6d3-f647d267420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ce699-f4bc-4a50-ac80-14c03ee5ab9f",
        "cursor": {
          "ref": "d76a030b-2bcb-4c77-98a9-0e4f25f6717e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "acabedbe-6433-4bdc-a313-ae157b68f807"
        },
        "item": {
          "id": "ec4ce699-f4bc-4a50-ac80-14c03ee5ab9f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7892cc3-2569-4003-b230-99e0e1ebdd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af166174-226e-4575-9977-f2d3d57f85e8",
        "cursor": {
          "ref": "b222f82f-c347-4250-b037-26017e8f1550",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "219235d2-9631-4fa2-be29-966ccbe51802"
        },
        "item": {
          "id": "af166174-226e-4575-9977-f2d3d57f85e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f23f68e5-89ce-4399-aeb5-9850e20ab556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b990fe-03ff-4f85-91d9-05eda6d11411",
        "cursor": {
          "ref": "e442e4bc-6794-4958-94bd-eb3be11221c0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca4c8d88-baae-449f-a680-858fb631fe60"
        },
        "item": {
          "id": "15b990fe-03ff-4f85-91d9-05eda6d11411",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71c734e1-82ca-4ac4-97b0-3b04e8aec996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554822e0-4508-4c53-ae7e-19791d6b5b25",
        "cursor": {
          "ref": "3d1d5064-6b7f-4475-b858-3fbdf9c586c7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7054623b-5da6-4acc-b1c9-39faa9ce694c"
        },
        "item": {
          "id": "554822e0-4508-4c53-ae7e-19791d6b5b25",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8c1fcfd1-129d-488f-9f51-12a7be112460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb952b85-42d6-467a-9f7a-bbd4e29eb7ac",
        "cursor": {
          "ref": "c308e36e-675b-411b-9d1b-0bf1aaa078cb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "02d6fc0d-95cc-4b63-a50d-25c5ebfd7f92"
        },
        "item": {
          "id": "fb952b85-42d6-467a-9f7a-bbd4e29eb7ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc1ea411-5893-4dfa-ac7d-55285f91bd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac66afe-19b9-42a5-96f8-fa2984416916",
        "cursor": {
          "ref": "37f3eea0-88c1-4eda-bab5-5a5e5c857bdf",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "839f87db-0201-478f-aeed-4446e41293ae"
        },
        "item": {
          "id": "fac66afe-19b9-42a5-96f8-fa2984416916",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "91ddf581-f7ee-46a9-bdaa-17d6a3506e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bea40b-e2d7-439c-b62e-7b91b95030d0",
        "cursor": {
          "ref": "38a8e60c-da34-4491-825b-f13fe998d707",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ac18b7ce-b2ce-47c4-8f4c-91fe99e86c97"
        },
        "item": {
          "id": "c8bea40b-e2d7-439c-b62e-7b91b95030d0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf196c38-f9d2-404e-b4c3-4f43fd9b027c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270cdd71-80ca-4b47-aa16-c1df91e1f3c9",
        "cursor": {
          "ref": "ba4e513b-ddd9-45dc-803f-e04aed6d116b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a37b4c54-9495-4597-b87b-47e4e6e33237"
        },
        "item": {
          "id": "270cdd71-80ca-4b47-aa16-c1df91e1f3c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b92e9e83-60c1-463e-ab0c-1061ef4ff549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e6c9e-389f-4945-9f8d-6421dce1d52e",
        "cursor": {
          "ref": "b47ae7e4-3374-49db-9cab-478ab0121f89",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b452cb26-de06-4b57-862e-41ef1bd4ff48"
        },
        "item": {
          "id": "584e6c9e-389f-4945-9f8d-6421dce1d52e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "085e8bea-8c18-4135-ab71-5030fae5df77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34901150-b8b2-408e-8e6c-676e9d5b3f0f",
        "cursor": {
          "ref": "5be6f33f-be14-4314-b050-a281cbfe411d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "207f0f54-4a06-4cb7-a75e-64ae964522c4"
        },
        "item": {
          "id": "34901150-b8b2-408e-8e6c-676e9d5b3f0f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b75fdfde-01a5-41d3-a489-1a3189960f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb60bcd-a916-41d2-af95-a1d00f1fa866",
        "cursor": {
          "ref": "7a7ce188-2922-4da4-94e4-093ac04561b2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b0e254de-03ee-4b76-a8f7-0feca4232cd4"
        },
        "item": {
          "id": "fcb60bcd-a916-41d2-af95-a1d00f1fa866",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8551ab28-8e1c-49cc-914c-8b3d637bb4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5bf0b3-4a4a-4c93-bfce-d86b1ae375ec",
        "cursor": {
          "ref": "3710f9cb-4432-4fa5-a238-c8af2d0b0cba",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10c43485-682e-4e0f-a725-6398ea15a7b3"
        },
        "item": {
          "id": "4e5bf0b3-4a4a-4c93-bfce-d86b1ae375ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55f7e44c-2bbb-4e67-a927-344c88fa1328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1059d3c1-abef-4187-b84a-8232076d7c10",
        "cursor": {
          "ref": "7c57843c-0445-492f-844d-7e6e344c86f6",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c9cde450-2bee-4eec-a6ee-61c7ddba1b7a"
        },
        "item": {
          "id": "1059d3c1-abef-4187-b84a-8232076d7c10",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "673f2bfd-9425-40a5-9be6-281ddc34b93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5419db5-1595-4fa6-aed5-e2c948d0e9a6",
        "cursor": {
          "ref": "05473290-069e-496e-8f09-e0007cc065d6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae43f270-3c50-44c6-bfe4-895f4ba6fb87"
        },
        "item": {
          "id": "b5419db5-1595-4fa6-aed5-e2c948d0e9a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "109c5b3b-14e6-4e45-a00c-543db4e17f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4fcf3b-53b3-4588-a63f-849140eebb53",
        "cursor": {
          "ref": "47f8f459-0d98-4dcc-aacd-9f1b001de498",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09cb287f-0ec5-4942-8289-0255ae0742b3"
        },
        "item": {
          "id": "fd4fcf3b-53b3-4588-a63f-849140eebb53",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dd22f039-b9d1-4713-a119-8c569cb3b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f0ab5-a2ff-4dcf-8d49-df38025585a8",
        "cursor": {
          "ref": "4ec35f2a-091c-4c2e-9914-9b753dd2ee59",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06624d28-91d5-4856-9101-a4637ea84237"
        },
        "item": {
          "id": "6c1f0ab5-a2ff-4dcf-8d49-df38025585a8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ac9d970e-d928-4470-9534-7ea1a92d6be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c00f5a-af1f-4f14-9e1d-d062554800a0",
        "cursor": {
          "ref": "9d7e1427-0754-4f64-9679-77787513ee41",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "383ef57a-ab56-4510-ba64-c99c92c726b5"
        },
        "item": {
          "id": "51c00f5a-af1f-4f14-9e1d-d062554800a0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9ac1441-462d-403d-8eac-83bb585cae1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5198ec42-347d-4ec6-bac3-31f657c04bb8",
        "cursor": {
          "ref": "7ae8eaa0-e9c6-444e-8d7b-1861c2be31c3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "011f8aea-133a-4a7f-96e5-4fbb25afa458"
        },
        "item": {
          "id": "5198ec42-347d-4ec6-bac3-31f657c04bb8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2bda4e25-2cb5-4adc-903f-c0ac3fb4a793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda5c902-4275-4ab6-9689-e2716c22a741",
        "cursor": {
          "ref": "cbbdb13d-df2e-495f-a93e-23291297c3d5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "77ddf6c4-b912-499c-86ac-a266d8fe8dc9"
        },
        "item": {
          "id": "dda5c902-4275-4ab6-9689-e2716c22a741",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01044c2d-b3b3-47c7-8fc5-98a87fa7e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962d206-da48-442b-b115-acdbaf5de38e",
        "cursor": {
          "ref": "4c237a5f-c387-462b-9fa1-596513229ff2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fbb88898-8e12-4715-bb5b-177f00bb961b"
        },
        "item": {
          "id": "7962d206-da48-442b-b115-acdbaf5de38e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82e1f806-3a46-4864-859e-a1604ccb1c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8218156a-b32f-46be-89b1-f853fe943505",
        "cursor": {
          "ref": "aa8bec50-24ea-4b83-bd26-914c957d9fee",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8dfc61bd-21a1-4463-b55b-e99f7e9d5e17"
        },
        "item": {
          "id": "8218156a-b32f-46be-89b1-f853fe943505",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "418f47d5-5e61-4fd1-a043-8ce88d5a5d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b950aa-23e7-4971-b214-5d822c9cd998",
        "cursor": {
          "ref": "d1f0ae06-def4-4820-9663-8918dc8425f9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e54e35d4-2883-48ad-9dab-863cb9a7e699"
        },
        "item": {
          "id": "27b950aa-23e7-4971-b214-5d822c9cd998",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2c5314d0-a861-40bd-a641-6518a66bbf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8a3787-1ec5-4af5-b519-6f4ced598caf",
        "cursor": {
          "ref": "73b05f2e-e123-442f-8d22-41b7ee2b7185",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4f4fd90-1ed3-4b13-b3b5-10baac6d9c8c"
        },
        "item": {
          "id": "de8a3787-1ec5-4af5-b519-6f4ced598caf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dba19ad5-355e-45b2-b4b5-9b1082d4fa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b48e0b-1e48-4dba-b5df-6d8de29e0a7b",
        "cursor": {
          "ref": "fdf09c94-5281-4148-ae22-ace2f709f1b6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "787498df-429d-4c21-bcf6-d0e15975a1d7"
        },
        "item": {
          "id": "f7b48e0b-1e48-4dba-b5df-6d8de29e0a7b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d259b33b-554e-4140-9051-16c18d11cc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2f397f-ff24-4fde-b089-b356635efa69",
        "cursor": {
          "ref": "ac8cb949-1d10-49ec-a6fd-cbbb149b543d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "00267053-6715-4b03-b100-d1261a28e56e"
        },
        "item": {
          "id": "2c2f397f-ff24-4fde-b089-b356635efa69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "43b34f99-fef0-42ca-a0a8-6d3037bb2fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde9f74-3c3c-419b-a074-2bd944f1aa3f",
        "cursor": {
          "ref": "75793e15-32e7-4aaf-a896-48fd46ff4675",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b574614f-ed4f-4cd2-a65f-abe4caf5cf2a"
        },
        "item": {
          "id": "3dde9f74-3c3c-419b-a074-2bd944f1aa3f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "702c70f9-caae-412e-9efa-aa91baf9b1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa710e4-b7fb-413a-a567-63d1e9a1f97a",
        "cursor": {
          "ref": "6d6a2e04-0727-4043-9dfd-2477c677fa4c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1c77a8d-cc21-460e-9871-efe47196b5c1"
        },
        "item": {
          "id": "4aa710e4-b7fb-413a-a567-63d1e9a1f97a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dbc2d23a-f1b5-4a2c-81c1-591ff098ca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7078ecb-fba5-4031-9fa0-d365beb84de8",
        "cursor": {
          "ref": "b2e7113f-65f4-46e5-b573-2645f2740ccb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "98d1ddbd-a3f9-44df-829e-790f2c91ac4f"
        },
        "item": {
          "id": "e7078ecb-fba5-4031-9fa0-d365beb84de8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e49c79a8-3405-461f-84e7-8e929f446cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19847f56-89b9-4088-ae3c-573a3f5d373f",
        "cursor": {
          "ref": "39eb3cf6-9cf4-42e5-bee8-c04167bb804f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e3f06e8d-9e53-4b7b-8e87-4c7548fe13c0"
        },
        "item": {
          "id": "19847f56-89b9-4088-ae3c-573a3f5d373f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e9225cbe-5eec-4419-9d08-8663862efc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26652b9f-4d9a-4967-af99-a65b6381af4f",
        "cursor": {
          "ref": "e9715c6f-27e8-4366-9dc0-56f77f1bf3e3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3acab8ee-885c-42c4-8e2b-abc313812374"
        },
        "item": {
          "id": "26652b9f-4d9a-4967-af99-a65b6381af4f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6bd9d877-3dce-4bb0-9f29-940a0c5c698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056a59ba-671c-4522-b691-e7871a345d4d",
        "cursor": {
          "ref": "de50aca7-a630-42be-a1a9-ffeee25940f3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4213b38c-fd3c-4a6b-b159-e54d296ea1f7"
        },
        "item": {
          "id": "056a59ba-671c-4522-b691-e7871a345d4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "38505f1d-580d-4d37-95e4-9584775c19aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf65d4bd-17e5-4fec-9887-047b7170e22d",
        "cursor": {
          "ref": "1d52451a-f7ec-4272-996d-14a74a8e33ae",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e10372f2-2562-4650-a67d-9b3742de4116"
        },
        "item": {
          "id": "bf65d4bd-17e5-4fec-9887-047b7170e22d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "92894d88-b6dc-42bc-9bdd-f606b78befad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda559f7-8712-4943-82fe-405c61bc639f",
        "cursor": {
          "ref": "7419bdaf-09ea-48b5-99b8-5dbd03fe9f39",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0406e4e-a18f-4406-9db7-cc327a6c16af"
        },
        "item": {
          "id": "bda559f7-8712-4943-82fe-405c61bc639f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a69ed51-4e85-4676-b8f5-d59df15b992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071ae19e-5342-44a0-b321-c7dd743b7e33",
        "cursor": {
          "ref": "00323b20-afd6-498f-963b-5b08d552ccea",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5aa24104-2baa-418c-a122-0275bf90b6bc"
        },
        "item": {
          "id": "071ae19e-5342-44a0-b321-c7dd743b7e33",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a1a321e4-6413-40f2-ba05-201453d4399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3060ba-3da8-41a1-bd19-f7fd9fe19db3",
        "cursor": {
          "ref": "b431b23a-395b-4a3a-aab9-119ac4b29537",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "342b1880-c037-4d1d-adf0-3f4ffaa0f25e"
        },
        "item": {
          "id": "4c3060ba-3da8-41a1-bd19-f7fd9fe19db3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a71043f-f81e-426c-a748-ad48c780b40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6103b4f7-f913-4148-a3f2-d53be6fa8b45",
        "cursor": {
          "ref": "d63c3f7d-9996-44cd-9a97-18621439c2b6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ec0aa294-6381-4743-95c6-d2942d504b6f"
        },
        "item": {
          "id": "6103b4f7-f913-4148-a3f2-d53be6fa8b45",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe5a981e-17b0-4647-ac1a-4db8f8dd2556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ef71d-0f9a-42c1-adff-98d5df1ac87d",
        "cursor": {
          "ref": "c76f6680-c7a1-4416-ab6b-841e7b536ddd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "590c41bb-403b-445d-a9f0-328783aa2102"
        },
        "item": {
          "id": "659ef71d-0f9a-42c1-adff-98d5df1ac87d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "147f98b0-d48e-4aea-aaa4-6443a94a35e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea666aa-8d19-4cfb-86df-0b8b89a737e7",
        "cursor": {
          "ref": "21729ea4-d1b1-455f-b986-03436a5e89f0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d61fdca1-29cb-458c-b04e-717eca8780f6"
        },
        "item": {
          "id": "1ea666aa-8d19-4cfb-86df-0b8b89a737e7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7b20ce7b-7a39-42f0-934e-cf55edfcfdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b2afa4-ffd2-4a1c-8ead-40576e6c4d74",
        "cursor": {
          "ref": "289d556e-9775-4b2b-ae0d-1193334f0d1e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6fe023ab-6903-4af2-9c58-6c9ad5798f77"
        },
        "item": {
          "id": "f6b2afa4-ffd2-4a1c-8ead-40576e6c4d74",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "93de5624-eaf8-44c8-9bd8-ac3c14d4c805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3034c6cf-76d4-4bb2-abb5-c714c117c0e3",
        "cursor": {
          "ref": "7b23318c-729a-41bd-aa24-50dfa48077e0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8e786614-20d0-4f77-a9d6-301f352eedc1"
        },
        "item": {
          "id": "3034c6cf-76d4-4bb2-abb5-c714c117c0e3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "563e3e5c-a9d4-442b-bdb5-0fc5962435b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074403a1-9dde-4e84-a4c2-208531dfc32a",
        "cursor": {
          "ref": "177d7a70-7fbb-43fd-a970-0f9ede4a0ff8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d6f4b54-936e-434c-bea9-fefdc4caf6f1"
        },
        "item": {
          "id": "074403a1-9dde-4e84-a4c2-208531dfc32a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18aaf800-79de-4d20-931c-c36b080f1e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85c564-3af2-4a3f-ab34-252ae0f2abe7",
        "cursor": {
          "ref": "9fd47553-9379-4b6e-949d-be51f495f251",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b70104cb-040f-4c37-a13b-3e4425b18b64"
        },
        "item": {
          "id": "ba85c564-3af2-4a3f-ab34-252ae0f2abe7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "162bb7ba-996f-4e57-aec5-df06179358d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c2d0f4-d8fc-410b-b749-342a527789ca",
        "cursor": {
          "ref": "f2b2a298-8e3f-4424-95a8-f1e9011ef9af",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0de7348c-cc79-4bf8-8b01-a3ecbb9a9e7a"
        },
        "item": {
          "id": "a9c2d0f4-d8fc-410b-b749-342a527789ca",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bf78e719-aa29-4bb3-b730-b5e86ad5b8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db3c03-a01e-41ff-848d-ddd040858d2c",
        "cursor": {
          "ref": "23999a55-fc30-4666-8e37-eb4e93a90a85",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2d0366db-e037-47b3-b864-b66819fd12bf"
        },
        "item": {
          "id": "28db3c03-a01e-41ff-848d-ddd040858d2c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eaeca840-c45c-4aea-83f2-824dc96ef67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f8e4e-c45d-4526-b8e0-2575185c3237",
        "cursor": {
          "ref": "7b0f0ee2-e964-4704-b754-8f676167bd78",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fa529d2f-d1a3-4866-b582-bc4432d4dbf7"
        },
        "item": {
          "id": "572f8e4e-c45d-4526-b8e0-2575185c3237",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f85fdd09-ef86-4844-83f0-7f5f2947d050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb89805d-e804-429e-8846-f51c42b61fd0",
        "cursor": {
          "ref": "17f6154c-8138-440c-9464-2837d905a87a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b3c62d4a-f56a-4412-b00d-0761d5664e0e"
        },
        "item": {
          "id": "fb89805d-e804-429e-8846-f51c42b61fd0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "498a8f11-a93b-439e-b7f7-2f1710d5ccbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7dc3b-db39-484e-9fe6-91a5e704b154",
        "cursor": {
          "ref": "9f0246e5-9fe5-4bac-86d7-5d26f19d6c28",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d5a5611d-f946-4307-bba9-f434a0645d3d"
        },
        "item": {
          "id": "5cf7dc3b-db39-484e-9fe6-91a5e704b154",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6daada35-eec6-4240-bf4a-54dacc96cacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf51a471-e4e1-4a1b-9aa6-c320cdbd2bac",
        "cursor": {
          "ref": "839ec1b0-cea3-43f7-896a-e95811dad54e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c2846ea2-c372-4d21-ba61-7657e02798e7"
        },
        "item": {
          "id": "bf51a471-e4e1-4a1b-9aa6-c320cdbd2bac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2609e66c-ceca-4726-9a7b-616dbb24bf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140c6b38-aa6a-4001-b52a-a06183f01db4",
        "cursor": {
          "ref": "8187c8c6-c67f-49d5-8ff0-ed419c35aa32",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c33d977-8437-4038-bd92-a3bc0c019cea"
        },
        "item": {
          "id": "140c6b38-aa6a-4001-b52a-a06183f01db4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6d52e0ac-2a53-4ca5-829f-f174f9052711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3d81d9-8b16-4575-920d-91cffa918ec7",
        "cursor": {
          "ref": "d7982c84-8d4b-4975-a650-d367ee672149",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed2dd5c6-3372-4912-887d-464331c43f6d"
        },
        "item": {
          "id": "aa3d81d9-8b16-4575-920d-91cffa918ec7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9ba02bf7-ebd4-436a-82b7-dd96329d33c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a13c14f-93e8-4b84-af25-be02a5678bc0",
        "cursor": {
          "ref": "79bf9e95-6037-4b74-9800-bb791213ca46",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b3f4c57b-b628-486f-91a3-245d927411c3"
        },
        "item": {
          "id": "5a13c14f-93e8-4b84-af25-be02a5678bc0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e6f72850-22c6-4303-89d2-bec3a7037fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769489a-6cb6-44ff-9110-902202ef18a4",
        "cursor": {
          "ref": "c2031dbc-00f3-4ba4-9005-15b4790a7112",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "254e8092-d595-4f03-9ca6-329559b7c394"
        },
        "item": {
          "id": "6769489a-6cb6-44ff-9110-902202ef18a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5f64c06a-4e3c-40c6-9abf-d529497b642a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8ad6e6-ba9a-4bbf-beff-146e7d23dee8",
        "cursor": {
          "ref": "929de8c0-d1e9-48ae-9339-3c66d6e13c3e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f5ab1799-cfa3-4e09-be5f-4cd5c4c528e1"
        },
        "item": {
          "id": "da8ad6e6-ba9a-4bbf-beff-146e7d23dee8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae9873f6-80e3-44ad-b77f-56e502977342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556fb18a-f68b-4181-a2e0-b2bb1cbbb8c7",
        "cursor": {
          "ref": "58b10059-56c7-45fb-b495-df03abf6bb47",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e75838b3-6550-4196-8c51-15820d96db4d"
        },
        "item": {
          "id": "556fb18a-f68b-4181-a2e0-b2bb1cbbb8c7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bad2c1f7-609e-49c7-bd81-55a3b5e221ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc0e6f-8f85-4a7d-969f-4142c2a03de9",
        "cursor": {
          "ref": "80dd49e6-2b67-4582-a8f2-4211b2da26c9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "38b1a391-8ea4-4c04-9453-8d21fda0dd0f"
        },
        "item": {
          "id": "debc0e6f-8f85-4a7d-969f-4142c2a03de9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "533774cc-7ecb-446b-83c7-1fd2a5e7d5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ac84d6-e3d2-4888-9fb4-b4186295b36e",
        "cursor": {
          "ref": "9753fdc2-1b04-45f1-87e4-6755b9759e7e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22d70630-7e95-4d7a-b0f3-ebe31a59aa5e"
        },
        "item": {
          "id": "91ac84d6-e3d2-4888-9fb4-b4186295b36e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "27ca318f-16cf-4c2b-b01d-3bfe621ce41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc74e48d-ef2c-47c1-8a2e-bcead7264a24",
        "cursor": {
          "ref": "d3d987bf-2f05-46ef-8420-d7e393f2e97a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5f1ce710-79a5-4ebc-bb09-f7ddaf81b144"
        },
        "item": {
          "id": "bc74e48d-ef2c-47c1-8a2e-bcead7264a24",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "57891996-93a1-4769-9e07-278448cc75c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4318626e-b91c-416c-bed8-5a43042834c9",
        "cursor": {
          "ref": "8f4e69d6-d18c-4a31-8e64-b215694c9c08",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8e373f83-f116-42ee-ab4e-667508268e0b"
        },
        "item": {
          "id": "4318626e-b91c-416c-bed8-5a43042834c9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3118ca0a-a58d-4223-b29f-b2105ee65dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53f0f5-b947-4fc4-a1f2-d184f3deedf4",
        "cursor": {
          "ref": "b423a6bb-89e9-4b29-8b13-01584d68ce7c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fabe19fc-a3b9-4e1d-b8e8-782df997bca9"
        },
        "item": {
          "id": "0f53f0f5-b947-4fc4-a1f2-d184f3deedf4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5304dde8-92a0-43af-b1d8-14840b08bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55022fe-3d3d-4080-aa99-2f0d5580a868",
        "cursor": {
          "ref": "a8954ee1-e078-4a11-bfe1-5be5ef045304",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23b7e3ef-be13-43f0-bceb-b1d32c610fe7"
        },
        "item": {
          "id": "a55022fe-3d3d-4080-aa99-2f0d5580a868",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3c49173b-3f5a-439a-9818-1ddf6d1637ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b636db88-a9d7-4ff1-b9e5-31a16e3b0886",
        "cursor": {
          "ref": "55c9682a-007d-4ca5-83d5-29cf0acd64b2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a2beb2b3-2a04-4992-b5a9-66ed08c825bf"
        },
        "item": {
          "id": "b636db88-a9d7-4ff1-b9e5-31a16e3b0886",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "849a9899-5583-4ea5-acc8-6acedef293cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6708b90-e021-406c-afda-65c736c17bdd",
        "cursor": {
          "ref": "80343d40-e17c-4f3e-a91e-e70b6692e908",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0745ae7b-5180-40ba-a65c-b4c7be082817"
        },
        "item": {
          "id": "c6708b90-e021-406c-afda-65c736c17bdd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9583b3f2-bfbd-4256-a478-f8cb9a9d1a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ba498-3e24-493e-9712-8e0ba8a65cbe",
        "cursor": {
          "ref": "dada617c-54cb-4b1a-ba43-e2410be9e48b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e1920d15-1f37-41c8-81e7-dda87213c9f9"
        },
        "item": {
          "id": "f57ba498-3e24-493e-9712-8e0ba8a65cbe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c07ae6a1-fd5c-4e19-97bc-c927447ccc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d220d589-91b1-4945-9b55-6234ea1763cb",
        "cursor": {
          "ref": "53c6cedd-62cf-4b3a-be1c-95364772ea2a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9808120a-47ff-4188-8448-152a829381ed"
        },
        "item": {
          "id": "d220d589-91b1-4945-9b55-6234ea1763cb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "61608296-339d-48da-bfb8-2a6de39732fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920a8abc-456f-4331-b667-263b5cf5ab8a",
        "cursor": {
          "ref": "578562f4-cb4d-4a22-b596-993dce793c5b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa6b8449-54c3-4017-baf8-0727c64878f5"
        },
        "item": {
          "id": "920a8abc-456f-4331-b667-263b5cf5ab8a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1d1c3cc3-bfbe-47f2-9b94-6a81bb7ffe50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2c002b-36e4-4189-9fe0-6111ab7439a0",
        "cursor": {
          "ref": "ecf93131-080c-4100-bf40-4883856aaaa3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f9da536a-9bed-4da7-8c9f-fbca5f1afb19"
        },
        "item": {
          "id": "5e2c002b-36e4-4189-9fe0-6111ab7439a0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04e552aa-e229-4dc7-99b2-1a75cc216073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f2d3b8-07e7-4b59-a100-3e3dee7e41f9",
        "cursor": {
          "ref": "4cf38ba4-e41f-4208-9ff3-7ff10afa50f8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7ea9b7b1-4ff3-4edd-9d07-59f38f5214d0"
        },
        "item": {
          "id": "e3f2d3b8-07e7-4b59-a100-3e3dee7e41f9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "73f8e361-63ba-400e-b074-ec850ce61b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5102c723-faca-4cd9-9441-46f448712e0c",
        "cursor": {
          "ref": "b19d9ef6-1cf3-4a7a-9f45-a687537105d5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8619ad36-43e6-4915-85c9-f494438c3a68"
        },
        "item": {
          "id": "5102c723-faca-4cd9-9441-46f448712e0c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "23b0fcd2-206c-4e2b-a51c-cd5de180a6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8376c979-f240-4734-9eeb-fd0f9bd0cbca",
        "cursor": {
          "ref": "f98e4563-a7e8-420d-a07c-500eac015eef",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7dc7adb3-6561-4667-8c10-c4ed184dea53"
        },
        "item": {
          "id": "8376c979-f240-4734-9eeb-fd0f9bd0cbca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "099526fe-038f-4a79-b2e9-a44dd2163ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6301879-fe57-4e41-afb8-c70d91c5f868",
        "cursor": {
          "ref": "efa63f74-b502-4b11-9ad9-653ac884d13a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "54d157ed-bde2-406f-a157-5a46721ba771"
        },
        "item": {
          "id": "d6301879-fe57-4e41-afb8-c70d91c5f868",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a3614b33-e2c4-46d9-ad33-e10cc201351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992651d5-63bb-40be-8c2b-57c3bd9c7420",
        "cursor": {
          "ref": "b10dcd5a-e8eb-4383-8b91-be9f90548f37",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dcc93e95-6d45-44bb-ad6b-9cfa1ba2ccc4"
        },
        "item": {
          "id": "992651d5-63bb-40be-8c2b-57c3bd9c7420",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9fae8943-e9cb-4193-8abb-4c07b4db19ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e12f693-10c4-4d30-99c4-c2bdf5b60a6a",
        "cursor": {
          "ref": "56c846c9-6c20-4d5e-8da2-ab3bb80c1cb0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "40000e60-f2fe-4d68-bc71-6997a003ff8e"
        },
        "item": {
          "id": "8e12f693-10c4-4d30-99c4-c2bdf5b60a6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ecea9a72-5177-4aca-b303-b02e1db53e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875dc5a-6fd8-4b5f-8580-b9ea2e63143b",
        "cursor": {
          "ref": "420acf5b-1bf6-4ca8-9803-84bf569e43e0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c2a1930c-30d1-44d6-82d0-9bd6b214c1c4"
        },
        "item": {
          "id": "f875dc5a-6fd8-4b5f-8580-b9ea2e63143b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b736d37-a893-49a8-9027-84b774dc0e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ec0319-382e-45f6-841b-8647e5b73b45",
        "cursor": {
          "ref": "a5a49892-051a-4c11-9ca1-a06b9836f38c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "67783f79-1658-4175-8649-a8516dbfd9e9"
        },
        "item": {
          "id": "e5ec0319-382e-45f6-841b-8647e5b73b45",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f739009-64e9-46e6-89c5-184edfc20236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455e296-b6cc-4f00-913a-c0f67681c0a7",
        "cursor": {
          "ref": "50df9035-0283-459e-ba8b-3f788262c3f1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ede874b8-93fe-44d8-824b-9c8f9f952226"
        },
        "item": {
          "id": "7455e296-b6cc-4f00-913a-c0f67681c0a7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f96a0e93-7fc7-4257-b93a-bc471bb80903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5a14f0-bf5c-4b99-81f3-e3b9085aec64",
        "cursor": {
          "ref": "b9316ac6-a7d5-4142-b775-0ece1a6fba72",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "53bd2b16-64e2-407c-a038-74949c34173f"
        },
        "item": {
          "id": "8a5a14f0-bf5c-4b99-81f3-e3b9085aec64",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e639cfc6-6872-4dd9-9249-6363e4419f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db383421-25b9-463c-9aa7-cf6eba544b49",
        "cursor": {
          "ref": "c5d59d85-84a0-4c61-ad75-fa1686fb1a46",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "981c544e-1cdb-4c33-90b5-5b07ed7c7f3b"
        },
        "item": {
          "id": "db383421-25b9-463c-9aa7-cf6eba544b49",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bf7dae67-3386-4512-bc51-6bdbd8a3ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872929e7-f7bd-4122-85ea-1c7633248d6b",
        "cursor": {
          "ref": "fc63cd38-991d-4e19-ba62-9acd3761e2c1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "86b0e995-cfb7-41ef-b4ac-1c8005a1a35d"
        },
        "item": {
          "id": "872929e7-f7bd-4122-85ea-1c7633248d6b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3fbcc8af-6967-46e6-8aa0-e969f8e1deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479d189b-822c-4999-bb8b-400eb0b0121f",
        "cursor": {
          "ref": "856d7784-9116-472e-a27e-28a91248858c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7942103d-8dff-4ad4-8069-fcd01e0acd13"
        },
        "item": {
          "id": "479d189b-822c-4999-bb8b-400eb0b0121f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba80926d-c59c-4634-93bf-172798fc56e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804b8f14-76f1-462b-b229-445886997af2",
        "cursor": {
          "ref": "c4540e2e-393d-41be-b04f-bdcfb2e6319c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8f3a0f74-26ce-4163-b097-e79e6cf29c3f"
        },
        "item": {
          "id": "804b8f14-76f1-462b-b229-445886997af2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6f54ad93-eea3-4fcd-bea3-4d58d7324b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00ad2ba-d78a-475e-9f28-1aac82d61004",
        "cursor": {
          "ref": "c4f105f1-ad08-471b-b7ac-19e29827c70d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2ce962d1-5581-4c53-913f-277e2e189635"
        },
        "item": {
          "id": "a00ad2ba-d78a-475e-9f28-1aac82d61004",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "da75a092-dd01-43ad-aab7-d4a21df99320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c92fa7-c718-458d-abd3-e1b9328cea5e",
        "cursor": {
          "ref": "1f36da2d-f8ad-44da-b207-85d57f4432bc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3eb5fad7-ea52-4176-8615-e6124d8d66f4"
        },
        "item": {
          "id": "31c92fa7-c718-458d-abd3-e1b9328cea5e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c27dfa0a-c94c-49d2-af42-b2f2383aa611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3697fd24-82be-46d2-8139-7e36d6909fe0",
        "cursor": {
          "ref": "8eda7065-dfcb-49a9-aac7-b548eacf6fe2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ed8a55b4-b2a0-4b8c-a3fb-9541b16c5964"
        },
        "item": {
          "id": "3697fd24-82be-46d2-8139-7e36d6909fe0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ea3f65ee-f307-476e-b786-81f2e7836e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08e5615-a3b1-4746-a392-2390a93003d6",
        "cursor": {
          "ref": "91fb5ce2-1e25-4d07-bab4-9574c5732f67",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f4bac5a4-c62f-4882-9eee-31532e385e8e"
        },
        "item": {
          "id": "a08e5615-a3b1-4746-a392-2390a93003d6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f05c29cc-3b27-4cc4-a960-0acaf32bedbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04a0b3-0172-45c4-8c05-d147e53d5f3c",
        "cursor": {
          "ref": "7467fcd0-084b-4197-8af8-c3c187b11ac5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "94f5484b-8c34-4a66-a9f1-e1926b37ddf0"
        },
        "item": {
          "id": "3e04a0b3-0172-45c4-8c05-d147e53d5f3c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "efdfe79a-e5eb-45fb-aeec-095b4c40b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0f42b2-6b34-4f23-8880-490955b63da3",
        "cursor": {
          "ref": "e20e8657-cb9b-42bc-872a-bbf2b01bdfc1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0213c9ef-79d7-4efd-8385-10caf86ce03f"
        },
        "item": {
          "id": "2b0f42b2-6b34-4f23-8880-490955b63da3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2fbdb1c6-353f-44c7-828e-d9f54ab17cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976cba3b-cc34-49a8-830a-d365d38d5f90",
        "cursor": {
          "ref": "7cbb983d-efd8-406e-86fd-22af19c20b48",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "60b1037f-9b7a-49a8-ae0a-013628ce7731"
        },
        "item": {
          "id": "976cba3b-cc34-49a8-830a-d365d38d5f90",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45863c5f-1a66-4dcf-8841-3302947c969a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f38473-15ff-4786-a3f2-1644abd89f19",
        "cursor": {
          "ref": "b80d9aad-922d-4f77-9ba8-948e4f9590fe",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0473b93c-e00e-4fcf-97aa-88bf6c3c5109"
        },
        "item": {
          "id": "43f38473-15ff-4786-a3f2-1644abd89f19",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7355192d-19fc-47b3-988f-d71a703a30f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc20a50-4f9c-41d5-a767-0ad3e2135cf6",
        "cursor": {
          "ref": "efe527f1-6787-446a-86d5-f5b18a622828",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8d4ce42f-0709-4cd5-89fd-c9c216341b16"
        },
        "item": {
          "id": "fcc20a50-4f9c-41d5-a767-0ad3e2135cf6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8613c41f-a6de-4a02-af8e-3ccbc905f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8072afe4-eeaf-4f71-882a-4a8db6ed3ccb",
        "cursor": {
          "ref": "920b2183-850c-4233-8dab-109d008ec496",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d41449c0-e301-4347-966a-85ebea1281b9"
        },
        "item": {
          "id": "8072afe4-eeaf-4f71-882a-4a8db6ed3ccb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "86ae39dc-2993-47da-a9d3-0543806092c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89dd59-d8d8-4777-b80e-0ecddedf83b0",
        "cursor": {
          "ref": "fd09c5f2-2c7b-44bd-8903-85abf8b7bf48",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "296f059c-78ec-4be6-bc85-71757259435b"
        },
        "item": {
          "id": "da89dd59-d8d8-4777-b80e-0ecddedf83b0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eeac683e-82c0-4a09-bdc4-aaf60cc5b97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2977eda7-38b8-412f-8925-d59307bbb386",
        "cursor": {
          "ref": "3c39a102-2667-411d-86c0-41703a1c73af",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e9418ef0-abc2-4033-ad34-0456e00aef38"
        },
        "item": {
          "id": "2977eda7-38b8-412f-8925-d59307bbb386",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3711a7fb-3609-48a0-be44-c072449b0980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ebca5c-bece-43e8-92e4-006a67133c0b",
        "cursor": {
          "ref": "b9590592-52a9-40ae-a175-3458db894d75",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "adc9c23c-1ba8-4ec2-890d-1b425e3471c4"
        },
        "item": {
          "id": "05ebca5c-bece-43e8-92e4-006a67133c0b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70f2aba8-81f6-40f5-84b5-17ff8117c90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9125ef0-ebae-4c7a-9856-761c854e4282",
        "cursor": {
          "ref": "da4d8d66-119b-45e5-ac50-e75e0e9c1948",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "60d6c464-6cef-4bc2-8b60-2b2cf3f8955d"
        },
        "item": {
          "id": "a9125ef0-ebae-4c7a-9856-761c854e4282",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a408210d-1e22-4688-a36f-3d13edaca031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d6666-40e0-42f4-ae22-5da295a8da5b",
        "cursor": {
          "ref": "0c41e32d-0910-41d5-85d2-ccc3199c2b2d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f04df500-744b-44c5-b7ee-00a1cb23be60"
        },
        "item": {
          "id": "2a1d6666-40e0-42f4-ae22-5da295a8da5b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bc73e052-bd75-406d-9c42-44afd8eac068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f59bc25-c853-4bdc-b19f-5f397b107aa5",
        "cursor": {
          "ref": "d47d5b4c-e6d9-41e8-a31d-32e48301f668",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "12cbc774-37c0-48e4-9dbe-43395aaed09a"
        },
        "item": {
          "id": "7f59bc25-c853-4bdc-b19f-5f397b107aa5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cc2a4729-5fc6-4b32-b94a-9b087fba63b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997a7c25-30e9-4cd4-8b09-e2b62f6d9196",
        "cursor": {
          "ref": "a104527b-517c-405a-8d60-99af92ebc24e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8fc1ce97-7736-4e74-af0e-b4aebbc6d323"
        },
        "item": {
          "id": "997a7c25-30e9-4cd4-8b09-e2b62f6d9196",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c899c7c1-e96c-478d-8c9b-d9b10ca4c4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103c30e4-fd94-4cd8-b651-afa4feac4198",
        "cursor": {
          "ref": "28fd6b63-c37f-40ba-a810-a342e8ba76e7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3ef20f7b-22b3-4ae5-a6da-6cfac8e79f0e"
        },
        "item": {
          "id": "103c30e4-fd94-4cd8-b651-afa4feac4198",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0ca4acb4-b525-41c8-8942-335ccadc58d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff8666-bf42-4726-993a-4ae003cc2729",
        "cursor": {
          "ref": "c61861dd-da39-4695-8f31-a2cb8f9fc7ba",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dbe70730-6737-42c1-b396-035cc1934ca3"
        },
        "item": {
          "id": "a7ff8666-bf42-4726-993a-4ae003cc2729",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ddb380dc-8a09-4991-92f9-299176ed525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447a1ad0-15ca-4ec1-af94-95bdda5d15b4",
        "cursor": {
          "ref": "32257361-f77c-4a6d-8057-0dbb0dff68c8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63377bf1-9764-4c65-b216-83c432f34898"
        },
        "item": {
          "id": "447a1ad0-15ca-4ec1-af94-95bdda5d15b4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77c32850-9afb-465c-a63d-9270187b0493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdab824b-420d-43d4-a388-191bdf1141f7",
        "cursor": {
          "ref": "4812a92a-31a4-4f30-b2d7-689e9053d271",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5fc7b921-3a33-4a3f-b06d-e1a3853335d7"
        },
        "item": {
          "id": "cdab824b-420d-43d4-a388-191bdf1141f7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f57d429-6573-432c-960b-bc15e1722f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53337289-0961-44a8-ac0e-4696fac315f8",
        "cursor": {
          "ref": "bd86a6f6-7bd6-4782-8eb8-92522a291a19",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cc35b23f-ca4d-4ec3-948a-82e5f4e39bc3"
        },
        "item": {
          "id": "53337289-0961-44a8-ac0e-4696fac315f8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bdc2a560-b5b2-4e4a-b6f5-866fab6e537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c87edb-a670-460e-94f9-83cea4c61576",
        "cursor": {
          "ref": "0fcfb923-b553-4e99-b713-662bd64c6b4f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "78f83501-b528-492b-9a61-46316ef5759c"
        },
        "item": {
          "id": "57c87edb-a670-460e-94f9-83cea4c61576",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3d5bf9d-f95c-49eb-a8f6-9a6b52a11aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7f1028-c983-4280-af34-accee7f7548f",
        "cursor": {
          "ref": "00e40243-280f-4008-8eaa-e633c142fc2c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f5a32e14-064d-4211-87a2-144995aa5c4e"
        },
        "item": {
          "id": "3a7f1028-c983-4280-af34-accee7f7548f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "473e993f-950a-44d2-b5a0-ad9f867f6d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae5c27-cdc3-4f75-b6cb-ee1899258e82",
        "cursor": {
          "ref": "5479cf37-fdfd-45e0-adfd-d01a5bfc43c8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "811a4ea8-b8db-4753-8fd8-4cbe1f4cdd85"
        },
        "item": {
          "id": "33ae5c27-cdc3-4f75-b6cb-ee1899258e82",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1e9ca7e5-482b-4898-a939-1def6f9c3b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5376fad4-8445-4646-92c6-e85bc6e5c15d",
        "cursor": {
          "ref": "11bce0ef-3a14-49e3-8bb9-1375d08f8555",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a2e63ec-6a3d-4237-b86c-6fa8ba4df2e6"
        },
        "item": {
          "id": "5376fad4-8445-4646-92c6-e85bc6e5c15d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "130b01b8-c4a5-46df-9421-b7d93f1e40f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b59d331-bb10-444b-a6a2-f3bd06f7b3b7",
        "cursor": {
          "ref": "4376c2de-55fd-4719-ac2a-7285d131f84e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a3d14f26-53f3-4137-8d77-638c96e6e952"
        },
        "item": {
          "id": "8b59d331-bb10-444b-a6a2-f3bd06f7b3b7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1a0fefe-058e-4fe8-8c34-9b86b48b8f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d593f48-3845-462e-b50b-9e23281b7fcf",
        "cursor": {
          "ref": "20ca1db9-eb99-427c-8961-5fdfc360d1f3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "34a89972-a0ff-4688-ba92-3deb5ab122e0"
        },
        "item": {
          "id": "5d593f48-3845-462e-b50b-9e23281b7fcf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b33a942-d5db-43f6-97bd-1a23794c77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319b597a-213d-4eba-8ca9-6f46e7024b48",
        "cursor": {
          "ref": "0e0f73c6-3ba4-42f3-9d6c-1235076243d4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23f50952-236a-43b7-85f9-8435b2b925f7"
        },
        "item": {
          "id": "319b597a-213d-4eba-8ca9-6f46e7024b48",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f329774-9e45-4c86-af92-d6056aa2a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46546bd4-cf0c-4ad4-b868-fec4e82500db",
        "cursor": {
          "ref": "b1f3ceb7-a500-41ee-bb28-4c6f1938d359",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c6f6b378-5c11-44ff-9080-c49403559d28"
        },
        "item": {
          "id": "46546bd4-cf0c-4ad4-b868-fec4e82500db",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e6648cd7-3648-499d-a296-9e2c53bfebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399241c1-c4f6-463a-acbc-c20c97f34664",
        "cursor": {
          "ref": "27585571-6065-4a7b-928f-81bb9b66a212",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5fb3b0ea-8983-41cd-a92f-270db1f2390a"
        },
        "item": {
          "id": "399241c1-c4f6-463a-acbc-c20c97f34664",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "09130ecf-56c2-4b4a-989a-2454f8688625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea013ad2-4425-46fa-9581-2a64ede287fc",
        "cursor": {
          "ref": "3dfc1a08-49eb-4692-8193-68f5a139b69e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b010c669-fa77-42e5-91d4-9128685c55db"
        },
        "item": {
          "id": "ea013ad2-4425-46fa-9581-2a64ede287fc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0322eeb7-be89-4f5f-ac9e-00b231f1c073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0699cade-cad7-456c-93a0-9cc7e3943ed0",
        "cursor": {
          "ref": "eea36362-3df1-4186-8343-633f4141886a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3d9de03d-f0fb-42b2-a63b-7798c09c8b79"
        },
        "item": {
          "id": "0699cade-cad7-456c-93a0-9cc7e3943ed0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84e0108a-f5e7-46aa-b620-355fbe4f9aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de01d288-b27d-4e6d-bbaa-9eb672ea4b85",
        "cursor": {
          "ref": "6d953c9d-5117-442b-b942-51831394970f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa8124cf-fdfb-4707-8156-fe14ceb185c4"
        },
        "item": {
          "id": "de01d288-b27d-4e6d-bbaa-9eb672ea4b85",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4cfbbbf1-15fe-4d19-833f-0d0c8c51cb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c02a330-8009-4e22-9e61-45ff6cb922b3",
        "cursor": {
          "ref": "2299a711-097f-4223-9b0a-a7534e667e18",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "989221e5-1dbc-439b-b1d2-3c9920c085a6"
        },
        "item": {
          "id": "5c02a330-8009-4e22-9e61-45ff6cb922b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4047f8bc-380e-4036-9f8e-92aabb21f733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a757436-a382-404e-92b7-6a0a7b82088e",
        "cursor": {
          "ref": "c5a53738-0ede-459f-a869-cafd6cb6b924",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f67f9ce1-c08d-4afa-b3db-d4697f5ceccb"
        },
        "item": {
          "id": "8a757436-a382-404e-92b7-6a0a7b82088e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c83c7b2f-bc9b-40dc-8278-f81dab5a9518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fb4d6e-72ee-4b34-90c4-8a33e3279569",
        "cursor": {
          "ref": "9e756438-f7e1-4cc4-9fe4-decd730e1a9f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b174ae93-d3bc-45ac-9716-74eac0570694"
        },
        "item": {
          "id": "d6fb4d6e-72ee-4b34-90c4-8a33e3279569",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7ff20a38-8e86-4004-8297-5171c3a2fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7494b31-b50a-4c00-9dd4-f934d7743b40",
        "cursor": {
          "ref": "0b39349f-f623-49f6-96b7-7944dd96c8cf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ceeae97c-d1f2-4a35-9d6f-85c50606bb63"
        },
        "item": {
          "id": "b7494b31-b50a-4c00-9dd4-f934d7743b40",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "25310a5a-bea2-41ad-905a-2bd25a04a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cc29a7-3b5f-4a87-868a-479eef387233",
        "cursor": {
          "ref": "bb26e990-051a-4a23-932d-02fd25878a98",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "769c99d6-f83e-4d53-8454-966f694a97a9"
        },
        "item": {
          "id": "96cc29a7-3b5f-4a87-868a-479eef387233",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "012eb1c7-c0c9-4e9e-adc5-257be48a0a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1903e964-192e-4866-bdbc-afb45b51eae3",
        "cursor": {
          "ref": "3f0c289c-bd82-43f3-a86b-148dc160dff1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b0fa77b9-22c9-4c21-9332-3f254d6b4835"
        },
        "item": {
          "id": "1903e964-192e-4866-bdbc-afb45b51eae3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4dd1d00a-c5db-41a7-bf3d-88b00e2ed5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb0b7fc-5b6a-45ba-bf87-705c0cedb885",
        "cursor": {
          "ref": "0eba41d5-6dc1-473a-bc2a-775f2e3a6f71",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89f7e8cf-c696-476b-9c45-a7dd8ba97522"
        },
        "item": {
          "id": "4bb0b7fc-5b6a-45ba-bf87-705c0cedb885",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dad9ff4b-ed00-4b23-a3af-4ae81f2af2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5ce4ed-67c8-4e8e-958d-8361897febcd",
        "cursor": {
          "ref": "4dd369f3-b9f8-416c-88c7-272e52e6de2e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "673a931d-4f8b-4d08-bd56-b0edecc36c8d"
        },
        "item": {
          "id": "3c5ce4ed-67c8-4e8e-958d-8361897febcd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fafe2a9c-fc78-4874-9953-7dea0ee66df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b420b9-1d6a-408e-9fc8-117027fe269f",
        "cursor": {
          "ref": "cbc849ef-ca48-4176-b45b-5ab5275eb1e1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cdd0bec4-2697-48f7-b40f-61d1cf56ea1a"
        },
        "item": {
          "id": "34b420b9-1d6a-408e-9fc8-117027fe269f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0e28ed4f-9126-4461-b2a6-026c284627f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1766f-56fa-4c12-aee9-0f9df88286c1",
        "cursor": {
          "ref": "63b99a7b-8cbd-4616-85f7-fadb6318628f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "79498b98-c36e-4a2c-a5f5-f17a7120628a"
        },
        "item": {
          "id": "69f1766f-56fa-4c12-aee9-0f9df88286c1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3e9e2e60-3fa6-40aa-b164-9126f440b091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61b2dde-f9ff-48f6-9daa-f06aaa620a1d",
        "cursor": {
          "ref": "cb867ed9-885d-425d-b4d8-24f555210efa",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8bbe4bab-9ab2-4a58-82f7-270c7ccf87bb"
        },
        "item": {
          "id": "c61b2dde-f9ff-48f6-9daa-f06aaa620a1d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6469ac17-9e5c-4a39-b5b2-3fa7f38eb362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668632f3-62a7-4467-bdb2-74b967461c1d",
        "cursor": {
          "ref": "917d98a3-39b9-4db1-be9d-28d5e4711e4b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a20441b-f6cb-4e35-bf86-68af15358f15"
        },
        "item": {
          "id": "668632f3-62a7-4467-bdb2-74b967461c1d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "653a9a21-6b4c-43c3-8ac5-370a9c536934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774e14a1-73f9-4162-98e1-53ee07b822a9",
        "cursor": {
          "ref": "bc3b1ac6-0be5-4857-a22b-259f099e3740",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "edb3bc4f-f657-4a7e-b621-3d4097fa76d9"
        },
        "item": {
          "id": "774e14a1-73f9-4162-98e1-53ee07b822a9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "27697a4e-1523-492d-88da-2912e342b2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b2570-809a-4bbc-8011-35dca5f53d03",
        "cursor": {
          "ref": "527ed2b8-2e6e-4394-971d-51e9f46bc131",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8159691a-79ba-4615-b346-b1a87f328d0c"
        },
        "item": {
          "id": "cc0b2570-809a-4bbc-8011-35dca5f53d03",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "55c4791a-11f3-4f94-a6bf-134cf3a70fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e63631-0419-4757-8a65-c5182a232ea4",
        "cursor": {
          "ref": "17254527-8d67-4a69-93a3-abb3386d2361",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6ea305be-a85f-4be9-a51b-a098ed330b4f"
        },
        "item": {
          "id": "85e63631-0419-4757-8a65-c5182a232ea4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d3d8ffc8-ea6b-4ed8-a311-84a5d5013d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785fb46d-70b2-40be-9fce-65288aa4048f",
        "cursor": {
          "ref": "36c59565-8dfe-4540-b247-b0dc448816a1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb0085a4-4e19-4959-b3c2-9ded36917669"
        },
        "item": {
          "id": "785fb46d-70b2-40be-9fce-65288aa4048f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7abd6edc-e54c-4c7b-89c2-1984419d52f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a3107d-f69a-42a9-991c-70647f8b9536",
        "cursor": {
          "ref": "57726163-5bf3-4ed5-9ce6-a6ff466a7ff9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c653bbdf-0c26-4835-9ab0-8acf1268ce20"
        },
        "item": {
          "id": "51a3107d-f69a-42a9-991c-70647f8b9536",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca18ea35-9726-427b-99b6-40a5e265073d",
          "status": "OK",
          "code": 200,
          "responseTime": 2224,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d02075d-f124-4ee7-9e0d-1fadd9fb0c70",
        "cursor": {
          "ref": "27dbf15e-0623-41da-aaf5-67e144feec9e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06f55325-b963-42d7-84b3-9256dcc57117"
        },
        "item": {
          "id": "5d02075d-f124-4ee7-9e0d-1fadd9fb0c70",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42dc3355-c98f-473c-bd8a-e1530ae1d5c6",
          "status": "OK",
          "code": 200,
          "responseTime": 3443,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd0ed3-5eaa-4a8b-9440-ceeb0d238ee9",
        "cursor": {
          "ref": "e12815d6-eb01-42a0-9e78-255b627bbb41",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84865cbb-eedd-476f-8824-fec5ec144685"
        },
        "item": {
          "id": "3cfd0ed3-5eaa-4a8b-9440-ceeb0d238ee9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "410d1854-48cc-4d3c-a8b5-b0077b23fe05",
          "status": "OK",
          "code": 200,
          "responseTime": 3089,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56dab02-0181-4fe1-91b2-6f33f099c446",
        "cursor": {
          "ref": "c6aa581c-ba74-4858-8f4f-d18238799fce",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "82c62d14-619a-4f78-8e5d-5ff5e952dd56"
        },
        "item": {
          "id": "c56dab02-0181-4fe1-91b2-6f33f099c446",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "56c20e14-1eda-4fe3-b673-4036bc04a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56dab02-0181-4fe1-91b2-6f33f099c446",
        "cursor": {
          "ref": "c6aa581c-ba74-4858-8f4f-d18238799fce",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "82c62d14-619a-4f78-8e5d-5ff5e952dd56"
        },
        "item": {
          "id": "c56dab02-0181-4fe1-91b2-6f33f099c446",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "56c20e14-1eda-4fe3-b673-4036bc04a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe93855-b052-4c34-91a0-a2919a774989",
        "cursor": {
          "ref": "4cc19e14-ea40-43d7-b07c-a051c5e00d4d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9fdc2877-83d4-43bb-a935-23109e9e5836"
        },
        "item": {
          "id": "5fe93855-b052-4c34-91a0-a2919a774989",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2ac723b-2efa-49a5-bedb-76867544de69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ae1613-a510-4948-bc9d-68da95b551af",
        "cursor": {
          "ref": "9f64fb69-6acb-42d9-a7e5-a5c736ca50fb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "97455466-dbe3-4107-aec2-6dba6d6132fb"
        },
        "item": {
          "id": "e1ae1613-a510-4948-bc9d-68da95b551af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66c581be-5281-4fb0-958f-34d79879c21f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}