{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae199b94-1bec-4dba-80d3-c4b1ae3e39e2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "00b108f1-2510-49ba-b678-4df09b4d40c2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3074699-fc54-4b52-8029-14cbf95dbd71",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ad8d0af-84fd-4c1c-b390-4aaf06a15ea7"
                }
              }
            ]
          },
          {
            "id": "0bbe48aa-ea3b-4b2b-bc90-dd53ca5a03cc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15ee4f8e-3f66-4822-8e99-a8f7170a3348",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "17cab6aa-c815-471b-8804-3c33f99e3a0c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6d7bacef-efb3-47a9-8ef1-3a1302478970",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "554faae8-24be-49b8-94b8-c2d478ec3e29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40a73463-0a52-4f1f-a68f-5e3b78107230",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d08452-611f-48a6-ac9b-a6b6066b00e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a379974-72c9-43cc-8cad-cdafd1c38410"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b0fb182-859b-43a5-8c7a-be3849ff9546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd1ed1ff-8709-466d-b33f-c1bf21e0d377"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8154aa8f-bcc8-47eb-9b54-b9d034f548c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54332a3a-fa5d-47b9-85cf-2c287e936888"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8064a73f-5abb-4738-a54f-414cc7f1fa43",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2379fdf8-0729-4ff1-b9aa-ac90e98f0b09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3723e46-9b87-40a6-9fc7-4ee459a50f15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9acd979-3566-47e3-a146-9dc689eed1c1"
            }
          }
        ]
      },
      {
        "id": "d0d6de3b-5eff-4c32-b19e-3a8a214682e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "49a77923-64a2-4e13-a8e8-260293691dc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f19180-bc53-4dcc-b60c-e51208704419",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc36b511-27fc-443d-b813-d44f2dd73e15",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f10526e-e48c-469b-b1c5-6dd9bc520702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b3dc7d3-fae7-4563-bb17-9bc8420bbcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a361998-6c67-40e9-b830-c0804eb2fa40",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c46e9d-ad62-41ff-9776-79a9b6f6fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "382f3a5e-a423-4c4e-a880-730259bfdd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d777f3b-de39-42df-8018-b6bea16b7b7a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a6dd4-c4bb-48cc-942c-d17bde0a7ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2b2286-2fa3-46c9-9df8-9ceda6ce695d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23127ae3-ebb9-4abb-a2e5-fae67d14343f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "291b1aae-5aaa-489c-bf2e-327838c94dea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c58d950-291d-44d1-8bba-14d07ccf044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83a4b28a-3666-431b-a884-f878d070da15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5473b23e-ff6d-4d43-a5a2-0dfa6f52acee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61db9889-a22e-479c-af9c-759fb720ef41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a40712f6-c8e5-4d27-b9a5-f24836c496c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b0a8553-e0ca-4a6a-a20c-808d61dcf436",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaa71418-d224-4650-93c6-efcf51b26e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9cd9ab8b-e942-4f84-bf84-59256f8fd6e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c5712ce-60ef-462c-ba47-3ee418f4fc9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0afed976-cb24-4283-a9c2-a8c51cb9799f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52f67310-36a2-48c0-b058-d0e82339768a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e715832e-517e-4c26-b752-b957827cbc03"
            }
          }
        ]
      },
      {
        "id": "f89d9867-2584-4366-999e-0bba901be09f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "59455e70-d202-4b13-9694-2eabc71f4113",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6b9646c-443a-4a16-a35a-c93ba8ffa0e9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7479859-0146-4701-ac93-a08e2e1f4e10",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef910ba-2063-4d13-ac7d-cbe6ea13c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96da9c3b-77b9-4af2-aaf5-dc5b057cb84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2675a836-fe62-433b-82aa-61a297318a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "820e94fe-8ffc-4ea5-b40e-50d23c85fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458e2a08-9d9d-43cb-b9dc-5d6106c6f661",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41a8198-84da-4c97-9bfc-2698caea9524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c9a3f8-d177-40de-a66c-49a8ce3b8f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b4db60-9066-4258-9258-6b1a2e294788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06aa4407-664d-464c-bd89-1c5b6f70fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d33939-8f13-49ff-b53b-25243d223c64",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7206b6e0-a5db-416e-b1d6-c402d7d9325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458b0c13-3139-49ca-b020-b5f0d982c50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d7b396-7bee-4542-9d1a-ccacec74d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ff58ac-07f2-409e-9f40-d18066cd5d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1c4f28-3065-4bf4-a794-dd5ca5e6936e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a91d13d-0c6c-431a-abc3-0f58aed33df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e4bdfd-b000-471c-810d-6c17dfb986f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e441c-dd12-4667-bb92-93c087c6b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77ea0d2-0a2a-41db-bd13-9af43afb4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adf236a-c4d2-4608-9382-fdc0dc2e9b1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26beaea1-3c84-46cc-9ddf-e7bc17f06ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8e9fb3-8b59-4773-b277-fb7ffce107fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39cea23-c245-47d6-b65a-0c6181156d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3370ae5b-a622-458b-b322-bf94d98d4f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68964c-d980-4a17-915c-e0118f51b777",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ec6fd4-4391-44e6-b392-8cb6029ac451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b589f9-d803-4fe8-9f13-28a4061a2175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839e40a9-155d-4be6-bd12-67295390ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe113c4d-0f24-4be4-b73b-7829e4210770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfed7005-07ee-454e-b827-83fa1d1f3942",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec8e626-1f22-4abb-a28b-416b6c2912e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a410b9-7f84-4f7f-ab40-5da6c9683db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93054725-dd8e-4874-ab6a-cc02186d4c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4baf9274-0d44-4ed1-ac3a-12f45ba635a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c336262d-1fe0-46ee-9afd-c9d16e0b6ddc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63303b6-aa8b-41d1-b35e-37568185e7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46be01ea-669e-4be3-a184-30e1465abd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111398a-0554-457e-ab77-1dad8be71a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d16192-3f14-484f-a50b-ec3b2874ad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9e7d7d-818b-4f37-b088-dc0ff7aff772",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d084d133-eadd-408c-8e30-ffda96fbda7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec641485-33a0-449f-9b6a-cd95f788188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3e94a1-dd97-42da-a0e9-6cc15478f59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45fed260-ee26-440e-9ae6-92eacde59707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6acae-bbb6-4081-ab01-a5beb484946c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b92998-6cd9-40c8-9888-73372e4b37ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81d179f-1115-4a12-9d97-7143bcdda8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b9185-e169-45a7-b0fd-514d2602dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1cfe4d3-d580-4a08-bcca-0723d6a57dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88465f9a-8b8d-414b-997f-123821bda423",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22bb16f-0b87-4260-aae4-32acf3054637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c79d19b-49d4-42e7-8490-d9cab3f4d725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bb1202-0673-417e-804b-e64d05efb0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe0346b0-c63c-4485-84de-2130a72ae7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e7a70c-6a30-46e2-99c0-33e952655c6b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f53b16f-868a-4a55-a481-b9c51368b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2c6d3b-828e-4125-a318-b8259d64b763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6073791-350a-4e9f-84ce-87356c05d2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f895cdee-fab5-446b-a9f2-4726f3958d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be29f81-e136-46cd-abb1-c5534dbda31a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d481d08f-6b97-4dba-a412-40b2b8e2ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7712290-5b2b-485b-8652-0fe59d1c56b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa712a-8491-49dd-b5dc-80bb19b937ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "236419da-a219-416a-8522-1f76f7c78e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b1980-0ace-4c86-a5c6-ff03fc115747",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a666438-29d8-453f-bb7f-ec23edda0de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f762ec87-347d-475e-a635-e3457fb2a6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac3885-c27f-4792-9ba3-2c733df98f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0f9cb6-1e7f-432c-95b6-b58b20126d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f79d58-b844-4c29-ab74-53087ac623b1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398a8243-6778-4ec5-95e0-f59e24f3d56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cee8a1-a871-4d27-891c-4354f4862106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b07dd73-b259-40be-b828-84907eb208c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8be2ad4-21b9-4b20-a285-ace2c8b8903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15beaea-4042-419a-9603-e00c80bd8e83",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613b44ed-273f-4f13-961e-a3d256b7a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5669c157-f020-48c1-9944-3c7cda3f8688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eedff16-7de1-48b2-a81a-e1e61b191bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075ed370-8419-4638-b5ff-d1bebed8a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ca98e2-83f6-4377-b04a-46cc4d296b32",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954cf551-af2f-4edb-a4f9-e66a566398c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba145671-ce56-4319-9144-475e9f9f3364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470e4d65-9401-4322-bbde-ad63099c6281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e045e86e-b112-4f5b-a2c6-24507148c5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9214dd4d-b4be-401a-8dbf-eff23f44f977",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d514b69f-8ec3-48fa-883d-26597393d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3730fdf-04ee-40a8-9fa9-31cd63bb2c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4a0fe3-986e-43cb-9f3e-ec81d533a318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c82022-fd92-4f5f-8a62-5c2d972900cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f255f294-0f2b-4457-9218-787f7c3c3b6f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457844f0-0451-417f-9b40-51d668a5c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c57ea68-efeb-4442-8177-d46126bc58c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b97b0c9-8bcb-40a1-9a00-edf87c1353f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e813ca0-f188-42ab-a485-05dd62c3de05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb171281-314c-454c-ac7b-aa91cc4d05be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215140af-cf5d-4510-aa92-f4e07e0d08a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26fb846-6c3f-48e8-8058-126d85bbc1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddaf5f5-4328-4a43-9304-9f1b21385dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61db0551-1e24-4c07-8f39-1dc3ae42ebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83176b42-1535-4b82-ad21-8d7ff058984e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24826d47-a456-44b6-a7eb-f76dec67e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f91c29-5da4-4daf-bf01-e3434bbe8748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53df84e2-e405-41bf-ac31-5e939e963739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afed0f9-7506-40e6-81f0-0038995643ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c705dc4e-9e51-44e3-8021-50b3b949c313",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1068e0d4-e5d2-4175-a6be-7aa901386ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337db291-ab7a-43f6-a61e-5852f91e7870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4585fe93-5b29-4dd0-8821-cc4afb3bece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d995fab4-95d8-4940-8c26-211663d5bfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5bb8a4-3136-4b79-a330-b31e29ffa93b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e270dc8-117d-46b3-90b8-2b72d95528fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce2c50f-320b-4a83-9d9a-2569c5d0c0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bb97f3-20ce-43f5-aa0b-a301751eeccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a9d4ec-7522-4662-b9f0-5ed55a4f8416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076728e8-bbf1-4dfb-b6bc-709a476c3c96",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94cc839-4b27-43dd-9f72-ec5d78fa5367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ad16ed-b48b-49b2-b325-ab7eb3dba573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206e1186-0fad-4da3-a576-b263a433b3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5545533-1134-409f-8234-80f2e6cb2ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b5bb0d-7299-458d-9c32-9a5cc8493c21",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcada23-29cd-4af8-8776-b9b57769777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33a3996-d914-4cd7-a16d-baffdea219cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9fe9c1-56c7-4355-bd2e-bdc307286b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd77c50e-1082-4fe1-bb9c-29e02da3c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd97db36-acbf-4e38-aa7d-54b952423aa7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65640acb-ab75-4840-ac28-e2921f323737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbffffa-05f6-43a4-86f9-181e3b0253fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f36c817-243d-4849-81bc-1963e4a89124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "630893b9-492a-42e9-9589-10923024c00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d60096d-99ab-4c2c-8351-7ee879296a45",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5de421-1f55-4561-acf3-2171eef194e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e0c68e-f8c1-4e3e-8475-c5dbc8c7f403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6122db-201c-456c-b209-38615cd8f260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "005121d0-cbce-4c97-8ae7-4810836ec181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3abc78f-4113-4938-81be-4a932c0d5968",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1415f37d-fa8b-4af7-8397-8eb8de2219b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0e1481-4027-4cfe-a616-373940a0f06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d75f2-137d-4af1-b86e-0613043ebc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "554caf27-47ef-483c-9382-5ce421ba5439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce0414-a995-43f7-a28d-53ce31a2ea91",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c04a2c-2016-4b59-ad5c-bd5357b795fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2dc1ee-192b-4efd-b4b3-6876fadb2af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c95295-e8a5-4e54-aa50-ef2fb041e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9494121-ec1f-4d00-9d06-c4c52c8ad7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b747ce2-3473-4616-8ffd-7fb44fe8b320",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084e6ac1-cc9d-4e84-8a1a-7b42c6ba6746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8431b93f-30f7-4ca2-aa84-00bc4bc03d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd7318-d4e7-4a77-af03-e0b7bf0348a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "39aeeab7-b640-45be-8210-73cf051fc572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0672132f-8853-4096-8e53-34412565df9a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21bd43-d72f-466d-906a-ee7f504fff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ba490a-39a4-4bd6-8146-6623775e39b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64886a-7b78-4594-9205-8e4c7e1e38ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c046557-96c6-4834-824a-1a548057b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbf3b9d-e14b-4f81-9a11-bd7cd3cff24e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec249a-db32-4809-b01d-de271fa1fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97f4231-a39f-4252-8c17-b0095cb0d1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c778924c-4b92-439b-b1b5-66791b02b1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78aeb876-f963-4ae5-9fbd-f3958decfc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050c4ef0-445e-4c88-afba-e997b2f7eb20",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ebc6ba-7776-41b1-9bb4-d2569487bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26031615-70bd-43bd-8aac-92c11a232ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402a7451-0ce7-4d49-afb7-cc305a46630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96151914-0110-4735-99e3-732d38bc8556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6208d66e-5279-42e5-abe3-7e5fd65b787d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8822e5dd-7be5-46c6-ae69-91cbd1b3c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef76ef11-aaea-49d0-91ad-b0f24c83316a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b0bfcc-2397-4357-8ae9-8a9682c4c673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0803f95e-830e-4ecd-bb89-83c12ca6eed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aaf10f-b663-4d12-ba39-0d37fc52b9dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ab2e4-cd43-4c52-bcc9-b6cbe3a28ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7120aff7-a52b-40c6-81ca-8d10a74bca66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0aab1a-e9f8-4619-bfdb-abbf1b970cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "98c444c8-e127-4271-bf9f-f3502b92b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b50613-1f81-479a-86a0-750d53b82c14",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0c04fb-8bae-4b22-a172-1cb9fe432a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d586602b-5817-44d2-aa5e-de58a0f9690a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66eb995-b6e7-43e0-b8a3-350dc7afba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8c187c-e1ad-4bcc-ac6d-6d9ebaa846c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e369567f-60ec-4024-bea7-2b6d9d8dd687",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70bf72a-c2d6-4636-a2c0-d30035bd8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03549748-bc7e-43d4-af4b-5ba42d475d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bcefba-6835-4346-9961-ca925630bd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0539f61-2b3c-4754-970c-599c1ec13dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4d80a-fe6e-446f-80fd-85979763f938",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f70b67-18a2-4610-86e4-21e59b89fd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5720b9b7-9a41-4d8d-bd21-5b942776a804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408a8393-775f-4539-8ca8-bb82d751246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb7a4a3-e9be-4700-9766-eecf3ddfe2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df074dc2-c99d-4abd-8b89-853c104b12cc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b64411-0a06-410a-a8eb-d2e2fec362e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ab60ae-5547-4173-a440-4480785e3cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909523df-6f57-4ff8-b772-aa92fde8c3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c5814d-8286-4f1b-bd80-b1d690d62e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0957c3-88ca-43d9-89ed-9fd151a719fb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d22c174-f2cc-4d9b-9835-9f2a7020d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad39213-d8e8-4536-860b-498ad8120fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae71b855-e3bf-4db5-a369-0e4f3a80547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b52de9-f765-4e22-bcd2-cdc190fa02b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc380c6-34bd-4566-83f5-5a3a67fce0c9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfa7309-c996-4e7b-8789-8550b17b82c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d2a8e3-18c5-4e63-93e1-67cfa90b95f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1120c931-4e44-47ee-a51a-a5a8b52453ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28303b1a-64e4-456c-98e1-07c5f2674b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b87574-6e50-41fa-8b21-aec502b42f08",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc91c11-bf5b-4de4-b9d7-fe7ed2804677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca1fdfd-2c39-4a28-83ab-6e7f53a28861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463120a6-20a5-4eae-bab1-c8328e12ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbf24c2-a1d4-4bd1-8f25-e926cf1608bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09ebdcc-9a3e-4eea-82ed-93a346e2ce16",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59912ef-5aa5-4d2a-a9da-bfc5d9cc3758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c52666-a395-4c5b-998b-1864fb9a2a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e83991-a9f0-4b1d-b4a4-accbed50a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "900ac520-2712-4678-931d-af857c56cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fdabe5-cfc2-4f71-b6dc-44620ee44615",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d78e7b-5563-4d06-8d1e-34c7f62ffefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bdf752-bbc6-426d-845f-7aa05db57dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3380292-6022-4480-a753-3ce84fd0315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c92bfaa8-86a8-48e2-960d-d781fe645019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3531c307-1432-4d12-8143-8b6edc01d4f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b4c00c-1d80-40f0-addd-ed8630a01b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d040cdb-14de-4f18-9f08-cca45f57388e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524362a2-fc2a-4c49-8e83-f2649dcfa339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f7d274-d336-4896-8798-5d002e70324e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135f7cf-f8f6-44ba-ab05-5cc43cd45f2b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef3cf9-6503-4e86-962b-7986fd7b0ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3e4546-cdc8-4b6e-b970-094290187cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e0cb13-ae39-40c4-9cd8-3c7810ca3fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9235bc-e9b6-4c14-afec-aea424dd2073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcffb92a-a207-48df-b8bc-52e4404dd8ec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18acf0-3da2-457c-8687-5d6b1842960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ee7400-71cb-41b8-b90a-1375c33bb202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29487a7b-5379-4687-b5c7-0e17840c6809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1f076a-2f06-47a6-a00d-608799608df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6f914a-f3d7-4ed0-ad77-2d4e0c900d4b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5560e55b-f6bf-4ae9-bbb5-f8ceddcf7b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3675fe4-0081-4175-b162-6be272b80149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4963697a-7cc0-4dc5-b7f2-5d1351c07498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "897fc251-dddd-47e4-8ca8-4cbb0593ac3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccaae9c-83bf-475c-b124-a6ad1fdba1e2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f0199-fdb6-4c63-a9c3-6adca26ccde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd162724-eb95-4490-afa2-fb1af3f5d7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f676b4df-d74b-4d5a-abed-e56ac5927647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4411fa-e585-465f-8b9b-bc33ceb96d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8f68fe-c05f-490e-972d-001357d70a79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaaebc6-ce40-46b2-8687-ea1e2f37ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760224fa-bc0f-460a-a030-3e62be4fccbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e0d10c-a464-4164-aa7f-933cf69d6318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cea248b-b01b-47ba-86e3-cfc579cceceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a7994a-ebb9-4efe-9037-d32f0324be52",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b843c68-ac33-455d-948b-e851af317adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ee1f00-32ea-43b5-b740-0932838150db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b737d3-0c3a-4419-82bb-badf26e7813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4e63cf-4a4d-47d3-bc7b-ea4d20914246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df45ba6-be80-4707-8ab3-17b5847b33a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6991d28a-245f-45e8-9d11-0b8d142ee05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4390ecd-48d0-4acb-85cf-f2afe21aeec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a00bb2-b491-4393-981f-12ef88bd9132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8d4328-846c-4fea-9949-ab7a331a5ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eb0a83-d00f-4fe8-9fb4-1aa3dd4edd99",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c07754-781d-463b-a5a5-550eb59958bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d762c8ac-55c0-4358-b703-1cc685de0814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297569f2-042d-4a69-8c08-1f660c025fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61190c2-0679-4871-b818-7b9a72d8d30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a75386a-ff36-47ee-9555-8f43731e44d5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6236817-9967-4061-87ae-971634d4b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6998b945-a12a-4195-8531-3915d2d2ffad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2bb2c5-55b4-4fd0-ab82-411d7069fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fe2400-231b-443a-a08d-9fea6dd5702e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8186bc2b-7071-4e71-9b66-4761d89e1d73",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26427580-8e5c-45bd-9c7b-96129d4e8872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866f89a6-472b-41bc-bc5b-3d573b77d3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a7879-12d6-402b-8970-ad35cd50f0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e65b0253-b367-441f-aef8-1235d892b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67ab94-3db3-4f8c-80f0-7b88db183ae0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91bca48-60b7-49cb-994b-fde848e23d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d430d66-fe56-4325-9f09-88bfc9511034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546d306b-7c80-4a8d-a6f2-bd8df4679bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf8642e-b9e5-4ba4-b008-e0295adb1fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba05a98d-41cb-48eb-81e5-fa99a4d29397",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8446b1ea-2316-4a5c-a2a4-348ceeec00f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdb7215-f9f3-49e1-99b5-d6b363f0d0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a40605-01bb-4dee-a0c9-c62411dfba45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce74eb8e-efcc-486b-b6f2-33f1c3b1e088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d5dca1-5ec0-43ba-845b-d5129afc2fa0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c1596e-a1ff-439c-974e-39ba1a2066dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1e6926-f216-42a7-90b6-94d7b607d9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88623a-26ab-4600-8fc9-8a7daabf9b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5afa7386-fe9b-4a43-b947-df98e8e8d4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85a789-954c-4dd8-b662-b835529e776a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3340a3c-f7bf-4da6-b0e2-b0b30c09217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab80678-70e5-4783-a7b8-3c44470ad89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f055db-f19c-4b34-aad1-3d0f3708aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a26cd2-b3ab-4475-91c1-c96704513569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3f74db-58f5-4b08-8815-bac8ad4137b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a5f638-25f9-4e7e-b481-e2746619fc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc80fd22-3c73-4701-a9c5-d54d246d4f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a4619-4acb-43c5-9a2a-d03969c80e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbe817e-092c-4210-adba-31ae714e5bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137ca14b-b35c-43a2-b21e-fb4641e02a27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c8bd85-5f44-4cd2-8196-c0ab0eec5dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fa37ed-2bd9-4679-8ab7-ec0ea543f45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c38424-0035-4552-8ece-d44144941def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e763e3-7340-4a7a-a787-91d230e1dfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8c5a6b-197c-42ca-b2cb-820028a36d8b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fee217a-be8c-4b3f-af3e-6bb9310e17f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e530af-bc71-41ba-9c3c-593455ed7fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f775f888-7754-4af3-8d70-3701616713c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "565e6b98-938a-4ae9-b8c0-cf2225eef986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6982c8-a07b-4ae6-9230-f77cb0bb1515",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff26ab0-1686-4fea-b62b-e1a86107d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b78b2c-c275-4369-b97f-f90eff1bde4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86601eb0-f1ba-4609-b883-4de5c4b08f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5970420-b796-4b44-893d-f97b6f831043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35d7885-c426-4f9e-a334-a8d84a3cf311",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4baea2-0f15-4157-a493-83ca20ea0a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08f3d9e-b61e-4f1f-8d9a-0ff5c316c11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc41fdd1-374e-4abf-9111-f9a35550c159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbf5fa9-f01e-4052-bd15-8bc8ff412163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ad1b0-ceda-497e-9c47-1bb9e5ec7d13",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe0c6ca-114a-4dd5-b9c6-346e4cad9312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea1a1fc-1b2d-4603-8dcc-b22d9161f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a6a63e-f3fc-42fb-96e2-6a4f6dd3c85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d7fb37-66e6-4a47-b614-0e9b57d622db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf14793b-0417-4069-973b-578879edd7e3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b113b9-8858-46bc-8de8-1f48e47a8189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16def954-f934-4a9a-b7d6-b5c7d045018d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82bd421-ac86-4580-ac05-fab14b44d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a91add-9681-4f0b-b9b0-884ff44dcae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ca684-27b1-4782-821f-978fc07fbf25",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44f3a5c-7401-49e9-a61f-fb30c931d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bb0cd3-dd17-48fa-a5cb-8ee9cfd058f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a39803-04fb-46d2-8ff2-5d75e8cb8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9596598f-ca9a-4d89-abc8-fc77b550b898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38548e97-3596-46a3-89f5-c8935c7deb79",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f7e383-a992-4388-ab02-c6b144ad8a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec95d194-86bb-4c06-9aed-1f2374921c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09119ed-36d3-44b5-83b6-7f6c9662701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6b00f2-9a9d-42e5-a49e-5c4834cae19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c790c37-e0b3-484c-8dbd-9123c75a7a18",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b92dd1-59a7-46d7-a1b7-b680c0dce4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6507e2df-5901-402d-89d4-8407a305871b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f57cd-21ce-4632-b0fb-02a587c23a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e8dabd-e59f-4bd7-8bdd-ba6a62cd469d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab86d47-c04e-4cc7-9a3a-857f99afa1d3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f4bc22-8232-4f85-be74-8ad631340435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500d388e-4822-4dfd-9d59-c26410c311f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e11161f-77fa-4649-8293-b7f1c72971d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da73dd44-0c96-4349-b8dd-7454e5eeca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeef70a-19a9-431a-8146-28272d3af2d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdaad7c-aad8-499a-8f3a-096432b73e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c217767a-657e-4789-9935-b15a6e7452ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6b9244-1387-463b-877a-0bb00239d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3accdb0-6222-4c44-8fcc-752cb05638d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a51bc14-582a-4527-9426-5c5f22eea9d5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c5834-a140-4154-95a1-1439dc5b8a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a49521-8b01-40ac-856c-37cd20059228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78752151-d63d-47c8-a6cc-dd68bc31332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb158f0a-0a94-457e-b50b-ec4082f0de00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e52164-3459-438b-bf03-4d9e34d6b6c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058ed25a-7ac7-4d83-a027-25b208edc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31e4a13-2e42-4c2d-bfb7-0aeb0abb8e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6798df0-ddeb-4d50-b858-fde44397e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16041f41-36cb-468b-bd83-d891729c31cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd1c3ad-caf6-48ee-8c44-b7d3751a6834",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf282cc-a821-4824-b947-de3517e33b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b158a4ed-5e58-4241-a751-37bb24f49a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8fb740-4a62-4333-a72b-437b58eb2b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25c224e6-408f-4a84-8f01-d5e8df855050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b92a9ea-6249-4162-886b-61564b66e0ae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cc24e5-dc98-4e99-9ad0-0bd97947b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e1d594-9dac-4828-b206-b3f6db198f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568055b9-ef89-442f-bd56-4dc70d84666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18194ca-3ce9-4605-b2e6-cdf942f30cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a25b8f-b9a1-49fa-8991-cf94ff81b2f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df47858b-3232-4d2d-a7ce-804da6f8f53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabfc377-8608-4b5d-8a11-d40a84ca0269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cd8255-314b-4239-ad82-63ce2d1c9c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "799527b9-d452-4b30-84a3-f2aa130b619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb190c-5eb8-43db-971c-0e5264fe3378",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794cfda5-ae02-4e74-b65b-b0a4d082ba90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b406ab6-d0a9-4837-ac52-d145336cea6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c201960-35c4-486c-8640-5c39f22c1e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "586edbf7-958c-4cb8-b3e6-b9bedbc46d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d186755-6487-4357-900a-3aee172423c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183652e-53de-4c30-a43e-ea58f0759e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513a2e9d-e8a5-44cf-9c1d-9385411b8f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f8cd3-4c99-487f-88ae-b1006954c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91822e7e-432e-4268-aff8-90377824d38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a757332a-ce72-43c9-ab56-b96e440543fd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f40f0c-8a4c-4078-bb79-a8a72a1a0b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61adc696-41d0-46f4-b4c7-fd1bd7faaa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984b9076-d308-402c-9845-0ea7cfb49e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a982a053-9c35-4f14-bd82-e2536cd7a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d7e0f2-cbad-4edf-b060-44c427eb85b3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4530835c-ad46-4471-899e-2ac85b91e7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df03952-f69c-4055-86cc-24b1aec413a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254bbc76-3392-47f9-8732-b1a302867abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51ab769f-0c9d-41dd-b018-451ce6470881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9baa85-6878-490a-b0f2-4c0730a5eb65",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1327abff-4a70-4a6e-aadd-fd1de3c47f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2172efb8-102e-4f39-a77a-d49a09c1d5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be9c2d4-8785-44ba-84d9-041db2374765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f3a398-1459-475e-8756-2213dc728764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2651f99c-8215-4836-bb54-e48c3e840227",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf19d66-4b9f-42fe-afe1-8a48c95bcd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0977216d-6bab-4059-89e0-ea5dc8d40a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a24b062-2f94-410e-9b71-dfafde71a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "322585ed-2c88-4f26-b39a-323ebd9a33e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc69321-8552-45f7-8736-73ccca7e6832",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ae2e32-54ae-4b20-be8e-aec3db8eb176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ba208b-c0d3-42c8-9998-23b42a4bb227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3585f4bc-ca8a-4a5d-92f2-d76ebf95d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f01d833-7fa1-4b26-b9cd-1fc3b7ffe37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340d9116-254c-4fe0-ab81-de53a405cc38",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323887d8-915d-4556-8e42-5699a652a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37b44af-edfa-4355-b36b-c65573bd9df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250f1f9-9d17-49fb-9548-5f8d3185a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40a0b98-7c51-4ea6-b34c-4e56adf716b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58e26c0-660d-48e4-a3ba-82c7b70e4260",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570fd1a8-9517-46a8-a867-baedce2e91bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9410d-a46e-45de-b321-326b7c5e3335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818fdf7a-1358-4d30-9a8d-64466729e246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53963952-4264-46a1-93da-e02aaaccc8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b8f38f-a93a-411c-86f8-32df7883ff58",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240475c3-657d-4174-bb28-d8056e51294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af492284-6f6d-4761-924b-00db431275dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68342bc8-47cc-4a2f-a595-eae11f9f7d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2746fa21-1036-400a-872f-904a3f580f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3e2ef5-6fd7-41c6-8861-5def7ed11603",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106726b-08ea-4ce3-9118-7fd85c757117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a912df-f189-4d43-a8a8-6aff2dfe503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dab3c0-5ed6-4115-b456-6399a508f6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab765db5-94d5-457d-b2bc-8f4a68e36fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845b8366-4df3-4d4e-a208-0fc1ba8cca05",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00397d7-d16d-4944-9748-cc96cdfd408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d1c5b4-43be-4129-b14c-b9c064602252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ae0e31-d530-40df-af45-d7ff2a9c2452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa00d48-ad41-4675-8442-3de038a69336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f1985-90d4-447c-99d7-102c4c8b3b51",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5ec04c-d8ea-4ea3-8328-e6a7052098fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03105223-d59a-48f4-8a4f-18b59b144396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f0f26-0fb9-401a-bc18-eca5c3c06990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ece101-491a-45f2-a5d7-44eae41c5239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3847ab43-0c44-4928-a552-766e1d76fc15",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdabd26-d312-472c-bcb7-877fa3723e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521c69b0-b1eb-4390-a08b-9fa45b5ba744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb3a687-01f6-48a3-bab7-5880de724d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "754d81e3-ec7c-4f0e-bba7-aa587a513c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852487f6-5bf0-4297-8a77-37d8fa04f2e8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d1a201-7ed7-4a1d-abdb-9da9dab851a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865a2ea7-0890-49ab-8b34-e621530a3e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713a9b8c-0d14-48f3-9de3-3560f558b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ea931d-5239-4cb9-96f1-e7986b1e8696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de2dcc9-60d3-4114-9701-d6d88c931398",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6499227d-3f63-4a88-bbfc-fa2c21010bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2013009-06ff-43c2-971f-442e302de655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56597ab9-b04a-407b-bb52-ba22351883e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8e0769-4fc8-43f1-9916-995def16357a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7dd9bd42-2e41-4be0-8397-28e4ffc22aa7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f06479d8-f16c-4271-b490-911f94ffc8ef",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601e11b4-85f7-4f13-aa80-876f3067b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebd38ebf-136d-4e06-bbad-44629e959765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a599014-4025-4119-922c-1253095f4e53",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ead6baf0-15aa-464d-b803-51286bd2356d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce8fae25-da2b-4655-88fc-82c3c78b0319",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a188e3c-9b20-42d2-8bb6-12560fdce470"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e70e4285-95d4-4f77-9636-19d03adda636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "089401ce-53f0-48f0-91c9-f11a35a8d0a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b6c651e-539b-46aa-8d1e-9b9811ebaa3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5ad4fb8-45e8-4bf6-89c7-c825305da0b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83085db4-4e66-459e-863c-7b67be8a86da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94f782ba-6a37-4425-b743-5191a00bc7d2"
                }
              }
            ]
          },
          {
            "id": "8c23b24c-526c-451a-8cc2-2d6213c542e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65bf1aaf-a47a-4ab9-bedd-81bc60acac9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1ee6ba2-e36f-4d35-bde2-2ac516b8fe06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddb904b5-291c-4e2a-93dc-d2f0f15bd247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3554354-4f4f-418b-a8ff-a56049ac3ba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d9e3f95-e764-4f2b-b8a5-dfcd59865708"
                    }
                  }
                ]
              },
              {
                "id": "9e6c7597-68ef-411d-b33e-a3c68719faa0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f636f5e-7ca5-4e06-a314-71feaa1f8e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b97661fc-ff8d-487e-a165-14718ac4ef69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e666c819-d4a2-49d3-ac55-b49e1aa00c70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e277216-49f6-4d39-9505-fe354974768f"
                    }
                  }
                ]
              },
              {
                "id": "1c2ca32e-22f9-4767-9ef0-a7ffe1291a50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79b224fd-34de-4094-965f-ad67c921c9b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af4a1b6d-f546-40ea-ad23-f44cf8908adf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa5c1a8c-0e96-45bd-806b-a223c0368eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3dea0cde-a6cf-41b8-a229-8b83147b355b"
                    }
                  }
                ]
              },
              {
                "id": "55d9e693-f52b-42c2-8859-6916e75466dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c2114b6-3495-4dad-96bd-e7fd3648426a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9e449b7-3efc-49d2-90b8-c15adaf0843a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b16ac0e9-ecda-4b04-a74e-f95a6f0fe035",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7d1e5ba3-58af-422d-b5fb-87ddc842d1d3"
                    }
                  }
                ]
              },
              {
                "id": "7acd6e93-db0e-46af-9675-a38004321855",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4b3518b-b238-446c-ad0c-e1c272e1a380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02cc192b-fb4f-49cc-8008-8ab792768ff4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86d70d6b-7511-46ad-a839-87d692e13350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "012e4471-4b18-4ff4-ba15-680bbc9c04fa"
                    }
                  }
                ]
              },
              {
                "id": "362fc939-c6d5-4841-876c-829afed9836d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f9d3815-4de8-4cea-ae9a-266a55804535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d28a96ab-8f09-4e2d-8170-d734133b1368"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "486b4437-5b05-4fb7-953d-0b35464cb5dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf8dd584-ff73-4572-9672-6c3d8b12e0b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d456574-5f61-42b6-a109-95df906115ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ca4681e-0a43-403c-87e7-0c59ab5cb09e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e290503-f0d6-4a1c-a6c1-094835755d1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d44c41e9-7069-4cfb-a688-c7924938ac8f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77c54452-6830-4347-971e-214b5beb5149",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "02a7a286-eb0b-410d-8f08-4571597013ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9ecc63c-c5e2-4c43-b85f-cd7aa83fe8c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3105bbd-848a-45e8-a698-e53ea87aca5c"
            }
          }
        ]
      },
      {
        "id": "dbec6892-5500-4043-b56a-48dbca928111",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5549c0b4-2686-418e-acf9-1605c52f28ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5498ef8b-39dd-4fb8-af0a-fa68ec572a1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8945686-e719-4f8d-a346-1664a4533eb4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2c1baf-b0a4-435a-8548-9e302af700fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fad3ef7-18b7-4a62-ac18-dda43dc3fcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646bfa52-a65b-4de4-9039-4a63d057dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddff1f2-28ab-4826-b13d-b05d31d5ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86be5eac-6bea-482a-ba1f-9f55cf6a8fd7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29cd800-adc4-4cb4-9378-ef0f1f6de280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e673eaa-0910-4403-92af-20b1094d7ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42092b0-0886-40d5-a6d2-29350ab2fde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8842fc7f-87af-4afc-92c3-81a2614dfac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500eb7b-ee09-4e07-ab04-980a09589eff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3cbc4-b8fa-4b59-ac8c-f44e788b07fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf49786-306a-4469-8adf-6a945fdbe365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38bba1-cf56-4cc1-8b90-27576ef5e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66d60ef-6eef-47e5-a8a0-a9f2ae98db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72bdc3-96f5-46bf-a8cf-54f206562de4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9909ec77-46a9-49f1-aedc-55cb056122d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9697de-f905-452c-b75c-fe40b9a6c417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1292e63-75f0-4ec6-a88c-d948e0dd3f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5872c0e-5e93-4e38-bc19-2f0e3a4c95d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26be1d6-42bf-48ab-839a-7e3f47bcc70a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50662499-d831-4fac-be30-91aeb49e6d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9e04f9-38a9-4a46-bcdf-7eba6b00f905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c58781-ee55-4f9c-a306-ecf8497390df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b41420e-eaf5-4426-b7f3-c41df85ddcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a697c-bd98-4096-9e14-52dcba146f49",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70911b3-da9f-419c-a7f7-e9441bc9b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eaeea3d-4eff-4555-9f9c-79a3feeeaa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0161d-5a01-4bf5-955a-3d23117ff1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa5852-1fe3-467a-b335-84e31d99e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ba4c44-4e18-42aa-aa13-c24edd7bf7e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a13858-f125-42d4-be69-0aaabc312659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469f8e82-8c04-4b39-9fd7-0d64ec06cfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269fc98c-01ec-4b03-adca-d6e450f11db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3112b2c-422d-4b7b-9742-e83433008995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e831e6-9aca-45ef-ba06-bf30a6f1f431",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcb981f-840a-4881-a77e-6e715dd3e2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335c9d92-9266-4d16-8a64-eb2dc99b715d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218c37aa-12bd-4e09-84bd-5fe98d9bb887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e64e0d9-93f6-4aef-b7a1-a06a9b8450d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8466d8-213d-45b1-b8a1-2bc2b5a1df91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f109de4-3b72-46a8-a0ee-38a639877646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635e3abf-ddee-4150-a9d0-f1f216443bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba66baf-ff0a-4020-a1da-c05d44bb0c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec233c8-43d1-4970-b2f3-0ede19890ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5b27ca-5192-4eb6-bb4a-9a0d7366f87f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a4e00-144f-47da-8501-fa8e73d62455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee2467c-5442-42b3-bae5-a6926808e8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7771f8c9-e6e4-4c4d-8135-8c934ca5deb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ad9de1-935d-4b53-9f06-be99ee3fd2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc40e54-11f6-4b6a-8451-0ac8e8caa401",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c98f54-7131-4f18-af83-db1d0b6a8947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46420863-0f2e-4792-8bf7-05747cd6fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ee265-c250-4dd4-985d-c8ed200dd929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9e7142-01b4-4063-ae5f-f8e6cf84ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d4d192-22f8-4883-9eef-8f0e167982c6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cf2616-e05a-4521-8c5c-6bb55a2c9bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e0b335-2a37-4a8c-9a93-811dc549d7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbe12aa-26a1-4a6f-9c3b-3d1a4229b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03eee35e-1048-4a3c-86b1-aec210f52ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5a7149-afa4-4bba-8d78-ccd0d5115bcb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422d049c-cef8-40c7-98b5-cb013271e565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f56c2a-4b60-4e06-8db5-3c0779bb4048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d247b903-a57c-4c90-b631-45e5c2858162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a89936-e19c-4b74-ad0b-8fc268b65707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33102b3c-5711-4ff9-ac37-4ccbe82c7230",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd938c5c-eaa4-4858-9304-9b82834d059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4022898b-aff9-486d-8162-22f2b9d76c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c2417-5b70-47b0-8f3b-5dd89b221257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc185e0-aab4-4bb0-9e43-8c126da4fc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf87edf-b41a-40d7-8656-3d32ba2536e3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e0d40-7252-4e5b-9970-48718290d66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ba7de3-2b34-4ef7-bc20-688582e1ed3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1da627-f944-4e0d-a58c-d500bae7623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "285dd332-5f05-456d-97c8-9d23b5a58934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29868055-61e2-476b-ae81-4c4d88d96e35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0637e6-9da3-4215-b1c5-c6a7b52346a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa9ab99-a10a-4175-af56-bee0e811b13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dd8699-3adf-4664-86f6-abbe8e28d16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3659971-ed47-4a39-83d5-f42096a271b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19439684-ba65-493d-8586-dfee16eacb43",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49d447f-2ea9-492b-ba6f-141d06967331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3350f935-851a-4742-8fa5-4817f7862d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55c7e3d-100f-4784-ac39-49504fc1e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28faa42f-ccc8-4b08-a623-99d66ebea92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7691ec28-e25d-4328-9b54-f759d7b6f8f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a363eb-4eb3-4363-9b74-5b85e033f613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec813fbe-ac59-4e09-b88b-934cf42fc574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e84f00-7e83-4157-a1c8-52ba54730813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f61183-a8bd-4702-8a6e-99acb4188142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd28a3-556a-448d-b6f1-c316aebd80af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a23dc20-df97-4e6c-af11-13baf371e409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e337577-7d41-4c11-81ce-4674f82b8c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd74fe95-79e5-4946-89ba-3fda1bb30963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f3fba1-6cba-4743-ab06-5d9c71c4dfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b366a1f-4235-4c92-a18f-c779b5d25992",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af3dd97-3f9a-4daa-8cde-7366b8f75d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2eee4b-b128-4b95-8348-b61800238872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5533c0c-ae58-40fb-a882-c293b40e0569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4683641-f371-4ca0-a04e-89b67c9dea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9db239-1c3f-4661-afde-79f88b733a47",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df7b016-df83-4ea0-91dc-9b5546f0fc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2664b60f-902b-4b7c-a5a3-9c049db9f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20be38f-4cae-4f7b-a3e1-a52bf1306e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a05732-bb8c-4004-a0e8-b9b41ccb23c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63765455-196f-4244-a6ff-0352cc23560a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd70c7-98a9-4e09-8cd9-d1034d4007bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24aa693-361f-4e8f-b3c6-aaf12f75166d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f006ae9f-7754-49d5-8d1f-0ff94a045964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23fd53e-736d-4832-8637-33a90732f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fb8426-8131-4d99-a01d-17f16714f4af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4268e9-0108-4f12-9db1-8822e744f49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282daab4-be7f-48bf-8177-3acbd92f681c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c150d4-c30d-4830-8a06-f9eaa56966c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6efb98-a826-4eeb-9b76-0674cc86fc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa0440-2bef-448c-a121-eb8442afd319",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a6e9d1-30b6-4568-bcfb-203dd2f445de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e352f3f7-1fb2-460a-8179-29c24acacd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea28b8c-2a12-4013-b3ec-47bf725fbb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c00d6e-d292-4269-b4b3-9ecebb0cb4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1b2ae-ae31-4150-94ad-72ab3b89da6c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5cb61b-fe38-4604-aace-c1990edd3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28509414-2e78-4dc2-8664-2fea08f1d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b12b331-e01a-4416-bd5d-461578e81446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17d384c-426d-43b3-8428-9976fa8d1b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae8764-14d2-4fcb-8984-c1569ed6a440",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6cd4c4-e9f1-41d9-95c7-e8dbe35ea4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e25225-3b27-49b2-8992-4a95c67f61e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f95a285-7422-4d03-8381-b7f69220e5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb157bc4-46dc-43f7-9893-20da1af54a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8e7424-07c9-4228-9a8c-0f27c715f38f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d317eb-09f1-468c-a1a9-bb43f95d13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12874246-2a4f-434d-b46a-3cfef38ed4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ec7bdc-98ff-4369-8a23-69a47ef89176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be6fa8f-aa2e-4c6d-9ccc-e2722c2a9746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71333908-47f0-4d60-93e5-0aa1b370c848",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5618db5f-5a7c-41d7-93a9-5b456ab69221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ed7945-8911-450c-98b5-6b4cf63dc0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921a4f07-8573-4ced-a79f-b8bba44e62f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39759fad-9fcf-413b-aa4e-644e6fc21363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1de625-d021-43a3-9a51-f35bd705aaf6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d35808-1523-469f-80eb-11e6d5008226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd1cd0d-ecb2-4122-9621-5653b6a2a676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc8470c-5ee5-4c2f-bb18-76c1017cd13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6ed8ee-fbaf-4e3e-9a6b-c2184938f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e35e97-7561-435d-86fb-1d14eca7ee1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae9d37-11ef-473a-96b4-77bf9e588a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cab6d17-935f-4f97-87d6-6b2a3549aed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0755eff2-2192-494a-9673-8e1fd9faad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f976877-30ce-469e-ab0c-c6b791e910c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872d23d2-067d-457c-b39d-bb14d69cc16d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa8b58c-fb1d-4fb5-83db-565ec454fad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3106a4d9-1dc7-4541-8639-8b656575e723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d913fde-6b9b-456c-a4e6-a766492b6e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae61291b-adb9-4f8c-9993-08cd0483a300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f748b953-0df5-4924-8c14-11639a82aa35",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf8c06a-3624-45ce-b662-7d3df115db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ace1c3-fd2e-486f-ade6-eb74763be7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d9dd34-3ab6-4893-bdab-dd9314ed28a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd165105-6517-4657-b754-f91319513dd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ec93d0c-bb2d-4089-9cde-62fd405430fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1743cf94-5000-415f-9ae3-ba761cbbf5da",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8707eaaf-c59c-4c48-b42f-735e3faf10ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d110d47d-d520-4a46-a2a8-420d10aaeac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29d259c-a824-4b28-b5d1-e527b926a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb08f3d7-c840-438d-97eb-a38157b14b29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12c488f-2f95-4786-bbab-c7929a61e5cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b858d363-31fe-44ca-9f39-801969986c00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c06ee89-b1ad-4ee2-8631-9137320cb4a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "375af450-dc48-4bcf-b83c-1672bdd062c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd75ac1-9d3a-4305-ac57-046db04f3bef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6dd6206-df96-43c4-b0ea-f577a740277e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e939cce-61bb-4768-a3e8-758a33657dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3fe91ca-bb55-4f8b-96e7-6fe44a93804f"
            }
          }
        ]
      },
      {
        "id": "6204181e-90c5-4333-b82a-4467cb50138e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bcb50e8c-6b2a-40d7-ac39-708f1a2263d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51aa8569-50dd-407e-8c08-7e96d43dd187",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86a248cf-9b86-4643-9dd8-4cce149e3121",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b7f2cb-905f-4301-854b-ab1e1ecabd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559c8118-d104-4a01-9036-1718a00abad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3ed17d-ca51-4ef6-b43a-654c6ae619bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "716433de-87df-4ba9-82eb-b17a1477e64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a47c395-75ac-4539-ad4c-295ca89eb229",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ebc14-4907-43ed-853a-2cc252c500ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17952951-03a8-4b96-8fc1-80a2eb9eaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04fe159-3421-478b-bb3d-f2f74aa398e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b408355e-81d4-4e39-8c33-5b351bf6107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aba50c6-fd92-48ad-a0d5-54dc9efb2c6f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b316a5-0233-48fb-99cc-e6d7182731a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1bda98-7fa0-4542-94c0-18fa3425e111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c6991-d908-48a1-8e52-d2fd2806c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d6942c-9bbf-4339-a502-2c35a9e52801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b526f9e-f91e-4ca9-a2a7-21df8b3aebdc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322e4a1a-45f5-4771-82bb-81c9007d9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66360b8b-0410-4a42-8bc1-8dc5904d8110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb41f05-4787-433c-b4df-ee2b0411a5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7554920d-d34c-4420-b030-8ddb80816ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c560ee0d-1787-4a80-906c-244c8c357355",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bab69b-908d-47d2-ab95-8da71b3d381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d267190c-4070-445e-8401-ce7e9200cf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34eb075-4de9-4cd7-bf3f-831904b4b711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86aa757-239f-454f-8e33-71b3ebbcc593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d829095-bd39-47e0-9408-b51684ff7c52",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c00e4-fbe1-469c-939f-33e912171a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d293f2-1afe-430c-9fc7-e512f2de4c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bb2648-849b-4338-b714-612ffe6b8dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cd5007-9356-4c7a-8bdc-840d3aced888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d003e7c-e358-45bb-8217-c515194ce938",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c2c5a4-8a20-4e91-9d84-debea37bb5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc74a76-d532-4fe8-97c4-b93a3c7827b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633807da-2dff-460a-b573-1c458f9e836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4ec6a7-5d05-4631-bd39-87e1d8cc60d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9867a780-2a89-4383-b2de-dd0bd1862dba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b43592-b66a-464b-891b-973674e53d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cad5ea4-e822-411b-b30d-89f8dbaca769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc630145-8399-467f-bfde-1cd7b64abae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a3ce23-00c2-43d4-91bb-7adc6049b690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a8942e-9b5f-4bc3-a56d-d3cc07f4d575",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d31ac44-1199-4666-9ec3-9b7a25c5f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a35b48-f6ab-4c90-876a-edafba03e0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0165c0a-f2b0-4d78-9017-02d22329351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aed0f69-b356-4c66-8618-e3dac363db63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb8516c-e778-4503-b294-240ba892696e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c46f93e-a57c-4fa4-aff1-6894e8dda368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3412d2-f096-45c8-aca6-693503dbd6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cf8f42-257a-4761-81df-cfbb51b614b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8847c07c-ce19-4451-8332-65889e855f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5451fde9-9300-4a93-bd99-43cfd6442e42",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ed19a6-0ced-489d-8fe2-3cc87f737db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a41c20-698e-44b6-a158-00f728ab7547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5685d9fd-78d0-4c6e-823a-0507c855dc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2fd0b1-b8ea-4158-a2ff-a72ea10db165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd0458-d783-414e-be09-df931e7ee9c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f83f75c-d134-4ba6-ad44-16f1ddaf0425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915ef906-89e7-464d-a61d-a1aac3962a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6952f2ed-ec60-4db5-b71e-0f12df9a56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e454295-8338-4393-9dd3-23567a3c621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1def56-6b18-4218-a3e7-62d70078dfb4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f706f10c-ae58-46dc-ab0e-bb99173e0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4525cbaf-92e7-43a3-8330-843fd68e57f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dcb4d9-08aa-4cc2-86d8-d266fbcccf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "324f4425-cd59-4689-80e4-e41ae4b11f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63694e1-a6b8-43ec-b681-e5526eb2705a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255bb494-105b-4833-b120-8c7f3a9d6046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515c5310-78cb-4a11-a622-059f1d1120fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc4966f-37ba-4ad4-b7c7-97b44eca549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "676a42c5-019d-4fa8-ad2c-fff54b391d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb08327-cd38-4217-8ad1-44eb91e10142",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01344fd9-e8eb-45d8-9b94-63afb2ae0aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f9cd3b-3b29-40ab-be67-b5935aec50af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4545357-3cd5-4fc4-97d5-de20d37e9c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ee6ae2-dc33-48dc-98df-bd34a6e10a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58322826-8df7-4dba-937a-8853e305d951",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554a499-29b4-4ffc-855a-065937fef620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db735d91-30b7-4cfd-a9ca-089fba6faa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc8fefc-8747-43a2-b05d-a7f23b5fb642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66a1bf3-ef3d-44ea-9fb2-da067b98665d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db942811-0cd1-497a-a690-b46ff51b407e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa1e43-bebd-4067-be55-35d9d29097a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed27fca-c220-4314-b5a2-37a4cfab151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b59a09-eda3-4c5c-baec-609a4b617853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db8dffa-da21-4046-abaa-e5c170c08c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd66348c-83b6-43a8-b3eb-c95915b5496c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fc8214-47d7-4a38-8385-3a1ddc5e9ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cc821b-674a-4f25-8821-a91362bd71b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cc788a-faec-4461-9312-e00946685b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8f8080-605c-466d-866b-bd4ac2155f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8716fa-db51-48ab-9e31-7084bdf6d449",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977c8045-c575-4c3f-b754-8df25d38fc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8619f444-72e0-4ab5-beee-4cf944e854cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580f9791-48d2-48f4-a1f6-e79f2a5ed935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13438ef-6dcb-4eb2-a83f-ba05389f9f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480c66b1-83d1-4d16-85d0-c446fcfbe916",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4271f177-da69-4946-95c9-b2b9e7e817e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ad78f7-a46c-4ff0-a9df-c1844511d70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d29703-141d-451e-a774-3120a2100fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f04251f-3b11-4bdf-8c9b-c53a142dc0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408035f6-4bfd-466a-9253-98a1aca216fc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db5299-02cf-42b3-a953-d3d1cee76508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b0df9e-682e-4244-9667-da69e39a36ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0cad92-9630-4643-8390-153178f2e971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c1a403-d17b-484c-b979-8fffdebde5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb8c30-8485-4f27-8b58-2a0856196740",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61be194-2556-49aa-883d-1e3fb342bd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca0e0a9-a95a-4142-931f-d63545fd141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8342fe47-1abc-4d85-9cb1-7ff8ce929a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72fdbdc-275a-4e88-90ab-c1deac73f15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd6a026-c676-4782-becb-c1c22111c298",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf128622-3fcd-4cff-b785-2c6847268f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913a7d39-af0b-40ed-ad84-3edc26c9137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbd61a2-ac87-48d0-8d44-6fed6ec50962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71a3b14-744f-4b44-9e4f-60539dab58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfde8880-ba69-44a9-b203-162cf7bafcdc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d021d739-cfb3-476b-8ed1-9a724de65a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7afb737-2846-4a64-9b97-89318533e33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136830e6-22b8-4dbe-9526-60123d8b7b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dab9c5-787a-4db8-b773-7d476296458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b40ff40-16ca-4d39-b8b3-4c42ccf9078e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5832b561-eae8-4df9-af06-b8ac964ab9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e976f1b-b0ab-483b-9ee1-16e087614acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4596232-c0e3-4165-bdfe-6c564baf7773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a90d2353-3c2b-4810-bc15-346067bbc5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b133a398-c53e-45ef-a091-e68b8a2681d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab823360-776b-4a0f-bcd0-f552ec61f81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f0c081-18b4-44ca-a1b7-8c27414c0da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7827059d-0413-4b5b-b3bd-2f9c1bb1ecee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e20fb6-3acc-4d84-bf2f-5a0bcf758d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7fc57d-1503-4fe1-a5cf-4f3cd156594e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faac80a-3fe8-4e2f-88a3-a82cea92c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d897bad-3830-4a9a-a251-54ff7542ea89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af0d194-b134-4b61-9fd6-41960b907896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44736c1-eda2-4d71-881c-641bbfdd0e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dc41bd-de62-4d60-8c2f-f4b1c7581472",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5abca8-6c15-42be-8ef6-cb17cc406610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142f8d94-55ae-44e7-a048-c510fc09a06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e932b1d-8c45-4667-a7ca-9bf8c7255223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec9695e-a84a-40bb-8830-9ea102e50483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e5a8f5-5d73-43e6-9a12-61e72aff8b2b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea7694-a39d-4502-9bb7-ece18a52e0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81311738-4e0e-49fd-9c6e-230335f71b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3a36ec-abee-42e7-b612-260fd916ce1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa8aefe-c1cc-4d37-aaf4-24efe7c9611e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb5b9c0-312a-48ee-8888-1ab8d26e29f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c962a0-8223-4da9-9ea0-be8c0ac503da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdfb7f1-ed15-47dc-8272-b66412222075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bb720d-91b2-4ad9-8ff6-1626ca0f9f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "081bf523-cecb-44ec-98dc-4d5263ed289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4910d7-6993-4aad-82f2-b8dbec00b057",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa972a-788b-4d4c-bca3-70f3464692a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d117a9f7-2611-406c-8fd8-5d035e9990e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dde357b-e8a8-4c7d-bf30-5e29b7eee62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ffd473-7db6-4e16-ac9f-d20656166fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d6737a-b139-47e9-aa19-7c3b13dcaf33",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a9434a-572b-4913-b936-0130847ec2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0d84e0-9d60-429c-be51-053f7b13055f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea04772-c551-4e0b-9786-df30440fa67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3455461-587e-475e-af42-a6c2c4096e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1262101b-ac1b-44d4-9e9e-a1ebd6d1a164",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023f6b8-66da-4df2-89ff-8424802a017a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c83c561-e116-40c1-b446-a837e483f274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9801f5-1842-4aaa-8841-c411e870dccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b7f69b-588c-4a8c-8867-e79abff1a0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcf8ae8-19b1-4ef8-928e-60cae56e6d13",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976c8c1c-8f6b-4528-a7bb-e7d5bedd6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6eeeb0-f5ad-4cc5-b7b1-fae6e9c9b083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4ce22-6dfb-4d53-9c03-218dba9deffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e671155e-b24c-4a32-9e4b-e67b6d643dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662fd753-38e9-48a5-a4f5-57f61d6b4af6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07937de-13fe-4df4-b5d9-96bf843392ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca51e9f-3dc7-4a6d-b449-c3b02ae841fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2a4eeb-45e0-449f-a89c-86d89c4217aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e047fcf2-5f61-4988-8b03-063210fa7a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2dc1b6-96f1-4213-9fde-7db11f6fda58",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d120d945-772d-48ec-a57f-5feb05bdf4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b59a3cc-8fe2-48a0-8bac-342afeebe75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3728d4-d84b-4061-b594-6bdfc639875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27dc1d54-b967-464a-920d-dee41a6709bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623c5ae4-ad1d-498e-a8f4-2f18970758a6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02be207-6f0b-4a46-b39d-9c8ff837c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085ca9ee-17cf-4856-b096-b9cbda752029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb342d-f469-488a-a750-db15b4e02aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36bb3fd7-a4fe-4b9a-8005-8aa968ba53b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0dd53ce-d9eb-4b37-b47b-17a947586687",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd30eead-0815-4a9c-8b38-8b47fda8b6ad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a702c2-7a23-458a-bc9c-274efedc72e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "767b1b0e-aae6-4b46-98de-4414f075a515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6959280c-df82-470b-a002-d68907cd1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a96adbad-1b71-4f3d-adf1-9d3b55e34f93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b51debdb-1689-4043-becf-706a1559d124",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2723290-8bf0-4a62-ae77-69fb424c2a28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4653276c-5d3d-4ff8-a8d0-a25c4a4421d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09efa3e5-33a1-4a09-abc6-63567bf30367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "983ebf0b-b90a-4c71-8b69-cc1aa45aba27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea7fc50a-f473-4d4b-85ea-252f2825134f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "752e4f5e-776c-4146-ba16-f1644abacb92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a531c0b-b068-4d22-9ae5-2851cb3f537a"
            }
          }
        ]
      },
      {
        "id": "55629f20-cb2b-452a-8aa7-199d836eda51",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "efab32ea-72fd-4c2f-ba0d-1b1936327f86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6304234c-fc47-4085-b8be-3e56794a9bf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "22f89e7d-3701-4e5c-af1c-72d9e711bb9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bf0f66-b298-421f-952a-31e2ca61d32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cc0539-ff96-4cc8-8673-f9c5e12f6f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cb6cf1-8822-434d-a4f3-323cd347d87e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cb6f88-3605-451d-b22b-1038c60dbfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e29a1e-58a2-40e2-b2dd-3cc71823d060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5d014-975e-48f1-b6dc-70cd478187ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36057aec-cdfe-4d8f-b89a-fdc558826507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f980c-b7bf-4625-b088-a527f7b01e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f66487-ee42-4c1d-822f-da9e5bcd20de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b8d62c-b6d8-4b29-a15c-e47861fcccd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d183a394-77d7-47a6-9e15-5788d519b724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079327ab-9b37-46e2-a23e-20c37e8eb649",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd724fd-d933-458f-ba82-294e163db685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b580e6-b400-4be9-9fed-d822f0966522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78418806-ac9f-444a-b98a-5f0923c3ea34",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f529e084-fdc0-409d-8f4b-19decc2c07fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1a99e1-3f20-4869-aedb-83b987d4b162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e13ad1-6fd6-41c7-bca1-98b7eecb078f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff4a4db-8a3d-4842-959f-2cfaab8705cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b641eb2a-714c-40d4-bc86-e514f192c02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae02db-1538-4fd1-8962-89606461c85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bf5703-d45a-4953-873d-9b9a600dc930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e29945-6566-45de-8b24-c2e30d366e1e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee8c6c-3e45-4489-9983-3836c7f1e1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30154262-c845-4696-bae1-34f5cd5640d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf5902-6102-49b2-a547-195f55f87f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c0ea99-5622-41c0-b7bf-cae956c5b022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd6e2b6-ba3c-4aa2-97b3-ec147e6a1dca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6737478d-4ae6-4dd9-b134-e8dd314944b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9856aa-6c5c-4d30-aaf1-74efe212f3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18449bc9-d16c-40a6-a138-e35e3d428eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c69800-8cb8-442d-9864-9d13c82f10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d62d27c-75b2-4138-be52-a1e106c9572f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dbfd06-d6f7-4ba0-9377-bd8a3025d99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa86dca2-1a99-4409-8c5b-191ac09200ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3083db92-eab6-48c5-aa42-cf0ab0b6a92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd29cd9-0481-4def-a6fc-35ed2edae0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cd3878-c520-446b-b1c2-03d9477dd8c0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af5474b-1ef0-4641-89d7-43a877e34f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb17318-c0fd-4134-8bc0-d756e2fae84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9362d-3d74-49ba-91ef-234e1a97e21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0964611-914c-4cc2-91a1-f00cb575db39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac58d7b-f615-4769-94aa-1ecb71061014",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bf8e23-65ce-4a0e-9c33-349b45270391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13c0e9a-abb7-4cb5-813a-6da5a84ad9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ce088f-3c73-4512-bc94-20d230a5019c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecdb8b2-417d-42a2-b4ca-92b0494117cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc91b6db-d63c-40ab-a1a0-d927f06e80f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc84517-417f-4dcf-ad31-87a3e8687d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3fadbb3-3263-4e63-a309-6bf7f037d089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771a848d-76e4-4fd9-aa51-732b8e69dddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93580e2b-35be-47eb-a452-9ad9471cb394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b15686e-3542-4999-be14-72d9efe961f2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34955c73-8ec9-49c3-86ae-11ff473d6968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e5fdd9-5ad0-4091-8331-47561272d683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d2e99d-67dd-4836-829f-9c85886c5012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9948abe9-2b2d-4d16-bfd8-54fe7c365bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3c25f2-cb7c-41f3-ba20-0c36d51e0e47",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2279c662-6274-4ec2-b294-25ff65cde1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5c6a62-8fb6-4b07-a681-8a4424840ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39621547-ab72-43b0-a7b6-a37e0b629ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ada567-9582-4443-8c33-7a0e435430d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b50592-286a-42c5-ad92-cbe92c3be049",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2b3c56-ac32-4ac6-a103-345268580883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab0d2be-fdc5-4b32-b82d-0f0178062c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc2fcdc-c605-41e6-994b-f8e99d097e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526aacd2-45dd-4cb8-9ae4-4396bcf1f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0877be74-cb3e-429d-bbb8-6348f0866d46",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92564ba0-7bbf-4f24-bba1-f3567cc201a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5749e08c-d643-4752-8cae-1475b6738a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d27b2b6-ffb8-465d-8a4f-b8df7a5bec46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e940deee-bbce-476f-a561-92cab4262b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaeb19a-2e0b-4ae5-9df1-162c40238b12",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aced978-e123-4011-91ad-d7406394a66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106dee16-2f42-4237-8941-ea4672cbf118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa120e51-ad02-4932-8dfd-26d1c5ea5c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682109f4-4e5e-445b-8a68-5876d44bf642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65edeb1d-e5ad-48c6-8376-6a38a1fea62c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caa93cc-9455-4612-8ede-40f13a10c52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4290883c-cc68-4a75-bb19-eebf32c8583c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cb4585-6e82-4990-834b-1e0f2fce3ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e4e140-cc5a-4348-9dd4-dcdc078a06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb35e0c4-2eb5-4a7a-9ee4-358095da7d4a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c75a04-99a6-4350-9d0c-6d2a3cfd3bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249419ca-331d-4f9e-99ca-4d61924bda38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708d9ef7-38e0-443e-8032-777d38d0f24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fd6e74-8e41-4c43-bf27-f404e1bc28a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a31ac83-e153-49bc-ae1f-3da1b182184b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a05261-0620-415d-b5f9-3727bcd07af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf40aaae-5deb-4035-9e7f-53b6fba2a914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192e7393-d27e-4a19-91a2-e3ea4f76ce6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3128b3f-ff23-4aa3-8c38-a3c38170bb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2bb8e2-fb49-422d-bc77-b792ad8e839d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813d6bd4-ebfe-49f1-902d-1132dce41790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225accff-84d0-4764-a20f-082687e107be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feaf139-fe2c-4bc9-8451-da32847d234f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6fbff8-a68b-4f4a-ad05-034bf8728535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc5863a-df7a-4601-bd9e-f5dd68e0603d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e7095f-5869-476f-a189-9b1c463eab73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141b69e5-102f-4b66-a4ac-fdd9a33488e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209b4fe6-8502-4814-a77c-ca3e0fc8fc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de3d7e5-464f-4a78-9724-6ece83d44ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5a3a4-e2ab-4fd3-a55c-96efc20f627b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec488ff1-84df-4bf8-95dc-3c47a9a0e10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1396eaf6-3f25-45ee-a0b0-ddba870f56e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353a55bc-3338-4350-b4eb-3dd5c2e772f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf00d505-3676-40ed-a7ab-876147d71f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b7b3ac-cc90-4cf0-bb72-8fe689d09e95",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f0e3a-9468-4c67-adee-082b51c7f318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e4f636-5cc7-4118-b74d-80b9648acaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbcece-5789-4c07-bd5d-b0eb41eaa78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5374cd6-92d8-4ff6-9b61-b177b798ed2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac13f8f-b6ef-4ef7-803c-e049334c296f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450c0a41-d9a9-4f93-8675-a32ebe3398d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46070a02-9487-490e-b8f4-d612f3f5009e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d438d-2641-4bcb-b868-eb80ef474f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a37f4b-f1ab-45af-a868-4720cca2c3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbf756b-7bbf-4c84-b424-08cdbf514040",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27815868-1606-4b71-8ca6-5dc49fb439da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f2bf3a-e070-4001-b0e7-4acb80deb0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c826b1b8-975c-454a-9de6-1a53eb908446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef2648-1e47-4db5-ad48-bb7a607e6766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87eb296e-76d1-4124-a26f-ef6bc3604df3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac5ab65-25a4-4409-8adc-e9862f221453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a06e63-fe0b-4f5a-8f7f-96a823c9e809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8406d1ad-44f5-4e63-b6c1-d676cac2df20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff549366-2333-47ba-a537-d4719e0591cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a025d76-49ba-4325-8f59-6628bdb120b0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179ac3b1-2e2e-486e-b704-89cca18388da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c777f80-dc6b-42a7-89a9-784264f9ab04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86682326-b094-4f82-a32c-fe446c5d795b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3a696b-57d9-4bf4-af47-a84ef9d9ac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78391bc4-3bfc-4347-8079-9362d6224c21",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef2bab3-ccad-4739-9d66-79d5aba6c132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737e071b-9aad-4239-a14d-e4734f34df24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ea3d0b-88ff-4dd6-a4d8-cebd2c6245cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d501ef3a-2b72-43dc-9547-28a5774e88ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc7d191-31cd-4c13-b3f0-479a20e0c8aa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc40e0a-bb24-4505-a4dd-c47212e1d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ef4f2b-f0d1-4ef8-bddd-a3505cbfcc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a03c08-3b5e-47f3-9bf6-1bba47eda817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2485bb31-a8ab-424e-a10e-818fcc0611b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e87264-27cc-4a51-94f6-9f20c4bffb65",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd633d48-d1d1-4dc8-85a9-61e587391801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbdce0f-47b7-4d69-b0a6-165959c6a144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec760403-dcd4-4a90-b87b-7399d31a99b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df713605-7232-40e9-95f8-eac335e5560f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f301c78-9d5c-492a-86f4-a83a8372ce0d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f3bb66-5288-43fe-9deb-5557aab01b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152eaa53-c853-4468-84e3-0621762ca52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b94eb-10b0-450f-a875-2c1683148700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d37c01-215f-49b2-b777-772b7fc2959e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf7dffe-87d5-45db-909e-75a87c048aa0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890da626-b8a7-46cf-87be-da457460bef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb7fe71-e984-483d-a1b2-f8c6d02de560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6142de32-d91b-4d8e-bfd2-30cf31baa4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb412c43-0dd8-4afc-be12-c3f9e8b11df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380c30b0-919d-4f51-a12d-a1d0d7965620",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153e7e59-96a7-462e-9346-0ba523e92972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60893af2-bada-4c66-95de-e75f70a97568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd68281-40d1-4e05-a744-001840edb95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a8ba27-6be0-4ed0-a6fa-ad5d695ad18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa1ed2-e936-4e4a-9570-4e761edecb74",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d862571a-3888-4568-8c7c-087bfc2ed0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b76252-7f3b-4be9-a425-c35cf8f8c747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17778a2-64e2-4c0e-a4aa-7589ed84a30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278bb636-e78a-42e5-ae74-41b094791c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e50082-22d7-40df-baa1-25c51e073890",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490d95f8-8bc9-4b8a-bdeb-cefc64fe2455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3948f007-268c-43c4-aa7f-dc38e6f00244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d927e1e-6ef7-4a52-8b63-689788dfee9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498d4210-3488-434d-bfdf-c0d4560ee544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d04c973-d64b-44b4-82b6-a659db39bc3c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18360b1-eb89-4355-91df-a7be39585863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83e0993-26a3-45f6-8e33-c6a9a3e37d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771b2c95-2e83-4bac-912a-ee928e0382b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5481a1bb-1399-4e8d-aab1-17fedf550347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6342caac-ccda-4d18-bb82-78099482ebec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8292ddd-c82d-4ed2-ab22-9aafa17e1ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63549445-162b-4bfd-85a1-2b17bcf0ce92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa5e52-4ad9-43ef-96db-ba854d562526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67dbae0-ddf8-467c-b52e-2781219ef188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62bc79d-68e2-4f99-94e1-6f38dfbeba05",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d93cfb-07b1-4bee-9c05-8631c2207c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82c2a69-4cfa-4759-aba2-5faf3212257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fa77cd-25eb-4e20-8b66-36e8ebcaebe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7bd2bd-af7d-48fe-bd6e-fdabe27bd57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97005567-ad8b-4956-a99c-2e422da5688d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5339cb34-7b00-42ff-a384-689a21f0096b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592f4ba1-6241-4c0f-a28e-fb6a507ad446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346a0c3d-ab97-4beb-93a4-2011dea52209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544d77d7-e896-4aab-b848-f96f9626b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930a6647-1212-4be6-9b80-8b1ad6b05179",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698105ad-0ab5-4266-abe6-900a2c1112f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edfee7f-a321-4cc6-bc10-341df7776cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e61afb-4412-42f6-a3c3-01d6b2ee0d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b5ca42-81eb-4552-85a9-5f84014059da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3c5c30-1439-4344-9507-3177a9266b49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f13e3e2-079c-4c6d-bbda-7770681648fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264a2bbf-bcf6-434b-9404-6a7f161bddb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7e12f3-875c-4bce-a120-bc4cd493c7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f270154-4a06-43ff-85f6-c192c7bae9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e887896-db78-4861-b546-345066a75f1a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c8f30c-c651-47fc-9df9-a9eb1423798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f1e3e0-a2b9-4820-9e89-64b1692c42ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a713480-e107-4ee5-a5d8-9f338e142a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec898b5c-f66f-4aa3-bccd-f9c70e301559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def9fb09-0896-461c-8ca5-dbd4c7f5a2f1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dcb9dd-4a4c-40e9-bb05-248b32dbea5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206086f5-ef8e-4092-b2f0-107c22a06fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a034bd2-8ba7-4761-9467-a7016c251262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38673c58-8f27-4f37-bb03-e7247086aeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37430bee-6d44-466b-90a4-da6a53fc8871",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ddd401-cd71-4cdf-9b96-8392f73af876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d80129-93b1-48c2-8b7d-9f5ceaab0602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01776b9e-f182-4e79-b724-a8ccdc1a7186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640ed8e6-77dc-43a8-8151-18b09a565b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b14e662-a158-4a87-abb3-34bb16ab3d1e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1549fb-1f16-4436-98de-97030a2f274d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b4228c-1db7-4cec-b69c-0d9355ffc5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8d1f2-3acd-4963-aefc-14dac79501fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0df06cc-e4dc-40d6-ad1b-157f8a4841d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ef029-6a31-4eb7-8c8d-01591db38b5c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabd6538-2240-4d15-93a7-aaa3ead9b5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e79b39-241f-40db-80b7-d0d86e936ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86ce959-a367-4507-9849-f9fe3a7fed4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571fc4fb-e6c9-439d-83ae-d21fd95a4f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b3135-aaa9-4476-8a04-78d6dce228e8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509ed52a-9a2a-4af8-8649-08e1b39865e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308b3ee9-a997-4629-8563-88c0913e306f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8c08ec-22e4-4df7-8bf4-aadf4b469959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf066f5-1308-4bf5-b22c-7708e52b57f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3bc826-26ae-450a-8183-b48d5b57c909",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ca60c6-f111-442a-afa4-547e4580ff09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2b8b77-9a5e-479f-b8d5-15b99848f610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65cc9ba-e01a-43d8-8823-2bea72969258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04048a44-e7d0-46ab-8935-3df15a03fbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f448855b-93c9-45e0-a696-c80676bed0c8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b433bca-8381-4470-9475-228c7c599f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61e1e22-d337-46be-a702-57e594314df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70e734b-917c-4201-837a-1833bd6b436c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b315fe4-51b6-4e6e-8385-539be944d700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0afc3d7-afc9-4974-a180-a65229eb9fdf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5a80cb-b274-4553-aed2-6dcdce230930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb725e5-8b7e-4b43-8106-788baf56faff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9863938-851e-4752-a3a5-e26caf9cfcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6db6965-9145-4c6e-b4d4-77701aeff292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83aef0d-a200-409c-a8be-e07463cb17b5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b96bd8-9541-400d-8f5a-04596bcdcf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6519b066-c09c-4b37-8b84-a43f67c572bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c9d05-9c97-499e-b2fe-2d7947e40ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62575000-1254-40d2-a53c-0c1a415b82f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a29cf89-8dd5-4b24-a098-cc5f6100a791",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537af2a1-a4d5-47e7-8eab-39d8c4f4c84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c177da85-d8c9-4daf-94de-4b428dc9b852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25850818-9670-412f-a022-e0300a5350bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a07c3e-4bfe-441e-b403-a4695715d15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1c381c-051e-42a6-9bd1-8b3d72942708",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2ade3c-1a66-4415-bb08-103408237549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eed7e67-ac7f-4845-8167-98d0383ef570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a57158-a67e-4a52-957b-01c4b46f3b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4bd7e-b073-42e1-9d5c-535794bfb080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fdbbd8-78f8-47b8-99c3-54cbc117dd5a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250439af-946b-41c0-8415-9be086e9a9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caaccd0-0935-45a2-a5ee-b511c3a61999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c9916d-1537-47b6-8c7f-db7cff09b80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d99d1d2-0051-43e2-adc8-ecad985eec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c44b8-4dc5-4589-9096-fbaa6a3fcc33",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45ff7fc-e91f-4290-a790-4f787478eec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca95b51-9941-44dd-a1e6-b5f8ffc3f77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ecb6da-ecab-44ae-9dcb-22bc5ee73a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c46e86c-e7ef-40f0-99fc-28d2c8fb2d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8f522b-6c46-4b8e-9523-5a825a4d95a8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4a24dd-54aa-416a-994e-a2985a3d868b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009b957d-ceb2-4310-a794-e73d7a603805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee42bafa-fdfd-4824-a7ec-401cdcfdcdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2f6d58-8f01-4132-ab80-f27c6420e4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b41521b-9e10-4cb4-96a5-c70f353401ad",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43002013-2cd9-46ac-a996-aa444029dd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05873dd2-3dad-476b-8a8a-8becea9b75d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daaacc6-6da3-43f1-a9b8-0b98a7bea922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8c33e3-9edf-4678-a254-bfddec06e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16da550c-267d-45ff-85e5-3c30531cc713",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94a5056-0e2c-4d05-a647-5358a2ba6b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df72568b-8e07-43a5-adb1-2ef3da8b39af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99966307-3036-4077-aab0-49657d6796a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f309d-f4d8-4111-b848-e6d48baa86b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39251b-f94b-45a9-9737-233c2c64b419",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a94df47-63da-4dbf-9b36-57b16eac2009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab898ef-785d-443f-8470-b79765171e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc36920-3138-448a-9705-08a329f2f7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b70ef5c-9efa-464b-8d63-41cbe5b6cb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7e2489-dd2f-43da-85fd-b2f3c061721b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16be93e-11f5-4d5e-b4e8-a623b6fb3c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36bb2a1-d32c-4074-986a-acb3f736856e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadd23fd-2906-4c50-8500-fc11b37f7c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c155209a-9592-42b5-baab-c33ac5bbe2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a148ad95-715d-45df-88be-b8c87f2182c9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9821c8-69b8-40d5-9493-050fb6a168e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc6a41f-a0bd-4859-9e6b-c355f079ffd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b29037d-fec1-45d9-91a8-400494ad6e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b95e28-496c-4206-879f-f1bc1a0269b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b3988b-4d39-4178-86e4-ddc4905c6b45",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081d1914-d46f-41b5-8c4d-05970f19b569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906dc4b0-ccdb-429f-986d-abdfb72c1e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3dfc85-f94d-4e7f-bcac-06ff983e5ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d5dcff-b580-4596-8cf7-1c2ec0c3a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460d50a0-cfbf-4185-9c5a-873b4f35fb9b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5536e43-1023-46c1-92a7-1626a21a0ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fcda60b-fafa-4240-a29d-b78d9119a750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed52e4c-c868-4f17-b31f-3970cb272f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1849d1d8-8382-466a-90a1-94c74686add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c69d35-5cf4-402b-8746-1c1efd8b36a6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecf6f7b-32e6-414a-a686-b88241c64092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac2795d-e16c-4f6a-ac6f-09423c94a99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4c7c4a-bbdb-41d4-aed5-42cbddcfbb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40300ee2-69eb-49bb-b156-6304cef7cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c5a77-635e-4aca-afca-d7f9147a0214",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc29ebe-36d6-4be2-b358-6b0040d259eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f5fc0d-c709-4e90-b064-e5805e981999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f3aacc-dd03-485a-8ce0-556a88479ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d49eec2-534a-4efb-a437-05d114ed6db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb73668-4842-49d5-b677-aea92a3df146",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8461e98-1055-4be1-a919-9f691e619e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4328d471-f6ee-48a5-96ca-99b1293e3045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c1a4a2-3e80-49f2-bfc2-c66a78953fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa53867-8f73-44ce-9f9e-7abc9101fcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7e3e67-6f1b-4a50-98fe-140823578d82",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e77beb-423e-45f5-99ee-8e29bad768bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81fc2ad5-870e-4202-9d89-7280e18144a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe41da30-2726-424f-9b0a-c21b8f2f4a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd089313-6bbf-4d00-847e-b1b2c974a70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaa78b0-f691-4220-a464-23c200a47775",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f630ff8e-bd45-49e8-93d7-7fa24aa28166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d356fefb-ccf3-4aa0-ab4e-ea5d8c4bab8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbda5ea-33d7-4ece-9ecc-00dedc53c3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f2fd2e-2e74-4750-b872-df321b4a2110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aebd27-c1fb-4d0b-a154-e4081f91ea6d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc80185-0a2e-41f2-adfb-64cdfd658911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df2f10a-d434-4a5b-88b6-531d8c0af8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e23a608-55ae-4d1c-88cb-10ba4d5673bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebde4b0f-686b-40f7-95ca-88b6a35b90b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38487b1a-d898-45a6-bda4-7ed91fbd21a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b84c06-4340-40fb-b1a5-e0ecab198883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780884a5-641d-4f7a-b40b-3bffcd9a3ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e852a4de-c0a0-4547-a52d-f448a228b418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546d726c-5e48-46bd-8662-39f5e7da53b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87229a2-99f2-457c-89a9-8e24a2a7f1e0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb34964b-1cdb-418e-b031-e89210256f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d3075c-10eb-48e2-8198-31114877bcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0caf6f-0384-4dc0-86a5-2b17947cce23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9846f7-a77d-4074-b6ec-9c304a47b752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dd9fab-6fe8-4950-afe3-71cd5d930cdd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f72c33-1d3e-4d82-8815-5a5128cf6962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea48999b-08ff-4e76-95b3-40a073a53a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dd6833-477a-426c-bb03-ff07420e64df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0d7ee7-6615-4f3a-9d5e-721f69819bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0962ca22-4038-486a-8c89-3711b2dc6176",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c73b38a-f8b5-41f2-81c1-bc7281103fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715d2c17-473f-461b-9ec3-977ba2309c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd45486b-cd04-4e30-9e2b-73ff0a60e20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b88aa50-0aa6-4c72-b85f-02b6b25eb311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8c8f89-ea18-41a4-8efc-e463cc4fde16",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29b90aa-1b68-49d2-9160-65fbdc7a9bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8bed33-40b4-42b6-b4a5-c8b3ed09ad4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a928d9fe-da2d-4745-856d-b86d36f3e5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d3f92e-cd56-4765-b007-badcc95d0556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bab98f6-5256-4383-933c-e4c205f6d300",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8622f8-2f86-4666-a606-5929eaff2178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ec8490-b224-4221-b450-84522e8b4b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69d563-f9a2-4012-8e80-213081f23e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bda1cbe-b54f-43b5-80fd-fd0f2df86146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f633f9-0d95-4f42-afa8-ddb88c419b59",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56410e50-c0e4-4688-aff8-33f713a3a240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09476eba-cfa8-435e-a485-b37bf9b2278b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30895a57-e73f-45f8-8891-aa06b148b9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb34a3-17cf-4cfb-b28d-47018db70bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a905a30-088c-4545-bb60-96856ac9f1b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bfbf03-2d90-41a0-a722-82d58585cb31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9244268a-582b-4aa5-b585-3e117f6b2023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950278c8-a109-4675-be50-5f540c06f208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a767425b-07aa-4750-b616-9dd982f5c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ea7511-e543-4790-8ec5-d84b3c7b71d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177b4853-3899-4d4d-9cab-6a6ec34c26d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2358588-6afc-42f7-bc37-8dbb089e6640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f67d38f-472e-44d1-84cd-c856d6c7dba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0336b0e-c8cf-4ded-b22e-59c5ac41ae2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6790f9dc-8a55-4477-9568-56a40290586d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f5295b-070e-4b39-8889-049ebb29d0d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2c8778-b227-483d-ae86-e60c63988b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed6cb1c-a7d2-43dc-80bb-b4d9fb94dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d3a0bd-1b94-4124-ac88-8f264f57f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a33e00-76de-4a0e-8de0-a964f2bae36f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2e01d2-1228-4d73-853f-5b07dac299c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20ecfe8-bf83-4390-8c3f-3fe4d94d500b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cecba8-f519-4826-8cfb-e3474bb664b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e0dc1f-deb4-4605-8b30-eb571fb267ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35357b9d-22ee-4cf3-a318-5a99101e569d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20820a4c-0bb1-49cf-b87a-bcd72a49dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c51c1d-8346-4fbb-a70b-2ee9e47b0089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f92642-4633-447f-a663-e6f78d577e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2744902e-3637-41ec-a0c5-2763ef991f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199d33a-022a-4579-a3f6-d87f45e08cae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34a49c9-253b-4bdf-a861-04b88cda826d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a1d762-b504-40dd-bdce-c6dc98a261ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b282b3-a091-4bfa-8580-cc534fc4af28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f3cd79-d084-4233-8044-9c7b92d3eabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399bf4be-1d66-4eb2-88c3-a06a087b448a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168f34a-945b-449b-8884-097e27feae37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3d1afc-5676-421f-9c43-0b7f3b99d7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e47f83d-3f71-4558-80e0-6b12fac0c23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d750d3-2224-41eb-aa59-0c0a1f8e876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dad36f-a500-4547-a027-4660e8a27b9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7dd0d0-6669-4a7a-bf53-09e8dade356e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb390fb7-aa9b-4c07-b5a8-2ab17b91dba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d739b2-47fe-4d77-a78d-af42e783c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f15710-6071-484e-93a3-3392ac552f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175de022-3aca-4634-83f6-d58faa66af44",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f96410e-62b3-42ed-a124-99aa3548574f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b8366b-fd28-4c97-8753-f43d3eea908c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61d585b-c18c-4511-a1e7-e6f37438cc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0271b9-fd4d-4da5-a7a9-e42f349e739c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a77145e-2ecd-4ff3-9e61-22d6e148767b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76cab99-ae07-48a7-8514-e914115895ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06932cc7-57d6-40d6-aab9-0f2dae28c7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec98e56-8c4b-4e45-8845-7ae5a033ce2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3746d84f-2e2b-48c4-95f2-553b370c8f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4d9456-2441-445c-93d2-0f0ef0e48383",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eefe9d7-1f5a-4e7a-ac9e-19324c690f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5861b1e9-83f7-4438-bb9d-26f0ba7f54ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9dbc65-dfe4-46ca-a02c-3c0ce0b2bb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b90ef57-fa6b-4852-bc5e-de22201b2dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c24b740-00bf-4ae6-8691-0cf00e640212",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351ee291-5b9e-4fc4-a701-ce71f320e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff46ee1-a707-4830-8107-f6e59292bb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b937b929-d4a7-4242-a2b5-b0265b02a600",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cef9f9-c36a-4a81-8e2a-90f34d5d6ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3a8f22-1329-441a-8386-072de2af4d83",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7667c1da-b9bd-4007-a6ae-c2ca7b60d7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74d826d-bd7e-4c1a-8ac2-0d6f8f0e1965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0506f0d-f7b0-4988-9f87-8d3f21abf731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24ec7cd-e330-4e93-bb17-e119976befb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8954de37-1ea9-4aea-aacf-44fe7417e088",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f94a9f-af37-4d1c-8034-2e192a83cb14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a57dde-ab92-4e63-8758-93b4f90eaa38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b45585-0ea6-4777-937e-53a357cf4bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245377c1-ec85-4b27-9705-bd0d7bd39989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6508437f-d539-481d-b882-1a0bb6599471",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2aad01-49d7-4630-b689-1ab4d0da946d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2489c564-5f60-4d41-a3e3-56b1320780b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51021d51-0991-482c-8b87-0a8ce43628da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a612ea6b-0bf2-469a-a2fe-9e02eb6553d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f59514a-dd97-4ba0-875f-3d966265cb8d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b417e1eb-0430-47f3-82ac-f1feef745d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80af5cb4-054e-4b2e-8bec-57a2b2157764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15ac8d-4ff2-43ce-996f-94ece3dbba9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76da9dbc-6ab0-43d0-a51a-5870a69d0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f6da54-d4cc-44e6-b8ee-6df459df2c9b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a330635-cb73-4a30-9697-a3103444b62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41262fb0-108f-4d76-ae9a-16a25b558eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd8cbf6-f24c-4616-84e6-d9ec0683dbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7baca8-8c11-46a7-b1e8-6a3213cea891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d82bfeb-6da4-4864-9084-9ccf66753374",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94788c9f-5ef2-42e8-b486-7a6e75af2106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e5f0e3-dc2b-4e97-ab81-1d3d51ca3c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8242a982-87cc-477c-8389-ce3068215cb7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1afea0-52a9-498d-99f2-d2227617152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec77c991-1c02-475b-9ecd-f44bb630bb1a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b94aef-9855-4346-b18c-c9605cfb2196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95d8b2e-2255-4fda-a67d-52d921939a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6019da-0a52-48eb-b3be-3d3cd82bff11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c04b2fb-ff57-4b92-96f8-2a6191151ae7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7f4b5b9-1a79-493a-bff1-08b9bad8878d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97c9a8e0-9e21-4cf0-8f57-4bdd3dab1d25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2ef0d85-a78a-4a71-b632-7af809ee98a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c301154b-9bea-4bcf-bd99-9540beee15b1"
                    }
                  }
                ]
              },
              {
                "id": "93b85008-343d-404f-99d1-d0a18b90a6c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdb418ec-65aa-44d5-906b-dc855e004ce9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d98655-95e3-4485-81d5-c9677a417660",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b0ea6f5d-593d-4f7c-be1a-2721abf8dbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d003d59c-513e-4758-bd7c-75ab6ed06d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ec5f8a4-a15b-4349-9cf5-ca3469028683"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac1fe0b-dbdf-4397-9551-74ae035a6be2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcde65d9-cebb-486f-a1d3-10f3c2061247"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c80d7d7a-9b1e-4568-b3cb-2edc1c608991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d7a140b-bc43-47db-97f6-341949dc5248"
                    }
                  }
                ]
              },
              {
                "id": "1b21f2e7-a452-445a-a840-de1b93d0f2d1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "338779d4-2aa2-4f4c-b8da-5b6a3064fc3a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139c1166-a30d-46a9-927c-24139e84e649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "020b3508-dd97-42cb-9e25-c0e159c6c52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1294ac-6740-40ea-87c9-ae6e459df590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f96169-bf60-44e3-aa50-1cdf1efee408"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bda46bbe-d03c-403a-85bb-1cc92c4ad07f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "806daf3f-9c3c-430e-8489-b0d5784bdc24",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc40a897-c45d-4382-a9bf-01f525522586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5fc13444-db46-49bb-806d-d3c85c078246"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "270c5de0-4589-402b-b0eb-f5364d10ba4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "197450b4-3d16-49d4-85c2-d035ff4360fb"
                    }
                  }
                ]
              },
              {
                "id": "0354ff3f-46ab-4537-a9b5-9c28354b4515",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f5a3f96-519a-4d1d-99db-42b802e00811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9476ed9e-a4f0-4e3f-9500-8d1ab3fdda6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1322de1-f4a6-4815-864c-8b86dca54918",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f062cd01-7d30-4d6c-9033-a0c9ecadf9de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82d8e10b-468b-4c96-a4be-3c6180fd5496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "648b14ab-7577-49ec-88f2-5e5833a79c80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f240ce5-a322-41dd-8513-583c74b36171",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b627ba1d-965a-4b7a-be46-756074fec829"
            }
          }
        ]
      },
      {
        "id": "41991715-57ee-451c-9ab6-a683b0a3c7af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6da7fe07-7012-4efb-9fd8-32cd9c02459d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11599898-ed04-4208-a6f3-e879db240802",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a204ca-fbfb-4df8-b084-81114f326c4d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c1997c-5308-4590-9657-337c08ff7001",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1673e723-40cc-4ab7-99b6-1ada3591f752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62e6c7b-cf64-4040-a658-8c2d63ed3c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d3ddfeb-9a55-449d-815a-85fa2975ba2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b6599d-702c-45f5-93bc-1f45c5deaf6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aad19c4-6763-46a9-b88d-eafe0689158e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05ab56ce-ca13-4942-bb47-9326b4d1897c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83d8bf2d-374f-45cf-af26-1605c4703223"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7724b44d-4004-4480-9e22-457476337cde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "164f33f6-faa1-4374-81c1-46eb8aef453f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc42a6d8-7d88-4cc9-bb1c-efa7465a0629",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad430949-5733-4211-8853-dd4d06cfc2da"
            }
          }
        ]
      },
      {
        "id": "1fc7f3d8-a6b5-4802-b31b-6bf1525429c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1f49e03-316a-43f8-b21e-c1a41ac05379",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6059c1a-c5c7-4209-b117-d57a62ff5e68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dd98926-ac69-45b1-ab46-d678ad8084cd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0577b8-0be7-4eab-8a2d-e610fa1cc56e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f6b208-87ff-4dda-8912-3d5e7e6f04cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc9f7d3-016c-4ee8-b7bd-b919eab968e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7de00d11-0c69-4c10-b9b5-1f739fdeec5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a75ba9-38cb-4455-96ab-6610c263e0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4be227c3-3efd-4707-b3c4-f633fd156bb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ecd0eac-c475-494d-a0f3-b70b397f6960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f55978a-0ee7-4772-8af0-4f379ab76da3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "353a4866-3335-476c-84f1-7051fb0b5c0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef2f8cc7-ed4c-44e5-9d36-27dce1d6d8dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9550f0f2-1f54-441f-b7e7-3ab1a7a057b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "045ce013-bbbc-4f1c-9429-6067db9c78ee"
            }
          }
        ]
      },
      {
        "id": "917697cc-7f53-4613-8108-7fd97ee33321",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d409cf93-b112-4824-bb08-de43c591346e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1498b80-6e26-4214-a01a-08054bc5926f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12278dc2-7b75-4ace-8738-f2064aa3ff0b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edbf197-ed36-4125-859f-e2fa796e6ee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc66c7f-8a26-4c5c-ad83-dac9469e37f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf9a813-af0e-4784-b09c-1a9c30c7550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a7b27fa-0b47-4a5a-8d55-84ccd163d124"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34c049d8-1ab5-42c4-a2c1-35dd3918a50a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b70bc16-6286-48c4-9e7d-a3fe2ebbc0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e3935e7-aa04-406b-b2f6-c20832cd2c0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25066a61-7d77-4774-9af8-ab5479e10806"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70711e44-88ac-41ea-95ae-4f6bea9c0dfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f3969b2-75d5-40b9-8e2a-19dce110d6d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2938d022-723d-429b-8cee-67c2187f2372",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c39fb84-cdf5-4344-bdbe-31c380b190aa"
            }
          }
        ]
      },
      {
        "id": "0cee9e4f-b02a-466b-95d2-7adc3daa32e5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a55345a8-e745-49bc-ab75-28531e2a6793",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a057d781-3a79-43bd-a93f-e1f99dc96ad0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "73636a26-87dc-4dc3-8901-1eb38c5e5526",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "711b460b-66d0-4665-8372-74e9d1f97f96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "165001d0-ccfd-4d3c-9d13-1c38cda23ead",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 347.13028169014086,
      "responseMin": 8,
      "responseMax": 7212,
      "responseSd": 875.9952612973509,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695342810466,
      "completed": 1695342924706
    },
    "executions": [
      {
        "id": "00b108f1-2510-49ba-b678-4df09b4d40c2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29143944-0ac8-489e-818b-58b0b2cc06c3",
          "httpRequestId": "79a6a49c-30bc-48d8-8d70-424d933ca165"
        },
        "item": {
          "id": "00b108f1-2510-49ba-b678-4df09b4d40c2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "06af7752-7cb7-4179-ad19-768f0ceab615",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "0bbe48aa-ea3b-4b2b-bc90-dd53ca5a03cc",
        "cursor": {
          "ref": "976cfbee-3bd0-4b0c-b0a1-8fee05541912",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d81290f-6761-4dc1-904f-5878c1f1f631"
        },
        "item": {
          "id": "0bbe48aa-ea3b-4b2b-bc90-dd53ca5a03cc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec07b9ce-ad42-4ab7-9561-39761ce802f6",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "40a73463-0a52-4f1f-a68f-5e3b78107230",
        "cursor": {
          "ref": "f98541df-1db6-4eb6-b89a-cd5b713a67c1",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa64d7d7-c693-4224-9e8b-018438060e9f"
        },
        "item": {
          "id": "40a73463-0a52-4f1f-a68f-5e3b78107230",
          "name": "did_json"
        },
        "response": {
          "id": "5b7fa81f-4401-4f12-998a-e324b84711ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1488,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc36b511-27fc-443d-b813-d44f2dd73e15",
        "cursor": {
          "ref": "fb2cb7dc-e07e-49fa-b431-f9fe8d6e70bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d05482e-b1f0-4cda-b95d-d89187de44af"
        },
        "item": {
          "id": "bc36b511-27fc-443d-b813-d44f2dd73e15",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a59db16-d48a-4257-859f-729b48b0f2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc36b511-27fc-443d-b813-d44f2dd73e15",
        "cursor": {
          "ref": "fb2cb7dc-e07e-49fa-b431-f9fe8d6e70bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d05482e-b1f0-4cda-b95d-d89187de44af"
        },
        "item": {
          "id": "bc36b511-27fc-443d-b813-d44f2dd73e15",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a59db16-d48a-4257-859f-729b48b0f2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a361998-6c67-40e9-b830-c0804eb2fa40",
        "cursor": {
          "ref": "934649e9-6526-474d-9209-c35ff13c489d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec793f30-3588-43f1-a5d5-3757c879deee"
        },
        "item": {
          "id": "9a361998-6c67-40e9-b830-c0804eb2fa40",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "65034c96-b4db-4c6a-b33c-45ec53b0b78c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 452,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d777f3b-de39-42df-8018-b6bea16b7b7a",
        "cursor": {
          "ref": "8268544b-2f32-4192-9560-412ca0a98b77",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a336c17f-879f-4fd5-bf24-5eaa341b4443"
        },
        "item": {
          "id": "2d777f3b-de39-42df-8018-b6bea16b7b7a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4b23d9a8-0fa6-4000-9072-18eb7c1acdb5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 276,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b1aae-5aaa-489c-bf2e-327838c94dea",
        "cursor": {
          "ref": "c69abbab-4093-4db6-9024-b536b73a21b0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7abde53f-472b-4895-b712-4d9ca6e55f6c"
        },
        "item": {
          "id": "291b1aae-5aaa-489c-bf2e-327838c94dea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c2d763c7-a35e-42f3-a80a-93b0ec858327",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a8553-e0ca-4a6a-a20c-808d61dcf436",
        "cursor": {
          "ref": "f4a430bc-3c1b-474f-a036-ac7e953631e6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b33c8d6b-ff28-46c3-acf9-89ac80b14cc6"
        },
        "item": {
          "id": "3b0a8553-e0ca-4a6a-a20c-808d61dcf436",
          "name": "identifiers"
        },
        "response": {
          "id": "cad53d94-72fa-4aee-a05f-cf15958cbf57",
          "status": "OK",
          "code": 200,
          "responseTime": 1174,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7479859-0146-4701-ac93-a08e2e1f4e10",
        "cursor": {
          "ref": "16a100bb-0b47-4516-aad0-f5edeaea0202",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "81c3fa3c-a691-40b9-8463-5ce6a2e12c0a"
        },
        "item": {
          "id": "f7479859-0146-4701-ac93-a08e2e1f4e10",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e6e39528-0ebb-450e-810a-553f607980d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458e2a08-9d9d-43cb-b9dc-5d6106c6f661",
        "cursor": {
          "ref": "1f5d3455-9d06-4550-8573-144f2f817580",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1a3525f9-dccc-4517-889d-bed8c604b215"
        },
        "item": {
          "id": "458e2a08-9d9d-43cb-b9dc-5d6106c6f661",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "409d4dc0-dffb-4642-a105-a6e0f021d7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d33939-8f13-49ff-b53b-25243d223c64",
        "cursor": {
          "ref": "7f2d9e73-5818-42dc-b524-3804f39e442d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "db0e38ef-452c-4966-abd4-1a8b47bc9a6f"
        },
        "item": {
          "id": "d2d33939-8f13-49ff-b53b-25243d223c64",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "10caf637-ef5e-42ce-9405-9347e28689b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1c4f28-3065-4bf4-a794-dd5ca5e6936e",
        "cursor": {
          "ref": "0063a4ef-1535-420c-818f-36d3d895f671",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "de30262e-5a84-4aac-83ec-57fc3f4524c8"
        },
        "item": {
          "id": "fb1c4f28-3065-4bf4-a794-dd5ca5e6936e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "90f31521-3695-4176-bc23-5e5ee249b41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adf236a-c4d2-4608-9382-fdc0dc2e9b1f",
        "cursor": {
          "ref": "2c06f1d9-e563-4843-aa98-6703e72d986a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2fda3cb4-32ad-4d7f-89ae-7e381ba8c41b"
        },
        "item": {
          "id": "1adf236a-c4d2-4608-9382-fdc0dc2e9b1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "43f2dc81-c264-48fc-ab46-83d14c0d27d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68964c-d980-4a17-915c-e0118f51b777",
        "cursor": {
          "ref": "cba6fc33-d655-4748-b5e8-b8cd2b1f36dc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d32c3227-4ecb-45d1-959c-9a89c88d5b50"
        },
        "item": {
          "id": "dc68964c-d980-4a17-915c-e0118f51b777",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6952dc79-54b5-4767-b22f-9e24fecce638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfed7005-07ee-454e-b827-83fa1d1f3942",
        "cursor": {
          "ref": "064feeb8-dce9-4125-91b2-d58ebc7c4ad2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1355ed1b-69ac-44af-9278-7ef5f98baf42"
        },
        "item": {
          "id": "bfed7005-07ee-454e-b827-83fa1d1f3942",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75098263-fa79-4087-973f-1e57140ee951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c336262d-1fe0-46ee-9afd-c9d16e0b6ddc",
        "cursor": {
          "ref": "91924ba9-b583-4566-89ee-21822d889de6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "04427e0e-6531-4fe1-a155-dcfb630e2e98"
        },
        "item": {
          "id": "c336262d-1fe0-46ee-9afd-c9d16e0b6ddc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5bcec307-c360-485d-8da2-f592d0ce0831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9e7d7d-818b-4f37-b088-dc0ff7aff772",
        "cursor": {
          "ref": "29e7ae22-65b3-4510-b5a4-f6f10a553063",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5229526a-afaa-4ce7-8bf2-1bd4f3fd303e"
        },
        "item": {
          "id": "1e9e7d7d-818b-4f37-b088-dc0ff7aff772",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eb13b437-4130-4f17-b4f3-736e004c7b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6acae-bbb6-4081-ab01-a5beb484946c",
        "cursor": {
          "ref": "b1442a8c-f091-4290-a6c9-f635ee79c7b6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9b08f928-46f0-4062-929f-0f2386645538"
        },
        "item": {
          "id": "15e6acae-bbb6-4081-ab01-a5beb484946c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cee44319-0049-4232-97d3-9c18f7e45d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88465f9a-8b8d-414b-997f-123821bda423",
        "cursor": {
          "ref": "c8b67210-754c-4f17-8d5f-a6317ee6a3e8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "54ba2055-da53-416c-adb1-f9c0262dfbca"
        },
        "item": {
          "id": "88465f9a-8b8d-414b-997f-123821bda423",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc7aefe4-8116-4120-92e0-4da3f290e930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e7a70c-6a30-46e2-99c0-33e952655c6b",
        "cursor": {
          "ref": "7954ec0f-0b21-482d-afec-bd7e3330ba7c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "01e02979-6d01-4173-a85a-3b751f6f858f"
        },
        "item": {
          "id": "45e7a70c-6a30-46e2-99c0-33e952655c6b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c4233d0-9695-42a3-a56e-28fbb973a1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be29f81-e136-46cd-abb1-c5534dbda31a",
        "cursor": {
          "ref": "5a426113-5241-4469-8606-47c1b212796e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2e42723b-5064-458e-bd7d-3935e9ecced0"
        },
        "item": {
          "id": "9be29f81-e136-46cd-abb1-c5534dbda31a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1df5056d-1697-4d97-b7ff-e3f016fca2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b1980-0ace-4c86-a5c6-ff03fc115747",
        "cursor": {
          "ref": "0a85fcdf-5215-4985-bfe6-3fe4e27a7dd5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a634387c-eebf-4539-b3ee-6a939f0c21c6"
        },
        "item": {
          "id": "9f6b1980-0ace-4c86-a5c6-ff03fc115747",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6571804b-d4d1-4e34-8fe3-476dd0a71dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f79d58-b844-4c29-ab74-53087ac623b1",
        "cursor": {
          "ref": "76787cff-ad00-4208-8a2c-86424aab159b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d4fdff67-ab0a-417a-a270-4bf07c7dca53"
        },
        "item": {
          "id": "15f79d58-b844-4c29-ab74-53087ac623b1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fc8a661d-f293-4f25-b8d1-2749ab69eceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15beaea-4042-419a-9603-e00c80bd8e83",
        "cursor": {
          "ref": "f325caa4-2823-44cf-8592-399ff47c91c3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5c1a3dfd-07ad-4a6e-ad91-fe61c437ef5a"
        },
        "item": {
          "id": "e15beaea-4042-419a-9603-e00c80bd8e83",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "753f6094-a226-4312-83cc-567282cf7334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ca98e2-83f6-4377-b04a-46cc4d296b32",
        "cursor": {
          "ref": "dd356f3e-26b7-41c7-866f-3c4c6cd54ad5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6ba52d7d-3ea3-425f-9fe8-5f808de35e50"
        },
        "item": {
          "id": "63ca98e2-83f6-4377-b04a-46cc4d296b32",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6c6ec06b-9922-4c80-8839-5142c415ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214dd4d-b4be-401a-8dbf-eff23f44f977",
        "cursor": {
          "ref": "4f5d0dbf-dd2c-43f8-8fc4-0d387491ccc6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e77d3ca-3880-47d4-a10f-4439b24ed1b5"
        },
        "item": {
          "id": "9214dd4d-b4be-401a-8dbf-eff23f44f977",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "958ba612-e363-4590-9f1a-82c5a86117d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f255f294-0f2b-4457-9218-787f7c3c3b6f",
        "cursor": {
          "ref": "7a54afae-1a6f-4dc4-91f1-05ac731333a9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d6639df8-4da2-49f8-ba88-a92c7fd52322"
        },
        "item": {
          "id": "f255f294-0f2b-4457-9218-787f7c3c3b6f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5d7c7372-59c0-4a8b-8694-5e1d36b5b24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb171281-314c-454c-ac7b-aa91cc4d05be",
        "cursor": {
          "ref": "5a0ebb2e-01d7-4aa9-bba1-cfbef0e3581f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d845b388-34b7-476a-accc-e854df78e9cd"
        },
        "item": {
          "id": "bb171281-314c-454c-ac7b-aa91cc4d05be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bfc4e39c-dfa1-459a-8d2b-3d472157b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83176b42-1535-4b82-ad21-8d7ff058984e",
        "cursor": {
          "ref": "b3059b4f-f2eb-44cc-b3be-625e16022683",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "860ffb1d-3045-46d1-926e-ef3ad2b6bec5"
        },
        "item": {
          "id": "83176b42-1535-4b82-ad21-8d7ff058984e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "294cc57d-10fb-4eb4-9d60-464330ff8fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c705dc4e-9e51-44e3-8021-50b3b949c313",
        "cursor": {
          "ref": "481de099-8247-4094-a7b7-b543312f6dd9",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bcae8efb-af37-48f4-b665-d181227de37d"
        },
        "item": {
          "id": "c705dc4e-9e51-44e3-8021-50b3b949c313",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2fd4aa5-7c17-412b-9519-34f852713994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5bb8a4-3136-4b79-a330-b31e29ffa93b",
        "cursor": {
          "ref": "260dd996-0125-4ed6-862d-724c2e804847",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8a1645e8-2c58-4287-8f86-c4d09ceadc4f"
        },
        "item": {
          "id": "cd5bb8a4-3136-4b79-a330-b31e29ffa93b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "14e166f4-8e8a-47f0-beb8-46603bdb2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076728e8-bbf1-4dfb-b6bc-709a476c3c96",
        "cursor": {
          "ref": "0bb45832-907d-4810-9bbf-d178b1aa3fb3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a28d0c93-d1b0-4fa1-a7b1-9bc968651904"
        },
        "item": {
          "id": "076728e8-bbf1-4dfb-b6bc-709a476c3c96",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fac5b8ed-2829-454d-92e3-f8d7db443cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b5bb0d-7299-458d-9c32-9a5cc8493c21",
        "cursor": {
          "ref": "3a5aadc2-68f2-4c92-bfbe-ec235a7139db",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a14e1bcd-bf5a-4a52-ab2c-4bb8ffd5a14f"
        },
        "item": {
          "id": "63b5bb0d-7299-458d-9c32-9a5cc8493c21",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2e578758-364c-41fc-9e20-de988fbbec49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd97db36-acbf-4e38-aa7d-54b952423aa7",
        "cursor": {
          "ref": "f15d2faa-e1ce-400a-a501-8cdd1792e107",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6cfdf6ed-9450-4496-963d-8fea4cc89f69"
        },
        "item": {
          "id": "cd97db36-acbf-4e38-aa7d-54b952423aa7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7e23258e-a414-45ed-bfe0-f09955d630b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d60096d-99ab-4c2c-8351-7ee879296a45",
        "cursor": {
          "ref": "b6b21dbd-3710-4e91-a447-91ad4fc7657c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51784602-629f-4104-9af8-fe9cc0997ba7"
        },
        "item": {
          "id": "8d60096d-99ab-4c2c-8351-7ee879296a45",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f0b59a9-0566-4b3f-885a-df38ba63adb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3abc78f-4113-4938-81be-4a932c0d5968",
        "cursor": {
          "ref": "9856c983-f170-4fb4-baf1-37e3245c8f70",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "73fd4713-af2c-497f-bf37-7bbf0c2f2a5b"
        },
        "item": {
          "id": "e3abc78f-4113-4938-81be-4a932c0d5968",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7e0985a1-1f3d-4adb-90d7-9e24c29893f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce0414-a995-43f7-a28d-53ce31a2ea91",
        "cursor": {
          "ref": "db6685ad-567f-4ab9-a20f-2ef6da1785a9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1e9d748d-20bd-4ad0-a346-cde403a88a86"
        },
        "item": {
          "id": "9fce0414-a995-43f7-a28d-53ce31a2ea91",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "395c6363-9b38-4729-9ca3-8ca4cabd9475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b747ce2-3473-4616-8ffd-7fb44fe8b320",
        "cursor": {
          "ref": "059f4bb8-099f-40a1-80f3-a57518be7fc1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "50f771ab-3101-42c0-8525-5ffb81276bf8"
        },
        "item": {
          "id": "6b747ce2-3473-4616-8ffd-7fb44fe8b320",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2e38cd27-20a3-44e3-abf8-d505107bef5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0672132f-8853-4096-8e53-34412565df9a",
        "cursor": {
          "ref": "58990543-150b-4425-afd3-63d1200fb301",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2c29f144-a45f-4ed2-8738-63fc240d9976"
        },
        "item": {
          "id": "0672132f-8853-4096-8e53-34412565df9a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7e84b5d0-be73-4dc4-abaa-af8fcd721371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbf3b9d-e14b-4f81-9a11-bd7cd3cff24e",
        "cursor": {
          "ref": "11c2d077-6c0f-4fe7-a2ee-919e4a503a2b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97661cff-01b1-446f-b11a-7d17adb32573"
        },
        "item": {
          "id": "4cbf3b9d-e14b-4f81-9a11-bd7cd3cff24e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c71b8827-9275-4da7-82b7-66af12abd9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050c4ef0-445e-4c88-afba-e997b2f7eb20",
        "cursor": {
          "ref": "3cb65d55-8c82-46b6-8302-8d0107e0a7f1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6a898a94-8057-4df6-b345-c0a7ef139f71"
        },
        "item": {
          "id": "050c4ef0-445e-4c88-afba-e997b2f7eb20",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e172ca8c-8d3c-44f3-a705-2662af3f9f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6208d66e-5279-42e5-abe3-7e5fd65b787d",
        "cursor": {
          "ref": "054a6042-298e-4e1f-9134-fd0203cf1c9a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2f66bb1f-706b-4936-8038-0bdff6b0a557"
        },
        "item": {
          "id": "6208d66e-5279-42e5-abe3-7e5fd65b787d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "016494b2-0e9d-4a2f-aef0-0968ff99cc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aaf10f-b663-4d12-ba39-0d37fc52b9dd",
        "cursor": {
          "ref": "cbaaf82e-0f90-4415-bfae-e47d71dfbceb",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5f58e23e-adda-49a0-8e99-4c43c0bb4b90"
        },
        "item": {
          "id": "b8aaf10f-b663-4d12-ba39-0d37fc52b9dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0629ce5-3ef8-423a-b875-bfb651cc9084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b50613-1f81-479a-86a0-750d53b82c14",
        "cursor": {
          "ref": "335d2215-de48-4617-8df8-8a56bcb4d23b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "09b5a41c-0944-451b-bcdd-97aefbd50c9f"
        },
        "item": {
          "id": "f8b50613-1f81-479a-86a0-750d53b82c14",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "695cc906-bb6f-4884-8a07-0b543006a41c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e369567f-60ec-4024-bea7-2b6d9d8dd687",
        "cursor": {
          "ref": "8d5842c9-fd1b-49ad-b881-c335afbf5508",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e7b85d4a-ed8d-4034-b17e-9406daef092e"
        },
        "item": {
          "id": "e369567f-60ec-4024-bea7-2b6d9d8dd687",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b26508d-8833-4559-899b-2cf0ffc7b16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4d80a-fe6e-446f-80fd-85979763f938",
        "cursor": {
          "ref": "de0f5151-26d1-4c74-87d7-00a176ba6a4a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a89b12a4-2e86-43de-8929-30c60054ed03"
        },
        "item": {
          "id": "5aa4d80a-fe6e-446f-80fd-85979763f938",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a49a90ea-a46b-4376-8f8b-25635285e2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df074dc2-c99d-4abd-8b89-853c104b12cc",
        "cursor": {
          "ref": "50797e5b-3e61-494b-a36c-348a4bada040",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43f71ddc-2102-4044-9a0b-f5cd63ecae31"
        },
        "item": {
          "id": "df074dc2-c99d-4abd-8b89-853c104b12cc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ec88a7cc-573b-49aa-a819-2092ffce9bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0957c3-88ca-43d9-89ed-9fd151a719fb",
        "cursor": {
          "ref": "f37e5099-35a0-40df-9820-8af278c005d0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a65fb037-8312-447c-b4f9-47208444c7c3"
        },
        "item": {
          "id": "fe0957c3-88ca-43d9-89ed-9fd151a719fb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cdd0f4bb-a21d-43a3-9c0f-e5a94775efc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc380c6-34bd-4566-83f5-5a3a67fce0c9",
        "cursor": {
          "ref": "59703f88-4837-4236-ad93-d3b52c4c14bd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c0f4ee61-5513-46e1-954f-c105f437321a"
        },
        "item": {
          "id": "cdc380c6-34bd-4566-83f5-5a3a67fce0c9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a17a1eae-d366-4960-b7b6-8850d15f59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b87574-6e50-41fa-8b21-aec502b42f08",
        "cursor": {
          "ref": "a5aa24dd-921d-44f0-9014-4aece615a5b2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "839a4752-9f68-40f4-a6ca-7830331c2b41"
        },
        "item": {
          "id": "27b87574-6e50-41fa-8b21-aec502b42f08",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef323184-189e-4f0c-83f6-02bfebdf5217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09ebdcc-9a3e-4eea-82ed-93a346e2ce16",
        "cursor": {
          "ref": "924f7087-e88b-4af1-b50d-914f19d5c789",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bcc14056-7ec5-4d68-a1c5-4430933a62cc"
        },
        "item": {
          "id": "f09ebdcc-9a3e-4eea-82ed-93a346e2ce16",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dd8022e7-c338-49e2-9fbd-4a95cd5fc253",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 650,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fdabe5-cfc2-4f71-b6dc-44620ee44615",
        "cursor": {
          "ref": "bfb35a10-af84-4e0e-b078-8ce9e011d526",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0a6d668a-a024-4127-b738-24ad46047db0"
        },
        "item": {
          "id": "60fdabe5-cfc2-4f71-b6dc-44620ee44615",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ca882e8d-d8aa-4ce4-a496-2c1db40d4c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3531c307-1432-4d12-8143-8b6edc01d4f4",
        "cursor": {
          "ref": "78e3ba97-c420-41e1-b62d-5c19fdb73a6f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "47cd8dd1-ba77-42f7-bbae-3b540e3be41d"
        },
        "item": {
          "id": "3531c307-1432-4d12-8143-8b6edc01d4f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b6db1e3b-d18f-4c68-a447-c6e36dc810dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135f7cf-f8f6-44ba-ab05-5cc43cd45f2b",
        "cursor": {
          "ref": "837a6080-3866-4232-8d4d-9f8aa1b17b84",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5a4a12be-a4ab-4652-abe4-ae5316636035"
        },
        "item": {
          "id": "5135f7cf-f8f6-44ba-ab05-5cc43cd45f2b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "124fbde3-3579-426a-be7b-87e9775c7182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcffb92a-a207-48df-b8bc-52e4404dd8ec",
        "cursor": {
          "ref": "6f02dcbc-a06e-4aa8-b9dc-ce3f7646e9c0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "df63388f-6b64-497b-9993-97e445c03735"
        },
        "item": {
          "id": "fcffb92a-a207-48df-b8bc-52e4404dd8ec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c596d3a9-6391-4b92-9d0b-c9ac5ad426d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6f914a-f3d7-4ed0-ad77-2d4e0c900d4b",
        "cursor": {
          "ref": "6b2d1a0d-be1e-4958-b471-cc8c464b7c46",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1e5193c6-56e9-4030-aec6-4ca6878af825"
        },
        "item": {
          "id": "bb6f914a-f3d7-4ed0-ad77-2d4e0c900d4b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99b246ce-fb97-41f9-8f12-f28f9bae84d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccaae9c-83bf-475c-b124-a6ad1fdba1e2",
        "cursor": {
          "ref": "12034f01-6748-48a4-9e3a-d8eaa9e624f3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "19bebdbc-a625-4a05-a483-d5e9cc3f2f3e"
        },
        "item": {
          "id": "6ccaae9c-83bf-475c-b124-a6ad1fdba1e2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "919e78c1-0ba1-49e8-8bcc-bc81853dae09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8f68fe-c05f-490e-972d-001357d70a79",
        "cursor": {
          "ref": "81295524-3537-4f61-b004-8177e1343630",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "93de5cc0-7179-48b6-a33c-f4ecf898dbbf"
        },
        "item": {
          "id": "ae8f68fe-c05f-490e-972d-001357d70a79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4c9de16a-f43e-46fd-8bfa-02be4675c2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a7994a-ebb9-4efe-9037-d32f0324be52",
        "cursor": {
          "ref": "4cab4055-3f8e-4e4a-8771-330b3d4ad21e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5175fc9d-ca91-410d-8ae3-4c4315d87e9c"
        },
        "item": {
          "id": "c1a7994a-ebb9-4efe-9037-d32f0324be52",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5afbcc15-5ff2-4b6e-ba83-963e1cb8376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df45ba6-be80-4707-8ab3-17b5847b33a7",
        "cursor": {
          "ref": "ac58f7ce-e719-48bb-8aa2-778a875db2a4",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6fca66e2-238a-46b5-9189-4937c69bb22b"
        },
        "item": {
          "id": "6df45ba6-be80-4707-8ab3-17b5847b33a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f8d0ece4-fbce-4cc0-ae11-2a367beade7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eb0a83-d00f-4fe8-9fb4-1aa3dd4edd99",
        "cursor": {
          "ref": "523331fc-af12-45ea-b171-715aac4625b5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ff4c812-1785-4e73-986c-d5c530cd6926"
        },
        "item": {
          "id": "d8eb0a83-d00f-4fe8-9fb4-1aa3dd4edd99",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "881f7c20-6e20-4060-8232-04403f3cb722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a75386a-ff36-47ee-9555-8f43731e44d5",
        "cursor": {
          "ref": "ad16ed0d-ef39-4647-9971-cd441694791d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d6c710e0-ad0a-47f9-b9b5-25c77d8ffd65"
        },
        "item": {
          "id": "5a75386a-ff36-47ee-9555-8f43731e44d5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1135807c-2ca5-48d3-8b16-313999c882cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8186bc2b-7071-4e71-9b66-4761d89e1d73",
        "cursor": {
          "ref": "6571a789-067a-42fe-93dc-47e599124096",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3f0e865c-69c6-4e0f-8d92-e05c94c20511"
        },
        "item": {
          "id": "8186bc2b-7071-4e71-9b66-4761d89e1d73",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "34ef3280-cdcc-473a-8533-c83e07018421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67ab94-3db3-4f8c-80f0-7b88db183ae0",
        "cursor": {
          "ref": "1a8ec37c-abe1-464d-a142-3796b1627f51",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b9829d82-4228-4215-971d-79a6a0094bc7"
        },
        "item": {
          "id": "1b67ab94-3db3-4f8c-80f0-7b88db183ae0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "88f19c28-ae28-4330-b058-e105513e4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba05a98d-41cb-48eb-81e5-fa99a4d29397",
        "cursor": {
          "ref": "a2f2d612-a180-407f-afbd-df6c95a3f4c3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d07bf2fc-2735-4dfb-8e21-9672881b88b1"
        },
        "item": {
          "id": "ba05a98d-41cb-48eb-81e5-fa99a4d29397",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e758a8c5-9a8c-4b8c-b190-89f9a74b5907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d5dca1-5ec0-43ba-845b-d5129afc2fa0",
        "cursor": {
          "ref": "4db87a3b-5d46-41ac-904a-1347d15a855a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bd9f414a-177c-454c-b439-6f23b4dacf44"
        },
        "item": {
          "id": "93d5dca1-5ec0-43ba-845b-d5129afc2fa0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "86bd6687-bef5-40e4-978d-ec1d7c40e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85a789-954c-4dd8-b662-b835529e776a",
        "cursor": {
          "ref": "34c00802-9e56-4bd1-9cac-b66787fe06ef",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1456b63-5237-4297-aace-e1cef77c94a9"
        },
        "item": {
          "id": "9c85a789-954c-4dd8-b662-b835529e776a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "143b41cd-31b3-4419-844f-3e67f4800aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3f74db-58f5-4b08-8815-bac8ad4137b9",
        "cursor": {
          "ref": "949571a7-a13b-47f3-9b45-988bec56f83a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "be7d52ca-4c18-4509-82d7-496d97d12261"
        },
        "item": {
          "id": "2f3f74db-58f5-4b08-8815-bac8ad4137b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1cb60c32-3a0a-4941-b3f7-04e05b215519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137ca14b-b35c-43a2-b21e-fb4641e02a27",
        "cursor": {
          "ref": "0e953285-f8d1-42db-8a0c-06900dd7cbe4",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0fc8c310-d6ad-47d6-9931-8cc7db33bad1"
        },
        "item": {
          "id": "137ca14b-b35c-43a2-b21e-fb4641e02a27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "32779c66-6ef8-4371-8166-9bb8f18a9057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8c5a6b-197c-42ca-b2cb-820028a36d8b",
        "cursor": {
          "ref": "e8ad78fe-0913-48d1-816a-480831e33412",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1657a654-e38c-4cdb-a3e0-12b67591e50c"
        },
        "item": {
          "id": "cf8c5a6b-197c-42ca-b2cb-820028a36d8b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8ccbab4-b34b-4732-8058-7eb0e696a103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6982c8-a07b-4ae6-9230-f77cb0bb1515",
        "cursor": {
          "ref": "0ad9893f-a80e-4851-bd82-4026d62af412",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e230a1ed-8147-45df-9aea-df2b42ac8238"
        },
        "item": {
          "id": "ca6982c8-a07b-4ae6-9230-f77cb0bb1515",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2e841719-980e-448f-8046-cf70eac3d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35d7885-c426-4f9e-a334-a8d84a3cf311",
        "cursor": {
          "ref": "a2ed2f27-b7bc-4be9-b63a-f465eab6a0e8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a30b4918-12a8-44ce-96dc-c85b74fe5c68"
        },
        "item": {
          "id": "d35d7885-c426-4f9e-a334-a8d84a3cf311",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae7351ef-4a01-4390-b230-b041548c6e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ad1b0-ceda-497e-9c47-1bb9e5ec7d13",
        "cursor": {
          "ref": "81594429-45f4-4976-8f6f-8640a1556b9a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fb4d96f3-9cd6-4f8a-a491-d6b1ced4d031"
        },
        "item": {
          "id": "720ad1b0-ceda-497e-9c47-1bb9e5ec7d13",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e04a08d-a12f-4b06-9c1a-7b9f23a19821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf14793b-0417-4069-973b-578879edd7e3",
        "cursor": {
          "ref": "5bedcd3c-a34c-4894-88cc-da4c512d70ea",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "986a23c6-9544-47cd-8cfc-26ed78a34c49"
        },
        "item": {
          "id": "bf14793b-0417-4069-973b-578879edd7e3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9375bd87-6aaa-4521-ac95-83e20c1e438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ca684-27b1-4782-821f-978fc07fbf25",
        "cursor": {
          "ref": "0582f829-4722-42b2-a10b-bb22349251d5",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e691e134-0c50-4e2d-a6eb-1913d95ea4dd"
        },
        "item": {
          "id": "7b1ca684-27b1-4782-821f-978fc07fbf25",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "40bf3b16-8b1a-4394-94fd-03181f82536a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38548e97-3596-46a3-89f5-c8935c7deb79",
        "cursor": {
          "ref": "7fb62dc9-bf26-413f-a969-ea8094608219",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80d27582-5f48-438a-b210-2f5bdc461f94"
        },
        "item": {
          "id": "38548e97-3596-46a3-89f5-c8935c7deb79",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ccad90e-19ad-41a9-800c-08e76f736ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c790c37-e0b3-484c-8dbd-9123c75a7a18",
        "cursor": {
          "ref": "82bb8ba8-ee21-4043-aeed-a33db79b1dc2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "78684854-482c-4476-98d9-1620e1b48f37"
        },
        "item": {
          "id": "3c790c37-e0b3-484c-8dbd-9123c75a7a18",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e56c6120-2193-477f-8721-fa8823904f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab86d47-c04e-4cc7-9a3a-857f99afa1d3",
        "cursor": {
          "ref": "4f800fa0-f3d2-47b4-91eb-ff5a9699e03d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "309958f1-9955-470c-8a4c-9f4e835f90e4"
        },
        "item": {
          "id": "5ab86d47-c04e-4cc7-9a3a-857f99afa1d3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f193161c-b6ff-43d3-b8f4-f8e4bcc196b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeef70a-19a9-431a-8146-28272d3af2d0",
        "cursor": {
          "ref": "8f2b6524-fe0a-42bb-a64c-30083d588488",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9d33a5e8-d88c-4808-94db-f5d188d226a3"
        },
        "item": {
          "id": "bbeef70a-19a9-431a-8146-28272d3af2d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "27a48493-27b6-484d-adbe-df911d84f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a51bc14-582a-4527-9426-5c5f22eea9d5",
        "cursor": {
          "ref": "7ab8efd4-b069-4f98-a04d-049f7bd48bae",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88e608b2-c7c9-4c2d-b369-94faf194bac6"
        },
        "item": {
          "id": "7a51bc14-582a-4527-9426-5c5f22eea9d5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "daf5846a-da31-4920-8b54-b1c4bdfc9150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e52164-3459-438b-bf03-4d9e34d6b6c3",
        "cursor": {
          "ref": "b7088c29-0e87-43ec-815e-7e13f41ce384",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "445f835d-09e4-489f-871a-1febca06819b"
        },
        "item": {
          "id": "69e52164-3459-438b-bf03-4d9e34d6b6c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8770c8bb-52c1-4d80-afaa-b037ee065cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd1c3ad-caf6-48ee-8c44-b7d3751a6834",
        "cursor": {
          "ref": "07acc49c-dafd-4ca9-9347-6d9a43bad78f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ffee7ac-9830-4ae3-9bf4-e45076f0e838"
        },
        "item": {
          "id": "8dd1c3ad-caf6-48ee-8c44-b7d3751a6834",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "614442db-cd11-4fc7-b001-13f263ddf587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b92a9ea-6249-4162-886b-61564b66e0ae",
        "cursor": {
          "ref": "0f153bd3-4e38-497d-9d3b-fa14499ff35c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51025bcb-ef35-4076-a651-5dacea03c156"
        },
        "item": {
          "id": "9b92a9ea-6249-4162-886b-61564b66e0ae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2117da92-a907-45b5-821b-cbc76ac393e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a25b8f-b9a1-49fa-8991-cf94ff81b2f6",
        "cursor": {
          "ref": "0380db83-2772-42e2-824a-7acc44ae855c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4cc239a4-4183-4bdf-bdcd-c98281fc2129"
        },
        "item": {
          "id": "33a25b8f-b9a1-49fa-8991-cf94ff81b2f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6ffccb67-532f-42dd-8ed8-b605b54d1cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb190c-5eb8-43db-971c-0e5264fe3378",
        "cursor": {
          "ref": "83a12e69-47f2-46a1-a737-211a64afddb9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "63027307-1cab-41d6-a2d0-593954764ac4"
        },
        "item": {
          "id": "72eb190c-5eb8-43db-971c-0e5264fe3378",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d196c4a4-b768-4998-93c0-7ffea9da906c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d186755-6487-4357-900a-3aee172423c5",
        "cursor": {
          "ref": "5b8730e8-1fb1-4724-a802-fe752834f95b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "45d93ce9-2650-439b-a7a9-0e2f8106ccce"
        },
        "item": {
          "id": "8d186755-6487-4357-900a-3aee172423c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf8a06e9-bb4d-4522-9df9-baa33df4743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a757332a-ce72-43c9-ab56-b96e440543fd",
        "cursor": {
          "ref": "c645c1c3-019c-4600-9cf2-aa099dc3bdc0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ebc6c28c-88ea-472d-9a14-c2bdbccfd8fe"
        },
        "item": {
          "id": "a757332a-ce72-43c9-ab56-b96e440543fd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b27d44cf-3026-4b7c-9367-a8a6ae54295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d7e0f2-cbad-4edf-b060-44c427eb85b3",
        "cursor": {
          "ref": "e8528174-51b8-4b01-a55f-e5fd69e00f8c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c904ce73-5367-47b2-963c-794215866558"
        },
        "item": {
          "id": "96d7e0f2-cbad-4edf-b060-44c427eb85b3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de97e9fc-3695-4d8d-9e11-a79b705aa764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9baa85-6878-490a-b0f2-4c0730a5eb65",
        "cursor": {
          "ref": "eed458b0-43b2-43ac-9e3c-b74fea94f0ba",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2126ce26-96de-492a-9049-f6aa27ee53f4"
        },
        "item": {
          "id": "ee9baa85-6878-490a-b0f2-4c0730a5eb65",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1602555f-1a96-4702-b88d-b7b6c94095b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2651f99c-8215-4836-bb54-e48c3e840227",
        "cursor": {
          "ref": "92335921-899a-48e9-b32f-3e2d06e7fd78",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c728c409-1622-465d-b3d1-79900b0c10c6"
        },
        "item": {
          "id": "2651f99c-8215-4836-bb54-e48c3e840227",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a8407cdb-1acd-4e2a-95d6-6f4e29272745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc69321-8552-45f7-8736-73ccca7e6832",
        "cursor": {
          "ref": "fd0e2631-0c9b-4085-9f33-920c88f13049",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e2e99c0-85e0-4561-8a06-1f4ccdc33d19"
        },
        "item": {
          "id": "fdc69321-8552-45f7-8736-73ccca7e6832",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "810a005c-75cb-4d87-b9f6-a09e96a00c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340d9116-254c-4fe0-ab81-de53a405cc38",
        "cursor": {
          "ref": "249095ad-4abb-40d2-84a9-fc11f379fef5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c694288-1c6b-4d76-82f2-fdf12e56b33c"
        },
        "item": {
          "id": "340d9116-254c-4fe0-ab81-de53a405cc38",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8da02dbc-e583-495a-aeb8-3d48d98ca592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58e26c0-660d-48e4-a3ba-82c7b70e4260",
        "cursor": {
          "ref": "1ff9165a-7661-4e2d-99b0-601f0ed57881",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34d3314b-58f4-4cf4-87e3-74286279f2dc"
        },
        "item": {
          "id": "f58e26c0-660d-48e4-a3ba-82c7b70e4260",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6f07860a-a29a-4f84-bfc9-8fae24b4d5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b8f38f-a93a-411c-86f8-32df7883ff58",
        "cursor": {
          "ref": "7f31f356-1dff-4067-bc24-9fb0b4d9a055",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ea149dcb-c448-477d-9a87-abdb6cd428b7"
        },
        "item": {
          "id": "f4b8f38f-a93a-411c-86f8-32df7883ff58",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fae671c4-4709-4752-9351-5418f324b7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3e2ef5-6fd7-41c6-8861-5def7ed11603",
        "cursor": {
          "ref": "abdc1539-4459-4494-bc68-75a886aad34f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a07791f-b6df-4fe2-aee4-9b22bad80e82"
        },
        "item": {
          "id": "0b3e2ef5-6fd7-41c6-8861-5def7ed11603",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "792dd8b2-6269-4e27-aa66-ad86363bcc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845b8366-4df3-4d4e-a208-0fc1ba8cca05",
        "cursor": {
          "ref": "7faf564e-fd8a-4e0c-865d-36bc6956bffc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "70cc8f09-e79b-414f-8c5c-16892c24ded0"
        },
        "item": {
          "id": "845b8366-4df3-4d4e-a208-0fc1ba8cca05",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "78377520-8804-4a15-9d16-d32e32afaabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f1985-90d4-447c-99d7-102c4c8b3b51",
        "cursor": {
          "ref": "fc664e04-636f-4d0a-af37-f0fc4c3e8efd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "76abdc49-ca0d-4b2f-80d9-bac83384e65a"
        },
        "item": {
          "id": "5b3f1985-90d4-447c-99d7-102c4c8b3b51",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "edd3d8c7-ab57-4084-9cc0-8a96aed248f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3847ab43-0c44-4928-a552-766e1d76fc15",
        "cursor": {
          "ref": "da09a99c-f37a-46d0-88f7-4a88dca11ac3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f39dbea9-a89d-4589-8cc8-ac57c2fd9e6d"
        },
        "item": {
          "id": "3847ab43-0c44-4928-a552-766e1d76fc15",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3763e063-8ac8-4b48-a40b-fe192a01cf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852487f6-5bf0-4297-8a77-37d8fa04f2e8",
        "cursor": {
          "ref": "f5bb6906-1965-4636-96c9-e4c2897de85b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e331c431-70b0-45f2-a936-fb613ab9f3ac"
        },
        "item": {
          "id": "852487f6-5bf0-4297-8a77-37d8fa04f2e8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3c3c353a-c0cd-4de7-83ce-85f03bc53c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de2dcc9-60d3-4114-9701-d6d88c931398",
        "cursor": {
          "ref": "f3d1c1f6-df50-43ab-b512-4843a033349d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "298cd5e3-9dbc-4b7e-b499-a94f0c4df445"
        },
        "item": {
          "id": "6de2dcc9-60d3-4114-9701-d6d88c931398",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "43279bea-132d-43d5-a06c-c801700acd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06479d8-f16c-4271-b490-911f94ffc8ef",
        "cursor": {
          "ref": "7ad9d709-c0c8-4d68-a4a3-c3db1762d340",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44a81346-13a4-49fb-87e3-455a0893b945"
        },
        "item": {
          "id": "f06479d8-f16c-4271-b490-911f94ffc8ef",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "68272735-907e-4168-9446-3621a59ee7a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf1aaf-a47a-4ab9-bedd-81bc60acac9f",
        "cursor": {
          "ref": "9bae1a60-b60c-4072-8ac4-a0c6516d519b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4913255f-d517-4d46-9932-ac1ab0df86e8"
        },
        "item": {
          "id": "65bf1aaf-a47a-4ab9-bedd-81bc60acac9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f180ef90-776b-4ad5-afef-096d6ff601fb",
          "status": "Created",
          "code": 201,
          "responseTime": 7107,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6c7597-68ef-411d-b33e-a3c68719faa0",
        "cursor": {
          "ref": "a0c80d55-d41b-4afd-8c2e-3db5d4b9f3cf",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d2ef450d-03f8-4688-b700-d54c0fe5ce09"
        },
        "item": {
          "id": "9e6c7597-68ef-411d-b33e-a3c68719faa0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "166deed4-e883-4113-9e4f-f2ac25bc3767",
          "status": "Created",
          "code": 201,
          "responseTime": 7212,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ca32e-22f9-4767-9ef0-a7ffe1291a50",
        "cursor": {
          "ref": "c0425d01-2c4e-4abb-9137-afc0c9b47e0a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7d8b696e-51a1-4650-8b92-f9c825b6f85c"
        },
        "item": {
          "id": "1c2ca32e-22f9-4767-9ef0-a7ffe1291a50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a40d3f0-a640-4704-a322-3d68d10661c3",
          "status": "Created",
          "code": 201,
          "responseTime": 6386,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d9e693-f52b-42c2-8859-6916e75466dc",
        "cursor": {
          "ref": "0261978b-779a-47bf-8d88-85ae16fb6f8f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "04e6a1e7-99e7-4939-8d65-d94ea49e1330"
        },
        "item": {
          "id": "55d9e693-f52b-42c2-8859-6916e75466dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "29008665-d3d4-46a1-9076-bd9ccd6b5cb0",
          "status": "Created",
          "code": 201,
          "responseTime": 6253,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd6e93-db0e-46af-9675-a38004321855",
        "cursor": {
          "ref": "2f3d8e28-31b6-4225-886f-c8811641bbf7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bdd3a4eb-0d3e-4c1d-95df-7d2e2bf83699"
        },
        "item": {
          "id": "7acd6e93-db0e-46af-9675-a38004321855",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bc686d14-a110-4e3b-bec8-0d1f52cda58b",
          "status": "Created",
          "code": 201,
          "responseTime": 6722,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "362fc939-c6d5-4841-876c-829afed9836d",
        "cursor": {
          "ref": "12f07e71-5575-4cae-b614-124caea28132",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b09f6c4a-0a15-4981-a9fc-cb93fb120b09"
        },
        "item": {
          "id": "362fc939-c6d5-4841-876c-829afed9836d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8e25ab9-2972-430b-8a9c-af30b565911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e8945686-e719-4f8d-a346-1664a4533eb4",
        "cursor": {
          "ref": "c491b179-0781-45a4-b772-fee69167fc1a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7413632f-0df7-41a3-89a6-edf2ea641d2e"
        },
        "item": {
          "id": "e8945686-e719-4f8d-a346-1664a4533eb4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f54313e4-4ef6-4132-b160-0cad28329872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86be5eac-6bea-482a-ba1f-9f55cf6a8fd7",
        "cursor": {
          "ref": "8a45854c-fead-4f27-a450-f87d21255f96",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d2aaaac-e378-4e60-818c-011a1909a6e1"
        },
        "item": {
          "id": "86be5eac-6bea-482a-ba1f-9f55cf6a8fd7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca8d64f2-f7c1-4c39-808a-a3efb6561af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500eb7b-ee09-4e07-ab04-980a09589eff",
        "cursor": {
          "ref": "95f518fc-a406-4fd2-9a5b-e3ebcab5b215",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9a568467-a227-4957-a2e6-a40322aca447"
        },
        "item": {
          "id": "e500eb7b-ee09-4e07-ab04-980a09589eff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4a29044-30dd-43cc-b48b-e39ebd12b7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72bdc3-96f5-46bf-a8cf-54f206562de4",
        "cursor": {
          "ref": "54b80c20-1b33-44e3-80af-88beb2d2a719",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "45aee02c-d17a-4e36-af2d-b6bba0718381"
        },
        "item": {
          "id": "eb72bdc3-96f5-46bf-a8cf-54f206562de4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1800785b-0d21-4ce9-ad93-f35590373ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26be1d6-42bf-48ab-839a-7e3f47bcc70a",
        "cursor": {
          "ref": "4168637d-3cc3-4368-b4cf-88ce95dea378",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "121ff5ef-79d0-4c17-a669-4b5ce75ce866"
        },
        "item": {
          "id": "c26be1d6-42bf-48ab-839a-7e3f47bcc70a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "adcafcd5-2640-4e55-8cb7-edb6dcc373e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a697c-bd98-4096-9e14-52dcba146f49",
        "cursor": {
          "ref": "edda1d74-c12b-4ec4-b895-24319b57a933",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2f34b13-8e87-467c-bf27-c1a2eab10a40"
        },
        "item": {
          "id": "b20a697c-bd98-4096-9e14-52dcba146f49",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2113884d-500c-4a1d-9387-b4f9131c2fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ba4c44-4e18-42aa-aa13-c24edd7bf7e1",
        "cursor": {
          "ref": "d89f6804-e108-4218-ac4e-68df669cb588",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b4406e78-d2a7-41b6-846a-477f55649166"
        },
        "item": {
          "id": "80ba4c44-4e18-42aa-aa13-c24edd7bf7e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d87c620f-99aa-484a-973d-3faf8e09958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e831e6-9aca-45ef-ba06-bf30a6f1f431",
        "cursor": {
          "ref": "b00cc139-bf72-40dc-bfef-a7574affa6c1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5f69d40-0366-4e0a-96f6-cd093656bb72"
        },
        "item": {
          "id": "c1e831e6-9aca-45ef-ba06-bf30a6f1f431",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b31ac193-213b-4b72-9963-02c807441542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8466d8-213d-45b1-b8a1-2bc2b5a1df91",
        "cursor": {
          "ref": "cd317588-69ba-47d5-9fc8-9672dbe9da8d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b8a6199-33e4-4289-a74e-d13ae26c3fa8"
        },
        "item": {
          "id": "7d8466d8-213d-45b1-b8a1-2bc2b5a1df91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9453ad7a-7c69-444a-b850-dfa838a01178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5b27ca-5192-4eb6-bb4a-9a0d7366f87f",
        "cursor": {
          "ref": "a8ef50c3-538e-4271-9a38-55cf8f458a1d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "db4858c0-3578-4d64-b402-1b21c410376c"
        },
        "item": {
          "id": "6f5b27ca-5192-4eb6-bb4a-9a0d7366f87f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "255c089b-b945-4e94-9491-6f854c6a1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc40e54-11f6-4b6a-8451-0ac8e8caa401",
        "cursor": {
          "ref": "ec2dc21a-46ce-4757-9176-6d96c878b8f9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "afc0a548-f26d-4ce4-b1e7-3c6624db05d3"
        },
        "item": {
          "id": "8bc40e54-11f6-4b6a-8451-0ac8e8caa401",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1365547-7ab0-40d5-9091-0c501f74bdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d4d192-22f8-4883-9eef-8f0e167982c6",
        "cursor": {
          "ref": "0532432e-6ae3-4fcb-a23d-1660833f0331",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80897e07-4619-4a55-b0be-afac740bc71a"
        },
        "item": {
          "id": "81d4d192-22f8-4883-9eef-8f0e167982c6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ace21dd2-d86c-4680-9b86-64b9ff5ffa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5a7149-afa4-4bba-8d78-ccd0d5115bcb",
        "cursor": {
          "ref": "175cb3c2-64f9-40cc-9020-55b996b02d11",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ee437d12-af97-4d10-aa70-bc921e8e7ba2"
        },
        "item": {
          "id": "0c5a7149-afa4-4bba-8d78-ccd0d5115bcb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64ee41bf-9b3a-48a1-9d56-f478e7aa0f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33102b3c-5711-4ff9-ac37-4ccbe82c7230",
        "cursor": {
          "ref": "8fdc14d0-7421-4886-9a0f-c2fc824810a3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26d04c94-e4c9-45dc-9d87-516d2b992e68"
        },
        "item": {
          "id": "33102b3c-5711-4ff9-ac37-4ccbe82c7230",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "781e943f-e3db-4379-b0f5-0ef4c787fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf87edf-b41a-40d7-8656-3d32ba2536e3",
        "cursor": {
          "ref": "32e642bf-ef11-43c0-b7d7-b18f3ef1c5f4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "82d2174e-ad2f-459f-a3b8-3d9a01c65384"
        },
        "item": {
          "id": "0bf87edf-b41a-40d7-8656-3d32ba2536e3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aa72cb43-f3a6-4dba-9af9-32cb26d0d2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29868055-61e2-476b-ae81-4c4d88d96e35",
        "cursor": {
          "ref": "9ddec009-e707-42f9-8c14-392e755fd8a9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3f4f753-fe50-4b3c-8b8c-7ec81db11242"
        },
        "item": {
          "id": "29868055-61e2-476b-ae81-4c4d88d96e35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63db53b0-0334-420e-a599-3fda0c7c3868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19439684-ba65-493d-8586-dfee16eacb43",
        "cursor": {
          "ref": "d4268e2e-2d55-4bce-8644-93e1ff63fbcc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9de151de-2001-4b68-8af9-c4539e737801"
        },
        "item": {
          "id": "19439684-ba65-493d-8586-dfee16eacb43",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fc7a03f4-0b80-4674-be19-a3745f67775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7691ec28-e25d-4328-9b54-f759d7b6f8f4",
        "cursor": {
          "ref": "25e2bb7b-0c4f-4813-89d4-02e614d4440e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cc010159-feb2-46b0-9b3e-8cca04e8589b"
        },
        "item": {
          "id": "7691ec28-e25d-4328-9b54-f759d7b6f8f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "64d143a5-1ef8-449a-a6f2-26bea0e8d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd28a3-556a-448d-b6f1-c316aebd80af",
        "cursor": {
          "ref": "a2aa0a0e-f2e1-497a-b5f3-1c465fb81e08",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ffdc31fd-bc5c-4344-b313-854b30f0603d"
        },
        "item": {
          "id": "7ddd28a3-556a-448d-b6f1-c316aebd80af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "de1b1b3d-7f2b-4c5b-af66-6f9d1d5d8aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b366a1f-4235-4c92-a18f-c779b5d25992",
        "cursor": {
          "ref": "da3128b6-fed2-4d65-b36d-f8156501cb0f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9dece88b-e9ee-4f22-b8f6-5b4dd672be49"
        },
        "item": {
          "id": "0b366a1f-4235-4c92-a18f-c779b5d25992",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b136ec14-75c5-4567-bb2e-48ab31b96d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9db239-1c3f-4661-afde-79f88b733a47",
        "cursor": {
          "ref": "1c0e25f3-a4d9-4cdf-a1bd-7ad37c883fde",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3fe264a-3ee5-405a-bca4-e6d44e7f90a1"
        },
        "item": {
          "id": "9b9db239-1c3f-4661-afde-79f88b733a47",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b71b3570-7a1f-4183-b0d0-18c8a057a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63765455-196f-4244-a6ff-0352cc23560a",
        "cursor": {
          "ref": "11b10bdf-85df-4ca0-b8af-8e25c0312c95",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3c4ee21b-f027-477d-a551-07e314723c29"
        },
        "item": {
          "id": "63765455-196f-4244-a6ff-0352cc23560a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa84312e-6aa9-4da1-a6ec-747c8425664e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fb8426-8131-4d99-a01d-17f16714f4af",
        "cursor": {
          "ref": "be82cf65-061f-45c5-8da7-f78be16abb4e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f1373803-f47c-4aac-8da8-ef8c551612c5"
        },
        "item": {
          "id": "45fb8426-8131-4d99-a01d-17f16714f4af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fb0d162-0dc5-4e03-bbd6-4bb2ccdf59c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa0440-2bef-448c-a121-eb8442afd319",
        "cursor": {
          "ref": "81786245-6bce-4b64-beec-cffca895d56a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5045bcf8-6691-449f-a959-0c77c5d40c34"
        },
        "item": {
          "id": "80aa0440-2bef-448c-a121-eb8442afd319",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e2e6a8bd-51fe-4bd8-9a28-5289782283aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1b2ae-ae31-4150-94ad-72ab3b89da6c",
        "cursor": {
          "ref": "086b4e7a-1a03-4a13-af99-9b8a986df961",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "50fc2501-1f11-45c1-9a6d-844fc6d92460"
        },
        "item": {
          "id": "96e1b2ae-ae31-4150-94ad-72ab3b89da6c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fc297014-2521-42cc-9f49-9e766a0b7edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae8764-14d2-4fcb-8984-c1569ed6a440",
        "cursor": {
          "ref": "76650596-d291-43e9-ad76-d6227c079fcd",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7cfb3f6-db53-4b25-b591-c90b3b3189eb"
        },
        "item": {
          "id": "3fae8764-14d2-4fcb-8984-c1569ed6a440",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e29e3a47-fe30-4796-adfc-9a3bec96b275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8e7424-07c9-4228-9a8c-0f27c715f38f",
        "cursor": {
          "ref": "3802c662-66c6-464e-ac4a-719d07f509ed",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b850cb8f-5364-47a1-90f7-24dddf1a47fa"
        },
        "item": {
          "id": "7a8e7424-07c9-4228-9a8c-0f27c715f38f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fcdfc61e-6bc4-47b2-9a1b-5563e0de5ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71333908-47f0-4d60-93e5-0aa1b370c848",
        "cursor": {
          "ref": "855bcd48-d8d7-4618-94c0-5449e5042039",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e185d1f-cc88-4103-9262-e116bd82b002"
        },
        "item": {
          "id": "71333908-47f0-4d60-93e5-0aa1b370c848",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d4f71df-19af-435e-afc2-3422f1f4c371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1de625-d021-43a3-9a51-f35bd705aaf6",
        "cursor": {
          "ref": "c6a162ad-211b-492a-ac33-c2739b936362",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "77aea58f-04d4-4237-828d-30e73fed3bf5"
        },
        "item": {
          "id": "9e1de625-d021-43a3-9a51-f35bd705aaf6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4ad3556-b7fd-410c-9c63-eec84c07bd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e35e97-7561-435d-86fb-1d14eca7ee1d",
        "cursor": {
          "ref": "db7a4b24-45b6-43ee-af1b-ad3a4fe3ec56",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44721208-4dab-403f-9814-8d406911788b"
        },
        "item": {
          "id": "58e35e97-7561-435d-86fb-1d14eca7ee1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f7ee1a9-4212-4cbb-85b6-0ff7e8b72c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872d23d2-067d-457c-b39d-bb14d69cc16d",
        "cursor": {
          "ref": "5fd6f903-90fb-4731-8366-2c15fc94eb13",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "68b864bc-563b-46d8-a4d8-88ba6d8294cb"
        },
        "item": {
          "id": "872d23d2-067d-457c-b39d-bb14d69cc16d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aa23a5e3-7490-4c4b-9701-773d0dc7c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f748b953-0df5-4924-8c14-11639a82aa35",
        "cursor": {
          "ref": "4bdc3031-ba4a-4cc6-8722-bd43d9582e22",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "225105a7-6348-422d-997c-66c8eaab81b6"
        },
        "item": {
          "id": "f748b953-0df5-4924-8c14-11639a82aa35",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f0b6fbe0-c7c9-4382-b43e-cdd5e1812a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1743cf94-5000-415f-9ae3-ba761cbbf5da",
        "cursor": {
          "ref": "0d1541fa-8932-427d-8b9d-edcb66251f10",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "283be176-fc52-4bd4-935f-e3727a1e35a0"
        },
        "item": {
          "id": "1743cf94-5000-415f-9ae3-ba761cbbf5da",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a3c0fe6-bbdf-4c00-b5d8-81f4deb27ef8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a248cf-9b86-4643-9dd8-4cce149e3121",
        "cursor": {
          "ref": "206f4b82-5c74-49d8-beb1-e2623bc9303e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ff971b25-90f8-430e-ba08-ae62f42fdbc3"
        },
        "item": {
          "id": "86a248cf-9b86-4643-9dd8-4cce149e3121",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e15a163b-25d9-45f5-b972-2fc93e13fe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a47c395-75ac-4539-ad4c-295ca89eb229",
        "cursor": {
          "ref": "423cb863-9c10-46f1-9088-a3d1a884229b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "39503030-636c-4b51-8f21-1aea47b967c0"
        },
        "item": {
          "id": "1a47c395-75ac-4539-ad4c-295ca89eb229",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f667cc4b-f30e-43cb-bce9-f20ea379932b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aba50c6-fd92-48ad-a0d5-54dc9efb2c6f",
        "cursor": {
          "ref": "a9cddc52-b59e-4fcf-8bf1-fba245a8569b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a6499e9-af47-4b3b-a9e5-4d85bfeaa7e2"
        },
        "item": {
          "id": "2aba50c6-fd92-48ad-a0d5-54dc9efb2c6f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30436b4b-b996-4ef1-94a4-d7190454e450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b526f9e-f91e-4ca9-a2a7-21df8b3aebdc",
        "cursor": {
          "ref": "91925e98-13e1-40d2-ab87-7a09c7591494",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "08c45696-9d60-4e83-b047-5e40173ff530"
        },
        "item": {
          "id": "6b526f9e-f91e-4ca9-a2a7-21df8b3aebdc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "74b2e355-4bcd-471d-99b9-ca484971dd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c560ee0d-1787-4a80-906c-244c8c357355",
        "cursor": {
          "ref": "f1f1f5ee-30fe-4a66-ac9f-cf71e96711cc",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1c98807f-b476-44bf-a1dd-224e68986269"
        },
        "item": {
          "id": "c560ee0d-1787-4a80-906c-244c8c357355",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "113f382a-1e89-4e34-9cd3-8859833785c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d829095-bd39-47e0-9408-b51684ff7c52",
        "cursor": {
          "ref": "4343c99a-2999-4174-8bb9-651e870923e7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c27e1e36-6ca5-4358-803b-7c5142d4b42f"
        },
        "item": {
          "id": "9d829095-bd39-47e0-9408-b51684ff7c52",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7956c17-04e6-49d3-984f-9431f0adaf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d003e7c-e358-45bb-8217-c515194ce938",
        "cursor": {
          "ref": "002b80bf-38ee-4324-9a55-59505420b442",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "edc446f6-6b5c-4fbc-9fde-5184ea905f04"
        },
        "item": {
          "id": "7d003e7c-e358-45bb-8217-c515194ce938",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d60a5017-5609-4bbc-b006-fd776b6d31a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867a780-2a89-4383-b2de-dd0bd1862dba",
        "cursor": {
          "ref": "66a469f9-676e-4451-9fdf-3b567e1a2a04",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "105258ef-47ff-40ba-a603-cc4cd4dab108"
        },
        "item": {
          "id": "9867a780-2a89-4383-b2de-dd0bd1862dba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eaa85c29-2721-4f64-ad2c-2213d16b93c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a8942e-9b5f-4bc3-a56d-d3cc07f4d575",
        "cursor": {
          "ref": "5592973c-7730-4dcd-9624-e3215f5f30f6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "adb3b4b8-dd3d-4a59-8ab6-6ee9c94d4e97"
        },
        "item": {
          "id": "48a8942e-9b5f-4bc3-a56d-d3cc07f4d575",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aad7651e-666d-44ad-9140-6a3d9c4f1d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb8516c-e778-4503-b294-240ba892696e",
        "cursor": {
          "ref": "2aa5f2e8-f1da-45aa-b395-84571f786830",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "15d404db-8e6a-411c-80c5-bccee2a2283d"
        },
        "item": {
          "id": "bfb8516c-e778-4503-b294-240ba892696e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74bcaaa4-8a66-42b7-bc93-18c41b1cbeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5451fde9-9300-4a93-bd99-43cfd6442e42",
        "cursor": {
          "ref": "29bf114d-ea8a-4c20-acef-69f3f5513714",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3683873b-3385-4b87-8417-07f273a06f87"
        },
        "item": {
          "id": "5451fde9-9300-4a93-bd99-43cfd6442e42",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9ea44e9-5b1a-4278-8b69-42868eb64cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abd0458-d783-414e-be09-df931e7ee9c4",
        "cursor": {
          "ref": "8113e057-7b9b-48df-a0be-d3c990cd9d08",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e2bba05d-70f3-4284-9db4-2a5504dbef33"
        },
        "item": {
          "id": "4abd0458-d783-414e-be09-df931e7ee9c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8917d1ff-9933-483f-9557-e024e738d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1def56-6b18-4218-a3e7-62d70078dfb4",
        "cursor": {
          "ref": "908a397d-5f1c-48e0-a0c5-c3364f8a2c71",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "849cc9fc-f031-438a-8fcc-d357e54fc0d7"
        },
        "item": {
          "id": "2f1def56-6b18-4218-a3e7-62d70078dfb4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "004c7916-60b0-4c27-b160-ffdbf0098bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63694e1-a6b8-43ec-b681-e5526eb2705a",
        "cursor": {
          "ref": "153417b2-a480-483e-8b7e-5650f93c4372",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "19448c65-2277-46c8-ad25-6bf2ee7f4fb3"
        },
        "item": {
          "id": "c63694e1-a6b8-43ec-b681-e5526eb2705a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c70b33e0-bfc3-4fb2-bb24-12451306e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb08327-cd38-4217-8ad1-44eb91e10142",
        "cursor": {
          "ref": "fe7bec50-c229-4ecb-9555-a547e2a301c3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0b2a5313-15f9-4ca5-b45d-baa43384c9c9"
        },
        "item": {
          "id": "9bb08327-cd38-4217-8ad1-44eb91e10142",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d205dc53-bf76-4bdc-b90a-6a03791f2f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58322826-8df7-4dba-937a-8853e305d951",
        "cursor": {
          "ref": "3cdbeed4-e488-4aef-bdf6-90bb3a47c72a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c992047d-3d7a-403a-b410-6e4caf548504"
        },
        "item": {
          "id": "58322826-8df7-4dba-937a-8853e305d951",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "67f2ebe8-e778-493c-b2ac-e31a321bf36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db942811-0cd1-497a-a690-b46ff51b407e",
        "cursor": {
          "ref": "55e5e435-0e6c-4ee8-b37f-34ca0283984c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "53a6e127-e742-42fb-a6fe-f9f4f357088f"
        },
        "item": {
          "id": "db942811-0cd1-497a-a690-b46ff51b407e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9b4fcdf-afb1-42b8-a61c-a8e36b3933b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd66348c-83b6-43a8-b3eb-c95915b5496c",
        "cursor": {
          "ref": "3074e675-7ffe-46fe-8ba3-fbcfaa0ca3a7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30d986e8-25ca-4bba-be9c-805e1e3ea436"
        },
        "item": {
          "id": "cd66348c-83b6-43a8-b3eb-c95915b5496c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dcfc53f4-38a4-43d6-9f62-c887963c04d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8716fa-db51-48ab-9e31-7084bdf6d449",
        "cursor": {
          "ref": "d16e0956-3d16-4bff-9f6d-84dbc4f0467d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9de377b9-7aeb-4a4a-b54f-cab1b9bfcdc1"
        },
        "item": {
          "id": "9a8716fa-db51-48ab-9e31-7084bdf6d449",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "51f3f791-eaf9-4ffe-ab87-23291f3f831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480c66b1-83d1-4d16-85d0-c446fcfbe916",
        "cursor": {
          "ref": "ece6c930-25c8-45bf-9af4-f10b315519fa",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "11e76cef-90e5-4916-8b63-cbc1ec3eed72"
        },
        "item": {
          "id": "480c66b1-83d1-4d16-85d0-c446fcfbe916",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "03984e68-673b-4cea-82ba-3c1cc79ea9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408035f6-4bfd-466a-9253-98a1aca216fc",
        "cursor": {
          "ref": "8e065a23-4ffb-4715-bcd5-1a15c7c4262f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1873f836-710d-41b8-bfbe-662b6ecdb564"
        },
        "item": {
          "id": "408035f6-4bfd-466a-9253-98a1aca216fc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bedf5f4b-f722-4f5a-8a27-2bcbf1e82e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeb8c30-8485-4f27-8b58-2a0856196740",
        "cursor": {
          "ref": "ec7293e0-67ef-4259-b78a-5a023639b855",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "28619f7a-3aa4-400a-b714-4cb1eddf743b"
        },
        "item": {
          "id": "aaeb8c30-8485-4f27-8b58-2a0856196740",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2001cd2e-15fa-45c7-9c95-694f2b9a6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd6a026-c676-4782-becb-c1c22111c298",
        "cursor": {
          "ref": "b9e0e2c7-a7ed-4501-8056-006850926681",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f12c37a0-9bb1-47a4-a312-0351768c90d8"
        },
        "item": {
          "id": "0fd6a026-c676-4782-becb-c1c22111c298",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59d54aaf-f705-4a8e-a771-8a454f9ab17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfde8880-ba69-44a9-b203-162cf7bafcdc",
        "cursor": {
          "ref": "944b8a68-e48b-480e-a26e-83edc4be624a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47dbde69-ad10-4d23-9bfa-a412e7830b69"
        },
        "item": {
          "id": "dfde8880-ba69-44a9-b203-162cf7bafcdc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "915bdd39-88bc-4847-b80d-abfba633ca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b40ff40-16ca-4d39-b8b3-4c42ccf9078e",
        "cursor": {
          "ref": "7595f21d-ac08-43d6-b1a5-069c280396c1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a9b856b5-d25e-4fb6-8404-068e30a7a5f5"
        },
        "item": {
          "id": "6b40ff40-16ca-4d39-b8b3-4c42ccf9078e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "70a905fb-32e0-4bd6-886c-5f8696e20c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b133a398-c53e-45ef-a091-e68b8a2681d7",
        "cursor": {
          "ref": "69e926b7-196f-4d5f-a7e2-1463a421e018",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "99671b4f-807d-4cb5-9f26-31db21ab9377"
        },
        "item": {
          "id": "b133a398-c53e-45ef-a091-e68b8a2681d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe51eb25-1487-4075-b421-62396d2a8916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7fc57d-1503-4fe1-a5cf-4f3cd156594e",
        "cursor": {
          "ref": "47f87c51-9764-4e39-87a4-c89e1d09d76d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23b1d46e-9f33-4807-ad18-1ae7b974d6a4"
        },
        "item": {
          "id": "3f7fc57d-1503-4fe1-a5cf-4f3cd156594e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1dec8cd5-cafb-475f-915a-29c9da4a2e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dc41bd-de62-4d60-8c2f-f4b1c7581472",
        "cursor": {
          "ref": "f60be6a0-d77e-469d-ba03-fee6a7a940b8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d12a01d-3fed-496a-a195-c420b537ecd4"
        },
        "item": {
          "id": "98dc41bd-de62-4d60-8c2f-f4b1c7581472",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e1d938d-a3a9-4655-8b84-ba8e6a543ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e5a8f5-5d73-43e6-9a12-61e72aff8b2b",
        "cursor": {
          "ref": "aebb2ddb-a894-41c1-94c6-db6ff1b84331",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "34f3c611-7fec-4182-ab3d-319597b2f477"
        },
        "item": {
          "id": "c5e5a8f5-5d73-43e6-9a12-61e72aff8b2b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11ef66b0-0a33-4bcc-9ebc-6978d5e18e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb5b9c0-312a-48ee-8888-1ab8d26e29f5",
        "cursor": {
          "ref": "9e1bf2ef-e70d-498a-8354-15b01e210171",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "547f37ca-3ee5-48fe-ab23-6901f2d345d1"
        },
        "item": {
          "id": "cdb5b9c0-312a-48ee-8888-1ab8d26e29f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d5c537f3-fb21-46c9-88e6-096a4a8f0830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4910d7-6993-4aad-82f2-b8dbec00b057",
        "cursor": {
          "ref": "f7b18b18-a48b-4f2c-a254-c44d3c876a03",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2370408b-2679-4479-95f1-aa58ba81905b"
        },
        "item": {
          "id": "1c4910d7-6993-4aad-82f2-b8dbec00b057",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0d22c51-c736-4206-98d4-06751e4885f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d6737a-b139-47e9-aa19-7c3b13dcaf33",
        "cursor": {
          "ref": "82437af5-99ea-4edd-acea-ebe987e3f4ca",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cf258e51-6c38-47d8-9807-95d6591ffce8"
        },
        "item": {
          "id": "07d6737a-b139-47e9-aa19-7c3b13dcaf33",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a6b31ef-2974-4b90-b85c-2c4bf8955782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1262101b-ac1b-44d4-9e9e-a1ebd6d1a164",
        "cursor": {
          "ref": "b8673d4b-ff8f-4ac5-af30-c45f68bbf2b1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67ce4000-22f3-4aef-b311-a14518f8dbbf"
        },
        "item": {
          "id": "1262101b-ac1b-44d4-9e9e-a1ebd6d1a164",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "58f0ef77-df63-420c-80cd-ae33a2d69003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcf8ae8-19b1-4ef8-928e-60cae56e6d13",
        "cursor": {
          "ref": "93090ad8-3e44-4efb-8889-1181efa7b60f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f3def687-562c-41e3-8c66-6946d4a5c79f"
        },
        "item": {
          "id": "4fcf8ae8-19b1-4ef8-928e-60cae56e6d13",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8dd11812-659e-4186-8096-0e781778b6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662fd753-38e9-48a5-a4f5-57f61d6b4af6",
        "cursor": {
          "ref": "88831b76-1172-4504-898a-ddbbc2821723",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e16ef15f-1f40-479d-924d-df498e486b94"
        },
        "item": {
          "id": "662fd753-38e9-48a5-a4f5-57f61d6b4af6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fa81b720-a4f1-4feb-aee8-ea179d84f6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2dc1b6-96f1-4213-9fde-7db11f6fda58",
        "cursor": {
          "ref": "d69ace4a-5fa7-46fe-84bd-97fda093d0ef",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78b6e3c7-15f9-406f-abce-30170ce87e56"
        },
        "item": {
          "id": "ee2dc1b6-96f1-4213-9fde-7db11f6fda58",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "155346b9-ca47-4aa5-9306-1e20f18cfb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623c5ae4-ad1d-498e-a8f4-2f18970758a6",
        "cursor": {
          "ref": "39604cd6-b944-4275-a1fe-ba9818f52e98",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d628d1dc-5e84-4cd0-a522-585cc46e5657"
        },
        "item": {
          "id": "623c5ae4-ad1d-498e-a8f4-2f18970758a6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ab862ba8-57ee-4f45-94c4-f86c9d17e20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd30eead-0815-4a9c-8b38-8b47fda8b6ad",
        "cursor": {
          "ref": "da375ac5-af3e-495d-b2ed-ddb419d90210",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bb8ba823-aae3-497c-a161-34193e556506"
        },
        "item": {
          "id": "bd30eead-0815-4a9c-8b38-8b47fda8b6ad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52911184-0387-42bf-aea4-932d3316ab3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f89e7d-3701-4e5c-af1c-72d9e711bb9f",
        "cursor": {
          "ref": "75830821-f95d-4904-9890-a114f3d0e580",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1e164291-ad10-4808-8e05-7dfbe66d4eb7"
        },
        "item": {
          "id": "22f89e7d-3701-4e5c-af1c-72d9e711bb9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41a8da9e-5ad1-4635-a388-f51dfb901aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cb6cf1-8822-434d-a4f3-323cd347d87e",
        "cursor": {
          "ref": "79dc1d8b-db27-4ad1-998c-c8973341bbdc",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0ad5a8d9-8bf3-4072-8d51-340ee1843e6a"
        },
        "item": {
          "id": "11cb6cf1-8822-434d-a4f3-323cd347d87e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "73e03739-970b-42a6-b9ae-e610369dc0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5d014-975e-48f1-b6dc-70cd478187ad",
        "cursor": {
          "ref": "4dca4cb1-95e4-476e-b136-c9ac1e6ce647",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c3bfef3b-84e2-4689-b51d-f4b929df611f"
        },
        "item": {
          "id": "69c5d014-975e-48f1-b6dc-70cd478187ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "18478540-7c58-4699-bb50-888065de30bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f66487-ee42-4c1d-822f-da9e5bcd20de",
        "cursor": {
          "ref": "2ea2c8a6-64a0-4172-96f4-142093d910d0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a767eb83-7fce-4d8b-bf37-03063c6e5c1d"
        },
        "item": {
          "id": "64f66487-ee42-4c1d-822f-da9e5bcd20de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4103490b-4a89-4d7f-bfbb-cee5de937f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079327ab-9b37-46e2-a23e-20c37e8eb649",
        "cursor": {
          "ref": "3645452e-1f99-4027-aa45-7cefa7e7c2c0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "14af7620-b805-4eac-b7e5-7bb4492f9480"
        },
        "item": {
          "id": "079327ab-9b37-46e2-a23e-20c37e8eb649",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02cd701e-703a-4f69-9e66-b9a4ef5005d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78418806-ac9f-444a-b98a-5f0923c3ea34",
        "cursor": {
          "ref": "f3cb9022-6469-48f2-9136-0bac7dbf1ffd",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31d6a2dd-fbf9-4ebc-a0c8-d822fefc1b97"
        },
        "item": {
          "id": "78418806-ac9f-444a-b98a-5f0923c3ea34",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f6b4c15-3132-4cc8-90af-349db676cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e13ad1-6fd6-41c7-bca1-98b7eecb078f",
        "cursor": {
          "ref": "b304902f-8efd-4440-b6e5-236efe7909c7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "204a0127-deba-4c2b-871f-e4ab4ab74bfc"
        },
        "item": {
          "id": "c4e13ad1-6fd6-41c7-bca1-98b7eecb078f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ffcb7315-beb4-4224-a203-3098a27ec0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e29945-6566-45de-8b24-c2e30d366e1e",
        "cursor": {
          "ref": "9c35769c-6cee-440b-a50b-82aceb1f40d1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "355e0024-923f-43a1-ad6b-a8bf4059f62e"
        },
        "item": {
          "id": "01e29945-6566-45de-8b24-c2e30d366e1e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a586cc47-fa07-4f42-b146-712a010253b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd6e2b6-ba3c-4aa2-97b3-ec147e6a1dca",
        "cursor": {
          "ref": "e23bfa28-3e5c-4fe3-be31-d260e8774767",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "984c3dfc-4f3c-4670-a6e9-f9ad0ff4a2dc"
        },
        "item": {
          "id": "8fd6e2b6-ba3c-4aa2-97b3-ec147e6a1dca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c03fc373-d9de-410a-bca6-72295e891236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d62d27c-75b2-4138-be52-a1e106c9572f",
        "cursor": {
          "ref": "9cd6a147-7d83-48ad-be43-dd88a0ef5e06",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ee34ca1-f26b-443f-8729-74c93b718cb1"
        },
        "item": {
          "id": "4d62d27c-75b2-4138-be52-a1e106c9572f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "165ae80b-534a-4374-9c07-d90a6fc52b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd3878-c520-446b-b1c2-03d9477dd8c0",
        "cursor": {
          "ref": "e4dc5cb9-ad6e-4030-a17c-e273c4298dc4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a59ff68-87a3-47b8-893c-946c62f2a7c5"
        },
        "item": {
          "id": "61cd3878-c520-446b-b1c2-03d9477dd8c0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6919db7f-132c-45ec-a6e3-78b8687c9605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac58d7b-f615-4769-94aa-1ecb71061014",
        "cursor": {
          "ref": "10d35e0e-19d1-4a95-a45a-b28be248ac52",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "629cfc5f-1530-4010-a4f9-915cc7c9c311"
        },
        "item": {
          "id": "2ac58d7b-f615-4769-94aa-1ecb71061014",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "40f801fe-f6a8-48c4-8d05-9d45302c9079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc91b6db-d63c-40ab-a1a0-d927f06e80f6",
        "cursor": {
          "ref": "9434a6c9-3718-4956-8ea4-bc837e74299c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e55095ef-797c-44a2-870c-609b2eabfd72"
        },
        "item": {
          "id": "fc91b6db-d63c-40ab-a1a0-d927f06e80f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "311b5c0f-72bd-4b09-b866-1bdb0c5a2c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b15686e-3542-4999-be14-72d9efe961f2",
        "cursor": {
          "ref": "1c099146-66b2-40f9-acfc-bbb0e1289936",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5ea39c15-d1f6-4953-9d07-ac6c5525a2e7"
        },
        "item": {
          "id": "5b15686e-3542-4999-be14-72d9efe961f2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69174f42-8d44-4b4a-8e2c-b30cfe59c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3c25f2-cb7c-41f3-ba20-0c36d51e0e47",
        "cursor": {
          "ref": "16ef605e-9d6d-4eff-b76f-209111c6289f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c9197e30-a879-4ace-a4f9-065ad5e82d35"
        },
        "item": {
          "id": "5f3c25f2-cb7c-41f3-ba20-0c36d51e0e47",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e03a5eb4-377e-47cc-8dba-af957d80da7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b50592-286a-42c5-ad92-cbe92c3be049",
        "cursor": {
          "ref": "5889b89b-ddf3-4b8c-b6c8-892c7e8ea66d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2a29b7fc-a552-4c26-be2f-a3601d57b9a0"
        },
        "item": {
          "id": "f6b50592-286a-42c5-ad92-cbe92c3be049",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "89b0bed4-b96a-4a03-b529-bccbdd45139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0877be74-cb3e-429d-bbb8-6348f0866d46",
        "cursor": {
          "ref": "02a55c1c-40e7-451d-bd25-965c1bb1772c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8198bcaf-241b-439f-80a2-824758196ade"
        },
        "item": {
          "id": "0877be74-cb3e-429d-bbb8-6348f0866d46",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eb76dc7b-894a-4ff2-a53a-099ad91f0846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaeb19a-2e0b-4ae5-9df1-162c40238b12",
        "cursor": {
          "ref": "73d9bde1-1208-4ffa-85dc-544d292ae4d5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f00a4d65-7e10-467f-82e8-032a26d24c4e"
        },
        "item": {
          "id": "beaeb19a-2e0b-4ae5-9df1-162c40238b12",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cb999f69-4d02-4e05-a02a-6fb4745c3a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65edeb1d-e5ad-48c6-8376-6a38a1fea62c",
        "cursor": {
          "ref": "62581031-e38f-454d-9f06-319b8952ddcf",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "620268e4-da0a-4c6b-a212-ca788fd413e5"
        },
        "item": {
          "id": "65edeb1d-e5ad-48c6-8376-6a38a1fea62c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef2c585d-1a1d-4db6-92bc-e4d98914203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb35e0c4-2eb5-4a7a-9ee4-358095da7d4a",
        "cursor": {
          "ref": "df3b83ac-784e-48e9-9ee5-65b23df38e4c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f42e27c7-f4ba-4893-9954-05002df9d1c5"
        },
        "item": {
          "id": "bb35e0c4-2eb5-4a7a-9ee4-358095da7d4a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7658d6e3-3f6d-4234-ac54-d4f45704ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a31ac83-e153-49bc-ae1f-3da1b182184b",
        "cursor": {
          "ref": "0a0dde6c-3a16-4dac-86c5-d3d6fbe7502c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f4139356-3987-48d0-aa5f-d6eb1b13a0fd"
        },
        "item": {
          "id": "3a31ac83-e153-49bc-ae1f-3da1b182184b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5dbc7d79-a742-402b-ae06-725ea8de1a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2bb8e2-fb49-422d-bc77-b792ad8e839d",
        "cursor": {
          "ref": "c82dabc2-f86e-4002-812d-6c01704d054b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "08d5a36d-55a0-4ae3-92c1-889d32b78980"
        },
        "item": {
          "id": "ac2bb8e2-fb49-422d-bc77-b792ad8e839d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a7110ec6-0924-4cfa-b831-d2820ff41e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc5863a-df7a-4601-bd9e-f5dd68e0603d",
        "cursor": {
          "ref": "095197c1-c0d4-43b5-a50f-6248545ad511",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c78e750-d0c6-4d17-9669-0b81e0866e16"
        },
        "item": {
          "id": "cfc5863a-df7a-4601-bd9e-f5dd68e0603d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e473bb56-528c-41be-9b70-210c3735c40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5a3a4-e2ab-4fd3-a55c-96efc20f627b",
        "cursor": {
          "ref": "f23c1392-27ee-4ab3-8dfe-e5eec505062e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e9d733f1-3263-4ea7-a413-7716a095000a"
        },
        "item": {
          "id": "5af5a3a4-e2ab-4fd3-a55c-96efc20f627b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "81b98eed-5714-49e4-bdc2-ffae43038acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b7b3ac-cc90-4cf0-bb72-8fe689d09e95",
        "cursor": {
          "ref": "c5f534ed-fe38-40df-a7dd-b517a154d125",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a7d7562b-6c5f-4f4d-b713-1c97ad7fcbd6"
        },
        "item": {
          "id": "21b7b3ac-cc90-4cf0-bb72-8fe689d09e95",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c45f5606-10e6-40be-a2d6-0e33fdb583c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac13f8f-b6ef-4ef7-803c-e049334c296f",
        "cursor": {
          "ref": "b57241b8-6a89-4433-9667-e42ec17ff2c7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "48a9f089-4484-4976-b7b2-0f080c70d9dd"
        },
        "item": {
          "id": "2ac13f8f-b6ef-4ef7-803c-e049334c296f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c6973e3-1b30-4594-a7a4-c3559d1dce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbf756b-7bbf-4c84-b424-08cdbf514040",
        "cursor": {
          "ref": "103d01d6-af66-4b74-b76a-7d5e82ef7105",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0eb46070-5128-4ef1-873e-72ec15c96d6f"
        },
        "item": {
          "id": "1fbf756b-7bbf-4c84-b424-08cdbf514040",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1f806f6c-2de0-4ed1-bcc1-5cdbe44a1572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87eb296e-76d1-4124-a26f-ef6bc3604df3",
        "cursor": {
          "ref": "11f22eaf-aa91-4712-ae24-8b53ac836488",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3144c63-5e75-4405-ba0d-32d1f737dce4"
        },
        "item": {
          "id": "87eb296e-76d1-4124-a26f-ef6bc3604df3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9425cd83-9fdc-46c5-8890-5d0e1388d85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a025d76-49ba-4325-8f59-6628bdb120b0",
        "cursor": {
          "ref": "bcd33c18-b972-4056-8836-c8904d3265d0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7200dd1b-cc00-46f7-92a6-bc3d405c9ef9"
        },
        "item": {
          "id": "4a025d76-49ba-4325-8f59-6628bdb120b0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7ead99e4-9079-4825-ba32-7050a251e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78391bc4-3bfc-4347-8079-9362d6224c21",
        "cursor": {
          "ref": "31f8d7d6-5649-4ca7-8bfb-7d18f46efb20",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b6aeb872-0c2f-4d45-af32-33ecfe7f1b4a"
        },
        "item": {
          "id": "78391bc4-3bfc-4347-8079-9362d6224c21",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "629ab96f-35a8-486a-a557-8378034c1d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc7d191-31cd-4c13-b3f0-479a20e0c8aa",
        "cursor": {
          "ref": "fa4b3d0f-fc19-4fb1-8a9b-ecdb2a59eee8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "85501803-aa59-46fe-ada9-c4c3240e5446"
        },
        "item": {
          "id": "9dc7d191-31cd-4c13-b3f0-479a20e0c8aa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f1d955de-9517-41bf-9d8c-da05c3a4b5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e87264-27cc-4a51-94f6-9f20c4bffb65",
        "cursor": {
          "ref": "e654dd16-f4f5-4986-be58-9e499bb8fedb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c2ada0de-a564-403e-8176-485d765a9573"
        },
        "item": {
          "id": "c8e87264-27cc-4a51-94f6-9f20c4bffb65",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a8bdaa8-e4c9-47ab-a63c-d37dbf2cbd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f301c78-9d5c-492a-86f4-a83a8372ce0d",
        "cursor": {
          "ref": "a7a52407-2542-4f2b-a3a9-63e48d5069ba",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5dc928a4-a100-4c4e-972d-5d513e22b83b"
        },
        "item": {
          "id": "0f301c78-9d5c-492a-86f4-a83a8372ce0d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6c4b5ce1-6327-4a5b-ac2f-258dce990a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7dffe-87d5-45db-909e-75a87c048aa0",
        "cursor": {
          "ref": "c9312a11-1bfb-437c-bab2-9405845fd808",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f742757f-a875-43f0-a62a-6f460640fa6f"
        },
        "item": {
          "id": "adf7dffe-87d5-45db-909e-75a87c048aa0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20772008-b780-411f-bce9-cafef3ff21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380c30b0-919d-4f51-a12d-a1d0d7965620",
        "cursor": {
          "ref": "f2cea7e9-5f20-4e7d-abf4-c6066e6120ed",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "66043fad-4289-4ee7-9976-ad65b115f546"
        },
        "item": {
          "id": "380c30b0-919d-4f51-a12d-a1d0d7965620",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4b1db666-5758-4ec5-b0f8-abae89cccfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa1ed2-e936-4e4a-9570-4e761edecb74",
        "cursor": {
          "ref": "c985e44e-2646-421f-b51c-aa1bccb6e723",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c80c713-118b-430a-a104-00e43ffaf31e"
        },
        "item": {
          "id": "66aa1ed2-e936-4e4a-9570-4e761edecb74",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3dcfb6c6-6fa8-4efe-9721-9f76edd6ef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e50082-22d7-40df-baa1-25c51e073890",
        "cursor": {
          "ref": "f63e7b91-8cf6-4731-82df-3ce604c1b875",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "633879cd-2999-4adc-a4cf-0706d18a2d26"
        },
        "item": {
          "id": "75e50082-22d7-40df-baa1-25c51e073890",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d67db644-d98d-423d-893d-9eba33493520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d04c973-d64b-44b4-82b6-a659db39bc3c",
        "cursor": {
          "ref": "c63ff9c5-0f9e-489e-a9f0-51df116cc2ea",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "578db7bf-2c9f-4549-8d5e-ff8b3d91b8a6"
        },
        "item": {
          "id": "3d04c973-d64b-44b4-82b6-a659db39bc3c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "04fb13c1-a331-4486-b5bf-dff12448f9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6342caac-ccda-4d18-bb82-78099482ebec",
        "cursor": {
          "ref": "a4b0a79f-2f43-44f9-8857-ce28d97dc4ad",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b519c84b-8f8e-44ac-b98e-fe38da74e483"
        },
        "item": {
          "id": "6342caac-ccda-4d18-bb82-78099482ebec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "41e6f13d-4f7c-4e3c-aa37-3bc8601453fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62bc79d-68e2-4f99-94e1-6f38dfbeba05",
        "cursor": {
          "ref": "e54c075a-1f7b-4e2d-8172-104090c7e0a1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47ac6779-baa5-4b27-a66c-9e7945f42914"
        },
        "item": {
          "id": "e62bc79d-68e2-4f99-94e1-6f38dfbeba05",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e237ce43-b10f-4702-a356-fd973f2453f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97005567-ad8b-4956-a99c-2e422da5688d",
        "cursor": {
          "ref": "fffbcf4c-0966-4752-bc04-c33ef6ffee6e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0e643cf0-88e2-43ab-95d4-86c1bb69133b"
        },
        "item": {
          "id": "97005567-ad8b-4956-a99c-2e422da5688d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c4cdffaa-7371-4f37-b04c-ca0c27b525a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930a6647-1212-4be6-9b80-8b1ad6b05179",
        "cursor": {
          "ref": "bb477816-9dc8-4222-9847-a97e442c6911",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0df7b704-e98b-4bf9-b026-8b47a381695a"
        },
        "item": {
          "id": "930a6647-1212-4be6-9b80-8b1ad6b05179",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "23a63af6-8b41-4ddd-b79e-e5e958b400d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3c5c30-1439-4344-9507-3177a9266b49",
        "cursor": {
          "ref": "0f2f0de8-c8f6-46dc-87ca-2b9eeccad558",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6c1563c2-c2bc-4a7a-8e45-df48dfb3cd7a"
        },
        "item": {
          "id": "4d3c5c30-1439-4344-9507-3177a9266b49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "968c7583-c479-4a39-8651-271a90a104a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e887896-db78-4861-b546-345066a75f1a",
        "cursor": {
          "ref": "47a92587-53e9-411b-b26f-16a518fc59b7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9cd59458-e8dd-4d38-9897-0c92a9bdc148"
        },
        "item": {
          "id": "4e887896-db78-4861-b546-345066a75f1a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8f007f2f-3de6-4ca1-8f4f-32eb8d0a16d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def9fb09-0896-461c-8ca5-dbd4c7f5a2f1",
        "cursor": {
          "ref": "bb28745c-e3a0-4edc-8e2e-93c76daa304d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3aa4b08f-6325-4a70-b8b8-eddca4ff55ad"
        },
        "item": {
          "id": "def9fb09-0896-461c-8ca5-dbd4c7f5a2f1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28416e64-400d-440a-bca2-fcfd6dd6e456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37430bee-6d44-466b-90a4-da6a53fc8871",
        "cursor": {
          "ref": "bd5077e3-76a5-43f2-9c23-68c5e40725e3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aac6edd5-154c-4110-9fcf-73c1604b9656"
        },
        "item": {
          "id": "37430bee-6d44-466b-90a4-da6a53fc8871",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d44af622-405e-4eee-a3b1-247304ba2478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b14e662-a158-4a87-abb3-34bb16ab3d1e",
        "cursor": {
          "ref": "321a234d-3401-4854-9fb4-a926ce2a78db",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e11a9618-aed6-48a4-881f-4dbe33a1237f"
        },
        "item": {
          "id": "9b14e662-a158-4a87-abb3-34bb16ab3d1e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e44367f-8b40-4c13-83b4-cade717273d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ef029-6a31-4eb7-8c8d-01591db38b5c",
        "cursor": {
          "ref": "57de42d3-6e45-4a2f-843b-009786d46ea2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f391de31-589b-4bf9-a0cd-c96b74ac966a"
        },
        "item": {
          "id": "4b6ef029-6a31-4eb7-8c8d-01591db38b5c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "32d203ea-cce9-44de-a213-044207718901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b3135-aaa9-4476-8a04-78d6dce228e8",
        "cursor": {
          "ref": "17c91e75-fd7f-4cc1-9a8e-1ffe4d9504a7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "02ceb507-19fa-4d1f-bb8b-7b97defc7528"
        },
        "item": {
          "id": "b78b3135-aaa9-4476-8a04-78d6dce228e8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "79e009d6-9dc5-4fa4-a948-635d3c2827d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3bc826-26ae-450a-8183-b48d5b57c909",
        "cursor": {
          "ref": "25e0b847-8793-46b0-b10a-82a3f0b0d202",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c9baf30-a850-4ada-8eb2-29ac673716ef"
        },
        "item": {
          "id": "2d3bc826-26ae-450a-8183-b48d5b57c909",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c7e81cd1-0046-4ae8-9c01-e4ebadf20d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f448855b-93c9-45e0-a696-c80676bed0c8",
        "cursor": {
          "ref": "f0801097-069c-4d7a-8606-e4a5eae0786e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "48cd987c-d04c-4604-abf2-2bbfa91ecd56"
        },
        "item": {
          "id": "f448855b-93c9-45e0-a696-c80676bed0c8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ac86c453-4121-43ef-bfd1-5875dd0646c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0afc3d7-afc9-4974-a180-a65229eb9fdf",
        "cursor": {
          "ref": "3ddceb3f-f956-4e85-9608-7dee98fb84c5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "144800f2-76e0-43f4-b5a1-acea35628bb8"
        },
        "item": {
          "id": "d0afc3d7-afc9-4974-a180-a65229eb9fdf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c7b6ac33-46a3-494f-a4fd-70f2185a3bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83aef0d-a200-409c-a8be-e07463cb17b5",
        "cursor": {
          "ref": "251dd9c8-a967-4fe7-b5a8-660dc03e9b89",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4518a1cf-f06d-4657-9d7a-bc7d0494fc67"
        },
        "item": {
          "id": "a83aef0d-a200-409c-a8be-e07463cb17b5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "446529da-bb85-4eda-bf5f-56d3f362291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a29cf89-8dd5-4b24-a098-cc5f6100a791",
        "cursor": {
          "ref": "1dae97a8-8b03-4651-9a13-d705c42a609c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d8df843-7e6d-44cc-9d18-f91a75b01b36"
        },
        "item": {
          "id": "2a29cf89-8dd5-4b24-a098-cc5f6100a791",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e8a8781d-d733-4811-afc5-7de241c8eb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1c381c-051e-42a6-9bd1-8b3d72942708",
        "cursor": {
          "ref": "6d83884d-7611-426b-a507-796e252d3651",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59b24ede-9c62-4f1a-86a8-d74dfd79b08a"
        },
        "item": {
          "id": "1a1c381c-051e-42a6-9bd1-8b3d72942708",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee895d46-d592-48d9-8bfa-e0f06851e92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fdbbd8-78f8-47b8-99c3-54cbc117dd5a",
        "cursor": {
          "ref": "03ff18d4-6bfa-4b3e-8c96-0bcefe942104",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b57266ae-5770-4b4d-98d3-6697c89ebbc3"
        },
        "item": {
          "id": "d1fdbbd8-78f8-47b8-99c3-54cbc117dd5a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d62481ee-21cd-4a16-bb73-06d16145f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c44b8-4dc5-4589-9096-fbaa6a3fcc33",
        "cursor": {
          "ref": "0e7a071d-8213-411b-9ec6-c32eee63aff6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a126067a-a5b9-4071-a0ab-d89d4b582a5a"
        },
        "item": {
          "id": "fe5c44b8-4dc5-4589-9096-fbaa6a3fcc33",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7eca5b14-acb3-4a0f-a0a6-fdc72069e0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8f522b-6c46-4b8e-9523-5a825a4d95a8",
        "cursor": {
          "ref": "ff6f6c39-4441-47ac-8a42-8523fc0bf823",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9a730dde-2e2f-4aba-811e-d0aa09e6dd25"
        },
        "item": {
          "id": "0d8f522b-6c46-4b8e-9523-5a825a4d95a8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0972e1c5-32b6-4900-b89d-460e99ba5be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b41521b-9e10-4cb4-96a5-c70f353401ad",
        "cursor": {
          "ref": "87c3fb93-22b4-4857-9c8a-44ca50580171",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "428d135a-04af-49b0-af7d-82ec719cb994"
        },
        "item": {
          "id": "7b41521b-9e10-4cb4-96a5-c70f353401ad",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3108dd9e-3fb1-4401-891e-96c037b1af6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16da550c-267d-45ff-85e5-3c30531cc713",
        "cursor": {
          "ref": "c98b4a55-8d9c-446f-b132-6725e5ece207",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "923da854-0872-48c2-b55b-48bc929c09a1"
        },
        "item": {
          "id": "16da550c-267d-45ff-85e5-3c30531cc713",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eff6926e-7d62-4532-8191-f9b2f30d54aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39251b-f94b-45a9-9737-233c2c64b419",
        "cursor": {
          "ref": "f36dd061-944b-40d0-a839-4ca075fbf6e6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "57ea56c9-b2bd-423f-b45e-67362c823e48"
        },
        "item": {
          "id": "df39251b-f94b-45a9-9737-233c2c64b419",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c4bd50ac-cd76-42dc-91cb-ad17645313db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7e2489-dd2f-43da-85fd-b2f3c061721b",
        "cursor": {
          "ref": "a2ba07b0-b5fb-4d6c-ac52-caf2828d0de3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6f8cc19-47e7-4257-86dc-326e81fafbf4"
        },
        "item": {
          "id": "cd7e2489-dd2f-43da-85fd-b2f3c061721b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c6de87a-8147-4295-a098-79f263ee1907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a148ad95-715d-45df-88be-b8c87f2182c9",
        "cursor": {
          "ref": "37f10aa7-999e-419c-aaff-4cad4181a941",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b219eb30-fe09-4f61-a7ba-6165da6ef632"
        },
        "item": {
          "id": "a148ad95-715d-45df-88be-b8c87f2182c9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e3d49bea-f231-410c-b422-9069d527e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b3988b-4d39-4178-86e4-ddc4905c6b45",
        "cursor": {
          "ref": "cfce9384-fed8-4121-9a99-7bf53b0f6c69",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ea0fd25-d246-4740-8042-581920ce4a59"
        },
        "item": {
          "id": "03b3988b-4d39-4178-86e4-ddc4905c6b45",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6a5853e2-6619-422e-a95b-6525f685b553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460d50a0-cfbf-4185-9c5a-873b4f35fb9b",
        "cursor": {
          "ref": "e31edc0c-6400-4776-acba-929a00638479",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "644e1404-61d7-47b6-a433-5bdd5b13da62"
        },
        "item": {
          "id": "460d50a0-cfbf-4185-9c5a-873b4f35fb9b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f3518ccf-ff51-4a0b-a397-125ec77722b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c69d35-5cf4-402b-8746-1c1efd8b36a6",
        "cursor": {
          "ref": "b6349104-9e66-4590-b9f7-2b0726281829",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5404b315-18ad-46ef-97a4-9c2191cd4230"
        },
        "item": {
          "id": "76c69d35-5cf4-402b-8746-1c1efd8b36a6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "70e627f6-45dd-41db-8cab-f6b56d9e547e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c5a77-635e-4aca-afca-d7f9147a0214",
        "cursor": {
          "ref": "9f89b8ae-5abc-4873-9f06-810b10543df3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0bbb8f4a-232d-4fbb-bb14-667bf289ac04"
        },
        "item": {
          "id": "487c5a77-635e-4aca-afca-d7f9147a0214",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec984dab-aeed-4866-b8df-3374b6a0e6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb73668-4842-49d5-b677-aea92a3df146",
        "cursor": {
          "ref": "b45dceb0-126e-46c7-a37e-ca04142b7803",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6c26fcd0-f5aa-4137-afab-2235ee70e5bb"
        },
        "item": {
          "id": "afb73668-4842-49d5-b677-aea92a3df146",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "022745aa-74b5-4b28-bbd0-4afca4dad088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7e3e67-6f1b-4a50-98fe-140823578d82",
        "cursor": {
          "ref": "f850c3e6-0543-4f7b-9f47-5ae263f69d04",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "63d84042-34bf-4319-8673-47efbd637584"
        },
        "item": {
          "id": "eb7e3e67-6f1b-4a50-98fe-140823578d82",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bf296c82-8445-4fb7-861a-3b8cdd2ef520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaa78b0-f691-4220-a464-23c200a47775",
        "cursor": {
          "ref": "f843bbf5-31b4-4f6c-8867-2dbbc5d974af",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fe3ddb9a-7078-4839-9eb1-5e01c88d5a60"
        },
        "item": {
          "id": "dfaa78b0-f691-4220-a464-23c200a47775",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ad5c4d7-c242-481b-8806-d055ff1f97af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aebd27-c1fb-4d0b-a154-e4081f91ea6d",
        "cursor": {
          "ref": "84cc5910-2e44-42b8-84ab-e571522ceccf",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "76924f14-8a56-402c-ac8a-c43ef288f1a7"
        },
        "item": {
          "id": "89aebd27-c1fb-4d0b-a154-e4081f91ea6d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ebb38b1d-f09d-4fcc-9687-8710c00c20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38487b1a-d898-45a6-bda4-7ed91fbd21a8",
        "cursor": {
          "ref": "09ab2b5a-d990-4865-ac79-4803953e00aa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "654e9722-0858-41fe-8e95-aaebb2fecba2"
        },
        "item": {
          "id": "38487b1a-d898-45a6-bda4-7ed91fbd21a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4aac9384-f366-4d96-92f6-afa328609b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87229a2-99f2-457c-89a9-8e24a2a7f1e0",
        "cursor": {
          "ref": "d5c9f62c-ed31-4719-8b4e-c7cc5b13b36a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f0a9b797-f1fd-4976-a372-3fb6dded20d5"
        },
        "item": {
          "id": "f87229a2-99f2-457c-89a9-8e24a2a7f1e0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "183ac52d-3adb-4324-a1dc-47fa2c541897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dd9fab-6fe8-4950-afe3-71cd5d930cdd",
        "cursor": {
          "ref": "8d398ee7-88e4-44aa-8f2d-b97f007a3b22",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c20561aa-1fc6-4ace-b3b9-1fc01ac5924f"
        },
        "item": {
          "id": "43dd9fab-6fe8-4950-afe3-71cd5d930cdd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99f09c86-6cb3-4175-a7a6-3a6f14c66652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0962ca22-4038-486a-8c89-3711b2dc6176",
        "cursor": {
          "ref": "866581a7-6ebd-47b0-ae9a-c4a1ca865f7a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f428abe1-1b08-4ad5-b76a-6c1cbf8fecf8"
        },
        "item": {
          "id": "0962ca22-4038-486a-8c89-3711b2dc6176",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14fbddb7-641e-4663-b3d3-a306461ba3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8c8f89-ea18-41a4-8efc-e463cc4fde16",
        "cursor": {
          "ref": "1f2e29ff-75e7-4464-a0a0-c3f8049e0b45",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d5ae6840-824c-4cac-b6ee-7d2a3a009f49"
        },
        "item": {
          "id": "0f8c8f89-ea18-41a4-8efc-e463cc4fde16",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "edd3c469-2085-4a3b-a74f-b0b5614d2381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bab98f6-5256-4383-933c-e4c205f6d300",
        "cursor": {
          "ref": "ce733b1b-ad96-4e9d-a8aa-4a4e931268bb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9d9cede0-8bb4-47a3-9a86-8285bab4b31d"
        },
        "item": {
          "id": "7bab98f6-5256-4383-933c-e4c205f6d300",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eac554c0-d307-46ab-a980-77c897bd0660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f633f9-0d95-4f42-afa8-ddb88c419b59",
        "cursor": {
          "ref": "fae576bd-7ebc-4117-abed-26a87cba662d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "15d3379d-7039-46d9-a82b-85f9972bc135"
        },
        "item": {
          "id": "96f633f9-0d95-4f42-afa8-ddb88c419b59",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3a11ba37-c366-4bcb-b3eb-ae249fa05a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a905a30-088c-4545-bb60-96856ac9f1b3",
        "cursor": {
          "ref": "e167cd03-0f13-4dc6-8e71-5fb6dcfb51ee",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f0e3a627-3028-4e6c-bf28-14c89b4b2e82"
        },
        "item": {
          "id": "2a905a30-088c-4545-bb60-96856ac9f1b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e61e3223-ed9d-4086-9931-c9da41c44203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ea7511-e543-4790-8ec5-d84b3c7b71d4",
        "cursor": {
          "ref": "ee5ff0ac-31bc-47ac-ac2a-aea008c9a0db",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "038e83ef-6bf4-46e7-8944-ebf39ba0b1e6"
        },
        "item": {
          "id": "89ea7511-e543-4790-8ec5-d84b3c7b71d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0f9c3ae-4c27-45d5-be82-712219957c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6790f9dc-8a55-4477-9568-56a40290586d",
        "cursor": {
          "ref": "76422b04-7214-4f38-bdc5-c2cf64ebb975",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "739b4050-0314-415e-b83e-fe723fe28b5c"
        },
        "item": {
          "id": "6790f9dc-8a55-4477-9568-56a40290586d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "598ef671-fd3c-496c-9037-ce3405c1a3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a33e00-76de-4a0e-8de0-a964f2bae36f",
        "cursor": {
          "ref": "4725205a-4bf8-4a5f-9e56-0f5e2a00c720",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b7853bf2-a641-444b-a96e-6c60b75d7874"
        },
        "item": {
          "id": "13a33e00-76de-4a0e-8de0-a964f2bae36f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2742ad4f-80dd-45d7-9962-9b7cf068b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35357b9d-22ee-4cf3-a318-5a99101e569d",
        "cursor": {
          "ref": "336e57bb-6054-49c1-8240-58b932b5ff64",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "54141220-8c42-439f-a65b-3220981adc88"
        },
        "item": {
          "id": "35357b9d-22ee-4cf3-a318-5a99101e569d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9491886f-a242-4444-86e7-d99c827105b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199d33a-022a-4579-a3f6-d87f45e08cae",
        "cursor": {
          "ref": "d5e3b471-7ca5-431f-ae6b-1c330baa5863",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8f427637-0aaa-47e6-a11f-a36d82542234"
        },
        "item": {
          "id": "7199d33a-022a-4579-a3f6-d87f45e08cae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8d5b2250-4ba8-439a-9491-f8e705dbbdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399bf4be-1d66-4eb2-88c3-a06a087b448a",
        "cursor": {
          "ref": "f0378b91-9d62-4f90-8d15-d589187f30b2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b29ff2c0-31eb-4d73-8574-f6bae7224907"
        },
        "item": {
          "id": "399bf4be-1d66-4eb2-88c3-a06a087b448a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6733fd7-82f5-4172-b9d2-64ca4e7dfb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dad36f-a500-4547-a027-4660e8a27b9a",
        "cursor": {
          "ref": "bae469a3-e908-4007-913a-607b46312433",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "86c588e5-84cd-4f56-ad8b-85000e5d83c8"
        },
        "item": {
          "id": "d4dad36f-a500-4547-a027-4660e8a27b9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "714daf1e-81f6-40a6-afa7-c07608eb7234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175de022-3aca-4634-83f6-d58faa66af44",
        "cursor": {
          "ref": "e4dfd14d-3ba8-4e64-979a-0f4ea73071ab",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ee9a408e-c731-4c3e-92f9-396056113da7"
        },
        "item": {
          "id": "175de022-3aca-4634-83f6-d58faa66af44",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ff117d48-4e3e-4b9d-bb44-3ea49ae3def2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a77145e-2ecd-4ff3-9e61-22d6e148767b",
        "cursor": {
          "ref": "1a92c4ea-121f-4a86-b77c-3dc5f74dd160",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "02c94055-52d5-4e35-9d7d-c234f899433c"
        },
        "item": {
          "id": "9a77145e-2ecd-4ff3-9e61-22d6e148767b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "05f79350-dfdf-44ec-ac01-796b7c5762ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4d9456-2441-445c-93d2-0f0ef0e48383",
        "cursor": {
          "ref": "7d874830-4a8a-4693-baaa-23ed8f169332",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b5d4ea7b-56d8-4679-9ede-55ddd72730f6"
        },
        "item": {
          "id": "1a4d9456-2441-445c-93d2-0f0ef0e48383",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fbf9286d-4026-4b27-984f-07e195c9b6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c24b740-00bf-4ae6-8691-0cf00e640212",
        "cursor": {
          "ref": "18b97ec4-2a1c-4433-8f0b-bd0456576743",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f8a932b6-0787-4360-bac4-0d55818655d6"
        },
        "item": {
          "id": "6c24b740-00bf-4ae6-8691-0cf00e640212",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc113117-663e-45c0-b1a6-c34be28690ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3a8f22-1329-441a-8386-072de2af4d83",
        "cursor": {
          "ref": "96a87120-7fde-4a8a-bf38-6fc3eebafa00",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "592e89a6-6f49-41b0-94a5-7f8815188455"
        },
        "item": {
          "id": "0b3a8f22-1329-441a-8386-072de2af4d83",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7339448-d189-4c04-9e88-6348667caa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8954de37-1ea9-4aea-aacf-44fe7417e088",
        "cursor": {
          "ref": "c2acef1a-aec2-4d81-9431-2be03c5815ae",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dedb562f-f42e-4579-9f5a-98e7f700d380"
        },
        "item": {
          "id": "8954de37-1ea9-4aea-aacf-44fe7417e088",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1188385d-3f9c-4bbf-9dd1-044378b01389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6508437f-d539-481d-b882-1a0bb6599471",
        "cursor": {
          "ref": "ae683763-c723-417f-940d-8944fb9a0e91",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d3c4acba-2241-4c4a-b172-f5fa4ff02925"
        },
        "item": {
          "id": "6508437f-d539-481d-b882-1a0bb6599471",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2284b0ca-63e2-4b3a-8fab-2dc04b503d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f59514a-dd97-4ba0-875f-3d966265cb8d",
        "cursor": {
          "ref": "17db2d4e-e65a-4ef4-a23a-9854bf2f62a7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8d45c5b9-25a5-441c-a136-ef81613a14d3"
        },
        "item": {
          "id": "7f59514a-dd97-4ba0-875f-3d966265cb8d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5ceb18b4-102a-4c3a-9043-f8f8ad495d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f6da54-d4cc-44e6-b8ee-6df459df2c9b",
        "cursor": {
          "ref": "3f0e73c1-6932-4013-9667-522c60ad7055",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e7eb2bb9-6f5d-40bb-9113-4e1f5916dcd1"
        },
        "item": {
          "id": "b3f6da54-d4cc-44e6-b8ee-6df459df2c9b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b7df261e-7271-487a-8b4b-8bdd4eb5ec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d82bfeb-6da4-4864-9084-9ccf66753374",
        "cursor": {
          "ref": "9a873081-5399-44c5-8302-2f407674021f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5bf5aafc-57ac-4b52-9008-5209058b6915"
        },
        "item": {
          "id": "0d82bfeb-6da4-4864-9084-9ccf66753374",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1a124ad-f19b-419d-b6e0-0119352d7af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec77c991-1c02-475b-9ecd-f44bb630bb1a",
        "cursor": {
          "ref": "d49f4595-21ef-4b66-ba6a-7c965a75e763",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c0ad557b-083d-4bb5-8c33-fa754c524426"
        },
        "item": {
          "id": "ec77c991-1c02-475b-9ecd-f44bb630bb1a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c364432d-3e5c-4740-95fb-8161d5c6ecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb418ec-65aa-44d5-906b-dc855e004ce9",
        "cursor": {
          "ref": "57ce76b1-c4eb-4573-a66f-64e004d57261",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "02baf4f0-474f-4881-9b46-6fa95ea275bb"
        },
        "item": {
          "id": "bdb418ec-65aa-44d5-906b-dc855e004ce9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6f7b7da8-b26e-4ab9-a60a-b87d255a795d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338779d4-2aa2-4f4c-b8da-5b6a3064fc3a",
        "cursor": {
          "ref": "abf4c0ae-aff0-48b7-872d-effdfbcdc938",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f495699a-1c4c-4455-bf8c-fe6be548e4b9"
        },
        "item": {
          "id": "338779d4-2aa2-4f4c-b8da-5b6a3064fc3a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6ee68df7-325d-4b54-bfd0-0b8514ea4d6d",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "806daf3f-9c3c-430e-8489-b0d5784bdc24",
        "cursor": {
          "ref": "2d12d195-cc2f-440d-97c7-4e589b6fdaca",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "db7474fb-cb49-45d2-8c07-1724be508b58"
        },
        "item": {
          "id": "806daf3f-9c3c-430e-8489-b0d5784bdc24",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a222aed3-f6b1-477f-9316-98786c60779e",
          "status": "OK",
          "code": 200,
          "responseTime": 1436,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0354ff3f-46ab-4537-a9b5-9c28354b4515",
        "cursor": {
          "ref": "ec7a9e82-9b42-411a-b78a-6783c05cec28",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a7e1bebb-4b59-44d7-922c-4bf77d2d07e0"
        },
        "item": {
          "id": "0354ff3f-46ab-4537-a9b5-9c28354b4515",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e11f125-4a73-4fac-8ab2-502c77938dca",
          "status": "OK",
          "code": 200,
          "responseTime": 1406,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a204ca-fbfb-4df8-b084-81114f326c4d",
        "cursor": {
          "ref": "16a31cff-3e97-4e92-897a-f35af9f108f1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a4bc5b48-f48d-4eaa-84c1-6da596310ba6"
        },
        "item": {
          "id": "a0a204ca-fbfb-4df8-b084-81114f326c4d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0e89397b-6703-42fd-ab68-99d9352bc519",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a204ca-fbfb-4df8-b084-81114f326c4d",
        "cursor": {
          "ref": "16a31cff-3e97-4e92-897a-f35af9f108f1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a4bc5b48-f48d-4eaa-84c1-6da596310ba6"
        },
        "item": {
          "id": "a0a204ca-fbfb-4df8-b084-81114f326c4d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0e89397b-6703-42fd-ab68-99d9352bc519",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd98926-ac69-45b1-ab46-d678ad8084cd",
        "cursor": {
          "ref": "89f6d538-9972-44ee-b659-82d76ae5147e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ebd440e6-678d-4a26-9788-98134f02c7d1"
        },
        "item": {
          "id": "3dd98926-ac69-45b1-ab46-d678ad8084cd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44c372e2-31d6-4ad8-9f91-e118dc547b70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12278dc2-7b75-4ace-8738-f2064aa3ff0b",
        "cursor": {
          "ref": "fde894c6-ca81-4d16-aec4-61fa99ba3ab9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fea52295-e11f-4ba8-b4a4-dc8337d26111"
        },
        "item": {
          "id": "12278dc2-7b75-4ace-8738-f2064aa3ff0b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7fe938b2-56a5-4e75-bbaa-a94efc2d73c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}