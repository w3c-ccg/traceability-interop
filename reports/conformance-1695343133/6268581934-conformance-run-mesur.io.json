{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c1548a3-219e-4ea6-b761-98150d9b6d4f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "36dec2e5-b2c6-4ee9-9d54-d3ce5918cfb3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb674c60-d55c-4a6f-acf7-6614b2c333f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7cef4d25-973e-4776-baa5-dffce321f365"
                }
              }
            ]
          },
          {
            "id": "bbaabd9d-bf77-484f-a68b-cd07a58e243e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de1bebd1-9eb1-4385-b27f-471512ca37b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5540503-ba26-405e-a1be-3344c741e518"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8fe85b8d-3bc7-4cae-93bd-d33f0efb738e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "23022cfa-be0c-4fd4-abec-4cda7c5424e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6637e703-2798-47cd-bd28-6e3b81311401",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97585a1b-30a2-4037-82df-8e2fde249967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e4d62b3-37f7-420a-9ed4-9d949ec0124b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a61ca107-5464-462f-a8bf-f562f49c6912",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f88f4e47-8ac3-433d-b165-cfab7c9a0130"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f50cc40-6e7b-4caa-97f0-ae0b031b79ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3fe064d-d5fb-44d4-a976-021ccfc6cb45"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a07c94-ac4b-4544-bc71-c31208b64f52",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "94696dbd-74f9-41a7-8fd2-4b4d0ca5aa41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "998bbd82-9ffd-47c0-8470-9cedfac367c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da68b3c4-a786-4d25-9204-0c5652832d25"
            }
          }
        ]
      },
      {
        "id": "6827840d-0621-4b33-ba28-bcae6847124f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ab1a0963-5bdf-43b8-b2d2-d4670359e6f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "699d02fc-5180-4962-beaa-04ae1ab61394",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "136d8eed-0ede-42fd-84fe-3410dca0e969",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227c927e-9447-48a1-a0ad-4263660cc879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3100044-6ba4-4290-b137-191938228b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a3645e-7ffa-4326-9389-f57977584617",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0168ad-7f8b-4a89-89a1-49099f57dbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c09092f3-0e81-41ed-b6fd-33ab5e5f57f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6277d2-a5df-47cd-b4b4-cd63c3ab5d27",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3fe519-e244-4a20-bc2c-76a02ec86e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "094be604-41ab-4c5d-8ba7-40e77f996593"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b9fe50b-6ad7-4a43-98db-8859524b15d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fad7e45a-4336-42bf-a1a7-43b8a1fb92f2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c22b57-2759-43d8-92cd-1ef6f13793bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af00c661-7eb3-4c14-8532-5fa4b707fa8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d989ab9-bb05-4aa9-809b-1e5eeb4f54b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb73e3e2-6684-4a77-80f4-a8e4ef4ab12a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5361d303-24ed-46ca-a6c4-0b738d993df8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8eaf9fa9-d564-434c-88c5-1ce96252fc92",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3ded9f-933a-4bef-a9be-e70b17010048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4ff22e6b-cc58-41f9-a7f3-cb37ff43f84b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "859e7ddc-6959-423f-a66d-f87d84682d76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "44a72772-be0b-4546-a73d-294cbb9aa30b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22661809-c009-423e-87fd-156513e935af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a2e88d7-3248-4420-a543-524ca89a430f"
            }
          }
        ]
      },
      {
        "id": "4d755633-ff73-4cba-86e3-5564de873641",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8b65bbb4-69ac-46a4-9819-cf4f9dbdbc06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95f6e32b-50a7-4e71-963d-0a5e8636fb29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60e87282-da7e-4f3a-af5c-c178e76b0750",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e980d-24fb-4cf3-92e8-cdd40c0176e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfdd7ce-f377-4a40-8bb1-dd467d881347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0eae79-57e1-4af7-b32f-a3ba1445e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbb41f1b-3e9d-4e17-b2b0-37a6ca5e6128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744d5c2e-28ed-463c-9509-0ded113f6754",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713034ad-0de3-4032-959b-dd81494b0bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee904eba-7a3f-4b5a-a785-245c41bda906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea375b-2ef8-45e0-b7dc-921641c539a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f311d144-d2e9-4ded-90af-b94168ba71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b1dbca-7e26-4b47-9f59-cb5a4bde5d80",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554ec2b-9b42-4a6f-b8b9-91c26df98ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81df2229-58e2-4cc8-8669-ef1806de67da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3e883b-1f17-4538-b53a-474cd04ddd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5d6f18a-167e-4de3-aff1-c5a279e99da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe22120-99fa-4a4f-a4e5-5c79a82906ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e9a360-321c-41d4-a3c5-05878bfc47b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed2e88f-cfe3-4bac-b825-f4a324e556ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38e6ea4-1d25-4a6c-8cea-a9ad5192fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae2e584-dcd0-40ef-9a4a-300afa7a8bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3a4f39-9489-4897-8dbf-f314675ac9d0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d24f863-958f-4800-ba3b-15039799ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b70bde4-d549-4b32-ab17-55fac67d1ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153c9ecf-4c04-44f1-b238-47aebd004651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f99c017-4303-40b4-9895-c47c7ce75ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd9cb6-44fd-42be-9426-a24849485a6a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eed5c3c-fbde-470e-9f25-8ea24f6e6372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3001beb-83f4-4aab-ac7c-f501a6b6c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f493dd6-2eba-4a47-8669-bfb871a2662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e955b2e-1d44-4c89-b8d5-c8e75033a9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e271486-091f-4998-ad48-ce65a7079d74",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd88f60e-0160-4bd8-8efa-9bf24ce07fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38dc6b0d-fded-4cc7-8372-20f579d50c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9c0a7-1226-4c24-8a0b-02fecd350de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3608dbbc-5880-4348-a738-220d42dc6aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de613399-3188-4ec1-905f-10aaba25850a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3390bd-bd58-4324-a8b1-e78f2ef42097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef15ad7-9bb4-420c-a006-7083d6330d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d1d0ea-c74b-41f4-8230-c3cc748beeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e523f546-7c5a-4bec-a4c7-5736b691aa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb16117-678c-4afa-9233-7d9edd94723c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f9962-2264-4e03-891f-e2d5509a5671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b52b8b0-ad77-4869-896f-28c1cb0f862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f5827e-b4a3-4415-9c93-61898cf1cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f4ae275-6d85-4608-9ea3-97bed992e7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b162ebaa-1895-4806-952b-8f1ec9f05ec9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573a4929-b79b-4f16-9887-ccaa5008196c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b3fc4e-979a-473d-b539-89f1a3674395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de204187-669e-470b-a854-3c405d156af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e0015fb-2f64-49ea-8b00-702be87af420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd12a4a-c811-4ca0-adb0-edab21d63d56",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bad9af-9f77-4970-b76a-0cf2a4cea8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276a90a3-3986-4e70-9932-b43a5a05da8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6341b4-43b5-4346-9fee-698392d2cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38e996e7-a2b6-4dc3-9a35-a3e8c5a1933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62db563-de1e-4738-93e0-e9c11f42e280",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35a20ea-d9d0-42a6-9a25-e6a71bb7053b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4807c556-0f74-4387-87a9-3936fec2e659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3bee41-89a3-4e0f-a79e-03744682029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e46117-d2c1-480d-9b04-5e402fe2af2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d63e664-509c-46fd-b3ba-3fbb4c84cf35",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08184ffb-927c-4bd4-a1f8-589f7d767b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58acb8fc-c5c0-4ee3-9a34-822ce2b6105a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5169cc3-e23b-41b8-bd6f-79ebe8090647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "480e3406-5feb-4a68-8892-a18e01677a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0b53f-fb3b-4a4b-8af1-dc63ec04d6aa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6778a3-6658-4a35-9d4d-d310bb14cb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5883d088-2e51-4a04-b00f-b7fd87627e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a576f-a64d-478c-9103-f200d4a3be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5c144da-6c4a-4bb9-a4d9-ea4109d057b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b900a9d7-cfce-4ba9-8e44-ad8a9bc107c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561e9a71-b555-4b7b-bc55-86a09c53b348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2f5c88-e63b-4c76-ac3f-f6d06cb5f2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78efbfa-9daa-4c72-8516-68daeb8aceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6129faa7-a5de-4ab1-b86b-3a87318e07d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0a2495-0006-4917-8179-36488cfe6f0b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b535be-d471-42b4-8f92-203d0ee01829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f693d2d6-853d-43e4-b38d-1cdda300fa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0296db12-d89e-4119-bb0f-9f5e01453649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1336264e-0703-44b4-98f2-fea92d02166d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf14eb1-19ee-4474-ae7c-643305284bdf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314e9514-2afa-4dd2-a177-2e4d4c9fb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c551ea-4c1f-4269-b87c-73f97c69d324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94ccbf-608b-469d-a290-f052e210e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f8fa0b-315f-4b97-9147-50a5c0869efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be6b3ff-973a-46dc-9e43-ebfa8a6f6efc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf95077-788f-4aa7-824b-620c26ffffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13361b3-1147-4903-a342-81039b340f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a4e24c-4212-4782-b1b1-e1ee810ab8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ff254c-58ca-4e33-b5a2-2672b3b6db81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26f8d89-7382-4076-9599-82b5c8c74ad9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b31cf25-1a44-4fcd-83f5-ccf27801a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709364bb-b710-4d37-8e27-40df511a5d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1712139a-1727-4c4a-9e11-53f321565309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2de589-4e89-4fca-8655-de0591695fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3124ba63-32e6-4fff-9812-1c5cff37e00c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb61528f-cb21-486b-8f0d-a5c38416a81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42ff6d7-ac3e-4f5d-8ec4-1345bbf37993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3ad284-475b-46e5-ba32-f42ab2dfcade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be45dc3b-edc7-46a8-861f-5737ba7d8eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ff1125-7c6b-47e5-976e-b2a4c59cb88d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8eb6d8-8864-49c4-a25a-cb78b69c98aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174825ed-2e4f-48b0-a545-64a3ad196daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0350785f-f77a-49a4-bd83-bb9051590630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33d7952-c592-45cc-b982-f139174b71ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2439ead7-75cd-4a1d-aac1-4cb622135af7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b9bfd7-8139-4c72-a600-ea77559c70a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2c8516-c0c0-4739-baa6-70540ac8145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3a3a9c-5df8-4a65-90e1-2c29425e9390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8737c983-d6d2-4006-b2a0-fe118f75554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da166d-db0c-4018-aca0-74e9dae694a0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d4f40-9df8-44fb-b078-cbee0471f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a128d78f-038d-4303-9306-9efd117ddb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90047823-bc03-4f34-a241-a4f3c59af7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d563d60-8c39-48a9-81be-98022bce72d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea85eff-ffea-4bbb-bc49-897c993a37f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9477f-9673-40ac-a2cb-35274d112a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b9467b-c08d-46ed-9594-fc2310ee2458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576eb4e2-44c5-4592-9b59-d2cadb011d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "470c4bbd-5199-4cea-9e7e-0d37e14eabcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e187a7d-c40b-4c0f-afd0-f29168a5490e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a2c09-3344-4fef-a738-b34cbf1f33ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb0c060-08e1-428f-ac06-0f7e9b2129cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da81c9-6d0e-4033-8366-a5343fec26b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "547ea9fc-667c-4b06-8f46-755411926739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4030445c-efd9-4447-8c19-fe59b802fe2a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd377db-0812-428c-bdf7-d4fc1359982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa4bfcd-9e73-420f-842b-1a801c40b799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423d7cd3-fcce-4aaa-b30c-4b86eb21f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec0078a-6aa6-44ed-a339-c51c99209740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d776c2e9-89c0-4f66-a5dc-6f421646c6df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc602a7a-f6cc-4f7f-ac91-d2352eead440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0073c99f-dfd7-4ca7-952f-7afe7053fc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462a0c25-bdad-4a54-a66a-a8145855a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6d7333-4aa1-435f-9d52-f999fa7717ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a25eb-5009-4e01-9629-698f12bdb3bc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f0bc1-6745-4d7f-ba91-d4af736d7614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a956328-1cd7-4f35-a94f-67b99df04bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c15387-fbd8-4bc3-b3ae-3db8b83d28d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dc97e6-45b0-4a6c-9818-e54f2d490cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9f8804-8aeb-4b04-8ad1-4694c4743d86",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13239fe-af5a-4995-aa67-c93e40be689c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e591dc46-f7dd-4b8b-a7e0-05c4fb2b311d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464230a6-1c1c-4075-b0f5-e112c6d9b346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f856faa-4ad5-43af-b16e-c6371b3e339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9953fd4d-767c-46dd-965b-0482faa746d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b2b950-4a2e-4283-94af-86fc95ed5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c082249-c27c-4256-b005-4db3a1f5df4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f94a3f4-5bef-4428-99f6-79dbf61f9f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d55ea7-3340-4846-9a31-c10a2ae6ae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7477c623-9448-4f65-bfa2-91e025442de2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4891cbb7-2830-4a79-9cbf-0de47a507a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fe0303-b957-4d5e-bdfc-e0afeed6e381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16653b4f-1c25-4d29-8edc-bbb3e14768e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7c0f68-6c46-4a37-88a5-2fb6b4777250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe3246b-8299-432b-abc2-b1e293e279e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006939d-ae30-4558-97c1-1b2c3f8926c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148a55ba-378d-45fe-ae4a-98fef25e4181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7431baa6-f6c3-48ce-8118-8efb3369d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2516c811-08db-41af-8a6d-cbd8b6a4e396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f777d14-46cd-4e41-9d75-12642ccff11d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c2e400-fc43-4d14-b0ea-ce3ca313818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc29a0b-44ce-4c26-858f-94034593b27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b54c583-f1ce-410e-a250-81350c18ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60aacb38-6055-493d-8ab7-dbf59c3686bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b8d2b9-3366-4d30-812a-081e37bb0264",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36bcbc9-9a7e-40a7-8f22-586126172723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9aa0354-7a3f-42b7-baed-ff8ea510f707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a161dd-9108-4bfc-9786-d6e620f44a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23add6a-3465-4156-9f08-048943ae6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc89d4-c580-4f96-aaab-1dd455be7e51",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e47275-8cb4-468e-bc59-690ec4dab845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7613ccf-f042-458f-a1ab-977c5bb7ce80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69199cd-f20f-4a7c-95e0-324a4de5782e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d4308c-5059-4ade-a57d-929a861987a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8994152-9d14-4231-9b99-cfc0328d9ed2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3768578-4bc9-4b55-a1fe-005696bfc286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a416171-28fe-4366-90e8-3b0b077db28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb35325-cf49-4d6d-8944-48353b7589fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50e6753a-d8d7-4b89-9cfb-64eed31aa76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c67f35-8022-46e1-9610-b67130a8c4b2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77e1c9c-6f48-40dc-b55c-c247fa82b496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f1cbb4-e5c0-4dcd-8a11-3772fa8be4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82baf4f3-6db2-49d4-a069-44fee17b1846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52451aad-c01a-46f9-98ae-8f126b7d98fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26160370-6192-41da-bcdb-760326cfb486",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a42c2a-9170-4780-af34-52bfa4744bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53295bb7-6ed0-4dc8-99b2-f7d28bef4a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4eb0da-1dc4-427a-bf62-21c80fb27501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd8d735-aefc-4576-b299-c40605e9e83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ba1972-0413-47af-9f49-a84e0bd865ef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e15d627-9efb-4b36-8d30-59afc2307eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac179ec0-6dcd-4858-a2c7-8e8271e434d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00133960-19ad-4fc0-b222-2a437aa67bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e15f617f-0174-4095-98d8-cd0878a74c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a943deac-2c21-4f14-8620-ae775cc5bbb5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf446d7c-00d1-4e51-9889-454f6ce852ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43cb3c2-2455-414e-8075-55cdd2dfd09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48481235-1cd7-4649-9174-d0e54bed3cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "869af7e6-8aed-4d09-be74-e613a8e01eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b1d00-f2a8-4529-8ef2-7fae9e98bc47",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890927d6-38ae-405c-a876-5ccd46a2603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cfdce8-f8fc-4c1b-90f5-e938f6ae9caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672707a6-82b0-4752-bd35-a01700f0c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a595d512-e4ae-4c23-bd13-2d46dc202f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5926e015-3588-4636-948c-fa78bd27fbb9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b355c-90a8-4bb3-b686-5e59606a025e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94532b64-d4e5-4819-8e47-11f5e5816bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d80f5-c5b2-41f8-8004-b51313babfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0849c5-d390-4393-8c06-b9a88d7b7ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12703cf2-4e5e-42c1-b6bd-ecc0b059a9c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5263db81-8172-446f-9197-5ddbf01484dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8d7c33-e717-4c63-bfca-2512dac5deec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca46e69-9560-4711-b164-70c58a0cfbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d215d706-9059-4695-87b0-66f52f4e20f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bd9c30-e6ce-445d-87bf-d3221821f209",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e164ba2-3ec2-4d48-87fc-eadddaa066e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a61dbd-c0fb-40a5-9c0b-aafbd9f7ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43af2c3-e951-45c9-bd70-93f7e7f1d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1158ec04-6079-4bf9-991f-0ef5a41e13b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08071ec-6ebd-4594-97d9-0bfabfb00878",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e86d77f-a0c5-43bb-908f-c63b7559dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8ab7f6-58e7-4382-88b5-7cf6adc5be45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9da89b-c598-4c86-8412-9664e9bee7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7976c149-3c50-45ba-8520-f218bebb5722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8b8085-06c1-4d41-a12b-ed4d837d4d15",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dd3fa6-933f-4273-9d37-79dd01adcef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961ea0a9-4d33-4a3f-a8ab-e970bec143e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee0f3d-d489-48b8-bd2f-daf119fb2e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5bdde8-42cd-4751-a6ee-adc32f7b68bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd694d-ba4b-45da-a49c-ebf3b91b18ac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fada1b5-41d5-45bd-925b-5d9f23bbd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e2f34a-321e-4357-9a06-89533c6e241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad2b793-6043-4909-8740-34b962b97aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6088e432-06fc-41ca-9221-a95b62dce658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5bbdc9-85a7-44ec-9809-50cef1f77b41",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd893a5b-b29e-4c68-8c88-9fb9b55d483c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932f27c9-173c-4488-a8c0-61eb043158f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0de9936-ee42-4148-bafb-da9afa03f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a19183-7700-4f89-9bcb-f0ed16004582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e097a-0206-46de-a0a2-b323696ee6e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa87784a-68d2-4026-a68e-18d20f80aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca380b08-606c-43be-80f3-dc43987a7ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dafec46-e176-4791-8dad-ceecabb46eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89349279-9ef4-4deb-8a29-13899a76a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c331766-1f1b-41b4-9f30-5abf67184498",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336185a5-a500-4b47-aa81-290c6c1a46bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8acefd3-732c-4c65-a892-7b8b385af82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cc231f-ed4c-4d42-8b50-c2ccc50e478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98136834-2a4e-4919-973f-73f816d4eef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14aec7-fc5f-4906-939a-1d219cd6e649",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a48562c-2abf-4e12-9098-29c2176dfaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e5474e-5c82-4240-b970-7bd26bb751d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e56042-2eea-4c82-9185-e2dd9302a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8edaa424-1f09-43e5-aa6d-9d32b706d32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046a49e0-6f17-481a-afd9-33e9fca7f1fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6026821e-87bc-4520-bcf0-a487dec8b6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa62fc07-301a-4d56-87f9-7f80c75bd6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d597f6-b4c6-468e-8598-b7bf1e0a3dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "465b445b-4872-4f1c-8522-7b465a878530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0767107-fff9-40b2-8d8f-6d96957cd6e2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efe0dd3-2a9b-4296-910b-cdcb7c560d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e51424-e154-45de-a6b4-2bcf51089160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e7e59d-0429-4a3e-af5c-1631fbd2dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f09fe4-4ca5-4e94-8cf2-e1b701dae275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11869d1-3cb2-45b5-90f0-e2dc4d5e72ff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5734cdb-13c0-4fc8-8b64-dca5469a7521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd94d17-b51c-4833-a29a-0f5014ac42b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baff9bce-481b-40b8-acf9-1c1891e45105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "385a0b94-14ef-4073-9e95-025d6fce570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c4e78c-29f2-48a5-a24e-ea4993e474be",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c1d606-1d7e-43c7-8b63-2258de75296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85cc1fc-652d-4e4a-8c83-fc5e6d246577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345286f8-eb11-414d-b143-6ea2cabdbf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd60dd49-e319-47de-b5ef-0f2db26ec34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b669537-1670-4d64-bca8-42d59ec22b02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37886407-2980-4806-9efe-8afa6b8d5f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d52943-4fc8-4d54-928b-e016682d370d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bd8bc8-3f9a-433a-abbf-d5b70a75b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6accea7b-8e17-4941-aa03-bab08873130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc8185e-2406-4a46-8809-3d934abd9836",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf54af-216b-44a9-9a09-1f2851b7bf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1aeb0b-9d9e-4aa1-b0c3-ea77dc094449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a8631a-2b78-441d-b3a8-5d9f6e766d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33079ca1-8c51-40d9-a648-4f92fbb4e8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e84dd56-2ddb-4d17-bfb6-6753d7703c08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ed2520-049e-4569-9817-a9fbbe82d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793801ca-bc5b-4b88-835e-a76545597228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e92a98-7805-4ba6-b7b9-c49fdef07e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56737c2b-1fa7-433b-a9fb-fd76d9d3d7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629a9830-8a52-441e-ad83-b2bf3ee6afdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70043555-a309-48f7-9614-c4d6fb203d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad80bdd-75d0-40f5-b714-6949da57d44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e88a2-8a40-4c4c-ae58-45cfcba2925c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7a4c7a-373d-450b-970f-03af81f69d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b42095f-a8f6-4af3-b932-3496d79bdef4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c27c8-f160-493d-b880-c6a94416db93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d983bd09-141f-4e54-a74b-367a757022dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a044529a-1650-4f28-bc83-8291ac0304a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd009d50-333a-4356-915f-6d92770355b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df38d3db-15ed-438f-8934-cd0693661d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d3b3a0-f6cb-4f15-b160-38806bd3c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d44a91b-1fe0-4a48-86ea-b2978f743d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a85dee-8de9-4ffd-8dff-e1942d439e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49b95c0-328c-4e98-bf9a-fd949c985563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c69018-715b-4860-a712-06b14deb19bc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c162f156-0148-4a00-bf4a-4d3827404ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0248635-daca-425d-8b96-828f0f87de43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3863bd37-c042-40de-9401-80a287da7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece4d401-31b1-49c1-aafa-485da896cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ec3abd-e4d9-4df4-8c1e-1be3d68da04e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266d0510-87ac-457f-9172-0000873543b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05039b54-3b97-40ec-9b28-c658c527be57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc1c82a-951b-49ac-a265-151ff3fb98e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f9b963-fa0b-45c8-ac28-5941ffd6f3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c3d5ca-4d97-4edd-b003-f510145a3a17",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d5894a-4c25-45d5-9c18-0ce10202f1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e256a6-8051-455c-986a-2980d0d31092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eb0b8c-bf77-482d-ae36-187bcfaeb54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "332b220e-85bb-4821-8a57-cf0458a3cc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023453d5-2dbd-434b-bc06-eb07a10681c0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c472470-6c70-43d2-9868-4ef127eb9491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99a04af-6c30-41cb-bd49-ede568d11566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c72913b-e2f1-421e-80c6-75a0a68a13cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "651baa92-1c9b-4985-9d9f-7ef19879ade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06019e4-b769-468e-9617-e27007dca41b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbf904f-e46f-44d0-ba17-2f150d4c7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849c1730-1f93-44fc-9f8c-83d92201141b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dc2d5b-1ea0-4469-ad85-f8ca66750c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67e880b-1856-4f59-8665-4e2353af5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a801198a-aed4-4248-80bc-f276edbb9c08",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2990fc71-af59-41e6-b543-311106cf5faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44514b5c-d5c8-4e19-a4e9-3a38335566f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8140a37b-10b1-4c7e-ab17-35e7a316c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dceb2e8-b642-4895-a3a4-dfef5fcc0cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69d08f2-d188-46d9-851b-c3373525a2bc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b3bd6d-a4d4-4c00-ae2f-27c93737cf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2f91a9-f76e-44a7-8b2a-76c6a85919cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5387a866-f26d-4443-b29d-893be4aa0651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9086b8-305a-4751-8ccc-c69f31d9cc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76903a5-aa92-4cfd-b515-6fee98cdf913",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2950fb64-aa11-4117-ad0d-6e1ea1bef945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7ab17a-83d1-4809-af3f-93ae490a588a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110d0246-6c7d-4668-9852-1b88654cb3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5f975d-b629-4917-8f03-a579cdca3e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846706b6-69e5-4e92-b40a-69e7ed0ddac1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b2f7ca-dc3f-4891-a0c8-39274b119576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd0c2f4-be09-47f0-a9e3-ef299d336eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adc29a8-645e-4548-b8ef-f8160382e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9ad96c-c8c3-4552-87f8-306096669db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f004ff-e9d6-4cc3-ac86-0a04936cc227",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a33a7-44d3-46c8-a547-447278ad56ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ceca2a-5b83-4d83-9082-8cc4c2c88ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe3e07a-d37c-463f-bb72-f730fd3f0a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9956ca7-5bd2-46e6-a3ea-7882a60aed9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccb2786-61fb-47de-ab77-28c854fb957d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24e5a39-897c-4f84-bb2a-8197c267ab50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f433c8-bd0f-489a-98e5-7593dfdd06af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3914be9d-f3bf-48d4-9f08-01d95ee11e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fa7752-b558-459c-bfbf-820fd0300a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8484a6-1259-4593-914b-5915698af6b2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b359b48-ea08-47a8-95b4-787262cf2393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766fcd20-a908-44c3-9afa-71ca6f822a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27849e3e-c906-4029-a70d-75e357640631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f16366f8-8a00-49a3-ab38-ea5d31a5741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e138b1f-939a-488f-9627-2abc4b38d354",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993f6b04-240c-4261-8724-bc9f2c7e869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068ff392-f8ab-419e-a2f7-c53a4d08f66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c76e40-6de5-448e-8571-734e1c9e592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c040e1-83ea-44d1-8d90-06a7f9495863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd07e6-16c4-44d9-9033-13742ac77185",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2e6342-78d7-4080-9a66-458c40ccc009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d201e3d-ca75-4630-aaf9-3ae8ea35af3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b32389-30e9-4f5e-a974-b2d03f8fedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b2402b-04cc-46c7-ae27-def594eff68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eb422b-4cef-4a9d-84f7-49b205ece358",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ddcd10-f345-4d29-9537-b91176647489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cae220a-fa9c-4bb9-94b0-6811600f10ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b649360-b950-4a63-b5be-fecb91aca373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "485a4083-7682-49ce-9c26-4dd341183b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e67dbb-a2a0-4442-8e0d-94881b3772da",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd62eeb6-bb8e-470f-8adc-8b735881227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3151c82f-aedb-43ec-8497-afa2b4b0ef84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a5f0ae-fdda-40d4-93b0-74f9e4fe48b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3a0dd9-f0bd-4d2c-818c-29cc9d465fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375c43b8-34cd-4966-bd19-788882d3f389",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15bbab6-babb-47cb-ac9a-afc65f61f846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9263a9-392f-47b6-815f-9695f43dbe4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36398d-147c-44d7-a731-e6ea34a8041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53ce78a-2ba9-4f1f-b2cb-02f8aac4f2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179d0279-2692-486d-990d-80c42a98735b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c073af32-d026-4dab-86ad-d59100d3e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e15b0d-c3fb-4925-978a-f91380909d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f724e5f-e869-473b-982e-5403cc3c21f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3911d2b4-3214-48e1-9b14-d7322b4327b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c850bcd-e1cf-4555-8751-ac92b6b05d3c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7d0e8-951a-49e1-8f80-4925ad898bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f3fddf-f53e-4642-ba32-d5e60e0294e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017e5f73-902b-4184-9959-975b6fc89364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad47057e-9b6f-409b-9814-a8b32a898640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f76f11a-83ec-4d68-96d4-ec0596872026",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cc4a7a-3dcb-4e1b-a97f-b12a2dee94f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3627932d-43ec-46f0-a3d7-25d8f3148794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68932b44-0e19-49c7-b1fb-338523afc3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e85ec24-1937-4abd-95c2-7defe1e3412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b12b82a-dba3-480f-bca9-5dca63d752f8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb1e86-c8cf-435e-b7df-c11d756498b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39455e8-0a15-4b4f-a622-8cbc1fd38adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884f5437-8d28-49d7-9d38-d7e055aba73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f56c64f9-7511-4873-8d23-4417988ba912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f322af-d4ab-42a6-8b2e-94156898b4f7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c078efdf-7fbf-410c-9dc6-2df9e20a58a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb19689-f672-4201-82d9-90b2e9a51eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32965a00-f46a-4278-9655-4a66b206be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d88e0a91-8f7c-45b1-8689-de8d052b54cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068d5e6d-c65b-4bef-9986-c61a325addb2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef7d74-f420-4248-a11f-3040dbcd71e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3016ca4a-a1e3-49e2-9307-bcbb34304264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c5708f-ecb8-4b1e-afac-73b2c4198c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e092774-2b89-447e-b77d-cb43ceca1bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7892e3ad-e08a-44df-81bb-b6dc2987c914",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c714f1-bfd5-487e-b0c8-7b731151decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbfe2ec-b137-4bd4-a6cc-55e3c454384e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257ff6e9-b210-4eea-8208-773ef7071235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac4572c-3bcf-4e5a-8b30-0c0db1970e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2c1a19-cc20-412a-a07c-73b4225ffcdf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0ca658-5da1-4c6a-945f-915be9163753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4081f53-8007-4b4b-8123-a92cad3946f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef74136-6507-42d6-8497-d18b10f87037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc361f0-239d-47c0-93ad-3eba305d417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f61ab5-d85c-4b7d-bb3c-d9e4bbf5a23d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ea510-633c-4a9b-848f-058267e657db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0f00e4-60a1-4dcf-b5f2-081ec3806370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a98ce3-313e-4fb4-abe0-7a38cff0c56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3eb98c-bae7-4994-a231-6b0ddd0b4961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345adee1-ef7e-4066-bc11-2e2ebdbd561a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e60676c-c01d-4a6b-b196-52ae0876ed7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacb5c88-b6cd-4a7d-bf31-368f4ce36b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb380949-4ea3-45ee-8259-41c02a3f1048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ce3d5d-04c7-4f03-a0e7-e8b98bea197c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b6772-66d9-4b84-b766-f208f08500f3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56ef8fe-87c1-4a93-a239-f834f42c6382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf71334-b9a4-44d3-8d56-182ad7534b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1db038-b49d-4dc4-91f9-8693ca56b055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c01976-6609-4bc1-8cdb-4ea1d34ef45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729fcb2f-4062-4c52-96e3-f445ab6031d3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7419c2f-0f6f-40d4-9b22-79df2907b020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20e8e7d-baba-4b99-b0b4-6e8700a82546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bd39e-93a1-4679-815c-f73f19526ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91738ef6-d527-49f1-b622-7a45ca878f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3111d75-5d4d-4aee-956a-12970099d5e0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4580f1f3-c7b3-4d64-aec7-ae806f38ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559032ac-fb8d-4b5b-98bd-a793a80cc0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0469720c-2a1f-4bd9-9602-ae0c61283860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bc4142-8099-43b1-92f0-617deae79bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b7bbae-768e-46cf-bab0-49b1af781ef2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf9e711-deea-4738-ab92-382e11537195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f831067b-b546-4542-9269-89de44be36af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb5f739-c064-4cb2-a83d-8ee2de81ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a72eb5-9fb5-486a-a329-e396385391cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7db79020-b5e0-43a0-820f-c7fcde48d9ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cf92810-ed46-432f-8e7c-3e5b1b731ac5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee66ff76-0d3a-4bfc-bc75-c8378776076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fa2de2b-aa86-44e9-a4a1-787a41d693b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c9d584-a198-4c25-a81f-b00740d6ced8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c82a7a74-aa95-484c-b2b9-ec9185b81e6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2050a204-0c12-40e8-ba76-153a6b8accd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee92a552-8dbb-4e52-a821-89671dab25e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2533362e-e69f-41e2-9bb1-677431b3d87a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bca10a1-bf84-424b-9147-363fd5b3d393"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2832b6e9-783d-4ec8-b822-864e97a56650",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7a1782c-b112-41ba-949c-e11d7acc2424"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7844337-1de0-4213-8921-644e4f22574c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77a1d343-a64f-4dfa-9774-0f071d6e42c8"
                }
              }
            ]
          },
          {
            "id": "f8e4d126-6608-4df0-a25f-1115f9a5a168",
            "name": "Positive Testing",
            "item": [
              {
                "id": "832c2c8d-3040-4f4a-863e-91ed9d552816",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b4b404b-dad8-46c7-b3d3-1daab256dce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4239ccb-d546-45a4-8dba-18e0a4c7fff6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52c793aa-6255-422a-ad8a-1fd635bf3474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12c942bb-a57c-40d8-a3aa-6da96c6e9d80"
                    }
                  }
                ]
              },
              {
                "id": "464ff9e9-5879-4c54-b078-290ca1cc6565",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d192259-0139-4362-ac30-78149e68542f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52f0044e-e494-43f7-b7e1-02dfada42600"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff109cd-1715-48ea-8afa-42d8dc78705d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36b6b569-c11b-459f-b4bf-f7aaad35a151"
                    }
                  }
                ]
              },
              {
                "id": "bbb53b7e-1a59-48af-abc4-35262e394b4c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc4723cc-d94d-4e99-aaba-c628a5cc14b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f91a9d0-e648-48cf-8857-0e30c0a23740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39826160-f7e8-4877-95b2-73c5140098ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71d437a2-5f2b-4f37-8050-a820ddd3afd5"
                    }
                  }
                ]
              },
              {
                "id": "7e54e041-6315-4f63-87a3-fc5aeefc9e31",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c497dd4-7330-49f3-afec-a9da6475a91f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bce5712-a872-45d9-a071-72c7047ce10a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a45dd8e-087e-4fd3-a957-7e4facd539ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c349be60-20de-429f-a97e-a424b0ee5edf"
                    }
                  }
                ]
              },
              {
                "id": "ff1e424e-c14a-4430-acb9-84b32afdca0b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd660a1-656c-48aa-b691-9643d229c528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dea4573c-ee56-4f89-b6c4-65c8c07bac25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ff3cd9-f474-42fb-b8e7-f31c01024fe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a0753de0-c4bc-43ff-a7a2-dec3cc87e315"
                    }
                  }
                ]
              },
              {
                "id": "758e8683-0267-4652-9447-8f3c9dfaa221",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3d68b6-7d34-4a0c-b92d-6b0009c769ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f308e7d7-4658-4c4f-a15c-9eb24ba237d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d73b7b-5fdf-447e-b0e8-5056c4bfeae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b1c63e9-f7fc-4c34-9f63-41038d972e8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c7b6408-9c86-4d73-8cef-71f8e508532d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1bec9d8-636d-4292-9955-a5ba3ef4802a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "139979c0-f568-4614-b5fa-6bc5fdbfaf09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f81a163-2e20-45d3-82bb-6b4e64ab361b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0a44a98-ce30-441c-affe-4c50c535b64b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f7c31f0a-3dc9-483c-9f0f-ed686730007b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3aadcbd-413d-41c7-996b-f5cf1c6dccfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5f2e242-90f2-4116-a30f-b1f21e49cbce"
            }
          }
        ]
      },
      {
        "id": "71b21897-42b4-46c2-a174-0e337c7f5782",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "30f282c4-3d27-4fc0-b3a7-8fd81ff44101",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08aa5f36-cabd-42bf-b65c-fe8921f3aa16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52c8660d-7f26-4944-ac1f-938b0cf3ed73",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b08c57-81f5-4058-a377-652a12b702d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcec9b1-a7c3-4824-a975-cd06e7a1d804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb768b52-f693-4bea-b263-ac0c9a3c63b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ef67f7-c50b-4ad9-881b-d2e6c63e30db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57268f26-c169-4023-a314-b7ab77a298b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b7ddd-22eb-4a8b-9354-71d5e4f25e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531ee2de-2d4d-4d36-a497-f13340da1bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b87549-ffab-4587-a030-172983d35eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6224699f-ab1d-4b45-b3d7-b94b530a88cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d896da-f9f8-4f35-af91-010376eaec9e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe40ef-ebe6-4f6a-8e84-79f6d742f85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31067a23-285f-4d88-a01f-fb6134a8173f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d3f0eb-6b69-4e00-9b5b-b06c21329d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eea8e9e-6060-4cd7-ac48-581fb1694ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff92009f-532a-4ec2-9479-5ee2d73697d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d762a05-0bed-48e8-8674-9f5155d5cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f226e56-13e3-4994-aa4a-400f18970b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371dd8c2-402d-42af-bb6c-854b449c928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceadb131-d1b4-4bfc-b23a-626452a20178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70229532-4ace-4ac2-bfb9-32aa46e2ab2d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55823538-2918-46b8-87c2-25311eaae60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00ad452-6802-444b-bb96-2c95ef57779b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b71e5b6-392d-48e6-b5c8-61ad60de67ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72699c68-ac5f-4057-aae7-364ddc2a78e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b4713f-79fb-4c47-9c3e-a6bcaa836694",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba9ded7-abcd-4332-849f-47269b141d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a87c2d6-4026-4d34-96a2-6c6cb77183a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4acf25e-24dd-4b2b-8dc1-57e77f584b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc13eb80-fee3-45c9-8e5a-7d703826fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883a6a85-c5eb-4fcd-acfe-345d590dce0d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a721891-8565-4e39-85de-197c4f5ab98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a30b1-85cf-439c-9e30-82601fdf4d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daee86de-bc00-4955-a557-7c18900ea199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9188b677-0b66-44e3-93c9-fa34dda56f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e850fc19-27cb-4ae5-8e4e-dc41582257a8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5371e529-e66a-4569-839e-2df7eea899cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be1659f-f321-44b8-9fde-4b78e8d6b75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656905a6-ab34-47b3-a32c-507cf25a5272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "991a2f8a-a742-41e9-ba5d-68834864167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31b18d5-d39e-46c7-9106-221dc33bdad0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c63df2-9a11-4074-8bd2-9465be678b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e34c6f-645a-4674-9cfd-732596203ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31783dbb-c35e-4fac-91c2-2558d287d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ece3d44-8988-4069-acc7-0f6c73d11dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f470c82c-0b43-46e4-a682-04c438a95777",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87905311-9669-4c0d-b4aa-977cb133fd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0746be2e-6517-47ef-81d8-72a7eef95947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d884b-0dec-408c-8521-9ae065336c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8342d084-fe6a-4121-ae35-b7d0d96fa06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de45b14e-d89d-4ea2-93a1-603e5d4d8b05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faede46-cbe1-477d-869b-9d990e0493ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3810c02a-bcc4-488a-a820-0bf30874adac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deb2411-4745-4324-9db3-795ee40c54fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5588bec2-716e-4526-b607-24ec97929a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9726760f-f508-4217-b1cf-0b99d7628501",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf74a7ca-6adc-4a79-8a97-19031e9093ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3d0905-3fe8-479a-b5df-00e730c9a4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebfcde2-a102-4854-9673-e00e8e979ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9217ee2f-6eae-461b-8633-d8533d5af8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7fdf3c-771e-43c3-bd6b-981418adffa3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388093b0-348a-44b9-9bd0-0566c1782d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87215e9-13c2-42b8-8ef3-a404ab322339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470d072a-1a2e-4878-89a9-5b508636e2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1340af-4e15-4ede-83ed-833f5d0cf6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b5b12c-b3a7-4503-b933-da7ddcb30e66",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be89a9-6b72-456c-92ee-c262d1f6c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25387d3-cf05-46ca-b834-d0d4c148004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b27068c-5197-40cc-ba72-7644c83f23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b9632f-bd23-443f-90f0-4867532c8925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c373b871-4b5a-4796-b27b-d885bcaa4953",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f83eb-7921-40c4-8455-54f4858fb089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fd2d0b-c2d7-4399-a1a8-11e4467f1fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4fb3a0-f820-4911-86cc-8818c4bc1ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "03644d38-02c1-4577-ba30-867ab9a1481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95602e32-04a7-4c00-b417-230d3a6538ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17993f0d-4c34-475e-8480-1674ca98afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fad6f0-e455-4a5f-95f5-d2603ca8226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3532f189-0bb4-4e40-a975-95ecb74666f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c93a9c-703f-4190-a7e4-9ee017e97ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a81f4af-de53-4da4-9441-71f53ca40b3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f50fb9-15c7-4bc4-91a8-1c61d0fbc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425d67aa-6fa7-4dce-bf2c-c326c6e1b963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee3ed30-b300-45e7-88e2-e1af0911a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ac3d98-b0c5-41f9-96ef-e4c645e05a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a449d373-daaa-48e2-b069-e6e9b669b6a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7519a2b-39d7-4a57-a373-fe18dc51ec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6febe3a-7e66-4dd0-9e06-cada2c5c766e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c947b01-b56c-445f-80f2-758efbfc2e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fe568b-89c6-478d-b54f-3786bb86aeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ef1a4-679b-401b-8131-dfc4333f2786",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a82cce-705a-42fc-927f-3667354e635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ceb417-681e-46b0-b26f-60a3ad5c0cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a47931-a96a-4495-af26-f37518289ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23640989-040b-4755-833e-227125739547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d2bd9-989d-4a87-8b40-f06584e7b967",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f637ae-44a5-4f8d-9f64-854358c34f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af9a331-e86f-4c3c-ada3-ee04029dc240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff652b8-ef19-49af-a470-95050a36960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a568f0-3d0b-4044-a3af-4c3d61e83ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d35d1b-0e98-46b7-b4f2-756143f7a578",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40226328-e4cd-48d2-b4be-30efbfb01c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d28cb71-ec5c-46ce-a084-eefb79f0d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec97b52-d5ae-4a0d-b342-b3d16268983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1687b490-b253-4e19-a7fb-8ab52a6966c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a256371b-1ecd-430e-adee-53cf16d6d86e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915a3c34-145c-42d4-8c80-65710a05a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffa4b21-f808-46cd-bbd4-a809a5109365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dc980c-3068-44bd-8a7f-ea9ae300d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5265eae-34d2-44e1-926e-4e42cb4eca79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b241afa-1490-44a2-af3e-8d02725c393b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e5b205-bc85-4aac-82b4-185f9573c878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0bfe13-6aaa-409a-ad7a-eece9d5031f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc402df-3c26-4f10-9d9d-ecad7eb7efbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d1d9af-712f-470b-8a42-dd4c334e8be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6343ba1a-f03e-45b1-bf76-f58b0f95079d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927e1242-ab2d-42d4-b1d2-f0f472b73202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ce1d17-f6ed-47b9-af77-479950774b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a812f13-c52b-4441-8f30-b952aa30f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d090b1f-c6dc-4e7f-b030-f910ff6876b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbe62a-a018-4a14-86f5-ddb36caedaca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52734a0e-6b74-4ce4-8000-77fe6ba076f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31fe0ad-d255-447c-b571-25275ff719a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c42f13-1f03-4fea-9e90-4dde4f464088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a89751-b048-4216-9500-ad259dd2ae5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4efdced-ef83-44dd-8512-52f7c335167e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8d48cc-0859-4b44-8d44-2059c9ec81fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebb2fd6-3b05-43bc-8691-7e70a68c5bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df43f0fa-779c-4cb2-b734-b17303a07816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee73693-4c9c-4cc0-a2a4-0f245c3b950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260abccc-7846-4c5f-9c11-47ab8783b644",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63656888-c1b0-48ab-a1ad-d68df16e5eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ad4ba4-a0ac-4f9e-a1a9-9e8192a52cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e58677-8fb6-44fc-9828-f601850c14b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "705b7c39-7328-4174-9916-f1295d048f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c24f12-848f-46fa-a344-390c1ba78069",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21744a03-4e06-4717-b4de-ac55aff4ef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f0a0b7-b6dc-46b6-84d9-9bc8102880f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c22fbac-3d4d-4b6b-ab68-4905d95e38e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a748f3-3e33-421f-9999-744f76461000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb61dc09-d47e-4a39-bcaf-a1d2d986d0f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa450095-796f-44f0-9cae-4935f9d340e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268d34bc-e2b7-4d52-a8d7-b548cef429ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4aaf08-67c1-42e8-a438-fbd6d98f6ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6319546f-76c8-40cc-b3b9-37179d5b03a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3d1bc5-5df8-4cd3-91d4-63376a11beba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9571653-637b-4765-a049-644d661da382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4615d63-28a0-476c-b3ee-5a64014f1a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13129e0-df97-48c3-96e6-a1eaa38824b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16cc85d4-0017-4f6b-a1e6-239310dde1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99c17a3-b7b3-4f0b-8e1a-776d1b69a1b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6acfa-f694-481b-8d20-fb7a7eb73ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0596c27f-88b2-4ce5-b438-75e8ef451b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5977bb6-174e-4141-ae4a-63c6e8e1a0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c29e9f2-f2a1-418e-827c-abf21e14cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563ebb3c-2d78-40b2-bc64-133f7e857c35",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f569e4-145e-40e6-99e6-4ece76cbdfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e8c1ce-dbc9-4e56-853f-c84106d5df44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe4002f-c9c5-4a0a-8eea-261fb952b86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acf41de-e2e6-4d5b-b211-f04fc24cf90f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1aa6f853-63c6-4f0f-8dc9-679fe68c0c5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6eb42909-05d9-433a-ab53-dfff58b656ed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5c3948-87d0-4f69-a75b-49a8334e0873",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "20c34d4a-d3a1-4e04-a043-49cbff5de23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de51a89-8206-4520-837f-e46ab14f5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ab99dbb-b1c1-497d-add9-76d98fef1b17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e50e41-30cf-4e8c-a0fe-d4d1c69a8599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "915e1207-f394-4bff-afd6-ce1309d4376a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68fc6f17-fed9-4703-bca8-5a70faf934fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4da169d8-9c43-4bff-8503-4af30c3f30ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f264e1df-268c-4a5a-87fd-c3cc8c104919",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c230ab58-0998-4a87-92c2-6882084edb3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2c73754-8ce0-4ef2-9812-7050592bc492",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c4d3557-a755-44b7-b6ed-c7a49e2a6b11"
            }
          }
        ]
      },
      {
        "id": "cd63f7ce-e1cf-4baf-ab78-999fb42a8ebb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7b53a38d-cf76-46a7-9853-babca0ba2558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94f18129-719f-4617-b157-2824e87a6e0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "afc442f2-ceac-4ad5-bd0c-da2dc8d68b69",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e6dc4a-73d5-4318-8b13-89cacd6bcffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24592265-ec3f-4731-8c01-2d7765e2c76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d2109c-443a-4bec-9f42-5510e471f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14050c5b-f4ed-494a-a830-a3b537debbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1f296f-36f6-4ae5-98f2-d3155edda7a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e11709-a344-4b53-bff8-7de45c0e97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8933fd4-e08c-411b-9c14-e01050223b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80c6602-51be-4464-9caa-c58bcc5b0926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a38f76-6782-454a-a83d-16f33cfc29e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc838ea2-c98a-4367-99eb-fb25c06a36e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fed4a9-930c-44a2-b60c-d8976f017590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d7bf5f-1058-4bb0-987f-b11d6f404409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4770f4-b04e-462d-afef-dfcc5fc48907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4134b5de-9f33-4170-b052-33405c0b14ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9244cd0-8591-48e2-a834-06de5944e299",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b669c43-5dd7-495b-816f-d36a66769f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19140704-136a-45d8-a79f-8cc41fd5305a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8c2f7-db81-4ead-954a-87bc17a16bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea11c728-fb1f-4827-9f28-a70fcdc61c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57efd703-a593-4f8b-bba6-baf7e7150529",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ba2285-f1d9-44ec-ad50-603ce76b124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d9495d-1e50-48a0-802f-5537fc0b7a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533d5115-a116-4b5e-937f-5f3cf9a359b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b6944b-71bc-45f7-b0a9-481841389c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205c4874-7c1e-414b-aa2a-9e1a44286c14",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01541ce8-8c75-450c-8089-c9009419ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef9cf74-80eb-434a-be3b-b480d8f377c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cf0dde-a8a9-40d5-995e-a366dc4323e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a075e086-33ce-4731-b9f3-9087e32adb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea342b91-5fd0-42d4-ac36-de282eb607b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaedc65-43a3-4445-92b9-e5c59d56cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5635000f-9a4b-4e99-82e5-50238d04f9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629274ab-969f-4754-998e-f423dc8a35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6110f3-f60a-4aeb-8221-8a881e0991a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c59377-4428-4409-b567-56dd078942ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9e1f31-f176-46dd-8cdc-2521a95a8208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba2a82a-03d9-489d-a2a8-d3776a644399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccaf608-3102-4acc-a1d7-1868c8df68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3e5d9d-4062-4ac0-ad87-2dc27ebf9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddba5f6-ac1e-42f5-a618-3ec274345d9d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a39b142-4be8-4be0-b73d-1ba02ad094ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b027a3-e6da-4f68-82a2-340a6f739dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb63dfb0-49a2-4637-926d-c87ad601e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ade1ef-d93c-4b34-a60d-1582b2a7824e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad1c9bc-bd9d-4124-be4e-df0ee98b9e20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c142e8c-4790-44bd-b021-93ddb289265c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeda869-b9ef-434c-a087-410787e31b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d16fb01-f8d7-4fd5-a302-92c9eeda34f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "709afcb8-26f2-4b5e-abea-7764e6ef6edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5999a6f-0336-4220-b311-8ea365a00361",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b942a45-6eb0-48d9-9f44-d54a311c9970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00907505-bae5-465e-9f81-8be6867f94bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff01b27a-ea48-410c-b63c-a252b3dc02d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "362d9bc7-fb17-439b-9bef-d24dab490dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65365d01-119f-43f3-860f-89e6b10ef025",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e806a542-0b71-4e0c-9dcc-a6aabc15a8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee53262-218c-416b-a81f-c8e433f57248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33cb3f3-f881-4d37-ae6d-5e5682a60bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "292ab769-e5e4-45df-8dea-4af2c99bc203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0411bc4c-46b1-4342-8d1b-a9d2e06aaa1b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fae74b7-6bba-40d8-977b-30ca0082fa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca0cfb1-d5dd-4796-9148-21227fe367bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a593230e-1188-41a8-aeb6-bc5918c539c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d95d319-d04b-4de9-887b-7e77d931fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a6570-6dae-472e-a211-e0744b8fc542",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6358125-e765-4bf8-bf8d-c5288c6990b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c6cf80-955b-4bb1-887e-e20857ff6c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdc1720-9daf-44a8-ae41-2cdc6c7f3bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a81197-424e-41f7-91c2-3ce3840729b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0430c3f8-0eaa-42a0-a3fa-b88330a00c6c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4492c9-4607-46ae-8054-9146915264ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18a9560-d56c-4c32-9db4-a47327ef49d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a506cad-9739-4656-8e5a-06c57cfb6933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82fe0cc-5018-4f80-8050-6ffe0a25b5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0d8a35-b802-4853-bf9f-71677cbc42a5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef6630-f9fb-446e-a451-01d448c4a1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1d991e-dc7f-4977-8883-fa5c0a77369a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d6c182-5707-477f-9a59-71d56de5acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "65201ddb-7529-4421-822b-c87d421790e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada75118-544e-4716-8482-ee8b591297a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ccd5c-f2f6-4d03-aad9-029b660161ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93972081-cfa2-47a1-a72e-e7a70d600ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d265f5b-f80e-4f44-842d-b7b2acfb01b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "691bde27-5d7e-48e7-8e3a-4e66dfe39e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65462b4a-43b4-4766-a9b3-c7e1a179dbc3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5e3e34-069c-4016-b768-da0e6a3191cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01677cb7-46c3-4c78-8fc6-5cf45b72582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0a277e-6ec4-4b85-be03-9eb077a4eef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ab92df-900e-4574-bae6-8e80fe636926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4236407-59e0-48aa-9622-128e6224edec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebb304f-2191-4f58-9cec-38fd28cf03d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fbb2a0-7365-439f-b20c-187084c6ed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68fe52a-f9b9-4d3e-88c3-0722814fc26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e76a6fb-0521-4f40-b2c7-a989259e616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfecf2b-49e6-45fe-a6d1-0db6d471b132",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa00ea30-8228-4dd0-b4c7-79ea469fd399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f89071-8ad8-41d4-9293-d420446070cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4521b-1d91-4418-8789-22fe419ef7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a541fb90-2610-464a-82bb-30fc6bf03fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd4be9-006a-4ff4-a0a6-4627500c49ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c870f05d-3c8c-47a2-b396-0a0d62e774c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfeea9d-857d-4552-b994-a0b948d3b713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fb633b-d1f1-4367-98a1-0e7f64cca933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbdefdb-d4aa-409c-a1dd-939e9c897a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69d977e-8ade-4796-a0e8-78efcf251235",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba04c718-800e-4f83-87ea-a4f17f236d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0959b34-1fef-4085-9ea0-3fae435609b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5483fe-2ec5-4c19-a84b-0390427344e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d93d5e62-fad5-4c78-b53f-9d48a7249a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19acb79-4f51-471f-95d1-90b69888ed4e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a72ad41-a7e7-4e7b-aa42-0a30fb18f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78610012-2d8d-4221-9539-2918876fc97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4637579-e137-43db-b182-c116ec40fe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace59010-b2cb-4931-af68-e0ee54638266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d9712-81cb-46c7-b5af-8c155fc24c3c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5227d480-a5fe-4b0a-9891-6aeb06f0c3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdc2767-ab12-490f-b3a9-79e91da56e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc24acd-5a70-48cd-b749-c685fb3bd17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "088a0985-8b61-47da-9f34-ba587880fc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add78b3-f2b7-4e02-9a3e-f518d0c34b89",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbbf394-9247-4730-b574-e279f032b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a630bd-7fda-43d4-a7ff-53d019181c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440ada4c-ae2c-4259-b0cd-76e2cef7076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "204dc88a-d84b-4c80-9af9-c94095111dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83213fb-250a-4894-a336-cb9df43f808f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3b3be1-9f89-450a-8038-3f0c7ff60113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f0ee97-a7b3-4f98-b574-0df45e15d290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4134735-4a82-47cb-8573-344e3c1203a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adcc95b-81a0-4149-858d-e9ddad884a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4410168d-a295-4bd4-8fa6-388df4303d7a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17946ec3-05d7-4589-91f0-c9733f60e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86931f68-b433-4723-b493-a583953da4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1134421-8e23-41e9-b136-195c97f9eb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d254d63-1481-4bd1-980d-62d1cdba0b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1357e-ab03-4130-a9ab-bde127eae23f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a256aa-e665-4588-ae4a-dcb06a5176f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34acb625-d5e3-4e82-8a86-f81126463e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e108a3a-39d3-4146-b92c-d252e911c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "858c952e-0254-46cb-8862-78f38012e02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff749c-1722-49ba-b99c-8c41542c536c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2bed60-1ce2-4ab8-9272-935928f8ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a86972b-4375-444f-ace0-7779f6e7921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a24df6-81df-462b-9ccb-8f248b41fbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff25c8ac-cd60-4967-9598-c823f432c48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b941ca9e-1447-4867-9ae7-ee0694d2c29f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b0719f-cf65-4487-932d-d43a772844a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c65706-2248-43e6-b257-38dc477c5bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bde882-3273-495a-91c8-bc58f98a5912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7113be2d-5e07-4823-b2f0-044dab4a1f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c94559-bf56-47b4-aa70-30803c862bfa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d08f36-75a9-4d1e-9d7c-263ca8f30691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f137f1-f151-4137-a241-c4fe3ba2c2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1924d04-cc48-4f21-8cc4-b0236da8279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e8404a-5a9d-4267-a321-82a2b65826c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699509ae-9b9b-4d60-8e70-4714ce6cf2e6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225c27d8-262a-4575-add1-eec5da1fc65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80854fd4-86e6-45a1-8eae-4c6b1895ee37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c44322e-d306-437d-9378-b1e419f4f6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffc5e31-936d-4398-9393-f936f7d40244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54ae32d-f911-44c5-96c0-e4821459ba4a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da362985-4bfe-4bcc-81c7-12b13067fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e805be90-f05a-4a58-9911-8ff0fb4958c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c694517-5b7e-439a-b691-e5869a3e8ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89602b9c-180f-476c-957c-aa52469883ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d5b43e-3884-4acc-802d-c21136d2fd92",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb4e6ab-df52-4fe7-94af-751d75bc9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c629499-bf50-4848-bac5-8eef57503af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffb3be8-a83a-45d5-ad2c-a4161f1c7ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b9ca54-7fc2-4461-97be-6eeb005da7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfd9256-8f45-464b-94df-e4590d14b55f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1937c2d7-59d4-4b4e-abc4-51ca37fcdf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c163b1a-aa10-483f-95fc-81bd4b94b677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8769e45-6b7a-4121-a894-2d658e2526d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1a6063-2614-4db2-ad72-3f6da17741db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6269075-7c14-46fe-9999-4ebe30d712be",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009a9dec-8c6f-4a35-870b-7d78a429cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08e915a-e0a3-444a-b814-348361d05a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0637bf-40eb-4ae0-9b25-ebcabdf7a336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b87b40-e10d-4aec-bb78-8464468663cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aea9fb-dc4a-4418-9109-347b75de78ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981043dd-09ed-4b63-816d-e6538ce510f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136cefc0-5e42-4e8f-924d-d61de6d5317a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327a098c-22b3-4fca-a500-46a1c12a102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f970d4c0-ac28-4cba-96ed-da85750736b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ba1d4c9-e05f-4f72-9d13-9877c765669c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b8c4e2-fee3-4731-8b71-6ba6a277775a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7bf3a6-a191-4992-802e-7b1a697d7b7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3fae3e41-ace0-445f-baec-55ca741b864c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6035559f-0293-4efd-8117-921e974880ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a1f579d-e141-4715-b55b-eea1c817e8ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d287a65-ac4e-45cd-9516-58c05880a618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65dfd843-1363-4111-9f4a-1ad528be8f3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1930436-729b-4685-9d6b-0079641cb4e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb09b999-d64a-4b79-9017-d629edcaaa63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39cba2e5-2bac-4f94-850f-38b3d994dd53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f143df3-6764-4827-8582-03eb0fe2e97c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d2e5147-d595-4831-ab13-a3b746af8071",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57b3be30-9c3b-4280-a50c-fdd97177d252"
            }
          }
        ]
      },
      {
        "id": "a82e955e-69c7-4ac8-8491-066f7261bd1d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cd9b9318-586f-48ef-a5a5-5148af463717",
            "name": "Negative Testing",
            "item": [
              {
                "id": "190bd11c-0a4b-4ce3-aa68-8432318f7e6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6431f6da-dc79-4611-8424-1dde1f765804",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7904faa7-1ef9-4ec9-9579-6ee276e4c594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874e4b7d-a595-4718-90b6-286a861a2fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24176d63-dfdc-4ef7-a66d-3426cc63bf6e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310a9f2-bdf2-4674-8a34-bf0a93924657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78aa5991-0ba1-4083-947b-f5a7a2b4c369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8442d2c9-1d8b-47e6-b427-c13f238562c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f000e66-a6a5-4de2-9887-b99e04d827bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d065b02-3385-481b-a8db-dde4dee4cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d9a518-da8e-4134-b406-b5bc8bc3233a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66461891-37f3-4dab-a2fb-e3fe693c47d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e31ae4d-df51-4032-b2bb-087bbceb6e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025e4d9d-45eb-40c7-906e-9c1568a563fe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0322fb-1c5a-4976-b454-b061365e13e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b24b8b3-7311-40a8-bda5-d89be8c0891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6966152-2bf7-4bb0-97c0-fbeac40a4d94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba04e36-5530-41e4-b64c-abfac2fc344c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d6f2a6-cfc7-49f3-92e7-79295517afed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ff108d-1811-4433-bbe0-bef6df284b37",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b107ad-e1b6-41c6-85a1-a0f0ae648dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b44ee9-cc22-4b63-9dfb-a6321c6cc84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d620aa-f3ec-47dd-ab99-a0f349b055a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c085343-ba77-4b0b-a27a-357c934fbf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a827eabb-e6b6-4b7c-b463-f26830600248",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae684a98-6f02-491f-a8b9-ac6a713e0423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7e2cb3-4821-48b6-b670-00070f0d4d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7b471-f0af-4a41-9cfd-6d27ebfc2485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a746d38-adcb-48ba-8cef-baed3c149d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4740e86a-985d-4dc8-8a56-2d059a3f6648",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f67816-d339-4ec5-8d51-d3418ef780b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5af4c1f-9188-47e8-b778-38d866c0523d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8dc426-6ea1-40ea-9a79-601f2a282bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef3c7f6-0ebb-428e-af5d-d0a739a48c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bce513-c194-4f7b-b92a-99313f9408f7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdec096-7e3b-4cb8-a049-6d355c4c37ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5461bce1-6677-4183-a332-bffeb46d5091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cc0a85-65d8-47cb-be52-57c150f966a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42875f7a-1351-4282-a696-042eaa3d0aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd7ca88-188e-4287-9f2d-f456ec1497a0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673791aa-fb7b-4bd7-866d-a697c266abb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d42c44-8006-4b58-a855-37b6b6556d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81106aee-5be5-40d3-9eff-a46745a59efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a1ae0a-3adf-48a0-ad1c-8e9d4277ca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e7b6ae-6739-4989-b0b4-ffe08967ac7b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c141a6-f406-483f-947e-24499c49abf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfbbbdb-77ed-4676-8b38-acc83482d7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944266e4-fc92-40cf-b163-da04e67431cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd57f52-ec7d-40e9-9ced-15f30835d925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b9f14-e050-4c83-b331-a3663a0d0b6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01beeca2-9398-4fba-929b-be8d82b593b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6ab344-627e-49ea-8550-92c388d5cc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e69642b-098a-4e32-a5d2-85a7611afbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db736b3-454d-4f5c-968f-9f8f3113a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a71e5-6b8a-4a99-b8d1-099373f7d6ae",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63317e01-90e7-4f22-863c-4b33433c2aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43aef6cf-4e9a-4ee1-87e7-98ee86eb5fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8719a279-3787-4421-90da-b8fc41e70c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d031574-73eb-4fa4-bd40-be27e60d6c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ff1e3b-b32b-4a8b-a49d-1954ecc5a7f5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5197a64-133c-474a-a010-c55940a01211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e38b125a-18f7-4db1-9d60-609efba3d211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc4494e-4907-43f2-87fa-610c3034e27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c28b06-5202-487b-8e01-df1d55e75ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5031555-3c5a-4379-8e9d-21be363a5e75",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dba49f-6317-42bb-bd4e-ae19fe8b5374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f574e999-6627-4d9a-a3e2-391a2f086a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d00a3d-7991-4b85-930c-160c832c924f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc301d20-e94e-44c6-972b-01260f4d196f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76988d13-17c1-4afd-8e2e-240e747c5995",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8899797b-7bef-404f-8605-7cfff0ae0c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17c2f86-f063-4c94-a122-32253e49951b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e51fb-70a1-41ac-87c0-6854e221f4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1e8357-fcfa-41f0-babf-856cccf62cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d7b6e8-d3e1-4dd7-89a2-5e9e7936bbb2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8646c50c-3e9f-4f0a-a7fe-081215fe521f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22f0f51-409e-4c68-b171-8690c2ea121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2607aa-a73b-413b-aa16-7318a9d2271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8c3c9e-b1d5-47a7-a3d3-0e8531e58729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ca13c3-ffff-4853-805a-1ed7dd2b8ecd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c89218e-a538-4c13-b7e9-473f0cb196a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfe2d33-aa4e-453a-abe2-0863e4db96ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da97da7c-a749-4f26-83fa-b588321f137c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddd1df0-c403-4ac8-a176-69154132a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0df3671-01a0-4a3d-831c-67b305989ba6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecc441b-798d-4adb-b9c6-69f6db10718f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce24b06-3582-4714-83e1-d11bdbdd964d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ceaf99-e81a-4a9a-8a1e-768a949e2058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7283a4-4d35-4adf-abd7-85d5f5521d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83603675-cd08-4bfb-9b8d-810614e5dc18",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7e8b34-d275-4d7e-96de-f6a729e54f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4722782-996f-4b23-8638-53e23b38a48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68109536-357f-4d8d-aa53-add4d1a586a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c2a2fd-bc9d-4c10-9587-945a76bea596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0178ba-a9c9-430f-9f8f-bb7276eea080",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5017a9fc-785f-4526-896a-a171f13bcf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d8b371-bdb6-4ac2-bfdc-157c38ebca96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0078ed6-fb58-4c34-a7c0-099b5ed2f411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda6e777-d6aa-45d7-99c5-deb6ed65d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5788c4ba-0dae-4d4a-8e13-0d232b69bad9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0991423-b8f1-48b3-9a2e-83454428329f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0e1f49-056c-40b1-bee9-0f69d91494b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb00508-1d15-4643-a10e-e8991f86e974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b847209-3c38-4e70-9129-b88bc52c294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45d8f08-a28f-44b9-80ec-50101f43e604",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2927ff7a-ce18-4255-9cf7-db6fdd1ae557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecdb822-1723-4eb8-8de1-265be0befd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9182d77-bcd9-4017-b1c4-89ee552373f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580aebd9-ed88-42d8-b2fe-3d48d78052eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d32f10e-73ec-4a36-8543-5943ebb7c298",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f0a571-85c8-4e50-adf9-b027cdc67450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79cc3ed-09d8-4d8d-ac09-5555d37697a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3421ed37-2978-461d-9ce6-ed04edcfdc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19ffa53-835c-4ddf-87a1-0cc9d7d2f935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143579d5-cfe5-4a08-8250-e74d3a667edf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d472ab-9317-4e7a-b6cb-4b096e77ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d149fb-8d59-4367-a026-c8d8ca98c75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28d3fc-89d5-4f82-b8ec-e54857104853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394185e-0ef8-4efa-ade8-a5ad6546ba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c41626f-c4c8-42af-8bcb-149bdf5f403f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5085fe5f-6c11-418c-83bb-1174009045ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c015380f-f9b9-4e8e-8e30-680b94a718ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bde2b8-bb01-43b5-bae2-8cce048b9d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea03c02-9cf2-4661-b5ed-acfd16f99189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ee15b-6a3f-490c-a345-823a09cc3a92",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6494cb8a-fc13-458e-87fd-14beb2528335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbaaa9a-a2d9-440b-a176-468580844a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76725399-af6d-4d58-bcc6-cc5369d22661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92984978-a9ee-4983-87b9-b9be40b4a1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6a1086-f797-40db-8cf0-efe264bb03d0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbae1e70-f4c7-4a22-b7ca-3565d361b1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddeec9d9-1c5c-419e-b978-08e4032bed2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8099558-4197-4809-b76a-436772c22199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89464a7c-5bb0-4862-895e-c49140dc0d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64d65b0-0aab-492f-9313-65c100115d6b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0684b4-6153-498c-8447-61b4c850f52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49313db-cd5d-402b-badc-599fd17981ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a8ec93-ef3f-497f-b929-ed0cc4c952e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf5967b-7d6b-43f7-a962-4b8727e33f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05826270-fd74-4448-8766-920e65c91233",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93592e14-634f-4742-a8fb-aef878bbaaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c969699-57a5-461b-8be1-ae327fba3413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717710fd-a1e2-47fc-9491-951d483f7b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b13f694-0463-4c3d-a015-ac9c39c56bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc31bd-b1e1-4f88-b562-91fcb6179680",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76bd558-cb42-42bf-a1c5-ca35d0a3c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0ff788-9ebf-450b-8461-67de6b1d26e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03c8ab2-4ab9-4fdb-b891-ab05d5281fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432c1d79-22b3-4734-bee3-b2c50d042f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a927fd23-cef6-4a91-ac98-5b93230f2c47",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84baef4-0096-4b43-825e-08cdf18590bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e183a5-2d7b-4fac-8d62-4a122369eab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ee1a86-7cf5-4e10-96f9-dfc240a8413d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c4c393-375f-49bf-b9b3-3850250a6337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac48ecd-5868-4551-960b-f03101440d10",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0469ebc-f3e7-4cf4-9706-7e502a763b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "006472ed-e7b5-43c6-8d17-d557b5c9c479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae063f03-71b5-4112-8efb-2d52c80da46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea2b29b-101e-4365-b658-7538d8e78cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fd436-a193-4c28-bd2c-68ac98fe69cc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c2cd78-f268-47aa-8cfd-a3ab6ab840a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86166829-2c5f-4605-af05-055eb3a52e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57a92bb-f356-471f-8222-fdf20588c8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc63ea7-5b3e-49ed-a92e-9ffb3a54bcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3379578e-6085-41d5-86f9-1904ebb4d178",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e345904-d8f2-4735-9e73-66c0871fa8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d14f8d9-0865-41af-99fc-c86e14d4789f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1009505b-7b36-4ecb-bde8-f0564eb3ca5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf7fe24-bff5-4a9e-ba9b-d419bd247460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136095a5-dd16-49be-8667-4b2db3d8ba88",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6fb009-1518-4cca-a0aa-d2e110122d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fda976c-1cc0-46ec-b773-49f6e981ab40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72863a7b-a0c4-4d76-9262-56b3ce7a24f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f609fd-9b5b-43b3-a6db-296f558080fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec0cab-3818-437e-ae2d-3b83c6b7a6de",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d215b4-fce3-466d-80b3-1223073f705b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0155ad7-f73c-4abf-91a5-0df54f0e3b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02786cc9-6c27-4b20-92f1-d18d002d4171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba66896-df15-4d7e-a24f-9cb25f108531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4bffe4-1aa4-4718-afd7-8a65782d81a6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b311c7-4bbe-4b1c-b213-9fe476f40dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4da0f94-ac40-4683-a0f6-74b2f0673eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fe10d1-4f33-48ce-b8c6-217f0f935935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed51f4ac-d1df-41da-8b61-a7d41b4609aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e735b976-b0a8-496c-8aea-e8e0daddc83b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf277ab-d11f-4e32-a08c-f83a29fb61c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36a0d54-3eb5-4717-b44b-538ea1175ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e2e3c7-3bf7-4870-ac01-9339e1d95d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4ebe9-44bc-4530-8618-0b33ef9dc81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c1109b-2c11-4845-bbfa-160db58b4708",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fb55ce-bc6b-4eec-9594-1464d2d377d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1152be-ae31-4684-bde2-e016bddead16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa92c04-c4be-4e6d-a525-988f488bc074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b6ccb1-b87c-4d56-9c80-732ba388796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914a870-5500-435f-bfd2-b14d65d6d834",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be0b425-d090-4597-a5bf-470c5fc1cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32f4cea-a80a-48d4-a3c8-d4b05909934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac4090d-8d53-4df5-a3ee-1bb854a6aeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0619de2-9f61-4258-90b5-43059541a3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6cf893-5447-48df-b139-d52ff7413849",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ae425-0c36-45d8-b418-39a28611a066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317e8299-d990-4ce1-9a85-54d0d3353c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700b6e50-7277-4c66-aa72-92781e217bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a54ab7f-9265-456a-8d66-5371d1efc658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0389ddcd-d95d-4f92-a097-1dc38a28d9d2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103229ae-24b1-4275-9b64-c70864dcacf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325f6691-ebfc-41d1-a29a-285e43f84050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0387a223-cfe7-4205-b776-02812f4680c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac15c75-08ed-4a0e-847d-cc952e7e7a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bab8f6b-0351-437c-a3e4-b7c19af611bd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fcce0c-7d97-438b-bf71-bcfb8dd2e808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0485b559-9a54-4f0a-ae26-d019956e4c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ca5197-20cd-4f0f-86a7-af36e9eeb301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33acfc9-bd63-466d-b12c-9bff238f3a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e8c60f-9f9d-473f-a68b-e5723b5061b2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ff4b1-47f2-4ea9-b5af-7205316c7235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35801d9-ae05-415a-8208-f1ca77966f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b0f52-243a-4e49-94b4-60e3159a5f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b10281-df22-4c6e-bf7c-604aba421d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedddf87-388f-4808-a164-2a9c7b66f94b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26301a2c-3b6f-4069-bcaa-3edd371deda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222efc0a-2545-4067-8025-5ac81b376245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ffa66-1719-4575-8607-dfd327e345c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db188dc-9e85-49ed-ba76-028e4d250dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d987ebb-42ef-474f-86fa-11f97ba2b7b4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411b2fcb-40b2-4b5b-9f80-f0b26bcf6a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078dceae-20f8-4880-9137-0dc88178a198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd622a6-11ca-419e-b862-cd851891d1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19fab40-fd59-4f18-8a10-d7b8529be49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5374b440-8656-4381-8179-775a435abaac",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ad9a3-b1ee-4485-bad5-cd514a7e3b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886710d-36ae-4e3a-ad21-292853f723ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b38ff4-7e7c-4063-8c82-bab05b9606f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458a74e7-4ed1-42ab-ae91-f903df84c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be75c061-ae60-4dfb-ace9-4778f59632ab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0675dbf7-318c-46f5-996d-5d001d0808a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9261c51-5e00-4752-90a3-d5e6c43624b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e5430-0110-4b3e-90c6-aeb89d740556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a369c00a-02b0-4f31-ba2d-4a1d78b17fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c038f7-1540-4639-a8ec-573a8c26ce55",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2eb95b-7ed5-407a-a535-f8487b9d222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765e5d9a-5304-471e-898c-3dcf7a9042bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fa0545-bd55-4c67-8b76-891250f1400f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957cc23a-7de0-4b25-b434-8977bf0cb832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf58a419-04e9-452a-8ec0-d32a915299d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcd0611-7a9b-432c-8d0c-580e12584962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ed6e1e-028a-44b1-9ff6-92603e0f7423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34909b22-55a9-4713-a1d9-200cb1f3475f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b113a4a4-9c05-4c4e-a66e-c6b99c2a0ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a5b7d-706c-4204-8f18-8912a2bbd2d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692bb3bd-f124-49b3-a96d-9d8565d243e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767c9749-fa4d-474d-8487-46a39d549b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d95827-9e68-46b0-bb9d-ad1dc99df856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fbeb62-bacf-43bd-a46e-93720d2d5e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29529dc-c154-46b2-86db-c0b494047110",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e239dcee-5733-43df-a6ed-fefa77b7b00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68e2f18-f727-4bcf-95df-1f63e36dc184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165a6c96-bb81-4188-981c-6ec77c4b1ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e41e3-ae2d-4021-b6ed-4d489ae010ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b1bff5-617c-45bf-a758-4c21e4619705",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246eac4c-932c-448d-8dd0-81be8aa27548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66984e8c-18f1-40d8-a798-4bb8d0014287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c81f3-b058-4be4-a63d-ac8d98f68123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc64ed9d-b149-4f6d-950d-b7b7290fdf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7566bb4-88b0-4207-b4b2-a02ee9271205",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c54b372-3db0-4697-8c84-be47a119e8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3c816a-6aa7-4f26-b48a-e6094264a8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae8617-91f9-4818-8c86-bd0286a73a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e032b40a-3462-4391-afcc-1bcddaa79f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3490895-d9bc-4eb7-a20d-b52b1bf744b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab82d6-c276-4896-b952-52bc7c27bd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef92bee-2ed6-4c9b-b8d6-5665ad5adaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f33c1e-8a10-4992-a8ca-0c6d6d140a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cc99c5-5946-423c-a401-8555f04d5dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe896d2-1f52-45d2-9a92-3e9a0ffd043b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beaddd7-a11b-4788-8a71-d8a4f0ce944c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a41ee5b-ebf7-49db-8581-429a0c87b3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cde5d8f-b44a-47a7-a115-acf64e0974c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d314efe-2fc1-45de-b82c-e9cf5324d112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26b6274-4ad9-4dcf-a459-eb3b3c2b1818",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824efb2f-cb75-46c5-87ce-1e9a51ca4605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e92d935-a5f4-4e18-8680-71b711aeecd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd36914-2bdb-467b-abc3-0ba1b0abedce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78920c1-498a-4ece-b4dc-8a180169dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ebf133-f042-4191-9beb-8b35240e5bda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dda6c8-eb36-4f21-b312-393bb7a35d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffdc817-1c31-4efa-968d-3aa0406e0def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f610f5-4e4d-4cfb-b73e-517c5da0ab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c0755d-423b-4092-9554-f3209de8f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ccbe8a-705c-4050-b348-6f0e82e5be2e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f37533-c749-4449-8df9-93bf21907620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e638869-13d8-4eff-9b94-15131907388a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6e938e-024f-4ca8-8e85-c9da2849fd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dc1c06-9bf9-4316-b7e9-c6dc3010c839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2bddd3-f480-456c-84cc-f05403d6c07d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc7e7ad-52c3-4791-b298-681604c7fc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f8315b-6e84-4561-a8f1-77243e408281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a015b9d-8063-49c9-acf3-61f4ca80827c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6ac440-05fb-452d-ad3b-b1870d86e35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39abadda-18f3-4a73-942a-23993a14b5d4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e35498-4c9a-48e5-bd87-52e1beebb213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5361749-36d3-48bf-b817-219e1248d75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b329f-2f2a-4ecf-99cb-88c96308f425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd30274c-fa69-4637-a5d4-42e56802f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2790bd-fb94-42c3-9c37-421798b46e4d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a693a1-981c-4c83-a58f-0f161213bc80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cbe173-fe74-4d2f-97a1-0acb5969c60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24408cf2-fd45-4c83-a973-1677b4dba6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8276b9b0-56a1-4bf5-ab0a-f11ece591da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e6368-38ea-4825-b9b1-e1cba9c4e3f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91107098-1a10-46d3-aa6d-1e537dbb8a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23cd931-fad1-4783-9b00-c6c5f23b58dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e96fcb-e1dc-4187-bea3-d9d5c68c82d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051aa408-0dfc-4fe6-a7f7-c5a0e20413ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90e2439-f4b1-44cd-8020-3e782ac6f62a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdc24e4-ea93-4f0c-8bd5-fdb7c617c7e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cda39a-5850-43d9-b3c7-a0394e6d3fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12e724d-1cb3-4c9f-9550-f0bfd83ecf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3036d30-7a05-464f-aa45-a9d941a7a219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a2c932-5c6b-41b6-8bf6-12e58cd9d2d4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b720964-13b4-412f-9f1a-7b79d8052bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65711355-e9d2-48df-8c11-a81ecd200e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef5c150-4741-4420-87f2-e9aaeab84c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65811629-8846-4fad-8e49-985b5b243237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed44a44-b25e-4794-9aed-40b4318d982f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f1f99-ab77-4bec-a3b9-4184ee39208b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e466e86-8f23-4fc8-af38-0791590371e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd93087a-3ff6-4f06-9aa6-a9448226bec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a76504-f0eb-47b9-a6e9-c43c2604c46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a859b0-4d4b-4cfb-adef-be77d9548c72",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69b85b-e939-4708-8d70-a49d67259595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001c8a3c-cb1d-407a-8012-89ffdd87235a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de30e9a-a8bd-44eb-8ce7-f8c9e5fda8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1451606-a5b8-446d-8894-83015d979354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f5870c-b409-45dd-b80c-c4798e157554",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7153392d-a032-48f1-9bca-efe25b733955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83bf16d5-8e1a-4ed5-b0db-927fb1ccb6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b49522f-8faf-4819-8188-9373e2b54837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b02ea7-09e4-4805-a63c-5163d4abf5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d44ba6-3613-461b-a19a-763df65958fd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d68572a-35b6-4171-8015-66ad1d5aaaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c53585-4553-45a5-ad9d-d95d09ae7c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c521e1-a145-4459-83c1-fbfeb7c019c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dc8f30-e437-408d-ae75-273687b2826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c20fc7-a7fc-4d1c-9a95-77c983935b1f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10eb880-cdf6-4ac4-bd76-72f23b6e74f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5271c5-5d88-44b2-bc87-40bb02c80d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b329e34-7d80-4690-b60e-a41e8ae21d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3b4bc4-8777-4387-a868-571c086d3681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473bb7c-8ab8-4864-977e-4eb07bdbc658",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade4980f-6142-4df8-9199-c29f1c375fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc32f95-cf82-490d-a129-3505de986b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e93b3ce-1606-41f7-9068-003ec5ce8090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7724af-e810-4b8c-8913-d47ffad3563a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a482f72-5530-45fe-b2e0-8b4d12fe3fe7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854e0221-61fd-408b-9d45-18cc94a398e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7f341d-b994-4cb9-9be6-b49de0695f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3a3e9-aef0-4e64-b428-6d27f6c60216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15454ae1-8c7d-4b02-8312-7731f790cf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6604992-eb11-430c-8e51-20b623d0db77",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd819373-8361-42af-96ea-8145c3c0c521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd385e2-4da6-4bee-9926-35ad3b0ae2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3d512b-90c8-4a07-a71e-c637a3550ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8f7be0-e39e-410e-9394-0e3e6a238743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b39656b-0752-4500-a926-d2485012ef42",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de8917f-38eb-401e-b1f4-c0fc872ffb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388ac956-ae41-426c-9ee7-15988900f891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a631a64-6703-4514-b956-8046cbf88fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70298887-5c4f-4638-bb79-af5f353500a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce28d62-96e3-4fce-aace-3f54bf8d64ef",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4139cba8-16ce-4eaa-a936-d66c955c2252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fb8676-c50b-4729-a7f4-28edfb171968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1cf8a1-b8f8-4a23-bf4a-7dc02d740947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6983964-098f-4cb4-9be5-fa8e882957a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84167e85-9ae3-4b8c-9226-bb4d504d7c83",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e2a65f-5b3b-4353-8366-d5074672ca00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1931f3a7-1324-4c1f-91e9-fb6fe71a2aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04784d9d-4154-4615-823f-9972f8e1552b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520a6c0d-a487-4077-90e9-b9f620a75d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed94c22-39ba-4d7f-be20-32bbe57b889b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dae7aa-e206-44fe-93bb-ecbf398e63a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d9971c-b83c-45a0-a5b7-efc8a5a21993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d45497-fa0f-43e6-9f3e-7da63e536ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a7fbd7-8727-42ea-bad3-072748298e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89a953-f819-4918-98f2-d83dcb8ede00",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf771d0-c385-404d-859f-791e9da5aa05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05002a5-073b-4672-8fb8-c872cccbc647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf1b94f-3a93-455e-ae92-a9a7009decd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426ae344-191c-4997-8af6-df91e24ce999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61d439e-2bfb-4753-aa60-89dd8a5a1ef1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6a04e5-257b-49ec-914c-ed83f44f11b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3281fa-c336-4cfe-8ee1-8c076e19089b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512061a1-d14a-4b06-9496-288d5dbdca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78396bcb-d1dd-4c7f-89cc-14d3b42f1f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47928773-186f-4b91-a14b-eb7b26641e43",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05190c8e-c9f0-4c48-8c28-240c42e5010f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d95b06-a529-41d9-9faa-95a422e8cba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1912c253-5e6d-4aa4-8afb-6c39ee0428ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839736e8-db86-4a0d-9948-ede95d6e2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f411c8-d64f-4eea-bfe1-f0932c7f58f8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d8a8f-c0de-4834-9616-e550b2e6c33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c320767-aa55-4053-b1d6-071fbb549350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e8dfa-bde7-44ac-8c3e-3815cc9c69a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3845a9c3-2d2a-4390-a50d-3eca375fb445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d4264e-62ca-489b-aab1-915802b355b3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b38b794-5b64-4ac7-9dbf-0a941490eb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a478966d-3570-42b6-9539-f94167ead65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c55e7a5-3851-47f0-9b7e-046d9f70ec0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93015e6b-c740-43ea-8100-b93d2c4abc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e6f3a4-a87d-4a0d-b204-836661463f73",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62423f-3d87-4a56-8f14-821c1161c59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2c58f0-47d7-43db-a298-cf7fabce7882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ad36a8-d032-4069-acf2-f18a7b18427c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71a73f9-6ecb-4453-8327-dfeca0ccb2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d34507-8caf-4044-a067-5ed16a617dad",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd930e-1522-4e53-bf76-3a487e2045ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c490025b-50f6-4290-bf9c-a7e08c9ac7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0becb2-c448-44c0-bd18-9bae18816390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82ee711-121f-42ef-8fe5-a0b2b6870131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8370e6ad-86e6-4b7a-862b-5ac321796f53",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a8112c-b4de-42e0-834b-7c36159813da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a7aa48-cfc3-4e2f-987f-b14c9e739db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af3029b-c420-4251-9954-43dcab55019d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee607163-af2a-4b2f-a00c-c847c50eac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d923177-8c51-43b9-875d-43777b572c8d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ac91db-46a8-47c9-a35f-04c084d50987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a360077d-554a-4719-97b9-ebdbf57dc7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95676b04-3b08-4443-af6a-715501e9049d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ee9eac-db6f-475f-a5a4-f144e7768b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f2652-421c-4e4a-b1cc-e8ea07ddd887",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3533ad22-6972-4586-a03d-fe62a6cc6bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d62b5f-80db-4a14-bc5b-21a10de59879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bb59d2-4345-42cf-a349-b75fc228e67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2b4cd3-cf52-46a8-a4b8-08021702782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3514b-d2d6-45e2-a7d1-b46f73a807b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c788b2d8-8ea0-46be-b738-69c4585d3e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4e5ec3-2eec-412e-8538-43b27d23d041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad71b80-99e6-4d8d-8dda-9fc853dc968b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e7bad-ca9c-44d0-8d2d-d2b5354cfe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd698d24-ac93-421d-a029-56c81b592e15",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6326625f-3715-4419-b88a-2da8517130cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b810792-c297-46f5-9fd7-ca9dbe1ae1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2da5efb-d863-40bd-b7ed-4ad35e31480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d1abf7-e7f2-4636-b1ec-ecbcc530a781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0175d1-0f4d-4414-a80d-4ab918ea2438",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4c460b-33de-4cbf-8b1c-4b9e363e1294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb84a5a-2a10-4f5c-9c0b-9f09deb773f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f0ac4e-df07-42c3-8e0f-0fa1796b4a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a16be3-86f6-440a-ad04-222e42b78746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd91914-4899-44d1-907f-dcd7d7182526",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c421a1c3-5e66-499c-ba91-cbfe8c0f7587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0d0ca7-fbfb-4c86-bdca-1470c1cb8b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943d535-b1e6-43ca-be3a-37f19626715e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01090147-0529-44d5-9d8f-d237d9ab973c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d89f497-41a7-42f6-885f-026b623311da",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339b0d4-a630-4740-8708-c8ddb3fecf26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a74544e-b53c-4ebf-a581-3c48304cbdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0cd302-3107-4c0c-9629-e44243ca3776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d11816-15a8-4d01-97bf-ba2f6742e104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d479d21-e214-425b-b15f-6c5122c4ff5d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc53bb25-abeb-4867-85af-5e3595fb28ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f82c44f-70b1-4b5e-a842-e544c54945b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ea06f-d8d3-4bb8-9695-98890a666330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f00a1c-5696-40f8-bb75-de4af5236b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3536f158-1890-4017-938e-95ca3dffe029",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb00a170-5b8d-4aee-9323-72b55590bac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e22fee-c348-484b-8eb4-b260ce60677f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c5fdb-296e-4fc5-a737-b251508e43ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb62c43-da70-45ca-a40a-b276eeffccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f66ac-7300-4bff-8e21-bbf8558c5379",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feacc7c1-65e2-4a91-9959-dc7f2accc1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfc8415-96ec-4002-a870-cc68191f7e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7c8761-f489-4900-82b0-daecad4f77ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0d32f7-109e-4dcc-9ef8-373080bc262f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff59bece-9d56-4db0-a449-a9c6101cce35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55a1d4db-7dd6-45da-a421-feb922852268"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7361f8eb-357a-4900-86fc-280fc69c39f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4307cf2-221d-4b80-ac08-43daad322619"
                    }
                  }
                ]
              },
              {
                "id": "e1febb28-892f-4128-a048-dfce4558bf45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f69c6494-1dbe-4ad9-be0c-4922321e4228",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62222b25-207a-4501-a0cb-baf16538742d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d71733f-c718-4118-8090-6ca91ae1d130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c38a0-b401-4548-b418-01ff380af0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0808ff37-4eb4-4058-9946-f82d86eb5026"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1e6a588-36a7-49bf-8faa-051924acb998",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "263f275e-d113-4902-9e55-2e51a3627a19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ee33a9-5e04-4045-960b-9de5476162b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92d36530-1c50-4830-9263-d8f9e718857f"
                    }
                  }
                ]
              },
              {
                "id": "dabd5804-415d-42b9-9bbe-01ac6326ecac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "68fff6d1-8d56-4fee-9106-5f86eeab84c7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262d5f7c-892b-4b95-98c5-22c212629325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e95db8be-b905-40ec-94b9-41eb7c735a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715de94b-317f-473c-bb53-bb6836019f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e88ae5-0393-42db-b15c-e6018df86618"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aac76800-dc78-4490-b0b9-6fb995c0b3c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed121e14-76fc-420e-9362-e97ab50fba20",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc55399-6ca7-4dd6-af30-7ac458c9965c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13a06248-b3f9-4eef-811d-f3ef46fe4abd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbdd66d9-0389-4927-8fa3-21364abccc88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63165d76-5530-484c-9880-a7ad53e34750"
                    }
                  }
                ]
              },
              {
                "id": "5564cea9-f58c-49da-99a6-cfcca6546cff",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c7efa71-3ecb-43d9-b3eb-a2b5e0241729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c1373b6-7233-4fb6-b2e4-7335a3834207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7cc3fc-6d5d-480a-9db0-171616d001fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5656570d-856d-427d-89f0-98c841c596f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dffef0b0-02ba-4d6a-b081-35e79cb64188",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e2af2a65-f5b8-4968-83e2-6ff9e1bb9977"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4b10421-b3c1-4405-b4e2-2a6d1d86c712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd8c7898-7700-4bf3-9d50-33e12756021d"
            }
          }
        ]
      },
      {
        "id": "9cdff37f-ec00-491e-a1d7-f33da68311cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "debba447-4864-4e26-a6eb-4ca1e179b3c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61491478-5b20-4225-a476-868c117b17b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe78607b-e4b3-454f-9f42-306ccf3ba598",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04679b7d-1cf8-427c-aaa9-64c3bea7184c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "acd6a62c-3cac-4dd7-820b-5ee103c925c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9af7d62-561e-4289-a74b-bc571cddf658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f12bc075-98dd-4b40-940f-2bcb353ccc5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "466e2bb5-b8b6-44bc-8572-1ce2ecc72e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bdf1e63-3a8c-4c2a-ac10-a30f51472e7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b9d3de-bf15-4add-aced-9d501bee70f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5035f12f-3bb2-4b94-8f28-80e2bbbc4021"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a19b78a-43f6-4b31-ae57-7f5531537120",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56a1f97d-8aac-4d2f-9aaa-5ddde6a7ba1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05ad341c-a9e3-4ef1-ac4a-7385ee78aa5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36cbb39f-7feb-4922-9d33-f5cb681b160f"
            }
          }
        ]
      },
      {
        "id": "d4d90fae-af34-4cc1-b83e-6f66c352075a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2eea69dc-6728-4eb0-bf2a-0f32e06eb2a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61dc8566-8250-461c-a999-ad425e59a4b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53dd2305-e3ec-40dd-92fe-408d58dc9827",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0484f15d-62e2-4120-b026-b63b8f15964f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67712846-d7ad-476f-becf-a51811760e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d7e7af-bddc-427f-8ef2-8455381bac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b3f80f6-0d96-4e25-9994-f93b7175d48d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2753907-682f-4789-a7c7-cdfb65f3d56c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48606d31-56be-4e9d-81df-ba321d4c4173"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7640070e-c2ba-495e-bd08-9f30af835389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e5e164-e788-4768-b748-40edfa75fbca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ade4157e-013d-40a1-bca3-ce621f24837d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "022f4d13-23be-4c88-babe-a6c570cba7b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c0f63a7-4e03-4d12-bb61-d2eb2c9e1b1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5318acb3-8690-494d-b62a-87960476d711"
            }
          }
        ]
      },
      {
        "id": "f46da5ed-8ef9-4980-a343-c9a653710fc8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7a45ddc8-5a8e-40b2-bdf2-eaa2f4f70b44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44099d6a-5ab8-4ed8-9416-5675454e5561",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a118e436-b4a9-4ca1-a193-3855aff0cf9d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8d7b2-7d52-4dc4-be33-a89e41b2818e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da54d63b-5caa-4102-b874-f080acc2aead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2597749c-47a7-4917-927e-ceae0189fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d6f3ae9-ed81-43b6-977b-9665aedc9eef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0296c90c-ab07-4c3e-9ff4-05f771854458",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bca605ce-5de3-4aa3-97c1-45c3b31f54ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd35b91-371b-41b9-904c-225117507585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5565e0d-a8b0-4255-be4f-ea889042d071"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb37be8-c523-4f37-9026-03b6499bbaef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a62135a-da2b-47e9-be6f-231dc9a782fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee4fe6e7-a16e-44d7-8b87-b0f01a6a5a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6aad121-33c8-4174-bbc0-6ffe54cb34f9"
            }
          }
        ]
      },
      {
        "id": "67cbac30-35ae-4a07-a826-2a7e1f75a21f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9074ee43-c69f-4329-a869-e529636572b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5713236e-bbb7-4b52-afd9-4b1e5eb588bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5403e8bf-204d-4369-9743-6f522aae99f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "237c1a51-48d4-4332-b78a-7706f0affaf8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb30b1d6-b482-4427-8e1c-1e86c93d8121",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.39788732394366,
      "responseMin": 7,
      "responseMax": 389,
      "responseSd": 33.826402239882746,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695342804589,
      "completed": 1695342838416
    },
    "executions": [
      {
        "id": "36dec2e5-b2c6-4ee9-9d54-d3ce5918cfb3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a62d94d5-2579-47fa-b9e9-bb30f8f99be3",
          "httpRequestId": "d010d649-2eca-487c-ae73-74a492d6ec48"
        },
        "item": {
          "id": "36dec2e5-b2c6-4ee9-9d54-d3ce5918cfb3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "36894376-3914-44b5-a655-01c24d8cde92",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "bbaabd9d-bf77-484f-a68b-cd07a58e243e",
        "cursor": {
          "ref": "c8c3e5d2-4f8f-4fb1-b96d-8aa6f64b0542",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7596e367-286c-4dd9-a73f-fbe6d410db84"
        },
        "item": {
          "id": "bbaabd9d-bf77-484f-a68b-cd07a58e243e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c02c1e5c-e4d1-45da-9271-b6877f6672ba",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6637e703-2798-47cd-bd28-6e3b81311401",
        "cursor": {
          "ref": "d840bd99-e1aa-4a40-ada3-19f8cdee6b6f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "50f3ddf6-7000-4511-9c55-a7b84ef88b18"
        },
        "item": {
          "id": "6637e703-2798-47cd-bd28-6e3b81311401",
          "name": "did_json"
        },
        "response": {
          "id": "03b3990f-55f0-4b2e-b20d-210da2ba5d6e",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d8eed-0ede-42fd-84fe-3410dca0e969",
        "cursor": {
          "ref": "798db48f-fbd7-4922-a5dc-403b2147147d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34f8177d-9702-4b85-92be-0e5c56bb9736"
        },
        "item": {
          "id": "136d8eed-0ede-42fd-84fe-3410dca0e969",
          "name": "did:invalid"
        },
        "response": {
          "id": "de6e0289-862f-4e9f-8af3-7d26fafe9e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d8eed-0ede-42fd-84fe-3410dca0e969",
        "cursor": {
          "ref": "798db48f-fbd7-4922-a5dc-403b2147147d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34f8177d-9702-4b85-92be-0e5c56bb9736"
        },
        "item": {
          "id": "136d8eed-0ede-42fd-84fe-3410dca0e969",
          "name": "did:invalid"
        },
        "response": {
          "id": "de6e0289-862f-4e9f-8af3-7d26fafe9e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a3645e-7ffa-4326-9389-f57977584617",
        "cursor": {
          "ref": "96503533-3c21-4c05-a45e-3ecde74986f2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cef16137-1be4-4f1d-97aa-4a14982e1f0b"
        },
        "item": {
          "id": "b3a3645e-7ffa-4326-9389-f57977584617",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f59f48ef-4b0d-4065-bb3a-1215cca35671",
          "status": "Not Found",
          "code": 404,
          "responseTime": 113,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6277d2-a5df-47cd-b4b4-cd63c3ab5d27",
        "cursor": {
          "ref": "0d7fe278-8ebb-47ed-a6cd-d40168ee6cfb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "69675ac9-a7eb-4b17-9983-e28e829ec50f"
        },
        "item": {
          "id": "4a6277d2-a5df-47cd-b4b4-cd63c3ab5d27",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "35dc5863-cc38-4f22-9c1b-430996d95787",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad7e45a-4336-42bf-a1a7-43b8a1fb92f2",
        "cursor": {
          "ref": "73fa2810-0e27-48c3-af59-52ee5c2b738b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a07e3543-5869-4cef-80ca-fcfd9f200b56"
        },
        "item": {
          "id": "fad7e45a-4336-42bf-a1a7-43b8a1fb92f2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "87ec8977-31b2-4b83-be67-d1cf173f4d5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaf9fa9-d564-434c-88c5-1ce96252fc92",
        "cursor": {
          "ref": "47caa9ba-16ae-4d87-a750-370598fbc854",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0c6a21a7-2bb7-4fcd-b612-7ca2483a64b3"
        },
        "item": {
          "id": "8eaf9fa9-d564-434c-88c5-1ce96252fc92",
          "name": "identifiers"
        },
        "response": {
          "id": "6c391895-e912-4c31-8b4f-187d07d1ea03",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e87282-da7e-4f3a-af5c-c178e76b0750",
        "cursor": {
          "ref": "914bdae6-d043-4392-bc59-7529e72ccfdf",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f0e9682-fe3c-4ea6-9e7d-72d498d3bcce"
        },
        "item": {
          "id": "60e87282-da7e-4f3a-af5c-c178e76b0750",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30913331-2ac0-41ff-8afa-ec2e8e62a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744d5c2e-28ed-463c-9509-0ded113f6754",
        "cursor": {
          "ref": "a60f6359-df83-4634-be13-df176b8bcebb",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bbd308eb-812c-4ffb-8a71-c35424c27798"
        },
        "item": {
          "id": "744d5c2e-28ed-463c-9509-0ded113f6754",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "645cda85-92f3-4416-9ece-e1d5616a0376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b1dbca-7e26-4b47-9f59-cb5a4bde5d80",
        "cursor": {
          "ref": "36b83741-6eef-4b2a-bd88-1c39c22ebb33",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "26ce1b45-e92b-4262-84ab-b9fca18dc983"
        },
        "item": {
          "id": "25b1dbca-7e26-4b47-9f59-cb5a4bde5d80",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e5610e6a-98e4-4227-8657-9d803327dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe22120-99fa-4a4f-a4e5-5c79a82906ec",
        "cursor": {
          "ref": "40b554aa-6ff1-4ffc-a645-62046d505d15",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7e115ff-5dd4-4216-80fc-4190675cbcd3"
        },
        "item": {
          "id": "dfe22120-99fa-4a4f-a4e5-5c79a82906ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "651e30ec-0d16-454b-b499-148196cc0979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3a4f39-9489-4897-8dbf-f314675ac9d0",
        "cursor": {
          "ref": "b6b8e367-9346-4e7b-97e3-c9832ff2fb8c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1fa50939-ddc2-451b-a719-3da20e2530d3"
        },
        "item": {
          "id": "1a3a4f39-9489-4897-8dbf-f314675ac9d0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "64b18390-a1a8-40af-9969-47035a3b78ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd9cb6-44fd-42be-9426-a24849485a6a",
        "cursor": {
          "ref": "ade527d4-3503-40b5-a1ce-ea4b6d191a23",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "78313930-12cf-4926-a7ea-9b0e5e18cd43"
        },
        "item": {
          "id": "35cd9cb6-44fd-42be-9426-a24849485a6a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "86aa1997-7928-4af0-9be0-965fd4cf7bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e271486-091f-4998-ad48-ce65a7079d74",
        "cursor": {
          "ref": "48314f5e-b21a-4367-82e1-660011e71158",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "53306a86-3092-40b3-8167-6a5d536faea3"
        },
        "item": {
          "id": "4e271486-091f-4998-ad48-ce65a7079d74",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e759416-f255-4ce9-91d6-a5fd5f01e34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de613399-3188-4ec1-905f-10aaba25850a",
        "cursor": {
          "ref": "265a7a02-f842-4526-841e-8568bbab8697",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2c83fbfb-366f-46d6-a0d7-3f80e7ba520e"
        },
        "item": {
          "id": "de613399-3188-4ec1-905f-10aaba25850a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d108962b-375e-4106-a4a5-c1741196aa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb16117-678c-4afa-9233-7d9edd94723c",
        "cursor": {
          "ref": "2c289e10-115d-4eed-9e70-576f08ce151e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e5215de1-482b-401b-9000-060b1c8983f3"
        },
        "item": {
          "id": "deb16117-678c-4afa-9233-7d9edd94723c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d0e66f06-d7f7-40f8-bc61-53043b9a2369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b162ebaa-1895-4806-952b-8f1ec9f05ec9",
        "cursor": {
          "ref": "44863d1e-76b1-434b-b897-7fecdfbad934",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4447489f-5653-490a-95b5-7514f0c099e6"
        },
        "item": {
          "id": "b162ebaa-1895-4806-952b-8f1ec9f05ec9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1ff376b9-8b04-45ab-9e1c-cebc57ce487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd12a4a-c811-4ca0-adb0-edab21d63d56",
        "cursor": {
          "ref": "ec3ed07a-51b0-4a45-8989-c95fb19ff4b0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f653dacc-1f8d-43a7-9af7-bac5fd9d89e0"
        },
        "item": {
          "id": "0cd12a4a-c811-4ca0-adb0-edab21d63d56",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "28f2c684-4126-4be5-9047-ece236f712e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62db563-de1e-4738-93e0-e9c11f42e280",
        "cursor": {
          "ref": "b4f1cc03-8584-413e-a6ec-5b5b9478aa8c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0446414c-1b7d-4648-8365-fa52ea3dc057"
        },
        "item": {
          "id": "f62db563-de1e-4738-93e0-e9c11f42e280",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "94eaf148-930b-4e0b-99ca-34745f8069cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d63e664-509c-46fd-b3ba-3fbb4c84cf35",
        "cursor": {
          "ref": "57b04993-f352-4578-bd73-9588cbc5947a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "72eb5d57-e763-451a-b7d9-1dc16eef8607"
        },
        "item": {
          "id": "6d63e664-509c-46fd-b3ba-3fbb4c84cf35",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b34cb85c-62df-48a7-a220-3848139584f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0b53f-fb3b-4a4b-8af1-dc63ec04d6aa",
        "cursor": {
          "ref": "8b2bb8ff-45f5-412c-970d-cf5d545a0dc6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cbc1945a-6e3b-4cdd-8fb8-1af6dcb8788a"
        },
        "item": {
          "id": "2bf0b53f-fb3b-4a4b-8af1-dc63ec04d6aa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8df3e2bd-f199-4348-b006-d70143d01a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900a9d7-cfce-4ba9-8e44-ad8a9bc107c7",
        "cursor": {
          "ref": "849bc372-2ea0-488c-b43b-56e05398529a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "90447b2e-a8e0-4a80-9d8d-52c6242e8220"
        },
        "item": {
          "id": "b900a9d7-cfce-4ba9-8e44-ad8a9bc107c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4982c5c9-a3f8-4449-9ad1-cea53a5d7beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0a2495-0006-4917-8179-36488cfe6f0b",
        "cursor": {
          "ref": "191419c2-6a37-4d5e-99af-e5cea4a5901b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9a68dcd3-dcb5-431c-a6fa-fd50dcc9eab6"
        },
        "item": {
          "id": "ef0a2495-0006-4917-8179-36488cfe6f0b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6fb92d10-3b21-4394-b978-0abf5167070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf14eb1-19ee-4474-ae7c-643305284bdf",
        "cursor": {
          "ref": "119c94a0-966f-4893-917d-c01024b9ee8f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3ec732cf-d55f-4679-a7f2-6c7dc98b90c5"
        },
        "item": {
          "id": "7cf14eb1-19ee-4474-ae7c-643305284bdf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ee789141-5317-4132-89b1-fa62e101dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be6b3ff-973a-46dc-9e43-ebfa8a6f6efc",
        "cursor": {
          "ref": "7d4777f5-a6da-4278-9f91-a86104ed67b8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c4e6fe0-5ae7-437c-984b-2ed81b021058"
        },
        "item": {
          "id": "3be6b3ff-973a-46dc-9e43-ebfa8a6f6efc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "89da337f-a3ee-4966-a9ab-4f51af3ab337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26f8d89-7382-4076-9599-82b5c8c74ad9",
        "cursor": {
          "ref": "250a69d5-6913-4d66-989b-24b4d9771131",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "da95abae-3c6d-4479-8ca4-7952a562f88c"
        },
        "item": {
          "id": "e26f8d89-7382-4076-9599-82b5c8c74ad9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ebb7e11d-effb-4050-b688-aafb8ab77e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124ba63-32e6-4fff-9812-1c5cff37e00c",
        "cursor": {
          "ref": "086b8316-e210-46ed-b43b-cb0466837c16",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8ce023d-74cd-4f98-88ab-05635554f646"
        },
        "item": {
          "id": "3124ba63-32e6-4fff-9812-1c5cff37e00c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e2c484b0-0142-40c8-a7da-923c0274e4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ff1125-7c6b-47e5-976e-b2a4c59cb88d",
        "cursor": {
          "ref": "eb88548e-3dde-4d28-8de6-286c2c8901f7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3d3becdd-e4d9-4eed-8f89-65c4b4bfb860"
        },
        "item": {
          "id": "22ff1125-7c6b-47e5-976e-b2a4c59cb88d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cfb61541-60dc-4aa1-ab7c-1044bda28f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2439ead7-75cd-4a1d-aac1-4cb622135af7",
        "cursor": {
          "ref": "dd280bd2-71da-4ed8-a71b-f56f5e88c47a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "895d8090-dcc4-485e-8fb7-818d7d71e26f"
        },
        "item": {
          "id": "2439ead7-75cd-4a1d-aac1-4cb622135af7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c866eba3-a0ce-4a9f-aacc-20ac7cb3035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da166d-db0c-4018-aca0-74e9dae694a0",
        "cursor": {
          "ref": "6214affd-0751-4dcb-89af-10bff36ae9f8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4b8bba0f-1977-4dce-aeae-0ae3270f9e97"
        },
        "item": {
          "id": "75da166d-db0c-4018-aca0-74e9dae694a0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "70dbcbda-a810-4d8f-a3aa-5f0c8a2e5128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea85eff-ffea-4bbb-bc49-897c993a37f6",
        "cursor": {
          "ref": "e537136d-caaf-4495-90b0-a6344cde10cf",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2044c674-373c-4dbc-a568-762021f2eca8"
        },
        "item": {
          "id": "7ea85eff-ffea-4bbb-bc49-897c993a37f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "669b2293-cc57-49c9-a176-66c2469cc07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e187a7d-c40b-4c0f-afd0-f29168a5490e",
        "cursor": {
          "ref": "cfbd96ff-bf90-4280-b1e1-3f2c0e57d3ce",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "37cb9be1-2583-43e6-ac43-c75b0cfa7447"
        },
        "item": {
          "id": "4e187a7d-c40b-4c0f-afd0-f29168a5490e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bd576bb1-82f2-44fd-b8ba-0bc5f6ce4968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4030445c-efd9-4447-8c19-fe59b802fe2a",
        "cursor": {
          "ref": "7dc02b5c-3496-460d-b2b6-ad106fb4fd01",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3aac3ea3-ca56-4648-bf15-3b3fc949eea4"
        },
        "item": {
          "id": "4030445c-efd9-4447-8c19-fe59b802fe2a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "87fac270-9b64-4452-97d3-a0130edb0853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d776c2e9-89c0-4f66-a5dc-6f421646c6df",
        "cursor": {
          "ref": "320652bb-0525-4084-b7b5-27668487a9bc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e2dafa7-b11b-4ef6-b94e-650cda2a5458"
        },
        "item": {
          "id": "d776c2e9-89c0-4f66-a5dc-6f421646c6df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "61b7a4cf-a6c6-4d0a-b3b7-19a4b352b9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a25eb-5009-4e01-9629-698f12bdb3bc",
        "cursor": {
          "ref": "7d2396bf-c812-4a86-a34a-95ef142cf922",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d2d498a7-ecb1-49e1-8a09-5617d0ce16cf"
        },
        "item": {
          "id": "d31a25eb-5009-4e01-9629-698f12bdb3bc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d86ef649-e498-4070-82fe-e464ffb997d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9f8804-8aeb-4b04-8ad1-4694c4743d86",
        "cursor": {
          "ref": "6ae50cbc-50d9-4287-8093-bfec6d148c2c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f7b347ee-0a35-423f-bec7-14e7f18e2e3c"
        },
        "item": {
          "id": "4d9f8804-8aeb-4b04-8ad1-4694c4743d86",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "402c3915-8f22-4b21-9fce-660168a3d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9953fd4d-767c-46dd-965b-0482faa746d9",
        "cursor": {
          "ref": "bbd5f128-0082-456d-9482-5cca325d1d4d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a8e792b9-1c4c-462c-a82e-153879fa4460"
        },
        "item": {
          "id": "9953fd4d-767c-46dd-965b-0482faa746d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "950f875e-5053-4f61-af62-165b6908285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7477c623-9448-4f65-bfa2-91e025442de2",
        "cursor": {
          "ref": "cfda866e-cfd7-402c-9910-9af4a64591aa",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2567199e-f20d-43ed-bb10-40a95e625f49"
        },
        "item": {
          "id": "7477c623-9448-4f65-bfa2-91e025442de2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "620b0449-f894-4fba-b19c-e6036367ed28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe3246b-8299-432b-abc2-b1e293e279e6",
        "cursor": {
          "ref": "068a3462-dc7a-471e-b71e-992b11a2561f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bb50f1ad-0a60-4bb9-a65c-42fea2da6f7a"
        },
        "item": {
          "id": "fbe3246b-8299-432b-abc2-b1e293e279e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "65283c3e-1d75-419c-b33d-1195ece875c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f777d14-46cd-4e41-9d75-12642ccff11d",
        "cursor": {
          "ref": "aab4d639-3a41-4ea0-ba2b-c747d17eb31d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bcfb85e6-a099-4278-94f0-c93442440370"
        },
        "item": {
          "id": "1f777d14-46cd-4e41-9d75-12642ccff11d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eff95534-4fcf-4822-bf5d-d5443947d8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b8d2b9-3366-4d30-812a-081e37bb0264",
        "cursor": {
          "ref": "0696163e-5b05-4c37-8b69-4075fb02dc84",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4a86821c-1e24-4442-827c-4f3c9eb7c10e"
        },
        "item": {
          "id": "f4b8d2b9-3366-4d30-812a-081e37bb0264",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "faf81291-5422-4556-b3f0-1e4a16fcf3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc89d4-c580-4f96-aaab-1dd455be7e51",
        "cursor": {
          "ref": "16858498-a2c3-4b01-b116-87d516de6478",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9ec98a63-c1ee-4665-94c4-892efdd6d951"
        },
        "item": {
          "id": "e4dc89d4-c580-4f96-aaab-1dd455be7e51",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "98a2802d-3257-4348-a316-f4b215a291b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8994152-9d14-4231-9b99-cfc0328d9ed2",
        "cursor": {
          "ref": "ac07bc7c-d227-4d10-b7c6-9ae42d11f11a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f1a15282-38b7-46fe-a602-51f9c900cc0d"
        },
        "item": {
          "id": "c8994152-9d14-4231-9b99-cfc0328d9ed2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "65fec8c2-b64b-497b-98e6-58b51af89793",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c67f35-8022-46e1-9610-b67130a8c4b2",
        "cursor": {
          "ref": "d5fcfc01-adbd-46d4-b82c-b9b118439413",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2c0d88b3-2463-41ec-9ef3-4397e13ab709"
        },
        "item": {
          "id": "46c67f35-8022-46e1-9610-b67130a8c4b2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "15e34469-38f3-41ac-90bf-9b290d07623f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26160370-6192-41da-bcdb-760326cfb486",
        "cursor": {
          "ref": "7c91f7c6-539c-4397-9afc-20596ae778fe",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14f327dd-3db5-4f46-a84f-59c3edf334c4"
        },
        "item": {
          "id": "26160370-6192-41da-bcdb-760326cfb486",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "18ee6949-d4f7-4352-bb0e-99c47a0e621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ba1972-0413-47af-9f49-a84e0bd865ef",
        "cursor": {
          "ref": "c6da8f0b-419d-4ccc-a588-cac490134e00",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6167293c-1eb5-4783-a7f6-a87ae2950c69"
        },
        "item": {
          "id": "99ba1972-0413-47af-9f49-a84e0bd865ef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8df8d110-ceb9-4866-84fc-2da2f7921199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a943deac-2c21-4f14-8620-ae775cc5bbb5",
        "cursor": {
          "ref": "c9a4d02d-5e83-46fb-8d66-ff887cc3e03c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "868cbaf4-ef18-4af4-b033-32680a83ff5c"
        },
        "item": {
          "id": "a943deac-2c21-4f14-8620-ae775cc5bbb5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0941cdf6-b881-4389-91b7-2f9382543711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b1d00-f2a8-4529-8ef2-7fae9e98bc47",
        "cursor": {
          "ref": "a691bd2f-b53e-4a93-b010-118953a06b6b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3b71c1f0-5527-4986-8ecb-34dd6ab707ca"
        },
        "item": {
          "id": "9f7b1d00-f2a8-4529-8ef2-7fae9e98bc47",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "56e0eba4-206e-4c48-86de-f2702445def6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5926e015-3588-4636-948c-fa78bd27fbb9",
        "cursor": {
          "ref": "9ee98ae8-c5e9-48bc-b4cc-fca2e0f058bd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "78d872f9-ec9c-46ce-85dd-bff43c83350c"
        },
        "item": {
          "id": "5926e015-3588-4636-948c-fa78bd27fbb9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "96426967-92eb-49da-95f5-1bb32aaa1782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12703cf2-4e5e-42c1-b6bd-ecc0b059a9c1",
        "cursor": {
          "ref": "6f46446e-cb00-46e5-8fc1-f3f3da100512",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00eb083a-518e-4c44-ab44-849033199b12"
        },
        "item": {
          "id": "12703cf2-4e5e-42c1-b6bd-ecc0b059a9c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b677a699-8ca1-484e-b16f-39d24d649a25",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd9c30-e6ce-445d-87bf-d3221821f209",
        "cursor": {
          "ref": "387682cc-c2c8-4f07-9be1-4442bc02d3cb",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8e9c5b99-24d7-4dc3-ae02-ea530d8921ac"
        },
        "item": {
          "id": "a2bd9c30-e6ce-445d-87bf-d3221821f209",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e53e2588-6de1-4818-830b-471360b80287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08071ec-6ebd-4594-97d9-0bfabfb00878",
        "cursor": {
          "ref": "3afe040f-6c64-4f9f-9af0-b687e146e102",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "59c0f122-2787-4831-9ca8-09e4818a1ab0"
        },
        "item": {
          "id": "f08071ec-6ebd-4594-97d9-0bfabfb00878",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4bf2edb7-a19a-4a6b-bdf5-facfeb66813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b8085-06c1-4d41-a12b-ed4d837d4d15",
        "cursor": {
          "ref": "3ff5b05c-1442-4950-8555-55b2da7d0380",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8e10cbc-9269-4bfc-9982-a185f2d45390"
        },
        "item": {
          "id": "6b8b8085-06c1-4d41-a12b-ed4d837d4d15",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "af65e5c0-b612-4dfc-b267-6f7d58f49bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd694d-ba4b-45da-a49c-ebf3b91b18ac",
        "cursor": {
          "ref": "7cabe7d8-ef44-4146-a059-54fccd382f43",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ce23b76b-2248-4187-a6e8-700a535e8223"
        },
        "item": {
          "id": "23bd694d-ba4b-45da-a49c-ebf3b91b18ac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "65b2cefe-7dfb-4e4f-a3fa-d90d786da96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5bbdc9-85a7-44ec-9809-50cef1f77b41",
        "cursor": {
          "ref": "9c63c7fc-1edc-417e-b1d4-3e9fa7e13ddd",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "016b9039-7a67-4d0b-aa80-402d40295588"
        },
        "item": {
          "id": "6c5bbdc9-85a7-44ec-9809-50cef1f77b41",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "764cdda5-6317-497a-9226-4a42756c5770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e097a-0206-46de-a0a2-b323696ee6e3",
        "cursor": {
          "ref": "853a915e-6615-46ff-8983-8d68d753a762",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fc3f0f4d-dbf3-4996-a4c1-fbd0d62c81e3"
        },
        "item": {
          "id": "363e097a-0206-46de-a0a2-b323696ee6e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e9d05b55-b54d-4ebe-b8e6-fa00e48bb899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c331766-1f1b-41b4-9f30-5abf67184498",
        "cursor": {
          "ref": "8d434fb6-fed0-4ae0-9740-8adb56d2b174",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8256bfe3-b369-491a-81c6-6b87f1f530c7"
        },
        "item": {
          "id": "2c331766-1f1b-41b4-9f30-5abf67184498",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "60798f2a-c0ad-4c0d-9ac0-7868322c7e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14aec7-fc5f-4906-939a-1d219cd6e649",
        "cursor": {
          "ref": "542b71e8-8b71-41a0-aa34-dc42c7608a7d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfc11e7b-6e1e-4217-96af-9e930f0c02b7"
        },
        "item": {
          "id": "da14aec7-fc5f-4906-939a-1d219cd6e649",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b004a5d-7b83-402f-a40b-3cfcca63754b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046a49e0-6f17-481a-afd9-33e9fca7f1fb",
        "cursor": {
          "ref": "006f1884-b713-400c-9ffe-5b9196b4c951",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "985d525d-a23a-4f26-8ab5-c616557944c1"
        },
        "item": {
          "id": "046a49e0-6f17-481a-afd9-33e9fca7f1fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "96755925-f764-485c-9a9d-50e22c39e13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0767107-fff9-40b2-8d8f-6d96957cd6e2",
        "cursor": {
          "ref": "049d5c0d-4df4-4061-8d2b-57a5dec2b2c3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9dcb112e-4435-4071-85f1-e149b2f6a177"
        },
        "item": {
          "id": "b0767107-fff9-40b2-8d8f-6d96957cd6e2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8c3a726f-405b-414a-881f-603833971f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11869d1-3cb2-45b5-90f0-e2dc4d5e72ff",
        "cursor": {
          "ref": "eef56750-e34d-4fe0-9b56-922124d7b8e3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d814207c-f743-473f-849f-a944643fe6f1"
        },
        "item": {
          "id": "e11869d1-3cb2-45b5-90f0-e2dc4d5e72ff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0e584121-742d-4a27-be8a-e749ac0b46fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c4e78c-29f2-48a5-a24e-ea4993e474be",
        "cursor": {
          "ref": "0e025e50-5264-488d-b100-26c5742e0294",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6ca6da90-ed93-4763-b630-18205fad8e07"
        },
        "item": {
          "id": "e1c4e78c-29f2-48a5-a24e-ea4993e474be",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "776cdaaa-1dac-4f62-8398-9d6edbff6bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b669537-1670-4d64-bca8-42d59ec22b02",
        "cursor": {
          "ref": "c755fc64-9172-4266-ac51-cfa6ab68c520",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a0e03812-71e4-4c1a-bf21-ef532121e94f"
        },
        "item": {
          "id": "9b669537-1670-4d64-bca8-42d59ec22b02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "00ac5b83-0beb-46d8-8504-1680974bb956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc8185e-2406-4a46-8809-3d934abd9836",
        "cursor": {
          "ref": "0babe844-ddb6-4f9f-9da2-d86d775ed6d9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "90b48aab-7c72-461f-8ae9-e19708561f6d"
        },
        "item": {
          "id": "3fc8185e-2406-4a46-8809-3d934abd9836",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eda1dbd9-d0b2-476d-86bf-77aad46c7a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e84dd56-2ddb-4d17-bfb6-6753d7703c08",
        "cursor": {
          "ref": "9db94026-df37-43c7-84f8-8c0112387187",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ed62cca0-a10e-4326-b909-1530393d57f1"
        },
        "item": {
          "id": "6e84dd56-2ddb-4d17-bfb6-6753d7703c08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e0b7f07-c460-4b15-9028-fa2b06f18c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a9830-8a52-441e-ad83-b2bf3ee6afdd",
        "cursor": {
          "ref": "7a92ad7e-39eb-459e-afb3-29c3a795e47f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f6ad6af1-a82a-4c31-a265-a158d18d2c1a"
        },
        "item": {
          "id": "629a9830-8a52-441e-ad83-b2bf3ee6afdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1eaed4a-c2e7-4815-9748-77286a14c06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b42095f-a8f6-4af3-b932-3496d79bdef4",
        "cursor": {
          "ref": "e47687a6-60e2-44e5-948b-6188ddf59a24",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8b1aa519-1784-4b04-8b2e-0ec327786686"
        },
        "item": {
          "id": "5b42095f-a8f6-4af3-b932-3496d79bdef4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "315c5b13-b0ef-4905-8468-bd64c2d4310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df38d3db-15ed-438f-8934-cd0693661d5d",
        "cursor": {
          "ref": "4174e310-03df-47d9-bb9d-8eb6f362ddb0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5de3b70d-59c9-4710-9685-5ad116384ac0"
        },
        "item": {
          "id": "df38d3db-15ed-438f-8934-cd0693661d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3db2cefa-be95-4d63-bc65-dfbb04c6b4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c69018-715b-4860-a712-06b14deb19bc",
        "cursor": {
          "ref": "72fbe1f4-6bb9-416a-bb58-32621b8d6655",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d66de4dc-3efd-414e-80be-3b4b69027c64"
        },
        "item": {
          "id": "55c69018-715b-4860-a712-06b14deb19bc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5665ed25-e054-4520-9f75-0e620fc239c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ec3abd-e4d9-4df4-8c1e-1be3d68da04e",
        "cursor": {
          "ref": "e5c1bc5c-0dab-4747-8083-af35c85eb21d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "16281e76-fee7-46ed-b381-bcc7b8ddcd75"
        },
        "item": {
          "id": "49ec3abd-e4d9-4df4-8c1e-1be3d68da04e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "325901f4-9d27-4fed-9920-ebeaa024b7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c3d5ca-4d97-4edd-b003-f510145a3a17",
        "cursor": {
          "ref": "621b247d-e85d-457c-bcc5-09d1b07c172a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "27ca58a5-9e7f-4cc3-93cb-9749b1cb2349"
        },
        "item": {
          "id": "14c3d5ca-4d97-4edd-b003-f510145a3a17",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "37f97e41-18f8-415f-9f60-b046abab51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023453d5-2dbd-434b-bc06-eb07a10681c0",
        "cursor": {
          "ref": "3099463b-10ec-4421-b2c2-dc54002a9ed8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a96421ba-dc1b-4887-b518-01fe4067cace"
        },
        "item": {
          "id": "023453d5-2dbd-434b-bc06-eb07a10681c0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6f14c54-6636-40e9-8371-462a9cc0e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06019e4-b769-468e-9617-e27007dca41b",
        "cursor": {
          "ref": "e3cf7ed2-e6cc-4a83-a94d-e0398fcfb2ec",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55e1beed-1c86-412a-9cc1-b693772a7419"
        },
        "item": {
          "id": "c06019e4-b769-468e-9617-e27007dca41b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f9ae8337-c4e5-42b6-af44-530ccb63ab88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a801198a-aed4-4248-80bc-f276edbb9c08",
        "cursor": {
          "ref": "88b35e9a-4157-4c76-a147-f877a609aa19",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "849d5548-451a-490f-ad6f-bca33abef952"
        },
        "item": {
          "id": "a801198a-aed4-4248-80bc-f276edbb9c08",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "555d4b2a-d905-444e-984f-edb70eb0db6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69d08f2-d188-46d9-851b-c3373525a2bc",
        "cursor": {
          "ref": "5e20beb4-6a60-4e48-a14a-17fe889f35ff",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ef591f8-051d-4413-a7c5-e7fcb475ce09"
        },
        "item": {
          "id": "b69d08f2-d188-46d9-851b-c3373525a2bc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c78ebc24-2d74-472d-9cf4-6206a9dbecb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76903a5-aa92-4cfd-b515-6fee98cdf913",
        "cursor": {
          "ref": "e3c62e88-39e1-4ff1-9425-eb4c4d319645",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f246bca0-50ee-4d8d-895d-8b31a178364d"
        },
        "item": {
          "id": "f76903a5-aa92-4cfd-b515-6fee98cdf913",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "779f9ce8-8959-44c9-9166-eb5232cf41c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846706b6-69e5-4e92-b40a-69e7ed0ddac1",
        "cursor": {
          "ref": "a733b68e-e763-40f7-a5c6-bba70485b75a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "635f0f04-3d4e-4bd6-9a41-577958c13536"
        },
        "item": {
          "id": "846706b6-69e5-4e92-b40a-69e7ed0ddac1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9a963cd8-d7d2-4333-8229-acfa1a68689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f004ff-e9d6-4cc3-ac86-0a04936cc227",
        "cursor": {
          "ref": "318dfa89-ed0e-4047-8326-565c953e278a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc6358fc-03fe-42e4-bccb-a70b7c39e2ad"
        },
        "item": {
          "id": "d2f004ff-e9d6-4cc3-ac86-0a04936cc227",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a8afa5a1-9f08-49c1-abd8-71411a72f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccb2786-61fb-47de-ab77-28c854fb957d",
        "cursor": {
          "ref": "758fd6c3-9af4-4914-ae7a-e93e7ea09150",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "074540cf-1d8e-4e7b-8a71-2bcc6cc78981"
        },
        "item": {
          "id": "3ccb2786-61fb-47de-ab77-28c854fb957d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aae836cb-bc17-4045-8fbd-d44d701fb847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8484a6-1259-4593-914b-5915698af6b2",
        "cursor": {
          "ref": "6550b5d7-88db-4724-a9d0-fc770fc92c53",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eacf7a3a-c5ba-4d3d-9239-f97c5362d4d8"
        },
        "item": {
          "id": "8e8484a6-1259-4593-914b-5915698af6b2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "96a8cb70-fcd7-49e0-a625-735c8db42841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e138b1f-939a-488f-9627-2abc4b38d354",
        "cursor": {
          "ref": "314cc8a0-fd1a-4dcc-aaba-0d42fe9ee82f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e4d86f73-11f4-4ad2-8ede-16d3c981ca0f"
        },
        "item": {
          "id": "7e138b1f-939a-488f-9627-2abc4b38d354",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9928bd89-06d9-48da-b059-e1bffb51bdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd07e6-16c4-44d9-9033-13742ac77185",
        "cursor": {
          "ref": "52dc3b2b-76d3-4ef5-9cfc-3ce158916ab7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a789809-055a-4770-b05d-6e449d2c3d49"
        },
        "item": {
          "id": "bdcd07e6-16c4-44d9-9033-13742ac77185",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "47943735-235d-4654-8dcf-b59631c77d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eb422b-4cef-4a9d-84f7-49b205ece358",
        "cursor": {
          "ref": "04bf6f42-f81a-4035-b06d-2cf2d7c8c822",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d8f67b6b-fec2-4d84-b1e9-c9317a76559e"
        },
        "item": {
          "id": "a8eb422b-4cef-4a9d-84f7-49b205ece358",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "702678f2-a053-4b6c-a345-2100d9073498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e67dbb-a2a0-4442-8e0d-94881b3772da",
        "cursor": {
          "ref": "71d317fa-45f0-4dee-87fa-51c796755b17",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e244949c-ac6b-4d53-ab40-edb097a03da5"
        },
        "item": {
          "id": "c4e67dbb-a2a0-4442-8e0d-94881b3772da",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2cb0e71d-aae3-4296-9da1-70e2866fb981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375c43b8-34cd-4966-bd19-788882d3f389",
        "cursor": {
          "ref": "6138aca4-ce87-47c9-ac56-11d1795677c4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d754f9d1-8c05-4560-8990-214ebceb31b5"
        },
        "item": {
          "id": "375c43b8-34cd-4966-bd19-788882d3f389",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e340abc3-c30e-4859-bc06-8c95f3315295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179d0279-2692-486d-990d-80c42a98735b",
        "cursor": {
          "ref": "3f9c9736-3212-4e8e-8a80-bbb130c15335",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d13a8f65-6bbe-49bd-bda9-a4844255274d"
        },
        "item": {
          "id": "179d0279-2692-486d-990d-80c42a98735b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ce0fa8fa-e8ce-49e7-ae20-4e1cd1a3a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c850bcd-e1cf-4555-8751-ac92b6b05d3c",
        "cursor": {
          "ref": "17524586-bd3c-4f7f-bffc-fa7fc029b164",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "db27634e-daee-494f-9921-30422ba9897b"
        },
        "item": {
          "id": "6c850bcd-e1cf-4555-8751-ac92b6b05d3c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "52f170ae-830d-414a-a242-2c3e9ba9df74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f76f11a-83ec-4d68-96d4-ec0596872026",
        "cursor": {
          "ref": "3d59b728-d5e2-4613-8a9c-26fdd60af3bd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "57240b22-9e32-4f08-8859-25db2ea7a9a3"
        },
        "item": {
          "id": "2f76f11a-83ec-4d68-96d4-ec0596872026",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0f281b4-6d7d-46ac-b150-835966c3bde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b12b82a-dba3-480f-bca9-5dca63d752f8",
        "cursor": {
          "ref": "6e478e6f-cf6f-46fd-b810-2f4a17554949",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7ba63778-a7ca-44a4-a9b1-b8f38cc1400d"
        },
        "item": {
          "id": "2b12b82a-dba3-480f-bca9-5dca63d752f8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b3958b56-4790-47ee-a284-76888f2338d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f322af-d4ab-42a6-8b2e-94156898b4f7",
        "cursor": {
          "ref": "18b5c28b-9239-4ed4-aaa1-f6029412d3cd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "000c3641-0b5b-44a4-ab03-532f02e188ba"
        },
        "item": {
          "id": "00f322af-d4ab-42a6-8b2e-94156898b4f7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "26d5c53f-1e10-4755-928d-b653d1d1a499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068d5e6d-c65b-4bef-9986-c61a325addb2",
        "cursor": {
          "ref": "34a2cfe2-02dc-4da8-ad24-86a940826dfe",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c0c7108-9061-4774-9fa1-06cbdced8b14"
        },
        "item": {
          "id": "068d5e6d-c65b-4bef-9986-c61a325addb2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "57bb1b9b-042e-4a18-86aa-0c404febde2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7892e3ad-e08a-44df-81bb-b6dc2987c914",
        "cursor": {
          "ref": "c969bae1-0624-4615-b225-71e449e2ae93",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30a3a926-7aef-43fd-b1fa-93f4d68bed83"
        },
        "item": {
          "id": "7892e3ad-e08a-44df-81bb-b6dc2987c914",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "52274d86-2175-49dc-ae1c-9e9fd1de7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2c1a19-cc20-412a-a07c-73b4225ffcdf",
        "cursor": {
          "ref": "4d3e9821-21a9-48ac-949d-e36cc31ddc16",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3af03769-3fd7-4de5-9922-ca554ef5885e"
        },
        "item": {
          "id": "0f2c1a19-cc20-412a-a07c-73b4225ffcdf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "46472362-76ca-49ce-bc12-674e7ee4c1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f61ab5-d85c-4b7d-bb3c-d9e4bbf5a23d",
        "cursor": {
          "ref": "734143ed-f1d7-48d0-bde8-32f0ab1bb48e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "532780ee-9f8d-4b3a-b568-fac2276eaf19"
        },
        "item": {
          "id": "71f61ab5-d85c-4b7d-bb3c-d9e4bbf5a23d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3f288b7d-c9b0-4541-8098-96e4d93f3720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345adee1-ef7e-4066-bc11-2e2ebdbd561a",
        "cursor": {
          "ref": "a18ff977-b925-411b-9352-72b3b9bd8cde",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d061ed08-e1b2-4cb4-a40b-ffa6261fcd51"
        },
        "item": {
          "id": "345adee1-ef7e-4066-bc11-2e2ebdbd561a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2d135fa7-30a2-44e3-8127-988b66be899a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b6772-66d9-4b84-b766-f208f08500f3",
        "cursor": {
          "ref": "e822cf9d-ec6d-4c20-8a1d-086af7b0ddac",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a4deb959-fef0-4b52-a60e-cbf9a9ed91ba"
        },
        "item": {
          "id": "786b6772-66d9-4b84-b766-f208f08500f3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "22929f13-bc71-4b77-80cc-009c3edbb396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729fcb2f-4062-4c52-96e3-f445ab6031d3",
        "cursor": {
          "ref": "b0f09a0b-277d-4d60-8fe4-3cdf78f93d22",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8d962a13-4ffa-4892-8cd8-3a7f4f596450"
        },
        "item": {
          "id": "729fcb2f-4062-4c52-96e3-f445ab6031d3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bae349c9-8d7e-47bb-af07-d3c7d3c78e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3111d75-5d4d-4aee-956a-12970099d5e0",
        "cursor": {
          "ref": "6d67c3f8-40e2-4b01-9988-05b32f6f86d5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "df03c8fb-a726-43a7-a617-4b1074c6e3a3"
        },
        "item": {
          "id": "d3111d75-5d4d-4aee-956a-12970099d5e0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5e6a712c-2cbe-48eb-b73a-458692cb0776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b7bbae-768e-46cf-bab0-49b1af781ef2",
        "cursor": {
          "ref": "46cc3503-f913-432a-9a11-a498acd1b91f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7fb92ed7-261e-4821-9e1d-810c1d7a4a99"
        },
        "item": {
          "id": "f0b7bbae-768e-46cf-bab0-49b1af781ef2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dd90bbe4-6e2e-4b39-80c7-52343a94238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf92810-ed46-432f-8e7c-3e5b1b731ac5",
        "cursor": {
          "ref": "8c879330-624c-4072-a614-fdcac65c1c2b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e30355be-f763-45ac-be12-a9acb18a5ddc"
        },
        "item": {
          "id": "8cf92810-ed46-432f-8e7c-3e5b1b731ac5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4ab4e0a7-85f2-413e-bddb-6893ac9fabb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c2c8d-3040-4f4a-863e-91ed9d552816",
        "cursor": {
          "ref": "d049ea07-eab9-4969-8310-c11ab307abfc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "78924159-d36c-4791-8dc6-53b3cc633ef6"
        },
        "item": {
          "id": "832c2c8d-3040-4f4a-863e-91ed9d552816",
          "name": "credentials_issue"
        },
        "response": {
          "id": "deef2cb6-3c9b-40b5-9827-339af63ac0ae",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "464ff9e9-5879-4c54-b078-290ca1cc6565",
        "cursor": {
          "ref": "7c8aa3b8-5b88-48e5-a9d1-1967ab217fff",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "47eb50f8-09ad-45be-8800-b941a5b7ed15"
        },
        "item": {
          "id": "464ff9e9-5879-4c54-b078-290ca1cc6565",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7f0f3e8d-46ff-4a1d-a13a-696e44cbceec",
          "status": "Created",
          "code": 201,
          "responseTime": 389,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb53b7e-1a59-48af-abc4-35262e394b4c",
        "cursor": {
          "ref": "814af1e1-7e6a-41bd-b007-49c33c65e769",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f0c81922-df32-4d70-9ac4-d4e1d7a6c1cc"
        },
        "item": {
          "id": "bbb53b7e-1a59-48af-abc4-35262e394b4c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c7b7789c-5744-47ef-b82c-f0d8baf7f9f6",
          "status": "Created",
          "code": 201,
          "responseTime": 132,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e54e041-6315-4f63-87a3-fc5aeefc9e31",
        "cursor": {
          "ref": "1d3594c8-6898-4984-91e7-763c5b965852",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "190cbfa2-de9c-4f9e-8bfe-367f0a3241c9"
        },
        "item": {
          "id": "7e54e041-6315-4f63-87a3-fc5aeefc9e31",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9dbe5258-acec-4e05-85b0-32261daa1ce7",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1e424e-c14a-4430-acb9-84b32afdca0b",
        "cursor": {
          "ref": "0ab4c45f-40ef-4443-b055-16db8f88c8fd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93e5fe34-c8f5-4ed3-92a1-c8b13a99ad09"
        },
        "item": {
          "id": "ff1e424e-c14a-4430-acb9-84b32afdca0b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0a1329d8-608c-43a1-a087-205ea655ebe1",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "758e8683-0267-4652-9447-8f3c9dfaa221",
        "cursor": {
          "ref": "d0bd8f60-42dd-4933-ab1d-9ceab2d3499d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cb738116-f31c-42c1-9638-f7a727d91bb4"
        },
        "item": {
          "id": "758e8683-0267-4652-9447-8f3c9dfaa221",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e324768-4a0e-4aff-964a-4b864a9e417e",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c8660d-7f26-4944-ac1f-938b0cf3ed73",
        "cursor": {
          "ref": "5dad992c-9b6d-44e4-933b-8a4e0d66ffc9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aa1a825d-8a02-4e69-916b-06716557a3ac"
        },
        "item": {
          "id": "52c8660d-7f26-4944-ac1f-938b0cf3ed73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "78fe760c-de91-4da7-acc5-7cb430c024bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57268f26-c169-4023-a314-b7ab77a298b2",
        "cursor": {
          "ref": "1c6c1fed-1d06-4cee-839f-348585090bd8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "019a1775-102d-4ac0-a9df-cbda3146718e"
        },
        "item": {
          "id": "57268f26-c169-4023-a314-b7ab77a298b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a75aa7c7-ba11-4073-bc0a-6984c2e808f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d896da-f9f8-4f35-af91-010376eaec9e",
        "cursor": {
          "ref": "521e733b-35e9-471d-82a0-d3d0f93ae7e2",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8d8c41a3-0c46-4064-946f-a7380a60d4e9"
        },
        "item": {
          "id": "04d896da-f9f8-4f35-af91-010376eaec9e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2e46b540-4d32-48df-9bcc-1ec1f4163bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff92009f-532a-4ec2-9479-5ee2d73697d1",
        "cursor": {
          "ref": "b8948c4c-dee3-48c2-b29d-58c52458bd48",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b24aaf34-0c2e-4198-ab1b-99efc7ebe29d"
        },
        "item": {
          "id": "ff92009f-532a-4ec2-9479-5ee2d73697d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17899c88-79c9-46cd-9db2-1c44546ac370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70229532-4ace-4ac2-bfb9-32aa46e2ab2d",
        "cursor": {
          "ref": "39f2d69f-b090-47eb-85dd-740d15547655",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5a57b8f2-5c62-4817-addc-b2e56b9cfe8e"
        },
        "item": {
          "id": "70229532-4ace-4ac2-bfb9-32aa46e2ab2d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "28fbc724-22f0-4548-8f36-e50b264aed32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b4713f-79fb-4c47-9c3e-a6bcaa836694",
        "cursor": {
          "ref": "d3467566-0ed5-4a5b-bf2e-1f07fca2c721",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ffc67370-c01f-4716-9785-d585a2c77bcd"
        },
        "item": {
          "id": "46b4713f-79fb-4c47-9c3e-a6bcaa836694",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f674f36-912e-4dcb-b110-216a68240d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883a6a85-c5eb-4fcd-acfe-345d590dce0d",
        "cursor": {
          "ref": "35580a09-797c-4d33-bce0-5a2e63de20d9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a523452a-0d5d-4e4e-8501-3f2bec8527c4"
        },
        "item": {
          "id": "883a6a85-c5eb-4fcd-acfe-345d590dce0d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "705bdb60-1a7b-4dfe-bf34-079d3b912546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e850fc19-27cb-4ae5-8e4e-dc41582257a8",
        "cursor": {
          "ref": "65b5ad33-8ac3-47fb-9b2a-ab38f7ff20cf",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7d1faebe-e674-4953-b70e-0a7afe4c0cad"
        },
        "item": {
          "id": "e850fc19-27cb-4ae5-8e4e-dc41582257a8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f21d9c58-c93f-454b-80c6-e18ca776b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31b18d5-d39e-46c7-9106-221dc33bdad0",
        "cursor": {
          "ref": "0d91d16d-4e8a-4368-b44b-01fbb5a05f5f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9b720cc2-4d01-4b7e-a818-cd846521d236"
        },
        "item": {
          "id": "b31b18d5-d39e-46c7-9106-221dc33bdad0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "64428c2c-dc11-4618-baad-4f20f85dd67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f470c82c-0b43-46e4-a682-04c438a95777",
        "cursor": {
          "ref": "bb5c04aa-b523-467e-86ef-4ec35552e3fb",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c3fad31-eeb5-4a24-ad96-b242e0bc003a"
        },
        "item": {
          "id": "f470c82c-0b43-46e4-a682-04c438a95777",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "37ff3cc8-8a22-4fcb-a8ed-335985c86160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de45b14e-d89d-4ea2-93a1-603e5d4d8b05",
        "cursor": {
          "ref": "f359ee78-d5b9-432b-89d0-732cccb9fdcb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9f4b2a0a-6119-49c1-8275-89c72024dbc4"
        },
        "item": {
          "id": "de45b14e-d89d-4ea2-93a1-603e5d4d8b05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93932d37-72e5-4601-9ebc-55fe30c852c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9726760f-f508-4217-b1cf-0b99d7628501",
        "cursor": {
          "ref": "1e8b73b6-048f-4530-a054-7ae0acb7f913",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5569d1e3-1ac4-40d7-ac6a-aa163b19cc5b"
        },
        "item": {
          "id": "9726760f-f508-4217-b1cf-0b99d7628501",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02b513e4-17c4-4203-b5fa-b23cbd569a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7fdf3c-771e-43c3-bd6b-981418adffa3",
        "cursor": {
          "ref": "f130de09-67c2-4d73-b5de-6d11fb8356cd",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e0305e44-4c42-46b8-9a9f-f5f3330c0d7b"
        },
        "item": {
          "id": "8b7fdf3c-771e-43c3-bd6b-981418adffa3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91f9d279-0e73-443b-8290-e70b594eb805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b5b12c-b3a7-4503-b933-da7ddcb30e66",
        "cursor": {
          "ref": "6813c211-a472-44d1-a8b3-01992595b8ed",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "60e6aca6-3691-48b2-9401-f4de1f4aa740"
        },
        "item": {
          "id": "36b5b12c-b3a7-4503-b933-da7ddcb30e66",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7802181c-8971-4582-a996-98ac0c110197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c373b871-4b5a-4796-b27b-d885bcaa4953",
        "cursor": {
          "ref": "a276f9cd-9b42-4524-a46e-5b1601e79671",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "116a3a0f-0db4-40af-9e08-a0542bcc6654"
        },
        "item": {
          "id": "c373b871-4b5a-4796-b27b-d885bcaa4953",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52c2d0b4-c246-4ae0-8472-df091e4f4590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95602e32-04a7-4c00-b417-230d3a6538ff",
        "cursor": {
          "ref": "08ba9353-5a08-4035-8ef6-8afec4cc3fed",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dcef8998-8e56-4453-8c84-dcf32b3a1962"
        },
        "item": {
          "id": "95602e32-04a7-4c00-b417-230d3a6538ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "56a18e15-a3a2-488f-bfe2-f4b8b0c36fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a81f4af-de53-4da4-9441-71f53ca40b3b",
        "cursor": {
          "ref": "bdab4d65-d446-4793-8beb-9e4d836795b7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "94d98164-dac1-4d12-8846-5fa931baf921"
        },
        "item": {
          "id": "9a81f4af-de53-4da4-9441-71f53ca40b3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3ae6efc-031c-49ca-9034-75fdedff705e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a449d373-daaa-48e2-b069-e6e9b669b6a5",
        "cursor": {
          "ref": "2e3ae077-04ed-4997-a5d0-97c85f9ef154",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "19853db7-2776-48aa-8061-0249b1cfba29"
        },
        "item": {
          "id": "a449d373-daaa-48e2-b069-e6e9b669b6a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ba135f7-8e22-4b42-b3c5-b8f310c4b8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ef1a4-679b-401b-8131-dfc4333f2786",
        "cursor": {
          "ref": "6f0cd489-75ec-41b9-8dfb-44f39fc20b49",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7e6b416-304e-4014-9cbd-545cb54ae054"
        },
        "item": {
          "id": "660ef1a4-679b-401b-8131-dfc4333f2786",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41018451-18f3-4d8e-9e68-fb6b5306a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d2bd9-989d-4a87-8b40-f06584e7b967",
        "cursor": {
          "ref": "3ee39f23-21b7-441a-8e49-b77f5a5ef086",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "46ba1709-ab30-4fee-9789-f4e5276a67eb"
        },
        "item": {
          "id": "ff7d2bd9-989d-4a87-8b40-f06584e7b967",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4e122ca3-94fb-4a38-9358-94c79f447c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d35d1b-0e98-46b7-b4f2-756143f7a578",
        "cursor": {
          "ref": "39ac1e5a-222a-484d-997d-eacac84c5477",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d02781c7-c79f-4fe1-b265-da0364ad7708"
        },
        "item": {
          "id": "28d35d1b-0e98-46b7-b4f2-756143f7a578",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "854d9fa9-5ee6-464c-85de-8ab738f42a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a256371b-1ecd-430e-adee-53cf16d6d86e",
        "cursor": {
          "ref": "b142d19d-ee55-4e26-bfcb-d41e19df1a5c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "be793e48-939d-4ccb-bffd-dbe6161d12c0"
        },
        "item": {
          "id": "a256371b-1ecd-430e-adee-53cf16d6d86e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0a16c994-351c-42c3-ac8a-6dabcf166d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b241afa-1490-44a2-af3e-8d02725c393b",
        "cursor": {
          "ref": "48c8770d-2f97-4237-bfde-04f9a9d11a01",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6b9ddbb6-c58b-4c0e-b2ea-c125abfdee8e"
        },
        "item": {
          "id": "9b241afa-1490-44a2-af3e-8d02725c393b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e3a6e36b-83a7-4a35-a73b-a9bceebcb724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343ba1a-f03e-45b1-bf76-f58b0f95079d",
        "cursor": {
          "ref": "7189b786-c0d8-4abe-a228-b78565cca7ce",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2e031a85-1a75-4bd2-ad03-a26b33c7f032"
        },
        "item": {
          "id": "6343ba1a-f03e-45b1-bf76-f58b0f95079d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f474935-5bc8-45cd-b188-8b2585db2e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbe62a-a018-4a14-86f5-ddb36caedaca",
        "cursor": {
          "ref": "52258e10-9505-414d-ae69-b7924369c048",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e9f31e57-b84b-4cac-9840-8ddbe7d09a2a"
        },
        "item": {
          "id": "62bbe62a-a018-4a14-86f5-ddb36caedaca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7981f949-e9be-4e6d-a17f-bc3c46ce01da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4efdced-ef83-44dd-8512-52f7c335167e",
        "cursor": {
          "ref": "5254edae-ce46-44cc-b455-89860c866546",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9cdfe002-4968-4ce0-9478-f082285f2429"
        },
        "item": {
          "id": "d4efdced-ef83-44dd-8512-52f7c335167e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "131a1ef7-da5a-486b-8e15-bfbe924def31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260abccc-7846-4c5f-9c11-47ab8783b644",
        "cursor": {
          "ref": "a99e0992-3fcf-4de5-a611-f17614f8403e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "883d93a9-2620-4795-9401-77c83ababb2c"
        },
        "item": {
          "id": "260abccc-7846-4c5f-9c11-47ab8783b644",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "610f8fe4-dae8-4c33-af73-80c05165e490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c24f12-848f-46fa-a344-390c1ba78069",
        "cursor": {
          "ref": "d695e65a-03cd-47bb-b56c-51e860317bef",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a897674a-0f4c-4cfb-919f-0288692ea982"
        },
        "item": {
          "id": "52c24f12-848f-46fa-a344-390c1ba78069",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cc64186-5c12-48ac-ace8-bcf60015645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb61dc09-d47e-4a39-bcaf-a1d2d986d0f4",
        "cursor": {
          "ref": "af6f85e9-6b43-4e13-bcd4-64c478d2c8a0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "059605db-4afb-4dd4-a9b9-65536aeb379e"
        },
        "item": {
          "id": "bb61dc09-d47e-4a39-bcaf-a1d2d986d0f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "42ddc2e4-e639-476e-bc1f-d54f6f7c1840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3d1bc5-5df8-4cd3-91d4-63376a11beba",
        "cursor": {
          "ref": "8155d1f0-4685-4821-975f-e116a207ef76",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "12fa4b39-e37d-4022-b1d4-dbf43f6d797c"
        },
        "item": {
          "id": "bf3d1bc5-5df8-4cd3-91d4-63376a11beba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4520a135-86b2-4d2e-bf47-483ba82b48a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99c17a3-b7b3-4f0b-8e1a-776d1b69a1b2",
        "cursor": {
          "ref": "d0dbf915-7fb1-4782-9590-07fea24ac64e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "10ddf21c-3745-47d3-ae99-d829d06a211d"
        },
        "item": {
          "id": "e99c17a3-b7b3-4f0b-8e1a-776d1b69a1b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a6b19704-8e0c-4087-8648-35b990bc3690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563ebb3c-2d78-40b2-bc64-133f7e857c35",
        "cursor": {
          "ref": "34769f4c-13e6-4334-a13c-fb8d03650395",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1d08aa98-a821-4a38-8672-f8d930600333"
        },
        "item": {
          "id": "563ebb3c-2d78-40b2-bc64-133f7e857c35",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aeb0a530-7d66-4946-a5e4-1b13a909b805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb42909-05d9-433a-ab53-dfff58b656ed",
        "cursor": {
          "ref": "7ab8f5e2-46f1-43e7-b91c-8bad3243e5c4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ca2aec7b-720c-4811-becf-746c7e18b7a6"
        },
        "item": {
          "id": "6eb42909-05d9-433a-ab53-dfff58b656ed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a32cb06-22c3-49d2-be01-b96762ab5b22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc442f2-ceac-4ad5-bd0c-da2dc8d68b69",
        "cursor": {
          "ref": "344af615-32ac-4e8b-b9b0-6626133048b0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b7543c7-2962-4a20-ae0a-cc0acabb1542"
        },
        "item": {
          "id": "afc442f2-ceac-4ad5-bd0c-da2dc8d68b69",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9139638-14a8-47ad-b716-e3862ee7e1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f296f-36f6-4ae5-98f2-d3155edda7a2",
        "cursor": {
          "ref": "262c5ff7-f243-490b-8d1d-47f8b6f9c043",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12fb02cc-2e03-492b-a682-40bc4f6c4546"
        },
        "item": {
          "id": "8f1f296f-36f6-4ae5-98f2-d3155edda7a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f747931d-dc9e-43da-bdb0-e492cec3bcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc838ea2-c98a-4367-99eb-fb25c06a36e0",
        "cursor": {
          "ref": "f7bc1b1e-25b8-4454-b0d2-bc0e477edbeb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02654fa7-eba8-4e64-a4a2-d7dbd99e3a5c"
        },
        "item": {
          "id": "cc838ea2-c98a-4367-99eb-fb25c06a36e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13f30d30-b645-4bed-abf1-e83fdc39d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9244cd0-8591-48e2-a834-06de5944e299",
        "cursor": {
          "ref": "f30a6830-abe5-41ba-b7c7-b5d70e84bb82",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d133475a-94ec-442e-accf-2d926c10c071"
        },
        "item": {
          "id": "a9244cd0-8591-48e2-a834-06de5944e299",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67edaf2c-9e91-48e2-90b7-61a48ddd1df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57efd703-a593-4f8b-bba6-baf7e7150529",
        "cursor": {
          "ref": "70ffd094-6c86-48f5-be45-c80aebacc661",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8e94aa9a-5de5-4072-89ed-fdb54147a6ce"
        },
        "item": {
          "id": "57efd703-a593-4f8b-bba6-baf7e7150529",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e00b541f-75bd-41de-88cd-f63a6b65c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205c4874-7c1e-414b-aa2a-9e1a44286c14",
        "cursor": {
          "ref": "29cc2ce1-5fa1-4462-851f-e06ebcb0a644",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d0aec0b3-6255-4ce3-809a-8cb573518aa5"
        },
        "item": {
          "id": "205c4874-7c1e-414b-aa2a-9e1a44286c14",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8489dbda-74f0-497a-b02e-1e0c17dac008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea342b91-5fd0-42d4-ac36-de282eb607b5",
        "cursor": {
          "ref": "99c091f5-8753-41c9-92dd-cbbc0edf6a03",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "39838590-9310-4981-9db0-a55d96574850"
        },
        "item": {
          "id": "ea342b91-5fd0-42d4-ac36-de282eb607b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a705fe8-0346-4ee6-8377-5ad98cf476fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c59377-4428-4409-b567-56dd078942ac",
        "cursor": {
          "ref": "84e87944-8931-46e8-90a1-18f335a193b6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "182d4d33-90c5-4190-9cfc-4df29d25759c"
        },
        "item": {
          "id": "d8c59377-4428-4409-b567-56dd078942ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d113eb7e-4c91-4742-990d-f655cc4c1b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddba5f6-ac1e-42f5-a618-3ec274345d9d",
        "cursor": {
          "ref": "79c7024d-9dd4-4db8-811d-4d0789c1bc7c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "660c4c25-5027-4e1f-a205-e48c042a9460"
        },
        "item": {
          "id": "6ddba5f6-ac1e-42f5-a618-3ec274345d9d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a59488c2-f305-4ce7-8bd8-1c6dad2ac14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad1c9bc-bd9d-4124-be4e-df0ee98b9e20",
        "cursor": {
          "ref": "0f069d06-3259-423b-bfca-0c2dc37d6997",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5fa73c69-8281-4459-b9d3-4d678d3b5305"
        },
        "item": {
          "id": "bad1c9bc-bd9d-4124-be4e-df0ee98b9e20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "760e57f6-9c38-443b-910c-9e407b4e5fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5999a6f-0336-4220-b311-8ea365a00361",
        "cursor": {
          "ref": "cb3486e2-eb56-49c9-a8ea-cfc21404e383",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eda2af44-15ef-4435-bc26-588d0ca35bc8"
        },
        "item": {
          "id": "f5999a6f-0336-4220-b311-8ea365a00361",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c53a6947-dd99-4af4-abcd-43a5f7a85e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65365d01-119f-43f3-860f-89e6b10ef025",
        "cursor": {
          "ref": "ed85e568-6334-48de-abf4-a08f83f1c644",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c26ad2e8-5637-4e42-bfaa-7ae86dd9edec"
        },
        "item": {
          "id": "65365d01-119f-43f3-860f-89e6b10ef025",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "67232847-f580-49c9-bd30-67625ef4a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0411bc4c-46b1-4342-8d1b-a9d2e06aaa1b",
        "cursor": {
          "ref": "05452a85-30ab-492a-bda1-183bcb748f10",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ced9325a-9188-4628-9613-707ca34e19ca"
        },
        "item": {
          "id": "0411bc4c-46b1-4342-8d1b-a9d2e06aaa1b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f732ef78-c088-420c-821c-429ca9bed048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a6570-6dae-472e-a211-e0744b8fc542",
        "cursor": {
          "ref": "fd269483-f778-45fa-be3a-0be124bafc9b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d3e221c-77c7-4933-843e-77dfd1f559f3"
        },
        "item": {
          "id": "ea0a6570-6dae-472e-a211-e0744b8fc542",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2c19bfb5-44f3-4e0b-b341-767fe525746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0430c3f8-0eaa-42a0-a3fa-b88330a00c6c",
        "cursor": {
          "ref": "103f677b-6d91-4405-8b1a-a0e393643905",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "07a33c9b-80fb-4eff-93e3-10ea4f54711c"
        },
        "item": {
          "id": "0430c3f8-0eaa-42a0-a3fa-b88330a00c6c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2c1f9c34-b990-4d47-800d-4128dde91d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0d8a35-b802-4853-bf9f-71677cbc42a5",
        "cursor": {
          "ref": "ee44f9a6-e43a-4c2b-a7a1-a1e5baa92ba6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b5ce2792-140d-4f81-8296-02791234601f"
        },
        "item": {
          "id": "8c0d8a35-b802-4853-bf9f-71677cbc42a5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "766ca604-df29-4a41-a55d-47efca7454c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada75118-544e-4716-8482-ee8b591297a3",
        "cursor": {
          "ref": "b8ca66b2-0a6c-48e6-87f6-8ab35ae5d064",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "22386f7f-7704-439a-8099-acd0455e804c"
        },
        "item": {
          "id": "ada75118-544e-4716-8482-ee8b591297a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20ab47e7-0661-490e-9354-837b219304f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65462b4a-43b4-4766-a9b3-c7e1a179dbc3",
        "cursor": {
          "ref": "123f0406-cbf7-426b-9e09-3373f8720dbe",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e52af5d-a356-4a71-a075-ef5cbd9e1352"
        },
        "item": {
          "id": "65462b4a-43b4-4766-a9b3-c7e1a179dbc3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "647f8a64-859d-4511-a367-4368a22637b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4236407-59e0-48aa-9622-128e6224edec",
        "cursor": {
          "ref": "5baf9e0d-fd23-4424-bc3e-0f60771e71b4",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d89d3409-0689-4650-b451-5adec0f3d96d"
        },
        "item": {
          "id": "a4236407-59e0-48aa-9622-128e6224edec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6fe71168-e9b6-4f84-899c-0a62c462ba3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfecf2b-49e6-45fe-a6d1-0db6d471b132",
        "cursor": {
          "ref": "35ae1314-b816-414c-ae4f-a0cf0f07e37e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ad93d5b9-67d1-4120-aa1b-a1a5b40fc976"
        },
        "item": {
          "id": "5cfecf2b-49e6-45fe-a6d1-0db6d471b132",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc03321a-1892-418a-aa39-9ad19f812347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd4be9-006a-4ff4-a0a6-4627500c49ae",
        "cursor": {
          "ref": "2751d763-5fcb-41ec-ad1e-eb065b5d7b0d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ab31b355-2288-4a9d-9ca7-8edb120a15a3"
        },
        "item": {
          "id": "5ebd4be9-006a-4ff4-a0a6-4627500c49ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1825ae89-6253-43c8-98e4-9964d944c415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69d977e-8ade-4796-a0e8-78efcf251235",
        "cursor": {
          "ref": "16ca7de2-8dba-4485-b9b8-85c9aa8429ee",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "32bd599b-b055-4c2f-96c6-9e5ae998f135"
        },
        "item": {
          "id": "c69d977e-8ade-4796-a0e8-78efcf251235",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce79d00d-7061-4063-ad3d-ffa5f4ece23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19acb79-4f51-471f-95d1-90b69888ed4e",
        "cursor": {
          "ref": "87288643-f397-46f7-a67e-cf1bb556a5bd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a4fb0f47-e9af-4c45-9568-a8ede22d823e"
        },
        "item": {
          "id": "d19acb79-4f51-471f-95d1-90b69888ed4e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0ac325c-e2da-456f-afcb-3825fe1c3136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d9712-81cb-46c7-b5af-8c155fc24c3c",
        "cursor": {
          "ref": "bd5614a5-90ff-49f6-8820-55ea614c0760",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b951b0a-cca8-4191-ab16-6e5189a3165d"
        },
        "item": {
          "id": "230d9712-81cb-46c7-b5af-8c155fc24c3c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8e124d10-a789-4f67-ad53-a9dbac1470ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add78b3-f2b7-4e02-9a3e-f518d0c34b89",
        "cursor": {
          "ref": "88e37cd6-8e1a-4886-a45e-1fce1b0ddcdf",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0541321b-8958-4ec1-9175-a66804e35d71"
        },
        "item": {
          "id": "3add78b3-f2b7-4e02-9a3e-f518d0c34b89",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d3087642-b191-4583-b705-a18b51149940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83213fb-250a-4894-a336-cb9df43f808f",
        "cursor": {
          "ref": "dfe8b357-9556-40c4-83c9-860b8084ca0f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "866d18cf-e6af-418d-8de6-a321ff9d56d5"
        },
        "item": {
          "id": "d83213fb-250a-4894-a336-cb9df43f808f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a0cca29a-20cd-4e3a-a7d8-3fc2a723504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4410168d-a295-4bd4-8fa6-388df4303d7a",
        "cursor": {
          "ref": "3a131766-8db1-4b54-80f8-7d25d4cec2c2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4dd201e8-4e0f-41bc-a90f-7e10e602f00b"
        },
        "item": {
          "id": "4410168d-a295-4bd4-8fa6-388df4303d7a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7360fd92-76a6-4bf4-823e-b4bec88db68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1357e-ab03-4130-a9ab-bde127eae23f",
        "cursor": {
          "ref": "ea4d6b70-d8d0-4650-9c37-62bc3e38b0c0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "32cb765d-c9f6-413b-a90b-510f21963e22"
        },
        "item": {
          "id": "9cd1357e-ab03-4130-a9ab-bde127eae23f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b68fa4d5-0a97-4588-a827-f3769cc2ff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff749c-1722-49ba-b99c-8c41542c536c",
        "cursor": {
          "ref": "bf1844f4-0525-4cd2-a66c-a649e0e89473",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c86e3c2-c2fc-492b-845d-67f68c7d34e3"
        },
        "item": {
          "id": "8cff749c-1722-49ba-b99c-8c41542c536c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d214ceea-202c-4d3a-b4fc-68f4fdb769c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b941ca9e-1447-4867-9ae7-ee0694d2c29f",
        "cursor": {
          "ref": "30e50801-a99f-4533-b5ca-65ee14171c2a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "df681932-379c-4ace-b159-1795082428c3"
        },
        "item": {
          "id": "b941ca9e-1447-4867-9ae7-ee0694d2c29f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df05135f-a44c-4e8c-b374-d1d161538ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c94559-bf56-47b4-aa70-30803c862bfa",
        "cursor": {
          "ref": "943e05d1-4a16-4e9b-b900-6b2c9f257823",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f2c6676c-7120-4cb6-8832-8909270e20e9"
        },
        "item": {
          "id": "93c94559-bf56-47b4-aa70-30803c862bfa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3d40ee3-24cd-43a6-a5b9-76c4d977c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699509ae-9b9b-4d60-8e70-4714ce6cf2e6",
        "cursor": {
          "ref": "1faf525d-2be4-4002-9239-709cd6ca26f6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "76489cc6-5eb8-4333-b4b2-38b3a6c03b06"
        },
        "item": {
          "id": "699509ae-9b9b-4d60-8e70-4714ce6cf2e6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b36af2c0-75ab-412d-8bc6-4d3d3b806401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54ae32d-f911-44c5-96c0-e4821459ba4a",
        "cursor": {
          "ref": "a63d3fe3-36d6-474c-9c2b-427f5af34bc9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "76c5da18-32f8-4e42-8560-1b76c0a316ee"
        },
        "item": {
          "id": "b54ae32d-f911-44c5-96c0-e4821459ba4a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "700cd5ed-0b87-4ef1-bb47-825e6ff53ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d5b43e-3884-4acc-802d-c21136d2fd92",
        "cursor": {
          "ref": "1798d896-6a6f-40b9-8da6-1e533f307237",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5494052b-a043-412a-95be-90a3e344d185"
        },
        "item": {
          "id": "68d5b43e-3884-4acc-802d-c21136d2fd92",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fee1c800-c749-4c1a-bcd3-41510d861040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfd9256-8f45-464b-94df-e4590d14b55f",
        "cursor": {
          "ref": "d5fb0186-3f2b-4358-a746-0c999249d24a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e4a7875b-2228-4291-9775-83222c48c9c6"
        },
        "item": {
          "id": "6bfd9256-8f45-464b-94df-e4590d14b55f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6869216c-8bc5-4d0c-a036-4132f0674f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6269075-7c14-46fe-9999-4ebe30d712be",
        "cursor": {
          "ref": "ad5089ce-400e-4555-9a8a-a8e98fe24bf1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e8366fe8-e152-4e33-9b1f-4ff9e7bdf40f"
        },
        "item": {
          "id": "c6269075-7c14-46fe-9999-4ebe30d712be",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c7d79612-0d21-4178-8287-19206ff79bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aea9fb-dc4a-4418-9109-347b75de78ee",
        "cursor": {
          "ref": "a30afaf4-aba3-45b0-a616-a48af4897079",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eaca7e74-aea6-4b93-8675-c2254a68eef7"
        },
        "item": {
          "id": "73aea9fb-dc4a-4418-9109-347b75de78ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f50c28e-ab0b-4049-b402-3c0f8d251f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b8c4e2-fee3-4731-8b71-6ba6a277775a",
        "cursor": {
          "ref": "2d89f66d-706d-46b8-9f21-96d65133973d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d789e4dc-242d-4492-9edd-9b2bffc6ef17"
        },
        "item": {
          "id": "48b8c4e2-fee3-4731-8b71-6ba6a277775a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "809bd240-beb9-4838-b8c1-3dbb3f05e17d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6431f6da-dc79-4611-8424-1dde1f765804",
        "cursor": {
          "ref": "a819c9f5-57c9-461d-b101-556d75827815",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fde4a63f-1a69-457a-81c1-c6cdd843737a"
        },
        "item": {
          "id": "6431f6da-dc79-4611-8424-1dde1f765804",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4bcdd87e-d9c3-4ffd-a3f3-8f33f1123479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24176d63-dfdc-4ef7-a66d-3426cc63bf6e",
        "cursor": {
          "ref": "da68076d-4f75-4b89-b85e-68e5d7ee81fd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "594475fc-af2c-40be-a510-362ddcf9deba"
        },
        "item": {
          "id": "24176d63-dfdc-4ef7-a66d-3426cc63bf6e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5225ee39-d8e2-4636-b3fa-25578c4491e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8442d2c9-1d8b-47e6-b427-c13f238562c0",
        "cursor": {
          "ref": "7f597a06-4347-4e89-a3e1-dd7f8d77f3e6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f09a7d16-a79d-4e02-94ce-bc8451d7710f"
        },
        "item": {
          "id": "8442d2c9-1d8b-47e6-b427-c13f238562c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "52b73388-b75a-408c-8aa7-47737a041c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d9a518-da8e-4134-b406-b5bc8bc3233a",
        "cursor": {
          "ref": "e6def7c0-28d7-4c5d-8ae5-11dc107b8284",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a26bf938-b33d-47a1-9f91-85f3751342b6"
        },
        "item": {
          "id": "68d9a518-da8e-4134-b406-b5bc8bc3233a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c416b6d3-eae6-444c-86a9-9071444127bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025e4d9d-45eb-40c7-906e-9c1568a563fe",
        "cursor": {
          "ref": "e83d6db3-37a1-49e8-abaa-a9211078cc5d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "493a5b6f-73f0-40d1-b1a2-742247a34853"
        },
        "item": {
          "id": "025e4d9d-45eb-40c7-906e-9c1568a563fe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64d83e80-6c76-4e8e-a18e-8f12194dead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6966152-2bf7-4bb0-97c0-fbeac40a4d94",
        "cursor": {
          "ref": "137ac154-7635-4cea-9406-f76623c1735e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2fe43f40-9ceb-467d-89c7-ec101bf8a143"
        },
        "item": {
          "id": "e6966152-2bf7-4bb0-97c0-fbeac40a4d94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "99622c44-3c29-44fd-8a04-f4f798b4094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ff108d-1811-4433-bbe0-bef6df284b37",
        "cursor": {
          "ref": "ed6fb27f-76da-4683-b55e-7bf9b0d76c18",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6d31332f-0cf6-456d-a761-0b0db9aba94d"
        },
        "item": {
          "id": "90ff108d-1811-4433-bbe0-bef6df284b37",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6565d2c-5ef2-4194-ab57-41df3ba406c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a827eabb-e6b6-4b7c-b463-f26830600248",
        "cursor": {
          "ref": "5405f4cc-64a7-4d09-be3e-852a35c7f785",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c3f19d0a-ed8b-4542-bd30-2e3765f3755e"
        },
        "item": {
          "id": "a827eabb-e6b6-4b7c-b463-f26830600248",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bc35da1c-a7ae-4eab-80d4-a79eeed70775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4740e86a-985d-4dc8-8a56-2d059a3f6648",
        "cursor": {
          "ref": "0c735e3c-d529-446d-87e9-6b77312d36ef",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6f8f0925-51d9-413e-958a-ac3d47aafbe3"
        },
        "item": {
          "id": "4740e86a-985d-4dc8-8a56-2d059a3f6648",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f6f12af9-b81f-4344-b51a-5e528c7d2f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bce513-c194-4f7b-b92a-99313f9408f7",
        "cursor": {
          "ref": "ebb632df-b6ef-4500-8551-a4e807f06517",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a4eb948-a8e1-47d5-96cd-b6e3437f52c7"
        },
        "item": {
          "id": "24bce513-c194-4f7b-b92a-99313f9408f7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b242e25b-aee6-4bd5-9f17-4b236e96e833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd7ca88-188e-4287-9f2d-f456ec1497a0",
        "cursor": {
          "ref": "0eef509b-80f1-4596-bc75-6c95e8dd73c1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b9dd0c4-dcaa-4fbe-9da8-0033e6317379"
        },
        "item": {
          "id": "dcd7ca88-188e-4287-9f2d-f456ec1497a0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "311c6854-2e06-45ab-b5f8-f5093331f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e7b6ae-6739-4989-b0b4-ffe08967ac7b",
        "cursor": {
          "ref": "f976579b-ae57-4c66-91a9-3ac5cb22adc6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "46597de8-6b75-472b-9601-15f1e39e453c"
        },
        "item": {
          "id": "16e7b6ae-6739-4989-b0b4-ffe08967ac7b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0c59238d-da7a-46a7-b53d-fb798e767441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b9f14-e050-4c83-b331-a3663a0d0b6a",
        "cursor": {
          "ref": "028bc838-9eb4-4261-9519-ace806b98b13",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "70f35a23-9a21-4157-a844-958003852ad7"
        },
        "item": {
          "id": "b38b9f14-e050-4c83-b331-a3663a0d0b6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f406d0bf-2e33-447d-91f8-100ee798e7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a71e5-6b8a-4a99-b8d1-099373f7d6ae",
        "cursor": {
          "ref": "57d0ae85-a17d-496d-8091-9246fca55518",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd81dc55-b31f-4153-b778-768a55efad71"
        },
        "item": {
          "id": "b74a71e5-6b8a-4a99-b8d1-099373f7d6ae",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67d31638-c149-4829-a442-f136f02e3090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ff1e3b-b32b-4a8b-a49d-1954ecc5a7f5",
        "cursor": {
          "ref": "b8417328-dded-4a58-a9b4-1835f84ed4b2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e9b4732b-5633-408f-a2fd-5edb0e501335"
        },
        "item": {
          "id": "f6ff1e3b-b32b-4a8b-a49d-1954ecc5a7f5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "711c7369-a333-4f0b-b6a4-6a4feb09100f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5031555-3c5a-4379-8e9d-21be363a5e75",
        "cursor": {
          "ref": "c144ff8b-0139-45fa-8599-2663459afd87",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f85528fb-b36c-4314-a1ca-ea2a120f4333"
        },
        "item": {
          "id": "f5031555-3c5a-4379-8e9d-21be363a5e75",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5b0f8e8e-5c8f-4f36-9dd3-7bb4f6ba2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76988d13-17c1-4afd-8e2e-240e747c5995",
        "cursor": {
          "ref": "e9920bb6-7f13-4580-8abe-eb88c62e56b4",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "048ed40d-b5a3-4667-a502-ad0a8e9fefec"
        },
        "item": {
          "id": "76988d13-17c1-4afd-8e2e-240e747c5995",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57515313-4fc6-49b4-963b-531ce107b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d7b6e8-d3e1-4dd7-89a2-5e9e7936bbb2",
        "cursor": {
          "ref": "45ef5bff-8471-4e63-a270-7fe96f23521f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "db6f59d7-99f3-4e44-97de-15bee9d4d647"
        },
        "item": {
          "id": "53d7b6e8-d3e1-4dd7-89a2-5e9e7936bbb2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cb34979-3fdc-441c-ba83-796398c85933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ca13c3-ffff-4853-805a-1ed7dd2b8ecd",
        "cursor": {
          "ref": "6c931cea-f6e9-45bc-8101-d54e0ec47c20",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fb32d518-0691-42e0-a59d-53f3762f6258"
        },
        "item": {
          "id": "46ca13c3-ffff-4853-805a-1ed7dd2b8ecd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db1efc29-0b55-4026-8289-e113277a8d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0df3671-01a0-4a3d-831c-67b305989ba6",
        "cursor": {
          "ref": "9e139cc6-d97c-48a5-80cc-a00a6ad21998",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a932a104-fb1b-4cc0-8ea0-7c259f1c0540"
        },
        "item": {
          "id": "f0df3671-01a0-4a3d-831c-67b305989ba6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c09e4b47-75df-466c-a7fd-4cd7c2bee542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83603675-cd08-4bfb-9b8d-810614e5dc18",
        "cursor": {
          "ref": "c1b977d9-f179-41e9-832f-7722b1512901",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd49c940-ef08-4fcb-9dbb-feed17f512a4"
        },
        "item": {
          "id": "83603675-cd08-4bfb-9b8d-810614e5dc18",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1506f286-c8e7-47fe-8239-32d99240b3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0178ba-a9c9-430f-9f8f-bb7276eea080",
        "cursor": {
          "ref": "da2ea037-351a-41cf-99c9-f9bfcd1c8742",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9a943750-336a-4360-b28d-c030b353b303"
        },
        "item": {
          "id": "7a0178ba-a9c9-430f-9f8f-bb7276eea080",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c1e062fc-68a7-4351-a5a1-ec718e67a316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5788c4ba-0dae-4d4a-8e13-0d232b69bad9",
        "cursor": {
          "ref": "c87a5972-c549-4b4e-8986-ff16dc594a9d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9bb7abab-7924-4658-b15c-d64844070bfc"
        },
        "item": {
          "id": "5788c4ba-0dae-4d4a-8e13-0d232b69bad9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a04f23fa-b2f7-435a-9e4c-a73b50687b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45d8f08-a28f-44b9-80ec-50101f43e604",
        "cursor": {
          "ref": "37c0ded2-1ca5-49f0-a6d9-2d2f284c9da4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6a1aa0e9-7b51-4d5d-8007-b8d21ac78981"
        },
        "item": {
          "id": "c45d8f08-a28f-44b9-80ec-50101f43e604",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f09bb719-0a35-49e3-a21b-6c2210ceac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d32f10e-73ec-4a36-8543-5943ebb7c298",
        "cursor": {
          "ref": "43590eb2-1210-4faa-95d7-33cc200d461f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f2b32f83-d0fa-45be-b66d-224da075972d"
        },
        "item": {
          "id": "8d32f10e-73ec-4a36-8543-5943ebb7c298",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1a5aa3f3-82d6-4d64-a128-5ead8caa3509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143579d5-cfe5-4a08-8250-e74d3a667edf",
        "cursor": {
          "ref": "60519c9f-8ef8-4685-b615-5ae67c91cc0f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f20f3586-634d-4523-86b4-0be773a53038"
        },
        "item": {
          "id": "143579d5-cfe5-4a08-8250-e74d3a667edf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "80bc5ccd-90c2-49d3-b1c3-7df91887fb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c41626f-c4c8-42af-8bcb-149bdf5f403f",
        "cursor": {
          "ref": "9e2eb7d4-58d4-4e94-8ec7-d6d27e885417",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3f2aa86b-f56d-4fa6-8499-bbf317d93e2b"
        },
        "item": {
          "id": "3c41626f-c4c8-42af-8bcb-149bdf5f403f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8c74bc5e-2a15-4673-a723-a8e2fb64a1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ee15b-6a3f-490c-a345-823a09cc3a92",
        "cursor": {
          "ref": "8c608e3b-902f-4952-b8a5-e5833764b128",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c0ab7214-de4f-4754-a2f0-f5f3b040de1c"
        },
        "item": {
          "id": "606ee15b-6a3f-490c-a345-823a09cc3a92",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5a559dab-dd1a-448b-8860-05e09aa2f253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6a1086-f797-40db-8cf0-efe264bb03d0",
        "cursor": {
          "ref": "ea4f4c2e-2a1b-44b8-939b-3d54b19ed292",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97d1a2d4-6496-4ea0-8ecc-3edada2fed87"
        },
        "item": {
          "id": "3d6a1086-f797-40db-8cf0-efe264bb03d0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6681b29a-ca6c-4d48-8b83-3f379ba51281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64d65b0-0aab-492f-9313-65c100115d6b",
        "cursor": {
          "ref": "993b4baf-7815-4427-b99f-75986bd1d012",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a9771468-45a8-4924-a2bb-52d55140257f"
        },
        "item": {
          "id": "a64d65b0-0aab-492f-9313-65c100115d6b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f1202b62-e034-4a24-a193-27cc2451cddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05826270-fd74-4448-8766-920e65c91233",
        "cursor": {
          "ref": "a387bf58-9262-41e6-ab85-dec246270ee9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8981d31d-7eb9-4ed7-b469-63ab9decd15f"
        },
        "item": {
          "id": "05826270-fd74-4448-8766-920e65c91233",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "93ff7636-bf1f-4069-ada5-d906de8850a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc31bd-b1e1-4f88-b562-91fcb6179680",
        "cursor": {
          "ref": "0c738775-895b-412b-857e-9aae2eac11a4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1cc3fc7-b6f8-40d0-a254-49767ff93495"
        },
        "item": {
          "id": "aedc31bd-b1e1-4f88-b562-91fcb6179680",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c0a64fc2-60f1-495f-8fc7-8b716045b82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927fd23-cef6-4a91-ac98-5b93230f2c47",
        "cursor": {
          "ref": "95f242ad-b703-4aa7-9824-3bdcfed6ffd5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "29086e56-5086-4030-bf44-be8c792aec61"
        },
        "item": {
          "id": "a927fd23-cef6-4a91-ac98-5b93230f2c47",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "730a15ca-1cbc-49c1-b8f1-85fdac8aba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac48ecd-5868-4551-960b-f03101440d10",
        "cursor": {
          "ref": "dd6c3481-bc66-4c61-a57b-e17f3044bbf3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c7567976-9846-468d-81d9-71ab3d569059"
        },
        "item": {
          "id": "7ac48ecd-5868-4551-960b-f03101440d10",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "33436f6e-c1a2-4ad0-983a-517b012aff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fd436-a193-4c28-bd2c-68ac98fe69cc",
        "cursor": {
          "ref": "093e8122-68d0-4957-98f9-2e74731f6b6d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2b8e6b63-528b-4f05-a4bd-f2b289bf3b50"
        },
        "item": {
          "id": "aa2fd436-a193-4c28-bd2c-68ac98fe69cc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1bc6904-3abd-42ea-96ae-b1a9d6c498f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3379578e-6085-41d5-86f9-1904ebb4d178",
        "cursor": {
          "ref": "cd40889d-3134-4d4c-89a1-711ef1b6cd7d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "95615297-80a2-4b50-babb-faf02385d0e1"
        },
        "item": {
          "id": "3379578e-6085-41d5-86f9-1904ebb4d178",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2016f194-96a0-4e6c-92c8-364953f78fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136095a5-dd16-49be-8667-4b2db3d8ba88",
        "cursor": {
          "ref": "795344da-5103-4ab6-932d-b882b261d0d3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "14c0552b-62c6-46cd-8a44-355ec1eac8f8"
        },
        "item": {
          "id": "136095a5-dd16-49be-8667-4b2db3d8ba88",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "099d611a-1bbe-49ed-ab38-2f4571a5d9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec0cab-3818-437e-ae2d-3b83c6b7a6de",
        "cursor": {
          "ref": "24f61b7d-f6c7-4a8a-9ebb-9881e0ba376f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "47d73ced-9e46-443d-bb69-3eed3dcb4a30"
        },
        "item": {
          "id": "f0ec0cab-3818-437e-ae2d-3b83c6b7a6de",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3d7c65ce-e19d-487f-8380-bbbdc219c4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4bffe4-1aa4-4718-afd7-8a65782d81a6",
        "cursor": {
          "ref": "e115c03b-8c69-4b40-b929-5b4bbd1dda20",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7864e50c-19f3-4da0-b5be-4c76a15d8663"
        },
        "item": {
          "id": "1e4bffe4-1aa4-4718-afd7-8a65782d81a6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d87409d0-afcf-473b-8fd2-9fdccac675f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e735b976-b0a8-496c-8aea-e8e0daddc83b",
        "cursor": {
          "ref": "551d9406-9834-422f-935c-aecc4f22a36a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "97651add-ca77-475e-801c-a3ac51eca0be"
        },
        "item": {
          "id": "e735b976-b0a8-496c-8aea-e8e0daddc83b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "30b3cc6a-72fa-4894-821d-5aa183d6d87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c1109b-2c11-4845-bbfa-160db58b4708",
        "cursor": {
          "ref": "ab792a79-4c07-4a0b-9720-5f694b5c9619",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ac70d222-fcb0-45df-9d0b-4569edf7dd59"
        },
        "item": {
          "id": "d0c1109b-2c11-4845-bbfa-160db58b4708",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1d9fb200-f767-45f7-b051-0e2c13373fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914a870-5500-435f-bfd2-b14d65d6d834",
        "cursor": {
          "ref": "fc1c4e95-9c03-465c-ba7b-88fa2cb4c339",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d86ffdde-75fb-49aa-875a-3e2b4aea4d53"
        },
        "item": {
          "id": "7914a870-5500-435f-bfd2-b14d65d6d834",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8d557e48-b215-40e9-80c6-69737959fd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6cf893-5447-48df-b139-d52ff7413849",
        "cursor": {
          "ref": "9de90a4d-6846-4f85-954e-924bc7e7f1c1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "57ea98a1-6146-4c23-a228-eac6621c69d4"
        },
        "item": {
          "id": "8f6cf893-5447-48df-b139-d52ff7413849",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "98cb9256-37da-4fe7-a658-7ae26b77a01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0389ddcd-d95d-4f92-a097-1dc38a28d9d2",
        "cursor": {
          "ref": "a21d6d45-50ba-4381-b8c7-21e6565018b0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2822938c-37d1-4eea-883b-5942fc34239c"
        },
        "item": {
          "id": "0389ddcd-d95d-4f92-a097-1dc38a28d9d2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88489f48-cb77-4c89-9b87-195b8d8e9d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bab8f6b-0351-437c-a3e4-b7c19af611bd",
        "cursor": {
          "ref": "35b21223-1d33-414a-bbde-b6d8dfc64f41",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "68e2d8c5-e472-49c0-b9dd-a418ffa204a3"
        },
        "item": {
          "id": "5bab8f6b-0351-437c-a3e4-b7c19af611bd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "64978d96-cafb-4db7-8e5c-dfed2b42df49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e8c60f-9f9d-473f-a68b-e5723b5061b2",
        "cursor": {
          "ref": "fc243385-4c9a-4753-bdd2-12506451f84b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2fb21c6a-a8b7-4d32-9be8-1fab2baf7da6"
        },
        "item": {
          "id": "96e8c60f-9f9d-473f-a68b-e5723b5061b2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64389ea7-dc26-4b6f-89f9-6a8d42673d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedddf87-388f-4808-a164-2a9c7b66f94b",
        "cursor": {
          "ref": "0cd06256-c57c-44ca-91d8-cfa89cf1c039",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cc3e35ce-325a-4833-81c8-3d924b178c34"
        },
        "item": {
          "id": "cedddf87-388f-4808-a164-2a9c7b66f94b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c8cb185b-549a-4986-80b8-726172f84853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d987ebb-42ef-474f-86fa-11f97ba2b7b4",
        "cursor": {
          "ref": "77cc1d46-ceec-4fab-9220-d3fd9dace779",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d06d74b1-8cdb-45e8-9a19-23f837a2f628"
        },
        "item": {
          "id": "1d987ebb-42ef-474f-86fa-11f97ba2b7b4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c8098c9d-3e2d-4145-a1f4-e03dcd9a436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5374b440-8656-4381-8179-775a435abaac",
        "cursor": {
          "ref": "9bfc61e1-9e66-4263-93fc-0bf1cd3b5554",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "14c7be70-003c-432c-9f9a-306ab512debb"
        },
        "item": {
          "id": "5374b440-8656-4381-8179-775a435abaac",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cb662b4c-9d27-41de-9ce3-67ad51221c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be75c061-ae60-4dfb-ace9-4778f59632ab",
        "cursor": {
          "ref": "dbf7711b-49d2-459e-a26f-4190b217fd36",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a8491b96-3e27-4ac6-95f1-009503edfaf8"
        },
        "item": {
          "id": "be75c061-ae60-4dfb-ace9-4778f59632ab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d731f4d-8c8e-44f1-bac9-b9c0c04a4fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c038f7-1540-4639-a8ec-573a8c26ce55",
        "cursor": {
          "ref": "92972cc7-b395-4671-9876-8ea8b8b2ac37",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2f0679fd-d115-4874-9786-b3c7bc85f749"
        },
        "item": {
          "id": "47c038f7-1540-4639-a8ec-573a8c26ce55",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46572fb4-32f9-4da6-b383-6e173909f51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf58a419-04e9-452a-8ec0-d32a915299d2",
        "cursor": {
          "ref": "eed1ee85-0c6b-44d7-9aef-18faf06bf955",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "39be0a18-ec6b-426d-942c-fe6bdd4eafdb"
        },
        "item": {
          "id": "bf58a419-04e9-452a-8ec0-d32a915299d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b51480ff-cca5-4d20-a611-1875dda4c5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a5b7d-706c-4204-8f18-8912a2bbd2d4",
        "cursor": {
          "ref": "7b6a4b88-9884-4681-b415-b41836e40209",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "341042cf-3cc6-4a01-8eeb-78c387f75b47"
        },
        "item": {
          "id": "a60a5b7d-706c-4204-8f18-8912a2bbd2d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f594f3c0-ecaa-4ab1-8976-a84df40c5f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29529dc-c154-46b2-86db-c0b494047110",
        "cursor": {
          "ref": "a3524e65-8671-41b2-9211-886a20d6e77d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "49264ca4-a644-4323-b0c1-e1c5a96cc6d6"
        },
        "item": {
          "id": "d29529dc-c154-46b2-86db-c0b494047110",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "50d2a5c5-8d69-45ad-9b0a-3902a3da896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b1bff5-617c-45bf-a758-4c21e4619705",
        "cursor": {
          "ref": "373d4715-00e2-4473-9821-259d5bc5e1a4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3c6fdbd4-535a-4018-aa8a-c4ef3112b8cc"
        },
        "item": {
          "id": "09b1bff5-617c-45bf-a758-4c21e4619705",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35e55c2f-93c8-4714-8e7f-c829daf44b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7566bb4-88b0-4207-b4b2-a02ee9271205",
        "cursor": {
          "ref": "cc4bc2ea-65eb-47a9-ba95-c7952d3729f3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "822ac82c-103d-4919-9ceb-efe35fabecb9"
        },
        "item": {
          "id": "f7566bb4-88b0-4207-b4b2-a02ee9271205",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "061008eb-dd70-4e21-9bbb-63e598e0c33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3490895-d9bc-4eb7-a20d-b52b1bf744b7",
        "cursor": {
          "ref": "d3593ddf-d9cf-4b28-bf54-9e6f5f747a31",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40b27adc-2042-4f6c-bdee-aeac92ef2dbe"
        },
        "item": {
          "id": "a3490895-d9bc-4eb7-a20d-b52b1bf744b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cef11ba5-5927-4610-a870-7175b3526e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe896d2-1f52-45d2-9a92-3e9a0ffd043b",
        "cursor": {
          "ref": "21435ee1-996e-489e-8567-81ff6382992c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b034879-8fef-401c-b6a2-01f5b2739aaa"
        },
        "item": {
          "id": "ebe896d2-1f52-45d2-9a92-3e9a0ffd043b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8969a237-99e6-4bb7-877c-dd41997b887e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26b6274-4ad9-4dcf-a459-eb3b3c2b1818",
        "cursor": {
          "ref": "afd4a919-a492-46d2-ba3c-69ffed9d40be",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bcf7f820-6eb4-4d17-ac01-77c5f24d9ecf"
        },
        "item": {
          "id": "a26b6274-4ad9-4dcf-a459-eb3b3c2b1818",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "66f08a45-3940-456a-a9d3-0685cc5b03dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ebf133-f042-4191-9beb-8b35240e5bda",
        "cursor": {
          "ref": "ea8fc6e2-655b-42e1-9ab0-a7b0585bcd58",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "934b81c7-01bd-44a9-9c26-e67c2f9f8d72"
        },
        "item": {
          "id": "a3ebf133-f042-4191-9beb-8b35240e5bda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "989f2c0f-54b5-4ab7-8fbc-fd5e96898a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ccbe8a-705c-4050-b348-6f0e82e5be2e",
        "cursor": {
          "ref": "249d440f-9639-4d3d-9566-fe66d8baca8d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1e53240a-f4e7-4dd9-9e32-f267ca4e4baa"
        },
        "item": {
          "id": "b0ccbe8a-705c-4050-b348-6f0e82e5be2e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1e8b07ec-fd4d-438e-b504-ca8108ec10c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2bddd3-f480-456c-84cc-f05403d6c07d",
        "cursor": {
          "ref": "c74aa732-493e-4680-a1f0-c6f9eb9f0981",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aef699a8-3d00-446c-91b0-58af574503d0"
        },
        "item": {
          "id": "8d2bddd3-f480-456c-84cc-f05403d6c07d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cd1afd04-d6f7-4df8-b828-c4140dbc9671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39abadda-18f3-4a73-942a-23993a14b5d4",
        "cursor": {
          "ref": "09e8c0b3-299c-4cb8-b1c7-7af3b5a80a4b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5d2ac073-c955-4fa8-988c-6e510c7bb45b"
        },
        "item": {
          "id": "39abadda-18f3-4a73-942a-23993a14b5d4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "25fb86ef-d39e-4f5f-980e-9af9c15aec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2790bd-fb94-42c3-9c37-421798b46e4d",
        "cursor": {
          "ref": "084a8dcb-0911-4e27-ade9-c31f1b090248",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4aa03c33-d66f-4b92-ad8c-8904cae831ae"
        },
        "item": {
          "id": "ed2790bd-fb94-42c3-9c37-421798b46e4d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "59d23717-eaba-4fa5-a568-1cb1c91ee1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e6368-38ea-4825-b9b1-e1cba9c4e3f3",
        "cursor": {
          "ref": "57e00c06-9ae3-4e7b-969d-cfddfb9f5f9f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "94c81b23-56a9-4556-adb6-1f2e367951c3"
        },
        "item": {
          "id": "9a3e6368-38ea-4825-b9b1-e1cba9c4e3f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6ab6621a-4dfc-49ca-a016-00bde59b2dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90e2439-f4b1-44cd-8020-3e782ac6f62a",
        "cursor": {
          "ref": "841d45ce-e497-45d0-b213-b47f211cbde9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ad2d037c-3250-4f18-a16e-cb869a86544f"
        },
        "item": {
          "id": "e90e2439-f4b1-44cd-8020-3e782ac6f62a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "911742e2-96b6-41e0-9a5a-27da493067da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a2c932-5c6b-41b6-8bf6-12e58cd9d2d4",
        "cursor": {
          "ref": "897ba5e9-8c02-4054-9f4b-714748e5ba7c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dec04cbe-4653-49a4-8ec7-517ca411cccc"
        },
        "item": {
          "id": "67a2c932-5c6b-41b6-8bf6-12e58cd9d2d4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "75dc5901-c0d8-457a-b703-a7f523c63bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed44a44-b25e-4794-9aed-40b4318d982f",
        "cursor": {
          "ref": "e46247c7-a83a-4e55-bad6-767ab53469be",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c42a8d89-80f9-4eb6-ac6f-a57053224d58"
        },
        "item": {
          "id": "2ed44a44-b25e-4794-9aed-40b4318d982f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b3bc9c36-e471-4415-9f28-ff3f546371a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a859b0-4d4b-4cfb-adef-be77d9548c72",
        "cursor": {
          "ref": "a384367f-5faa-4ebf-b034-794572fd147b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a16bddae-40b0-4615-b200-831f5ae95461"
        },
        "item": {
          "id": "75a859b0-4d4b-4cfb-adef-be77d9548c72",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f59384fd-39f7-4b61-a450-a194cf90149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f5870c-b409-45dd-b80c-c4798e157554",
        "cursor": {
          "ref": "897a18fe-7903-417b-9e37-af7a7b2fe93d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "41a8d8fc-b12f-41ca-bde7-bbf289d2a57e"
        },
        "item": {
          "id": "c5f5870c-b409-45dd-b80c-c4798e157554",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9b90ce26-2dbb-45b2-9c96-67df5185ff0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d44ba6-3613-461b-a19a-763df65958fd",
        "cursor": {
          "ref": "93218df2-1ed0-4784-8bd8-70fb5db8a7c6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "39eda768-0774-4252-a400-07b6f1328a46"
        },
        "item": {
          "id": "c1d44ba6-3613-461b-a19a-763df65958fd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d76266cb-605f-4588-8184-0adac98fcc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c20fc7-a7fc-4d1c-9a95-77c983935b1f",
        "cursor": {
          "ref": "229c6428-b825-4279-a0d7-22af9b6cd004",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a2bafd76-0d8d-4f22-91f2-c1bfa7853aa2"
        },
        "item": {
          "id": "b3c20fc7-a7fc-4d1c-9a95-77c983935b1f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4d2da355-479b-49b7-be6f-cc9cfbb6faea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473bb7c-8ab8-4864-977e-4eb07bdbc658",
        "cursor": {
          "ref": "af21aa5d-52d8-4aa2-b6b6-3dcc71ba015b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6e78b69c-1264-47f6-9323-7eb5f0e0c9b6"
        },
        "item": {
          "id": "e473bb7c-8ab8-4864-977e-4eb07bdbc658",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e78db421-4d7f-43a6-b535-b0b793906999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a482f72-5530-45fe-b2e0-8b4d12fe3fe7",
        "cursor": {
          "ref": "cd95f9e9-ba99-434f-a224-de6742b16edc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cccb3e7b-c15f-471d-839d-2254e5ce6c81"
        },
        "item": {
          "id": "4a482f72-5530-45fe-b2e0-8b4d12fe3fe7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d4cb9a16-1876-47b2-94bb-ba9ccceb0307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6604992-eb11-430c-8e51-20b623d0db77",
        "cursor": {
          "ref": "f5c03934-9782-4aab-8dc6-ebfb5bcbe830",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f792b8af-8a90-426c-9937-d11b567fa884"
        },
        "item": {
          "id": "d6604992-eb11-430c-8e51-20b623d0db77",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "481689d9-b156-4cd8-b0b9-78c9ec49403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b39656b-0752-4500-a926-d2485012ef42",
        "cursor": {
          "ref": "67cbc63c-8e6c-44e8-8010-2f8e73643527",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "764204eb-6376-4d15-9e29-ef80987c8958"
        },
        "item": {
          "id": "6b39656b-0752-4500-a926-d2485012ef42",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa46e7aa-5ff5-47d4-92e6-fd3dcd218cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce28d62-96e3-4fce-aace-3f54bf8d64ef",
        "cursor": {
          "ref": "26e0acaf-2fed-4e49-91c1-b728a5ce0a17",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1c61fb6f-5119-40e6-9af8-14bdc975a48d"
        },
        "item": {
          "id": "fce28d62-96e3-4fce-aace-3f54bf8d64ef",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "47427c7e-aec5-4169-9745-94dbefe23089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84167e85-9ae3-4b8c-9226-bb4d504d7c83",
        "cursor": {
          "ref": "235e4765-f3be-432f-bff8-a8525cc82709",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e92726aa-1364-44de-b7dc-4a4c6b56623b"
        },
        "item": {
          "id": "84167e85-9ae3-4b8c-9226-bb4d504d7c83",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc7d0f0c-6e62-41cb-9781-dce60d5fd51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed94c22-39ba-4d7f-be20-32bbe57b889b",
        "cursor": {
          "ref": "09df9ed1-c28c-4ed3-8792-91949e0d7752",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7f9b2647-e361-46f0-b91a-fde57a748605"
        },
        "item": {
          "id": "8ed94c22-39ba-4d7f-be20-32bbe57b889b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5f75a2e8-af97-4411-a740-a697397efb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b89a953-f819-4918-98f2-d83dcb8ede00",
        "cursor": {
          "ref": "ce09622a-c2b2-44e9-89f5-bd259b29d28d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4a813ad2-d9cb-4cae-adb9-e38955499380"
        },
        "item": {
          "id": "0b89a953-f819-4918-98f2-d83dcb8ede00",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9459b9dc-71f1-4b60-a311-a3e022729956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61d439e-2bfb-4753-aa60-89dd8a5a1ef1",
        "cursor": {
          "ref": "1baed7b0-aea8-4790-8ad4-996c41f84c97",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2a258942-e033-46aa-8f6c-f3749cd11f30"
        },
        "item": {
          "id": "c61d439e-2bfb-4753-aa60-89dd8a5a1ef1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7a39cd8a-0990-4c90-a669-d73ef7cc5b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47928773-186f-4b91-a14b-eb7b26641e43",
        "cursor": {
          "ref": "b09892b3-2843-4cba-8754-c77b16092f24",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ce4bc06-68fe-4d04-bc7d-78f848da2515"
        },
        "item": {
          "id": "47928773-186f-4b91-a14b-eb7b26641e43",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "94f85767-a66b-45e4-a709-7776fc584a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f411c8-d64f-4eea-bfe1-f0932c7f58f8",
        "cursor": {
          "ref": "933f4e4b-f3b4-4016-9d00-02d00a3ab506",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "69757ad9-4cf4-4c49-a647-c2e5cb746a31"
        },
        "item": {
          "id": "09f411c8-d64f-4eea-bfe1-f0932c7f58f8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "922c8edc-6439-48e7-b192-2cee121ee05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d4264e-62ca-489b-aab1-915802b355b3",
        "cursor": {
          "ref": "d7bf1dd7-c572-4928-84da-0dfbac01cb7c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cd7e2fe5-dcb0-4572-84f5-6e5337111313"
        },
        "item": {
          "id": "24d4264e-62ca-489b-aab1-915802b355b3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5ce22c01-9ba8-4787-96a6-b56959308ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e6f3a4-a87d-4a0d-b204-836661463f73",
        "cursor": {
          "ref": "69aeaa70-7390-40a6-8239-9f2ed8cb96e7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "abd7ee62-273c-4039-9404-4915948178b8"
        },
        "item": {
          "id": "a9e6f3a4-a87d-4a0d-b204-836661463f73",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9ef6e521-ecc0-4d7d-8749-70b8540ba370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d34507-8caf-4044-a067-5ed16a617dad",
        "cursor": {
          "ref": "0a59a32a-2cfe-4007-9f5d-0090fba6ba69",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "eb5d2668-5820-4328-88d6-b770ecd15b46"
        },
        "item": {
          "id": "e0d34507-8caf-4044-a067-5ed16a617dad",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "29a1e70e-f645-40c8-b9f0-110ad476e619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8370e6ad-86e6-4b7a-862b-5ac321796f53",
        "cursor": {
          "ref": "7d3e4561-7f1c-48d7-940b-211be166219c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "86f960b3-92b4-4110-9255-070ee048077e"
        },
        "item": {
          "id": "8370e6ad-86e6-4b7a-862b-5ac321796f53",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "894ca7f5-5bdf-4fba-8a8a-ef7322e9cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d923177-8c51-43b9-875d-43777b572c8d",
        "cursor": {
          "ref": "6fff7aec-1dc8-490e-969a-82dc0dd892e2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d4167d60-6988-4890-80bb-7d5ef15f51c7"
        },
        "item": {
          "id": "5d923177-8c51-43b9-875d-43777b572c8d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d854bd2-5117-4446-b370-5c64dbbbb0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f2652-421c-4e4a-b1cc-e8ea07ddd887",
        "cursor": {
          "ref": "4b840add-4856-4556-bb0d-87da4903bbb8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3caa83f9-0802-4817-9a09-f6f4c90bd044"
        },
        "item": {
          "id": "640f2652-421c-4e4a-b1cc-e8ea07ddd887",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94532099-4a10-46f5-bdb2-4c1a918f8ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3514b-d2d6-45e2-a7d1-b46f73a807b5",
        "cursor": {
          "ref": "34e28757-fcb4-4866-b4d0-7c55e1e357a9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a7239c45-437c-47c9-b11e-a4a706817acb"
        },
        "item": {
          "id": "bad3514b-d2d6-45e2-a7d1-b46f73a807b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0da6be73-76b7-4111-b554-6474150436fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd698d24-ac93-421d-a029-56c81b592e15",
        "cursor": {
          "ref": "54a82b73-dd53-4a11-bfe6-8a7b97f34b25",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "90c3e164-f6f3-4794-8e33-ce71db86d9c3"
        },
        "item": {
          "id": "fd698d24-ac93-421d-a029-56c81b592e15",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "df542a90-b4cb-4cb7-b224-ffc3d598f09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0175d1-0f4d-4414-a80d-4ab918ea2438",
        "cursor": {
          "ref": "3d5477b3-1504-4baf-bd7f-1f37ab9e49ac",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "528c4d97-1a30-4efd-9918-15bc5853574a"
        },
        "item": {
          "id": "1c0175d1-0f4d-4414-a80d-4ab918ea2438",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "18bc5072-8090-4c21-9da7-fb806521c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd91914-4899-44d1-907f-dcd7d7182526",
        "cursor": {
          "ref": "4415c6df-e722-49dd-8385-0f2898dbd4c6",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ec1171fa-05de-47d4-8a61-01cd112a1b79"
        },
        "item": {
          "id": "7cd91914-4899-44d1-907f-dcd7d7182526",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca3cc11e-211a-492f-9b34-893cf58e9dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d89f497-41a7-42f6-885f-026b623311da",
        "cursor": {
          "ref": "7a765346-8fbb-45e5-99a5-f305df2fd2ae",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0172e35a-f7bd-47fa-b76f-bd5dad4d6760"
        },
        "item": {
          "id": "3d89f497-41a7-42f6-885f-026b623311da",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d55ef9f-3baa-473a-ac50-f981780abf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d479d21-e214-425b-b15f-6c5122c4ff5d",
        "cursor": {
          "ref": "d3f32a8b-51ab-4a41-866b-ff95c0ff7dd2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fdfd7785-c7c7-4c0c-8135-d4be1d56b8c1"
        },
        "item": {
          "id": "4d479d21-e214-425b-b15f-6c5122c4ff5d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "49789c73-067b-40ae-91c4-12fba055b241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3536f158-1890-4017-938e-95ca3dffe029",
        "cursor": {
          "ref": "2af11fe3-0786-4267-879f-72044f487741",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0c5a4f06-0ac7-4d0a-b983-8aa26ecd5c1d"
        },
        "item": {
          "id": "3536f158-1890-4017-938e-95ca3dffe029",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b671c585-5577-4ba8-8a8e-63cf81bdbca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f66ac-7300-4bff-8e21-bbf8558c5379",
        "cursor": {
          "ref": "26ee71a6-7cb6-48aa-8821-96e35fb97b14",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4832328b-1140-43e2-a30e-94ac5d39ffc0"
        },
        "item": {
          "id": "326f66ac-7300-4bff-8e21-bbf8558c5379",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "37f582a6-f861-4313-8f42-d4d1cae40813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69c6494-1dbe-4ad9-be0c-4922321e4228",
        "cursor": {
          "ref": "62931786-b755-4bad-97bc-ccfcf5f7f8ff",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "017f2090-cde9-427e-ad25-2d8873b21776"
        },
        "item": {
          "id": "f69c6494-1dbe-4ad9-be0c-4922321e4228",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7be7e421-b91b-4218-9f32-31ff1dcbca1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fff6d1-8d56-4fee-9106-5f86eeab84c7",
        "cursor": {
          "ref": "9725a912-3add-4891-bcd3-35c88228b8c7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f4035802-e13e-4cd7-a43d-f049582158b6"
        },
        "item": {
          "id": "68fff6d1-8d56-4fee-9106-5f86eeab84c7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "470d7b31-0be3-4991-95c2-67d9d09dfbce",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed121e14-76fc-420e-9362-e97ab50fba20",
        "cursor": {
          "ref": "8c57f247-44fc-4345-ad7d-320cf4156263",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6803d7cc-396b-4335-91be-c8b1bad7a4a3"
        },
        "item": {
          "id": "ed121e14-76fc-420e-9362-e97ab50fba20",
          "name": "credentials_verify"
        },
        "response": {
          "id": "be678b84-e433-4f4f-ac35-ac44153a0f68",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5564cea9-f58c-49da-99a6-cfcca6546cff",
        "cursor": {
          "ref": "0a2706a5-0d33-46b7-8e88-c02634ac0f6f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64960b5d-3097-4a30-bef6-f8ca13954758"
        },
        "item": {
          "id": "5564cea9-f58c-49da-99a6-cfcca6546cff",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "18fac005-369e-491c-8716-de8f44caff0d",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe78607b-e4b3-454f-9f42-306ccf3ba598",
        "cursor": {
          "ref": "ab945577-a8d7-41ac-b8c4-b8c3adc7c973",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dbbd333b-9c97-4b71-b16d-7ce85f0fd7ec"
        },
        "item": {
          "id": "fe78607b-e4b3-454f-9f42-306ccf3ba598",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "788d9361-690a-4334-9741-73fa747454fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe78607b-e4b3-454f-9f42-306ccf3ba598",
        "cursor": {
          "ref": "ab945577-a8d7-41ac-b8c4-b8c3adc7c973",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dbbd333b-9c97-4b71-b16d-7ce85f0fd7ec"
        },
        "item": {
          "id": "fe78607b-e4b3-454f-9f42-306ccf3ba598",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "788d9361-690a-4334-9741-73fa747454fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd2305-e3ec-40dd-92fe-408d58dc9827",
        "cursor": {
          "ref": "2d6e2815-1bbb-4fe6-8743-7c6b5c0023ba",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7df6259-5e7e-46b9-951f-eb08f5925c50"
        },
        "item": {
          "id": "53dd2305-e3ec-40dd-92fe-408d58dc9827",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "213f386e-3e05-4ef0-95d3-28b350e25826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a118e436-b4a9-4ca1-a193-3855aff0cf9d",
        "cursor": {
          "ref": "f0c2b5dc-c5b9-4987-9a4e-d7f955d5e35e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7b490b07-22d0-4c64-b18a-d33611959bce"
        },
        "item": {
          "id": "a118e436-b4a9-4ca1-a193-3855aff0cf9d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "750ee9c9-11b3-4105-a588-15bd8cac2ebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}